public void testTypeAliases() {
    // Set up the type alias
    String code = "goog.provide('foo.Foo');goog.provide('foo.Foo.Bar');\n" +
                  "goog.scope(function() {\n" +
                  "  /*\n" +
                  "   * @param {Foo.Bar} bar\n" +
                  "   * @constructor\n" +
                  "  */\n" +
                  "  foo.Foo = function(bar) {\n" +
                  "    this.bar = bar;\n" +
                  "  };\n" +
                  "  var Foo = foo.Foo;\n" +
                  "\n" +
                  "  /* @type {Foo.Bar} */\n" +
                  "  Foo.prototype.bar = null;\n" +
                  "\n" +
                  "  /* @constructor */\n" +
                  "  Foo.Bar = function() {};\n" +
                  "});";
    // Compile the code and check for the error
    try {
        // Add the code to a temporary file and compile it
        File file = new File("test.js");
        FileUtils.writeStringToFile(file, code);
        Javac.compile(file);
    } catch (Exception e) {
        // Check if the error message matches the expected one
        assertEquals("Bad type annotation. Unknown type Foo.Bar", e.getMessage());
    }
}