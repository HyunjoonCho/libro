
public void testStdKeyDeserializer() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    AsField asField = mapper.readValue("{\"name\": \"first.last\"}", AsField.class);
    assertEquals(asField.getName().getFirstname(), "first");
    assertEquals(asField.getName().getLastname(), "last");

    try {
        Map<FullName, Double> map = mapper.readValue("{\"first.last\": 42}", new TypeReference<Map<FullName, Double>>() {
        });
        fail("Expected InvalidFormatException");
    } catch (JsonMappingException e) {
        // expected
    }
}

public static class AsField {
    private final FullName name;

    public AsField(@JsonProperty("name") FullName name) {
        this.name = name;
    }

    public FullName getName() {
        return name;
    }
}

public static class FullName {
    private final String firstname;
    private final String lastname;

    private FullName(String firstname, String lastname) {
        this.firstname = firstname;
        this.lastname = lastname;
    }

    @JsonCreator
    public static FullName valueOf(String value) {
        String[] mySplit = value.split("\\.");
        return new FullName(mySplit[0], mySplit[1]);
    }

    public static FullName valueOf(String firstname, String lastname) {
        return new FullName(firstname, lastname);
    }

    @JsonValue
    @Override
    public String toString() {
        return firstname + "." + lastname;
    }
}
