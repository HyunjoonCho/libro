
import org.junit.Test;
import static org.junit.Assert.*;

public class AdvancedCompilerTest {
    @Test
    public void testOverriddenMethodWarning() {
        // Set up the compiler configuration
        Compiler compiler = new Compiler();
        compiler.setCompilationLevel(CompilationLevel ADVANCED_OPTIMIZATIONS);
        compiler.setOutputFileName("default.js");
        compiler.setUseClosureLibrary(true);

        // Create the classes
        Class<?> fooClass = compiler.compile("Foo = function() {};");
        Class<?> barClass = compiler.compile("Bar = function() { goog.base(this); }; goog.inherits(Bar, Foo);");

        // Create an instance of Bar
        Object bar = barClass.newInstance();

        // Call the add method with wrong arguments
        try {
            barClass.getMethod("add", int.class, int.class).invoke(bar, 3, 4);
            fail("Expected a compilation error");
        } catch (NoSuchMethodException e) {
            // Expected exception
        }
    }
}
