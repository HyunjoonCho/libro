
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.deser.DeserializationFeature;
import com.fasterxml.jackson.databind.type.TypeReference;
import org.junit.Test;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.fail;

public class JsonCreatorWithCollectionTest {
    private static final String JSON = "[{\"message\":\"messageHere\"}]";

    static class A {
        List<B> bs = new ArrayList<>();

        @JsonCreator
        A(List<B> bs) {
            this.bs = bs;
        }
    }

    static class B {
        List<C> cs = new ArrayList<>();

        @JsonCreator
        B(List<C> cs) {
            this.cs = cs;
        }
    }

    public static class C {
        String message;

        @JsonCreator
        C(@JsonProperty("message") String message) {
            this.message = message;
        }
    }

    @Test
    public void test() throws IOException {
        ObjectMapper om = new ObjectMapper();
        om.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);
        try {
            om.readValue(JSON, new TypeReference<A>() {
            });
            fail("Expected InputMismatchException");
        } catch (InputMismatchException e) {
            // expected
        }
    }
}
