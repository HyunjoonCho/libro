
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import java.io.IOException;

public class JsonIncludeTest {
    @Test
    public void testJsonIncludeWithNonDefaultString() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.setSerializationInclusion(JsonInclude.Include.NON_DEFAULT);

        // Create a POJO with a null string field
        MyPojo pojo = new MyPojo();
        pojo.setName(null);

        // Serialize the POJO
        String json = mapper.writeValueAsString(pojo);

        // The expected output is a JSON object without the "name" field
        assert json.equals("{\"age\":0}");
    }
}

class MyPojo {
    @JsonInclude(JsonInclude.Include.NON_DEFAULT)
    private Integer age;
    private String name;
}
