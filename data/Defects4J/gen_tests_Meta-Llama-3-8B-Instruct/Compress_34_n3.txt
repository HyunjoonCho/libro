java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.powermock.core.classloader.annotations.PowerMockIgnore;
import org.powermock.core.classloader.annotations.SuppressStaticInitializationFor;
import org.powermock.modules.junit4.PowerMockRunner;
import org.powermock.reflect.Whitebox;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import static org.junit.Assert.assertThrows;

@RunWith(PowerMockRunner.class)
@PowerMockIgnore("javax.crypto.*")
@SuppressStaticInitializationFor("org.apache.commons.compress.archivers.zip.X7875_NewUnix")
public class ZipParsingTest {

    @Test
    public void testZipParsing() throws IOException {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ZipOutputStream zip = new ZipOutputStream(bos);

        ZipEntry entry = new ZipEntry("TR_01.ZIP");
        zip.putNextEntry(entry);
        zip.closeEntry();

        byte[] data = bos.toByteArray();
        byte[] uxData = new byte[13];
        System.arraycopy(data, 0, uxData, 0, 13);

        // Simulate the ArrayIndexOutOfBoundsException
        Whitebox.setInternalState(uxData, 12, (byte) 0); // Set length to 0
        Whitebox.setInternalState(uxData, 13, (byte) 0); // Set offset to 0

        // Call the method that throws the exception
        assertThrows(ArrayIndexOutOfBoundsException.class, () -> {
            org.apache.commons.compress.archivers.zip.X7875_NewUnix.parseFromLocalFileData(uxData, 0, 13);
        });
    }
}
