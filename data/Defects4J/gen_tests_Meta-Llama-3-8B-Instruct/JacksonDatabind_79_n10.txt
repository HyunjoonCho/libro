
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.io.IOException;

public class ObjectIdSerializationTest {

    private final ObjectMapper mapper = new ObjectMapper().enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

    @Test
    public void testObjectIdSerialization() throws IOException {
        ReallyAlwaysAsId a = new ReallyAlwaysAsId(1);
        ReallyAlwaysAsId b = new ReallyAlwaysAsId(2);

        ReallyAlwaysContainer container = new ReallyAlwaysContainer();
        container.a = a;
        container.b = b;

        String json = mapper.writeValueAsString(container);
        assertEquals("{\"a\":1,\"b\":1}", json);
    }

    @JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class, property = "id")
    @JsonIdentityReference(alwaysAsId = true)
    static class ReallyAlwaysAsId {
        public int value;

        public ReallyAlwaysAsId() {
            this(0);
        }

        public ReallyAlwaysAsId(int v) {
            value = v;
        }
    }

    @JsonPropertyOrder(alphabetic = true)
    static class ReallyAlwaysContainer {
        @JsonIdentityReference(alwaysAsId = true)
        public ReallyAlwaysAsId a;

        public ReallyAlwaysAsId b;
    }
}
