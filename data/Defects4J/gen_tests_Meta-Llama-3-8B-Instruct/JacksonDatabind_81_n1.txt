java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.Arrays;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class PrimitiveWrapperRefinementTest {

    private ObjectMapper mapper;
    private Type type;

    @Parameters
    public static Iterable<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {int.class, Integer.class},
                {long.class, Long.class},
                // Add more cases as needed
        });
    }

    public PrimitiveWrapperRefinementTest(Type primitive, Type wrapper) {
        mapper = new ObjectMapper();
        this.type = primitive;
    }

    @Test
    public void testRefinement() throws IOException {
        JaxbAnnotationIntrospector introspector = new JaxbAnnotationIntrospector();
        assertEquals(wrapper, introspector.findTypeMapping(type));
    }
}
