java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer;
import org.junit.Test;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.fail;

public class CustomCollectionDeserializerTest {

    @Test
    public void testCustomCollectionDeserializer() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        CustomCollection<String> collection = new CustomCollection<>();
        collection.add("string1");
        collection.add("string2");

        CustomObject customObject = new CustomObject();
        customObject.setStringCollection(collection);

        try {
            mapper.readValue(mapper.writeValueAsString(customObject), CustomObject.class);
            fail("Expected a deserialization error");
        } catch (IOException e) {
            // Expected exception: Cannot construct instance of CustomCollection (although at least one Creator exists): no default no-arguments constructor found
        }
    }
}

class CustomCollection<T> extends ArrayList<T> {
    // your custom implementation
}

class CustomObject {
    private CustomCollection<String> stringCollection;

    public CustomCollection<String> getStringCollection() {
        return stringCollection;
    }

    public void setStringCollection(CustomCollection<String> stringCollection) {
        this.stringCollection = stringCollection;
    }
}
