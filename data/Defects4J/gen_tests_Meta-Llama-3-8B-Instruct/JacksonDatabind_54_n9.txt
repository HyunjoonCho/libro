java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationConfig;
import com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector;
import com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import java.io.IOException;
import java.util.Optional;

import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class JacksonTest {

    @Test
    public void testJsonSerialization() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.setSerializationInclusion(JsonInclude.Include.NON_ABSENT);
        mapper.registerModule(new JaxbAnnotationModule(new JaxbAnnotationIntrospector()));
        mapper.enable(SerializationFeature.WRITE_NULL_MAP_MERGEABLE_FIELDS_AS_EMPTY);

        JsonResult result = new JsonResult();
        result.setA(Optional.empty());
        result.setB(Optional.empty());
        String json = mapper.writeValueAsString(result);
        assertEquals("{\"a\":null,\"b\":null}", json);
    }
}

@Data
class JsonResult {
    private Object a;
    private Optional<Object> b;
}
