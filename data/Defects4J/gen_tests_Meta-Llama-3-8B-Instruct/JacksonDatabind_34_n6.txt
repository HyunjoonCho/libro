java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Arrays;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class BigDecimalSerializationTest {

    @Parameters
    public static Iterable<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {new BigDecimal("123.456")}, // test with decimal point
                {new BigDecimal("12345678901234567890")}, // test with large integer part
        });
    }

    private BigDecimal bigDecimal;

    public BigDecimalSerializationTest(BigDecimal bigDecimal) {
        this.bigDecimal = bigDecimal;
    }

    @Test
    public void testSerialization() throws Exception {
        // your serialization logic here
        // for example, use Avro's GenericRecord and serialize the BigDecimal
        // then check if the resulting schema type is BigInteger instead of BigDecimal
        // assert that the schema type is incorrect
    }
}
