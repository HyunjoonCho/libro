public void testAtan2SpecialCases() {
    DerivativeStructure ds1 = new DerivativeStructure(1, 1, 1, 0);
    DerivativeStructure ds2 = new DerivativeStructure(1, 1, 1, 0);
    assertEquals(Math.PI/2, ds1.atan2(ds2).getValue(), 1e-6);
    
    ds1 = new DerivativeStructure(1, 1, 1, Double.POSITIVE_INFINITY);
    ds2 = new DerivativeStructure(1, 1, 1, 0);
    assertEquals(Math.PI/2, ds1.atan2(ds2).getValue(), 1e-6);
    
    ds1 = new DerivativeStructure(1, 1, 1, 0);
    ds2 = new DerivativeStructure(1, 1, 1, Double.POSITIVE_INFINITY);
    assertEquals(Math.PI/2, ds1.atan2(ds2).getValue(), 1e-6);
    
    ds1 = new DerivativeStructure(1, 1, 1, 0);
    ds2 = new DerivativeStructure(1, 1, 1, 0);
    assertEquals(0, ds1.atan2(ds2).getValue(), 1e-6);
    
    ds1 = new DerivativeStructure(1, 1, 1, Double.NEGATIVE_INFINITY);
    ds2 = new DerivativeStructure(1, 1, 1, 0);
    assertEquals(-Math.PI/2, ds1.atan2(ds2).getValue(), 1e-6);
    
    ds1 = new DerivativeStructure(1, 1, 1, 0);
    ds2 = new DerivativeStructure(1, 1, 1, Double.NEGATIVE_INFINITY);
    assertEquals(-Math.PI/2, ds1.atan2(ds2).getValue(), 1e-6);
    
    ds1 = new DerivativeStructure(1, 1, 1, Double.NaN);
    ds2 = new DerivativeStructure(1, 1, 1, 0);
    assertEquals(Double.NaN, ds1.atan2(ds2).getValue());
    
    ds1 = new DerivativeStructure(1, 1, 1, 0);
    ds2 = new DerivativeStructure(1, 1, 1, Double.NaN);
    assertEquals(Double.NaN, ds1.atan2(ds2).getValue());
    
    ds1 = new DerivativeStructure(1, 1, 1, Double.POSITIVE_INFINITY);
    ds2 = new DerivativeStructure(1, 1, 1, Double.POSITIVE_INFINITY);
    assertEquals(Double.NaN, ds1.atan2(ds2).getValue());
    
    ds1 = new DerivativeStructure(1, 1, 1, Double.NEGATIVE_INFINITY);
    ds2 = new DerivativeStructure(1, 1, 1, Double.NEGATIVE_INFINITY);
    assertEquals(Double.NaN, ds1.atan2(ds2).getValue());
}