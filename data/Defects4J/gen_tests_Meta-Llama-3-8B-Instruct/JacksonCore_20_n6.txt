
import org.junit.Test;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertThrows;

public class TestJsonGeneratorWriteEmbeddedObject {
    @Test
    public void testWriteEmbeddedObjectByteArray() throws IOException {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        JsonGenerator jsonGenerator = new ObjectMapper().getFactory().createGenerator(bos);
        jsonGenerator.enable(SerializationFeature.WRITE_EMPTY_CONTAINERS_AS_NULL);
        jsonGenerator.writeStartObject();
        jsonGenerator.writeFieldName("byteArray");
        jsonGenerator.writeEmbeddedObject(new byte[] {1, 2, 3});
        jsonGenerator.writeEndObject();
        jsonGenerator.close();

        String result = bos.toString();
        assertNotNull(result);
    }

    @Test
    public void testWriteEmbeddedObjectNullByteArray() throws IOException {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        JsonGenerator jsonGenerator = new ObjectMapper().getFactory().createGenerator(bos);
        jsonGenerator.enable(SerializationFeature.WRITE_EMPTY_CONTAINERS_AS_NULL);
        jsonGenerator.writeStartObject();
        jsonGenerator.writeFieldName("byteArray");
        jsonGenerator.writeEmbeddedObject(null);
        jsonGenerator.writeEndObject();
        jsonGenerator.close();

        String result = bos.toString();
        assertNotNull(result);
    }

    @Test
    public void testWriteEmbeddedObjectByteArrayList() {
        assertThrows(UnsupportedOperationException.class, () -> {
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            JsonGenerator jsonGenerator = new ObjectMapper().getFactory().createGenerator(bos);
            jsonGenerator.writeStartObject();
            jsonGenerator.writeFieldName("byteArray");
            jsonGenerator.writeEmbeddedObject(new byte[][] {{1, 2, 3}});
            jsonGenerator.writeEndObject();
            jsonGenerator.close();
        });
    }
}
