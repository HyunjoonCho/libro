
public void testConfiguringDateFormatChangesTimeZone() throws JsonProcessingException {
    // 2.5.4 behavior
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(createJodaModule());
    mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);
    mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"));
    assertEquals("GMT", mapper.getSerializationConfig().getTimeZone().getID());
    assertEquals("1988-06-25 20:30:00", mapper.writeValueAsString(new DateTime(1988, 6, 25, 20, 30, DateTimeZone.UTC)));

    // 2.6.0 behavior
    mapper = new ObjectMapper();
    mapper.registerModule(createJodaModule());
    mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);
    mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"));
    assertEquals("Europe/London", mapper.getSerializationConfig().getTimeZone().getID());
    assertEquals("1988-06-25 21:30:00", mapper.writeValueAsString(new DateTime(1988, 6, 25, 20, 30, DateTimeZone.UTC)));
}

private SimpleModule createJodaModule() {
    SimpleModule module = new SimpleModule();
    module.addSerializer(DateTime.class, new DateTimeSerializer(new JacksonJodaDateFormat(DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss").withZoneUTC())));
    return module;
}
