java
import org.junit.Test;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertThrows;

import org.apache.commons.math.estimation.AbstractEstimator;

public class AbstractEstimatorTest {

    @Test
    public void testGetCovariances() {
        // Arrange
        AbstractEstimator estimator = new AbstractEstimator() {
            @Override
            public int getUnboundParameters() {
                return 2;
            }

            @Override
            public double[] getUnboundParametersValues() {
                return new double[] {1.0, 2.0};
            }

            @Override
            public int getAllParameters() {
                return 4;
            }

            @Override
            public double[] getAllParametersValues() {
                return new double[] {1.0, 2.0, 3.0, 4.0};
            }
        };

        // Act and Assert
        assertThrows(ArrayIndexOutOfBoundsException.class, estimator::getCovariances);
    }

    @Test
    public void testGuessParametersErrors() {
        // Arrange
        AbstractEstimator estimator = new AbstractEstimator() {
            @Override
            public int getUnboundParameters() {
                return 2;
            }

            @Override
            public double[] getUnboundParametersValues() {
                return new double[] {1.0, 2.0};
            }

            @Override
            public int getAllParameters() {
                return 4;
            }

            @Override
            public double[] getAllParametersValues() {
                return new double[] {1.0, 2.0, 3.0, 4.0};
            }
        };

        // Act and Assert
        assertThrows(ArrayIndexOutOfBoundsException.class, estimator::guessParametersErrors);
    }
}
