java
import org.junit.Test;
import com.fasterxml.jackson.databind.node.BinaryNode;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.xml.XmlMapper;
import com.fasterxml.jackson.dataformat.xml.XmlGenerator;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;

import static org.junit.Assert.fail;

public class TestToXmlGenerator {

    @Test
    public void testWriteBinaryWithInputStream() throws IOException {
        XmlMapper xmlMapper = new XmlMapper();
        xmlMapper.enable(SerializationFeature.WRITE_BINARY);
        XmlGenerator gen = xmlMapper.getXmlGenerator(System.out);

        ByteArrayInputStream bais = new ByteArrayInputStream(new byte[]{1, 2, 3, 4, 5});
        gen.writeBinary(BinaryNode.valueOf(bais), 5);

        // Expecting an exception because ToXmlGenerator does not support writeBinary with InputStream
        try {
            gen.close();
            fail("Expected exception");
        } catch (IOException e) {
            // Expected exception
        }
    }
}
