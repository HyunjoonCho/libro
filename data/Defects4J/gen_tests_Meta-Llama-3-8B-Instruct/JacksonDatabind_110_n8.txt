java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedList;

import static org.junit.Assert.assertEquals;

public class TestUnmodifiableNonRandomAccessList {

    @Test
    public void testUnmodifiableNonRandomAccessList() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enableDefaultTyping(DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);
        mapper.enable(SerializationFeature.WRAP_ROOT_VALUE);

        LinkedList<String> list = new LinkedList<>(Arrays.asList("first", "second"));
        Collection<String> unmodifiableList = Collections.unmodifiableList(list);

        String json = mapper.writeValueAsString(unmodifiableList);
        Collection<String> deserializedList = mapper.readValue(json, TypeFactory.defaultInstance().constructCollectionType(Collection.class, String.class));

        assertEquals(unmodifiableList, deserializedList);
        assertEquals(unmodifiableList.getClass(), deserializedList.getClass());
    }
}
