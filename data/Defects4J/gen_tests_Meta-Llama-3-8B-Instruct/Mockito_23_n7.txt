java
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.MockitoJUnitRunner;

import static org.junit.Assert.*;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class TestWrongTypeOfReturnValue {

    @Mock
    private ClassExtendsAbstractClass classExtendsAbstractClass;

    @InjectMocks
    private A a;

    @Before
    public void before() {
        when(classExtendsAbstractClass.give()).thenReturn("aaa");
    }

    @Test
    public void test() {
        assertEquals("WOW", a.doSomeThing());
    }

    abstract class AbstractClass {
        abstract protected Long lol();
        abstract protected String wow();
        public String give() {
            wow();
            lol();
            return "give";
        }
    }

    class ClassExtendsAbstractClass extends AbstractClass {
        @Override
        protected Long lol() {
            return 2L;
        }
        @Override
        protected String wow() {
            return "WOW";
        }
    }

    class A {
        private ClassExtendsAbstractClass classExtendsAbstractClass;
        public A(ClassExtendsAbstractClass classExtendsAbstractClass) {
            this.classExtendsAbstractClass = classExtendsAbstractClass;
        }
        public String doSomeThing(){
            return classExtendsAbstractClass.wow();
        }
    }
}
