public void testAbstractClassMocking() {
    UserAccount userAccount = mock(FakeUserAccount.class);
    when(userAccount.getEmails()).thenReturn(Arrays.asList("email1", "email2"));
    when(userAccount.addEmail("newEmail")).thenReturn(null);

    AccountService accountService = mock(AccountService.class);
    when(accountService.getAccount(anyString(), any(AsyncCallback.class))).thenAnswer(new Answer<Void>() {
        AsyncCallback<UserAccount> callback = (AsyncCallback<UserAccount>) getArguments()[1];
        callback.onSuccess(mock(UserAccount.class));
    });

    AccountRpcService accountRpcService = mock(AccountRpcService.class);
    when(accountRpcService.getAccount(isA(RpcContext.class), eq("id")).thenReturn(FutureTask.forValue(mock(UserAccount.class)));
}