java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertThrows;

public class TestMapWithClassAsKey {
    @Test
    public void testMapWithClassAsKey() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED);

        Map<Class<? extends Object>, String> map = new HashMap<>();
        map.put(ArrayList.class, "ArrayList");
        map.put(HashMap.class, "HashMap");

        String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(map);
        System.out.println(json);

        assertThrows(IOException.class, () -> mapper.readValue(json, TypeFactory.defaultInstance().constructMapType(Map.class, Class.class, String.class)));
    }
}
