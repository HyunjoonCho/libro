
public void testZipArchiveInputStreamInvalidEntry() throws Exception {
    // Create a zip file with a valid entry and an invalid entry
    ZipOutputStream zipOutputStream = new ZipOutputStream(new ByteArrayOutputStream());
    zipOutputStream.putNextEntry("valid_entry");
    zipOutputStream.write("valid_entry_data".getBytes());
    zipOutputStream.closeEntry();

    zipOutputStream.putNextEntry("invalid_entry"); // invalid entry, no data written
    zipOutputStream.closeEntry();

    // Open the zip file and try to read the entries
    ZipArchiveInputStream zipArchiveInputStream = new ZipArchiveInputStream(new ByteArrayInputStream(zipOutputStream.toByteArray()));

    // Expect the first entry to be valid
    ZipEntry entry = zipArchiveInputStream.getNextZipEntry();
    assertNotNull(entry);
    assertEquals("valid_entry", entry.getName());

    // Expect an exception when trying to read the invalid entry
    try {
        entry = zipArchiveInputStream.getNextZipEntry();
        fail("Expected IOException when reading invalid entry");
    } catch (IOException e) {
        // expected
    }

    // Expect no more entries after the invalid entry
    assertNull(zipArchiveInputStream.getNextZipEntry());
}
