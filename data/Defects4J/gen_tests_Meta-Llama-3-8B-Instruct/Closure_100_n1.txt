java
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerTestCase;

public class TestDangerousUseOfGlobalThis extends CompilerTestCase {

  public void testDangerousUseOfGlobalThis() {
    String code = """
      /**
       * @constructor
       */
      function Foo() {
        this._bar = null;
      };

      /**
       * @this {Foo}
       */
      function writeMethodWithAnnotation() {
        this._bar = 123; // no warning. ok
      }

      /**
       * @this {Foo}
       */
      function readMethodWithAnnotation() {
        return this._bar; // no warning. ok
      }

      function writeMethodWithoutAnnotation() {
        this._bar = 123; // warning. ok.
      }

      function readMethodWithoutAnnotation() {
        return this._bar; // <- No warning!
      }
      """;

    Compiler compiler = new Compiler();
    compiler.compile(code);

    // Check for warning messages
    assertEquals(1, compiler.getWarningCount());
    // Check for warning message
    assertTrue(compiler.getWarningMessages().contains("dangerous use of the global this object"));
  }
}
