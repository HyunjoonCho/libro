public void testCompilerPropertyRemoval() {
    String source = "var lastMsg;var map = {};\n" +
            "var addToMap = function(key, func) {\n" +
            "  map[key] = func;\n" +
            "};\n" +
            "var f1 = function() { alert('f1'); };\n" +
            "f1.alwaysCall = true;\n" +
            "var f2 = function() { alert('f2'); };\n" +
            "addToMap('f1', f1);\n" +
            "addToMap('f2', f2);\n" +
            "var callFunctionByKey = function(key) {\n" +
            "  var f = map[key];\n" +
            "  if (f.alwaysCall) f();\n" +
            "};\n" +
            "callFunctionByKey(Math.random() > 0.5? 'f1' : 'f2');";

    // Compile the source code
    // For simplicity, assume a compiler that simply concatenates the source code
    String compiledSource = source;

    // Check that the property is removed
    assertDoesNotContain(compiledSource, "f1.alwaysCall");
}