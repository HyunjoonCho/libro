java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.List;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

@RunWith(Parameterized.class)
public class GroupOptionTest {
    @Parameters
    public static List<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {true, true, true},
                {true, false, false},
                {false, true, false}
        });
    }

    private boolean groupA;
    private boolean groupB;
    private boolean expectedResult;

    public GroupOptionTest(boolean groupA, boolean groupB, boolean expectedResult) {
        this.groupA = groupA;
        this.groupB = groupB;
        this.expectedResult = expectedResult;
    }

    @Test
    public void testHasOption() {
        CommandLine commandLine = new CommandLine();
        commandLine.addOption(new Option("a", "Group A"));
        commandLine.addOption(new Option("b", "Group B", true, "Group B"));
        commandLine.addOption(new Option("c", "Group A", true, "Group A"));
        commandLine.addOption(new Option("d", "Group B", true, "Group B"));

        Option option = new Option("b", "Group B", true, "Group B");
        option.setMin(1);
        option.setMax(1);

        assertTrue(commandLine.addOption(option));
        if (groupA) {
            commandLine.addOption(new Option("a", "Group A"));
        }

        assertTrue(groupB);

        if (expectedResult) {
            assertTrue(commandLine.hasOption(option.getOpt()));
        } else {
            assertFalse(commandLine.hasOption(option.getOpt()));
        }
    }
}
