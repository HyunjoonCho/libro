java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class ThisObjectWarningTest {
    @Test
    public void testThisObjectWarning() {
        // Write a function with a @this annotation
        class Foo {
            public void writeMethodWithAnnotation() {
                this._bar = 123; // no warning. ok
            }

            public void readMethodWithAnnotation() {
                return this._bar; // no warning. ok
            }
        }

        // Write a function without a @this annotation
        class Bar {
            public void writeMethodWithoutAnnotation() {
                this._bar = 123; // warning. expected
            }

            public void readMethodWithoutAnnotation() {
                return this._bar; // expected warning
            }
        }

        // Test that writeMethodWithAnnotation does not warn
        Foo foo = new Foo();
        foo.writeMethodWithAnnotation();
        assertEquals(123, foo._bar);

        // Test that writeMethodWithoutAnnotation warns
        Bar bar = new Bar();
        // expected to throw a warning
        bar.writeMethodWithoutAnnotation();
        assertEquals(123, bar._bar);

        // Test that readMethodWithAnnotation does not warn
        assertEquals(123, foo.readMethodWithAnnotation());
        assertEquals(123, bar.readMethodWithoutAnnotation());
    }
}
