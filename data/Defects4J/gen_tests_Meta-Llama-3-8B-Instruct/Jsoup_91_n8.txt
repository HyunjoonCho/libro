java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.parser.Parser;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertNotNull;

@RunWith(Parameterized.class)
public class JsoupParsingTest {

    @Parameters
    public static Iterable<Object[]> data() {
        return Arrays.asList(new Object[][] {
            {"<html><body>Test</body></html>", "Valid HTML"},
            {"<html><body>&lt;script&gt;alert('hello');</script></body></html>", "Valid HTML with script tag"},
            {"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "Bogus input: binary data"},
        });
    }

    private final String html;
    private final String description;

    public JsoupParsingTest(String html, String description) {
        this.html = html;
        this.description = description;
    }

    @Test
    public void testParsing() throws IOException {
        StringReader reader = new StringReader(html);
        Document document = Jsoup.parse(reader, "", Parser.xmlParser());
        assertNotNull(document);
        // Perform assertions based on the description
        if (description.equals("Bogus input: binary data")) {
            assertArrayEquals(new byte[0], document.getBytes());
        }
    }
}
