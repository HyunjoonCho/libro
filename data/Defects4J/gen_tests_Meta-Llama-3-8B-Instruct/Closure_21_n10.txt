java
public void testClassifyNonRightmostExpressionsAsProblematic() {
    // Test 1: foo((1, 2, 42)) is transformed into foo((1, 3)) and a warning is issued only with regard to the first element.
    Expression expression = new Expression("foo((1, 2, 42))");
    List<Expression> expectedExpressions = new ArrayList<>();
    expectedExpressions.add(new Expression("foo((1, 3)"));
    assertEquals(expectedExpressions, expression.transform());
    assertEquals(1, expression.getWarningCount());

    // Test 2: foo((bar(), 2, 42)) is transformed into foo((bar(), 3)) and no warning is issued.
    expression = new Expression("foo((bar(), 2, 42))");
    expectedExpressions = new ArrayList<>();
    expectedExpressions.add(new Expression("foo((bar(), 3)"));
    assertEquals(expectedExpressions, expression.transform());
    assertEquals(0, expression.getWarningCount());

    // Test 3: foo(((1, 2, 3), (4, 5, 42))) is transformed into foo((1, 4, 42)) and warnings are issued with regard to the first elements of inner sequences only.
    expression = new Expression("foo(((1, 2, 3), (4, 5, 42)))");
    expectedExpressions = new ArrayList<>();
    expectedExpressions.add(new Expression("foo((1, 4, 42)"));
    assertEquals(expectedExpressions, expression.transform());
    assertEquals(1, expression.getWarningCount());
}
