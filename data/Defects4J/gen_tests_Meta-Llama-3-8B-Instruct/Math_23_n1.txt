public void testBrentOptimizer() {
    BrentOptimizer optimizer = new BrentOptimizer();
    PointValuePair best = new PointValuePair(new double[]{1.0}, 0.0);
    PointValuePair worse = new PointValuePair(new double[]{1.1}, 0.1);
    PointValuePair middle = new PointValuePair(new double[]{1.05}, 0.05);
    
    optimizer.optimize(new Object() {}, new AbstractOptimizationProblem() {
        @Override
        public int getDimension() {
            return 1;
        }
        
        @Override
        public double evaluate(double[] point) {
            if (Arrays.equals(point, new double[]{1.1})) {
                return 0.1;
            } else if (Arrays.equals(point, new double[]{1.05})) {
                return 0.05;
            } else {
                return 0.0;
            }
        }
    }, best);
    
    assertEquals(best, optimizer.getCurrentPointValuePair());
}