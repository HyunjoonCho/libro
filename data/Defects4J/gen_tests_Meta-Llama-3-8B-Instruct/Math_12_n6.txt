java
import org.junit.Test;
import static org.junit.Assert.assertArrayEquals;
import org.apache.commons.math3.distribution.GammaDistribution;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

public class GammaDistributionCloningTest {

    @Test
    public void testGammaDistributionCloning() {
        GammaDistribution gammaDistribution = new GammaDistribution(1.0, 1.0);
        byte[] serializedGammaDistribution = serialize(gammaDistribution);
        GammaDistribution deserializedGammaDistribution = (GammaDistribution) deserialize(serializedGammaDistribution);

        double[] samples = new double[100];
        for (int i = 0; i < 100; i++) {
            samples[i] = gammaDistribution.sample();
        }

        double[] deserializedSamples = new double[100];
        for (int i = 0; i < 100; i++) {
            deserializedSamples[i] = deserializedGammaDistribution.sample();
        }

        assertArrayEquals(samples, deserializedSamples);
    }

    private byte[] serialize(Object obj) throws Exception {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bos);
        oos.writeObject(obj);
        oos.close();
        return bos.toByteArray();
    }

    private Object deserialize(byte[] data) throws Exception {
        ByteArrayInputStream bis = new ByteArrayInputStream(data);
        ObjectInputStream ois = new ObjectInputStream(bis);
        return ois.readObject();
    }
}
