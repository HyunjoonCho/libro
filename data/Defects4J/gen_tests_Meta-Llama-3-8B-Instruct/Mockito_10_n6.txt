java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.mockito.junit.MockitoJUnitRunner;

import static org.junit.Assert.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class TestBugReport {

    @Test
    public void testReturnsDeepStubs() {
        NotSerializableReturnValue notSerializableReturnValue = mock(NotSerializableReturnValue.class, Mockito.RETURNS_DEEP_STUBS);
        when(notSerializableReturnValue.getSomething2()).thenReturn("Expected value");

        ToBeMocked toBeMocked = mock(ToBeMocked.class, Mockito.RETURNS_DEEP_STUBS);
        when(toBeMocked.getSomething()).thenReturn(notSerializableReturnValue);

        // This line should not throw an exception
        toBeMocked.getSomething();
    }

    public static class ToBeMocked {

        NotSerializableReturnValue field1;

        public ToBeMocked(NotSerializableReturnValue field1) {
            this.field1 = field1;
        }

        public NotSerializableReturnValue getSomething() {
            return field1;
        }
    }

    public static class NotSerializableReturnValue {

        String field1 = "";

        public NotSerializableReturnValue(String field1) {
            this.field1 = field1;
        }

        public String getSomething2() {
            return field1;
        }
    }
}
