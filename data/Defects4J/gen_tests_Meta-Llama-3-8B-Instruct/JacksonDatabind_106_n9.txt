public void testTreeTraversingParser() {
    ObjectMapper mapper = new ObjectMapper();
    TreeTraversingParser parser = new TreeTraversingParser(mapper);

    assertEquals(0, parser.parseNumber("{\"x\": 0}").intValue());
    assertEquals(10, parser.parseNumber("{\"x\": 10}").intValue());
    assertEquals(10000, parser.parseNumber("{\"x\": 10000}").intValue());
    try {
        parser.parseNumber("{\"x\": 1e10}").intValue();
        fail("Expected overflow exception");
    } catch (JsonMappingException e) {
        // expected
    }
    try {
        parser.parseNumber("{\"x\": 2147483648}").intValue();
        fail("Expected overflow exception");
    } catch (JsonMappingException e) {
        // expected
    }
    try {
        parser.parseNumber("{\"x\": 2147483649}").intValue();
        fail("Expected overflow exception");
    } catch (JsonMappingException e) {
        // expected
    }
    try {
        parser.parseNumber("{\"x\": -2147483649}").intValue();
        fail("Expected overflow exception");
    } catch (JsonMappingException e) {
        // expected
    }
    try {
        parser.parseNumber("{\"x\": -4294967295}").intValue();
        fail("Expected overflow exception");
    } catch (JsonMappingException e) {
        // expected
    }
}