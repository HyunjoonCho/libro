java
import org.junit.Test;

public class CompilerTest {

    @Test
    public void testAMDModuleInSubdirectory() throws Exception {
        // Create a directory structure
        String rootDir = System.getProperty("java.io.tmpdir") + "/compilerTest";
        File root = new File(rootDir);
        root.mkdirs();
        File libDir = new File(root, "lib");
        libDir.mkdirs();
        File barJs = new File(root, "Bar.js");
        File fooJs = new File(libDir, "Foo.js");
        File outJs = new File(root, "out.js");

        // Create the files
        barJs.createNewFile();
        fooJs.createNewFile();

        // Write the contents of the files
        barJs.write("define('Bar', ['lib/Foo'], function(Foo) {\n" +
                "  console.log('Hello from Bar');\n" +
                "});");
        fooJs.write("define('lib/Foo', function() {\n" +
                "  console.log('Hello from Foo');\n" +
                "});");

        // Run the compiler
        ProcessBuilder processBuilder = new ProcessBuilder("java", "-jar", "compiler.jar", "--transform_amd_modules", "--process_common_js_modules", "--common_js_entry_module=Bar.js", "--compilation_level=ADVANCED_OPTIMIZATIONS", "--js_output_file=out.js", "--js=Bar.js", "--js=lib/Foo.js");
        Process process = processBuilder.start();
        process.waitFor();

        // Check the output
        String output = new String(process.getInputStream().readAllBytes());
        assert output.contains("ERROR - required entry point \"module$lib$Foo\" never provided");
    }
}
