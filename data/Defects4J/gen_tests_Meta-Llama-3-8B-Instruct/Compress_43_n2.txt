
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.zip.ZipOutputStream;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertArrayEquals;

@RunWith(JUnit4.class)
public class ZipTest {

    @Test
    public void testVersionNeededToExtract() throws IOException {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ZipOutputStream zipOut = new ZipOutputStream(bos);

        // Create a zip entry
        zipOut.putNextEntry("testEntry");

        // Set the zip method and zip64 mode
        int zipMethod = 0; // Deflate
        boolean zip64 = false;

        // Calculate the expected version needed to extract
        int expectedVersionNeededToExtract = ZIP64_MIN_VERSION;

        // Create the local file header
        byte[] localFileHeader = new byte[30];
        zipOut.getLocalHeader(localFileHeader, zipMethod, zip64);

        // Calculate the actual version needed to extract from the local file header
        int actualVersionNeededToExtract = zipOut.getVersionNeededToExtract(zipMethod, zip64);

        // Check that the actual version needed to extract matches the expected version
        assertEquals(expectedVersionNeededToExtract, actualVersionNeededToExtract);
    }
}
