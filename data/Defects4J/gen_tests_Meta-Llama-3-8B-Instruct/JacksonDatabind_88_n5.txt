java
public void testMissingTypeChecks() {
    // Create a JavaType with a polymorphic type id
    JavaType javaType = new JavaType(TypeFactory.defaultInstance().constructType(Map.class).getType());
    // Create a type id for a Map with a specific type
    TypeReference typeReference = new TypeReference<Map<String, Object>>() {};
    // Create a type id for a Map with a different type
    TypeReference differentTypeReference = new TypeReference<Map<Integer, Object>>() {};
    // Try to create a JavaType with the different type id
    JavaType differentJavaType = new JavaType(differentTypeReference);
    // This should throw an exception, but it doesn't
    // (The type id is not checked, so it's possible to create a JavaType with an incompatible type)
}
