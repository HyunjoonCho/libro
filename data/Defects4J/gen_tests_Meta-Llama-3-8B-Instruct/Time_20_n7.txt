java
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

import java.util.Set;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class JodaDateTimeZoneTest {

    private static final String TIME_ZONE_ID = "America/Atka";
    private static final String EXPECTED_TIME_ZONE_ID = "America/Adak";

    @Test
    public void testDateTimeZoneConversion() {
        DateTimeZone jodaTimeZone = DateTimeZone.forID(TIME_ZONE_ID);
        DateTime jodaDateTime = new DateTime().withZone(jodaTimeZone);
        String formattedDateTime = DateTimeFormat.forPattern("MM/dd/yyyy HH:mm:ss.SSS ZZZ").print(jodaDateTime);
        try {
            DateTime parsedDateTime = DateTimeFormat.forPattern("MM/dd/yyyy HH:mm:ss.SSS ZZZ").parseDateTime(formattedDateTime);
            assertEquals(EXPECTED_TIME_ZONE_ID, parsedDateTime.getZone().getID());
        } catch (Exception e) {
            fail("Failed to convert datetime zone");
        }
    }
}
