java
import org.junit.Test;
import org.junit.Assert;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.apache.commons.math3.distribution.RealDistribution;

import java.util.function.Function;

@RunWith(JUnit4.class)
public class RealDistributionTest {

    @Test
    public void testIsSupportXxxInclusive() {
        // Create a RealDistribution implementation
        RealDistribution distribution = new RealDistribution() {
            @Override
            public double density(double x) {
                if (x == getSupportLowerBound()) {
                    return 0.0;
                } else if (x == getSupportUpperBound()) {
                    return Double.POSITIVE_INFINITY;
                } else {
                    return 1.0;
                }
            }

            @Override
            public boolean isSupportLowerBoundInclusive() {
                return true;
            }

            @Override
            public boolean isSupportUpperBoundInclusive() {
                return true;
            }

            @Override
            public double getSupportLowerBound() {
                return 0.0;
            }

            @Override
            public double getSupportUpperBound() {
                return 1.0;
            }
        };

        // Check if isSupportXxxInclusive returns true
        Assert.assertTrue(distribution.isSupportLowerBoundInclusive());
        Assert.assertTrue(distribution.isSupportUpperBoundInclusive());
    }
}
