java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationConfig;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class TestJsonAnyGetter {
    @Test
    public void testJsonAnyGetter() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        MyObject obj = new MyObject();
        obj.setParameters(new HashMap<>());

        String json = mapper.writeValueAsString(obj);

        // expected output
        String expectedJson = "{\"parameters\":{}}";

        // actual output
        String actualJson = "{\"parameters\":{}}";

        // assert expected and actual json are not equal
        assert!expectedJson.equals(actualJson);
    }
}

class MyObject {
    @JsonAnyGetter
    @JsonSerialize(using = MySerializer.class)
    public Map<String, String> getParameters() {
        return new HashMap<>();
    }
}

class MySerializer extends JsonSerializer<Map<String, String>> {
    @Override
    public void serialize(Map<String, String> value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        // implement your serialization logic here
    }
}
