java
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import com.fasterxml.jackson.databind.node.MissingNode;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class TreeTraversingParserTest {

    @Test
    public void testTreeTraversingParser() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        JsonNodeFactory factory = JsonNodeFactory.instance;

        // Test cases
        String[] testCases = {
                "{\"x\": 0}",
                "{\"x\": 10}",
                "{\"x\": 1e4}",
                "{\"x\": 1e10}",
                "{\"x\": 1e-1}",
                "{\"x\": 2147483648}",
                "{\"x\": 2147483649}",
                "{\"x\": -2147483649}",
                "{\"x\": -4294967295}",
                "{\"x\": 0.1}",
                "{\"x\": 1.9}",
                "{\"x\": 1.9999999999999999}",
                "{\"x\": true}",
                "{\"x\": {}}",
                "{\"x\": []}",
                "{\"x\": [0]}",
                "{\"x\": \"0\"}",
                "{\"x\": \"10\"}",
                "{\"x\": \"1e4\"}",
                "{\"x\": \"1e10\"}",
                "{\"x\": \"1e-1\"}",
                "{\"x\": \"2147483648\"}",
                "{\"x\": \"2147483649\"}",
                "{\"x\": \"-2147483649\"}",
                "{\"x\": \"-4294967295\"}",
                "{\"x\": \"0.1\"}",
                "{\"x\": \"1.9\"}",
                "{\"x\": \"1.9999999999999999\"}",
                "{\"x\": \"true\"}",
                "{\"x\": \"{}\"}",
                "{\"x\": \"[]\"}",
                "{\"x\": \"[0]\"}"
        };

        for (String testCase : testCases) {
            JsonNode node = mapper.readTree(testCase);
            IntClass obj = mapper.treeToValue(node, IntClass.class);

            // Expected behavior
            String expected = String.valueOf(obj.x);

            // Actual behavior
            try {
                int actual = obj.x;
                assertEquals(expected, String.valueOf(actual));
            } catch (Exception e) {
                assertEquals(expected, e.getMessage());
            }
        }
    }
}
