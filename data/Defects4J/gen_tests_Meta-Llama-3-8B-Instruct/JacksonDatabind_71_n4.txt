java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeReference;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

public class TestMissingKeyDeserializerForCharSequence {
    @Test
    public void testDeserializeCharSequenceKey() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        Map<String, Integer> map = new HashMap<>();
        map.put("test", 1);

        String json = mapper.writeValueAsString(map);
        System.out.println(json);

        Map<CharSequence, Integer> charSequenceMap = mapper.readValue(json, new TypeReference<Map<CharSequence, Integer>>() {});

        // This test will fail because of the missing KeyDeserializer for CharSequence
        assertEquals(1, charSequenceMap.get("test"));
    }
}
