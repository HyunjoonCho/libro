public void testInitializeStep() {
    // create a test scenario
    double[] y0 = {1.0, 2.0};
    double[] scale = new double[y0.length];
    double[] vecAbsoluteTolerance = new double[]{1.0, 1.0};
    double[] vecRelativeTolerance = new double[]{0.1, 0.1};
    double scalAbsoluteTolerance = 1.0;
    double scalRelativeTolerance = 0.1;

    // expected values
    double expectedScale0 = scalAbsoluteTolerance + scalRelativeTolerance * Math.max(Math.abs(y0[0]), Math.abs(y0[0]));
    double expectedScale1 = scalAbsoluteTolerance + scalRelativeTolerance * Math.max(Math.abs(y0[1]), Math.abs(y0[1]));

    // calculate the actual values
    for (int i = 0; i < scale.length; ++i) {
        double yi = Math.max(Math.abs(y0[i]), Math.abs(y0[i]));
        scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * yi;
    }

    // test
    assertEquals(expectedScale0, scale[0], 0.0);
    assertEquals(expectedScale1, scale[1], 0.0);
}