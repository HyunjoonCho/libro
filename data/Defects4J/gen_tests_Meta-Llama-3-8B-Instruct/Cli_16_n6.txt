java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.List;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

@RunWith(Parameterized.class)
public class GroupOptionTest {
    @Parameters
    public static List<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {true, true},
                {true, false},
                {false, true},
                {false, false}
        });
    }

    private boolean groupAPresent;
    private boolean groupBPresent;

    public GroupOptionTest(boolean groupAPresent, boolean groupBPresent) {
        this.groupAPresent = groupAPresent;
        this.groupBPresent = groupBPresent;
    }

    @Test
    public void testHasOption() {
        // setup
        CommandLine cmd = new CommandLine();
        OptionGroup groupB = new OptionGroup();
        if (groupBPresent) {
            cmd.addOption(groupB);
        }
        OptionGroup groupA = new OptionGroup();
        if (groupAPresent) {
            cmd.addOption(groupA);
            groupB.addOption(groupA);
        }

        // test
        assertTrue("Group B should have option when Group A is present", groupB.hasOption());
        assertFalse("Group B should not have option when Group A is not present",!groupBPresent && groupB.hasOption());
    }
}
