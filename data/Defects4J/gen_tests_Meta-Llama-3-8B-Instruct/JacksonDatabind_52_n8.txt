java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

public class ExternalIdDeserTest {

    @Test
    public void testExternalPropertySerialization() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);

        ExternalClass externalClass = new ExternalClass();
        externalClass.setInnerClass(new InnerClass("testValue"));

        String json = mapper.writeValueAsString(externalClass);

        // Check if the JSON output is as expected
        //... (you can add your expected output here)

        // Deserialize the JSON back to the original object
        ExternalClass deserialized = mapper.readValue(json, ExternalClass.class);

        // Check if the external property is not null
        assert deserialized.getInnerClass()!= null;
    }

    public static class ExternalClass {
        @JsonDeserialize(using = ExternalIdDeserializer.class)
        private InnerClass innerClass;

        public InnerClass getInnerClass() {
            return innerClass;
        }

        public void setInnerClass(InnerClass innerClass) {
            this.innerClass = innerClass;
        }
    }

    public static class InnerClass {
        private String value;

        public InnerClass(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }
    }
}
