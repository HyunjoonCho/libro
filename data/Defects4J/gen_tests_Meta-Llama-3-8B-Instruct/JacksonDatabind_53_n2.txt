java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeReference;
import com.fasterxml.jackson.databind.json.JsonMapper;
import org.junit.Test;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;

public class JacksonDeserializerTest {

    @Test
    public void testIssue() throws IOException {
        String json = "{\"something\":[{\"id\":\"a uuid\",\"property\":\"value\"}]}";
        ObjectMapper mapper = JsonMapper.builder()
               .serializationInclusion(SerializationFeature.FAIL_ON_EMPTY_BEANS)
               .build();
        TypeReference<Map<UUID, MyCustomIdInterface>> typeRef = new TypeReference<>() {
        };
        Map<UUID, MyCustomIdInterface> result = mapper.readValue(json, typeRef);

        assertEquals(1, result.size());
    }
}
