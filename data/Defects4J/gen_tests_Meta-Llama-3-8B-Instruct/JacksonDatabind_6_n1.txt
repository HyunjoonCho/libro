
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.cfg.MapperConfig;
import org.junit.Test;
import java.io.IOException;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

import static org.junit.Assert.fail;

public class JacksonIso8601ParsingTest {

    @Test
    public void testParsingIso8601Formats() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);

        String invalidFormat1 = "2014-10-03T18:00:00.6-05:00";
        try {
            ZonedDateTime date = mapper.readValue(invalidFormat1, ZonedDateTime.class);
            fail("Expected DateTimeParseException for " + invalidFormat1);
        } catch (DateTimeParseException e) {
            // expected
        }

        String invalidFormat2 = "2014-10-03T18:00:00.61-05:00";
        try {
            ZonedDateTime date = mapper.readValue(invalidFormat2, ZonedDateTime.class);
            fail("Expected DateTimeParseException for " + invalidFormat2);
        } catch (DateTimeParseException e) {
            // expected
        }

        String validFormat1 = "1997-07-16T19:20+01:00";
        ZonedDateTime date = mapper.readValue(validFormat1, ZonedDateTime.class);
        // Assert that the date is parsed correctly

        String validFormat2 = "1997-07-16T19:20:30.45+01:00";
        date = mapper.readValue(validFormat2, ZonedDateTime.class);
        // Assert that the date is parsed correctly
    }
}
