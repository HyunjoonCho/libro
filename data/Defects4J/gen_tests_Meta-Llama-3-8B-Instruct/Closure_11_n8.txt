java
import org.junit.Test;

import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;

public class RecordTypeInvalidPropertyNotReportedOnFunctionWithThisAnnotationTest {
    @Test
    public void testRecordTypeInvalidPropertyNotReportedOnFunctionWithThisAnnotation() {
        String code = """
            function makeClass(protoMethods) {
                var clazz = function() {
                    this.initialize.apply(this, arguments);
                }
                for (var i in protoMethods) {
                    clazz.prototype[i] = protoMethods[i];
                }

                return clazz;
            }

            /**
             * @constructor
             * @param {{name: string, height: number}} options
             */
            var Person = function(options){};
            Person = makeClass(/** @lends Person.prototype */ {
                /**
                 * @this {Person}
                 * @param {{name: string, height: number}} options
                 */
                initialize: function(options) {
                    /**
                     * @type {string}
                     */ this.name_ = options.thisPropDoesNotExist;
                },

                /**
                 * @param {string} message
                 * @this {Person}
                 */
                say: function(message) {
                    window.console.log(this.name_ +'says:'+ message);
                }
            });

            var joe = new Person({name: 'joe', height: 300});
            joe.say('hi');
        """;

        Compiler compiler = new Compiler();
        Result result = compiler.compile(code, "repro.js", CompilationLevel.SIMPLE_OPTIMIZATIONS);
        JSError error = result.getError();
        assertNotNull(error);
        // Check the error message
        assertEquals("Cannot find property 'thisPropDoesNotExist' on 'options'.", error.getMessage());
    }
}
