java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.lang.reflect.Field;
import java.util.Arrays;
import java.util.List;

import static org.junit.Assert.assertSame;

@RunWith(Parameterized.class)
public class MemoryLeakTest {

    @Parameters
    public static List<Object[]> data() {
        return Arrays.asList(new Object[][]{{});
    }

    private Object toStringStyle;

    public MemoryLeakTest() {
        String.valueOf(new org.apache.commons.lang3.builder.ToStringStyle());
    }

    @Test
    public void testMemoryLeak() {
        try {
            Field field = org.apache.commons.lang3.builder.ToStringStyle.class.getDeclaredField("THREAD_LOCAL");
            field.setAccessible(true);
            assertSame(toStringStyle, field.get(null));
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
}
