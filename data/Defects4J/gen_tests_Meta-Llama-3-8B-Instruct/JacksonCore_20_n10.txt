
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.JsonGenerator;
import com.fasterxml.jackson.databind.SerializationConfig;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;
import java.util.Arrays;

import static org.junit.Assert.fail;

public class TestWriteEmbeddedObject {
    @Test
    public void testWriteEmbeddedObjectByteArray() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.WRITE_EMPTY_CONTAINERS_AS_NULL);

        SerializationConfig config = mapper.getSerializationConfig();
        config.setSerializationInclusion(SerializationInclusion.NON_DEFAULT);

        StringWriter sw = new StringWriter();
        JsonGenerator gen = mapper.getFactory().createGenerator(sw);

        byte[] data = new byte[] {1, 2, 3};
        gen.writeStartObject();
        gen.writeFieldName("bytes");
        gen.writeEmbeddedObject(data);
        gen.writeEndObject();
        gen.close();

        String json = sw.toString();
        if (!json.equals("{\"bytes\":\"data\"}) {
            fail("Expected JSON output with embedded object");
        }
    }
}
