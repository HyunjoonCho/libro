java
public void testCMAESOptimizerBounds() {
    // Create a sample optimizer
    CMAESOptimizer optimizer = new CMAESOptimizer();

    // Set the bounds
    int[] lowerBound = {0, 0, 0};
    int[] upperBound = {10, 10, 10};

    // Set the initial solution
    double[] initialSolution = {1, 1, 1};

    // Set the fitness function
    // For simplicity, let's use a function that returns the sum of all values
    double fitnessFunction(double[] solution) {
        double sum = 0;
        for (double value : solution) {
            sum += value;
        }
        return sum;
    }

    // Optimize the solution
    optimizer.optimize(lowerBound, upperBound, initialSolution, fitnessFunction);

    // Check if the solution is within the bounds
    for (int i = 0; i < optimizer.getSolution().length; i++) {
        assert lowerBound[i] <= optimizer.getSolution()[i] : "Solution " + i + " is below the lower bound";
        assert upperBound[i] >= optimizer.getSolution()[i] : "Solution " + i + " is above the upper bound";
    }
}
