public void testIssue60() {
    Chronology chronUTC = GregorianChronology.getInstance(DateTimeZone.UTC);
    DateTime usCentralStandardInUTC = new DateTime(2008, 11, 2, 7, 0, 0, 0, chronUTC);
    DateTime usCentralDaylightInUTC = new DateTime(2008, 11, 2, 6, 0, 0, 0, chronUTC);
    
    Chronology chronUSCentral = GregorianChronology.getInstance(DateTimeZone.forID("US/Central"));
    DateTime usCentralStandardInUSCentral = usCentralStandardInUTC.toDateTime(chronUSCentral);
    DateTime usCentralDaylightInUSCentral = usCentralDaylightInUTC.toDateTime(chronUSCentral);
    
    assertEquals(1, usCentralStandardInUSCentral.getHourOfDay());
    assertEquals(usCentralStandardInUSCentral.getHourOfDay(), usCentralDaylightInUSCentral.getHourOfDay());
    
    DateTime australiaNSWStandardInUTC = new DateTime(2008, 4, 5, 16, 0, 0, 0, chronUTC);
    DateTime australiaNSWDaylightInUTC = new DateTime(2008, 4, 5, 15, 0, 0, 0, chronUTC);
    
    Chronology chronAusNSW = GregorianChronology.getInstance(DateTimeZone.forID("Australia/NSW"));
    DateTime australiaNSWStandardInAustraliaNSW = australiaNSWStandardInUTC.toDateTime(chronAusNSW);
    DateTime australiaNSWDaylightInAustraliaNSW = australiaNSWDaylightInUTC.toDateTime(chronAusNSW);
    
    assertEquals(2, australiaNSWStandardInAustraliaNSW.getHourOfDay());
    assertEquals(australiaNSWStandardInAustraliaNSW.getHourOfDay(), australiaNSWDaylightInAustraliaNSW.getHourOfDay());
    
    DateTime expectedUSCentral = usCentralDaylightInUSCentral.withHourOfDay(1);
    DateTime expectedAustraliaNSW = australiaNSWDaylightInAustraliaNSW.withHourOfDay(2);
    
    assertEquals(expectedUSCentral, usCentralStandardInUSCentral.withHourOfDay(1));
    assertEquals(expectedAustraliaNSW, australiaNSWStandardInAustraliaNSW.withHourOfDay(2));
}