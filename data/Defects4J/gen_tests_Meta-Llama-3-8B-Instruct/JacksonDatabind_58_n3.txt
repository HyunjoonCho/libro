java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationFeature.CAN_OVERRIDE_ACCESS_MODIFIERS;
import org.junit.Test;
import java.io.IOException;

public class JacksonDeserializationTest {

    @Test(expected = IOException.class)
    public void testDeserializationOfException() throws IOException {
        String json = "{\"message\":\"test\"}";
        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(SerializationFeature.CAN_OVERRIDE_ACCESS_MODIFIERS, true);
        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
        mapper.configure(SerializationFeature.FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS, false);
        mapper.configure(SerializationFeature.FAIL_ON_MISSING_CREATOR_PROPERTIES, false);
        mapper.configure(SerializationFeature.FAIL_ON_MISSING_SETTERS, false);
        mapper.configure(SerializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
        mapper.configure(SerializationFeature.FAIL_ON_NULL_CREATOR_PROPERTIES, false);

        mapper.enable(CAN_OVERRIDE_ACCESS_MODIFIERS);

        MyException myException = mapper.readValue(json, MyException.class);
    }
}

class MyException extends RuntimeException {
    private String message;

    public MyException(String message) {
        super(message);
    }

    public String getMessage() {
        return message;
    }
}
