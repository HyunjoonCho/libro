java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeReference;
import org.junit.Test;

import java.io.IOException;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class TestJsonDeserialization {

    @Test
    public void testJsonDeserialization() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        String json = "{\"something\":[{\"id\":\"a uuid\",\"property\":\"value\"}]";

        Map<UUID, MyCustomIdInterface> expectedMap = Map.of(UUID.fromString("a uuid"), new Foo());
        TypeReference<Map<UUID, MyCustomIdInterface>> typeReference = new TypeReference<>() {};

        Map<UUID, MyCustomIdInterface> actualMap = mapper.readValue(json, typeReference);

        assertNotNull(actualMap);
        assertEquals(expectedMap, actualMap);
    }
}
