
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertSame;

public class TestThisAnnotation {
    @Test
    public void testDangerousUseOfGlobalThis() {
        // Create a class with a method with and without the @this annotation
        class Foo {
            private int _bar;

            public Foo() {
                _bar = null;
            }

            public void writeMethodWithAnnotation() {
                @this Foo
                this._bar = 123; // no warning. ok
            }

            public void writeMethodWithoutAnnotation() {
                this._bar = 123; // warning. ok.
            }

            public int readMethodWithAnnotation() {
                @this Foo
                return this._bar; // no warning. ok
            }

            public int readMethodWithoutAnnotation() {
                return this._bar; // <- No warning!
            }
        }

        // Create an instance of the class
        Foo foo = new Foo();

        // Call the methods and check for warnings
        foo.writeMethodWithAnnotation();
        foo.writeMethodWithoutAnnotation();

        // Check the expected values
        assertEquals(123, foo._bar);

        // Check for warnings
        // TODO: Add code to check for warnings
    }
}
