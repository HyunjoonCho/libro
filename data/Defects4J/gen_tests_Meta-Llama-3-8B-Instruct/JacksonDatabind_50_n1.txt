java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeReference;
import org.junit.Test;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class JacksonTest {

    @Test
    public void testJsonIdentityInfoDeserializationFailsWithForwardReferencesAndJsonCreator() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        // Create an object graph with forward references and a @JsonCreator method
        class A {
            private int id;
            private List<B> list;

            public A(int id, List<B> list) {
                this.id = id;
                this.list = list;
            }

            @JsonCreator
            public static A create(A value) {
                return value;
            }
        }

        class B {
            private int id;

            public B(int id) {
                this.id = id;
            }
        }

        List<A> list = new ArrayList<>();
        A a = new A(1, list);
        list.add(a);

        String json = mapper.writeValueAsString(a);
        System.out.println(json);

        A deserializedA = mapper.readValue(json, new TypeReference<A>() {
        });

        assertEquals(1, deserializedA.id);
    }
}
