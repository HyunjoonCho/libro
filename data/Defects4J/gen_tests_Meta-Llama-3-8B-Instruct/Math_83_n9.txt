
import org.apache.commons.math3.optimization.linear.LinearConstraint;
import org.apache.commons.math3.optimization.linear.LinearObjectiveFunction;
import org.apache.commons.math3.optimization.linear.RealPointValuePair;
import org.apache.commons.math3.optimization.linear.SimplexSolver;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class SimplexSolverTest {

    @Test
    public void testSimplexSolver() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[]{0.8, 0.2, 0.7, 0.3, 0.6, 0.4}, 0);

        List<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[]{1, 0, 1, 0, 1, 0}, Relationship.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[]{0, 1, 0, 1, 0, 1}, Relationship.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[]{1, 0, 0, 0, 0, 0}, Relationship.GEQ, 10.0));
        constraints.add(new LinearConstraint(new double[]{0, 0, 1, 0, 0, 0}, Relationship.GEQ, 8.0));
        constraints.add(new LinearConstraint(new double[]{0, 0, 0, 0, 1, 0}, Relationship.GEQ, 5.0));

        RealPointValuePair solution = new SimplexSolver().optimize(f, constraints, GoalType.MAXIMIZE, true);

        assertEquals(22.2, solution.getValue(), 0.01);
        assertEquals(15, solution.getPoint()[0], 0.01);
        assertEquals(23, solution.getPoint()[1], 0.01);
        assertEquals(8, solution.getPoint()[2], 0.01);
        assertEquals(0, solution.getPoint()[3], 0.01);
        assertEquals(0, solution.getPoint()[4], 0.01);
        assertEquals(0, solution.getPoint()[5], 0.01);

        // Check if the last constraint is satisfied
        double x4 = solution.getPoint()[4];
        assertTrue(x4 >= 5.0);
    }
}
