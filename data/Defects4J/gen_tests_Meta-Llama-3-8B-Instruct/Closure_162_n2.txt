java
import org.junit.Test;
import static org.junit.Assert.fail;

public class TypeAliasTest {

    @Test
    public void testTypeAlias() {
        try {
            // Compile the following with full warnings
            String code = "goog.provide('foo.Foo');\n" +
                    "goog.provide('foo.Foo.Bar');\n" +
                    "\n" +
                    "goog.scope(function() {\n" +
                    "  /**\n" +
                    "   * @param {Foo.Bar} bar\n" +
                    "   * @constructor\n" +
                    "  */\n" +
                    "  foo.Foo = function(bar) {\n" +
                    "    this.bar = bar;\n" +
                    "  };\n" +
                    "  var Foo = foo.Foo;\n" +
                    "\n" +
                    "  /** @type {Foo.Bar} */\n" +
                    "  Foo.prototype.bar = null;\n" +
                    "\n" +
                    "  /** @constructor */\n" +
                    "  Foo.Bar = function() {};\n" +
                    "});";
            // Compile the code
            // This should fail with an error: "Bad type annotation. Unknown type Foo.Bar"
            // But instead, it should work correctly
            fail("Expected error");
        } catch (Exception e) {
            // This should be caught and printed
            System.out.println(e.getMessage());
        }
    }
}
