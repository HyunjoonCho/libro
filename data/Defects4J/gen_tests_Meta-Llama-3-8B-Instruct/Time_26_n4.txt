java
public void testIssue60() {
    // US/Central
    DateTime usCentralStandardInUTC = new DateTime(2008, 11, 2, 7, 0, 0, 0, DateTimeZone.UTC);
    DateTime usCentralDaylightInUTC = new DateTime(2008, 11, 2, 6, 0, 0, 0, DateTimeZone.UTC);
    DateTime usCentralStandardInUSCentral = usCentralStandardInUTC.toDateTime(DateTimeZone.forID("US/Central"));
    DateTime usCentralDaylightInUSCentral = usCentralDaylightInUTC.toDateTime(DateTimeZone.forID("US/Central"));
    assertEquals(1, usCentralStandardInUSCentral.getHourOfDay());
    assertEquals(usCentralStandardInUSCentral.getHourOfDay(), usCentralDaylightInUSCentral.getHourOfDay());

    // Australia/North
    DateTime australiaNSWStandardInUTC = new DateTime(2008, 4, 5, 16, 0, 0, 0, DateTimeZone.UTC);
    DateTime australiaNSWDaylightInUTC = new DateTime(2008, 4, 5, 15, 0, 0, 0, DateTimeZone.UTC);
    DateTime australiaNSWStandardInAustraliaNSW = australiaNSWStandardInUTC.toDateTime(DateTimeZone.forID("Australia/Sydney"));
    DateTime australiaNSWDaylightInAustraliaNSW = australiaNSWDaylightInUTC.toDateTime(DateTimeZone.forID("Australia/Sydney"));
    assertEquals(2, australiaNSWStandardInAustraliaNSW.getHourOfDay());
    assertEquals(australiaNSWStandardInAustraliaNSW.getHourOfDay(), australiaNSWDaylightInAustraliaNSW.getHourOfDay());

    // Verify that setting the hour of day on the DST boundary results in a daylight time for both time zones.
    assertEquals(usCentralDaylightInUSCentral, usCentralStandardInUSCentral.withHourOfDay(1));
    assertEquals(australiaNSWDaylightInAustraliaNSW, australiaNSWStandardInAustraliaNSW.withHourOfDay(2));
}
