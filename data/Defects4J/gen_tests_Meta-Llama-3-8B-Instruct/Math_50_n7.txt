
import org.junit.Test;
import org.junit.Assert;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import uk.ac.cam.cwiatsch.jrfsolver.UnivariateRealFunction;
import uk.ac.cam.cwiatsch.jrfsolver.UnivariateRealSolver;
import uk.ac.cam.cwiatsch.jrfsolver.RegulaFalsiSolver;

@RunWith(JUnit4.class)
public class RegulaFalsiSolverTest {

    @Test
    public void testRegulaFalsiSolverFailure() {
        final UnivariateRealFunction f = new UnivariateRealFunction() {
            @Override
            public double value(double x) {
                return Math.exp(x) - Math.pow(Math.PI, 3.0);
            }
        };

        UnivariateRealSolver solver = new RegulaFalsiSolver();
        try {
            double root = solver.solve(100, f, 1, 10);
            Assert.fail("Expected an exception");
        } catch (RuntimeException e) {
            Assert.assertEquals("illegal state: maximal count (100) exceeded: evaluations", e.getMessage());
        }
    }
}
