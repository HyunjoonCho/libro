java
import org.junit.Test;

public class TestClosureCompiler {
    @Test
    public void testConstDumpsTypeCastInfo() {
        // Define the interface and class
        interface TwoNumbers {
            int getFirst();
            int getSecond();
        }

        class HasTwoNumbers {
            private TwoNumbers twoNumbers;

            public HasTwoNumbers() {
                this.twoNumbers = getTwoNumbers();
            }

            public TwoNumbers getTwoNumbers() {
                return SOME_DEFAULT;
            }
        }

        // Define the default constant
        final TwoNumbers SOME_DEFAULT = new TwoNumbers() {
            @Override
            public int getFirst() {
                return 1;
            }

            @Override
            public int getSecond() {
                return 2;
            }
        };

        // Compile the code with the @const annotation
        String code = "/* @const */ var SOME_DEFAULT = new TwoNumbers() {\n" +
                "    @Override\n" +
                "    public int getFirst() {\n" +
                "        return 1;\n" +
                "    }\n" +
                "\n" +
                "    @Override\n" +
                "    public int getSecond() {\n" +
                "        return 2;\n" +
                "    }\n" +
                "};";
        // Expected error: The code should not compile due to the @const annotation
    }
}
