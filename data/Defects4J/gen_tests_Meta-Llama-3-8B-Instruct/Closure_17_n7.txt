public void testConstTypeCast() {
    String code = "/*\n" +
            " * Class defining an interface with two numbers.\n" +
            " * @interface\n" +
            " */\n" +
            "function TwoNumbers() {}\n" +
            "/* @type number */\n" +
            "TwoNumbers.prototype.first;\n" +
            "/* @type number */\n" +
            "TwoNumbers.prototype.second;\n" +
            "var SOME_DEFAULT = /* @type {TwoNumbers} */ ({first: 1, second: 2});\n" +
            "/*\n" +
            " * Class with a two number member.\n" +
            " * @constructor\n" +
            " */\n" +
            "function HasTwoNumbers() {\n" +
            " /* @type {TwoNumbers} */\n" +
            " this.twoNumbers = this.getTwoNumbers();\n" +
            "}\n" +
            "/*\n" +
            " * Get the default two numbers.\n" +
            " * @return {TwoNumbers}\n" +
            " */\n" +
            "HasTwoNumbers.prototype.getTwoNumbers = function() {\n" +
            " return SOME_DEFAULT;\n" +
            "}\n" +
            "\n" +
            "/* @const */ var SOME_DEFAULT = /* @type {TwoNumbers} */ ({first: 1, second: 2});";
    Compilation compilation = Compilation.compile(code);
    assertEquals("Warning", compilation.getErrorCount());
}