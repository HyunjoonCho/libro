java
import org.apache.commons.math3.optimization.univariate.BrentOptimizer;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class BrentOptimizerTest {

    @Test
    public void testBrentOptimizerNotAlwaysReportingTheBestPoint() {
        // Set up the test function
        double[] x = new double[1];
        double[] y = new double[1];
        y[0] = 0.0; // initial value
        x[0] = 0.0; // initial value

        // Set up the optimizer
        BrentOptimizer optimizer = new BrentOptimizer();
        optimizer.optimize(new OptimizableFunction(y), x, 0.0, 1.0);

        // Check that the last evaluated point is not the best
        double lastPoint = x[0];
        double bestPoint = optimizer.getMinValue();
        assertTrue("Last evaluated point is not the best", lastPoint!= bestPoint);
    }
}
