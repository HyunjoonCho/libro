java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.lang.reflect.Field;
import java.util.Arrays;
import java.util.List;

import static org.junit.Assert.assertSame;

@RunWith(Parameterized.class)
public class ToStringStyleMemoryLeakTest {

    @Parameters
    public static List<Object[]> getParams() {
        return Arrays.asList(new Object[][]{{});
    }

    private ToStringStyle toStringStyle;

    public ToStringStyleMemoryLeakTest() {
        toStringStyle = new ToStringStyle();
    }

    @Test
    public void testToStringStyle() {
        // Load the class to trigger the creation of the thread local
        Class<?> clazz = ToStringStyle.class;
        Field field = clazz.getDeclaredField("STYLE_FACTORY");
        field.setAccessible(true);
        field.get(null);

        // Assert that the thread local is not null
        assertSame(ToStringStyle.class, toStringStyle.getClass());
    }
}
