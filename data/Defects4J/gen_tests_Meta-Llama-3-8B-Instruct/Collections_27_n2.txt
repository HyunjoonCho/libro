java
import org.junit.Test;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.HashMap;
import java.util.Map;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import sun.reflect.annotation.AnnotationInvocationHandler;

import java.lang.reflect.Method;

@RunWith(JUnit4.class)
public class TestInvokerTransformer {

    @Test
    public void testInvokerTransformer() throws Exception {
        // Create a HashMap with an InvokerTransformer
        Map<String, Object> map = new HashMap<>();
        map.put("key", new AnnotationInvocationHandler(new Object() {
            public Class<?> invoke(Object proxy, Method method, Object[] args) throws Throwable {
                if (method.getName().equals("toString")) {
                    return "Hello, World!";
                }
                return null;
            }
        }));

        // Serialize the HashMap
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bos);
        oos.writeObject(map);
        oos.close();

        // Deserialize the HashMap
        ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
        ObjectInputStream ois = new ObjectInputStream(bis);
        Map<String, Object> deserializedMap = (Map<String, Object>) ois.readObject();

        // Check if the deserialized HashMap has the correct value
        assertEquals("Hello, World!", deserializedMap.get("key").toString());
    }
}
