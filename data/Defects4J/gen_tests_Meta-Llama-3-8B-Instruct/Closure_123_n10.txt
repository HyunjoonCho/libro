java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JsAstPrinter;
import com.google.javascript.jscomp.JsAstPrinterOptions;

@RunWith(JUnit4.class)
public class ClosureCompilerTest {

    @Test
    public void testIssue() {
        Compiler compiler = new Compiler();
        String input = "function Foo(A, B, C, D) {\n" +
                "  if (A) {\n" +
                "    if (B) {\n" +
                "      C = 0;\n" +
                "    } else {\n" +
                "      C = 0 in D;\n" +
                "    }\n" +
                "    while (C--) {}\n" +
                "  }\n" +
                "}\n";
        compiler.compile(input);
        JsAstPrinter printer = new JsAstPrinter(JsAstPrinterOptions.getDefaultOptions());
        String output = printer.print(compiler.getResult().getJs());
        System.out.println(output);
        // Check the output for the expected syntax error
    }
}
