java
public void testCMAESOptimizerBounds() {
    // Create a CMAESOptimizer with bounds
    CMAESOptimizer optimizer = new CMAESOptimizer();
    optimizer.setBounds(new double[]{-10, -10}, new double[]{10, 10});

    // Create a sample function to optimize
    Function function = new Function() {
        @Override
        public double evaluate(double[] params) {
            return params[0] + params[1]; // Just a simple sum
        }
    };

    // Optimize the function
    optimizer.doOptimize(function);

    // Check if the result is within the bounds
    double[] result = optimizer.getResult();
    assertTrue(result[0] >= -10 && result[0] <= 10);
    assertTrue(result[1] >= -10 && result[1] <= 10);
}
