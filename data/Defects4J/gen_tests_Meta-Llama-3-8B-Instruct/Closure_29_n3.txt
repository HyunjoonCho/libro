public void testClosureCompilerIssue() {
    final String originalCode = "isFunction = function(functionToCheck) {\n" +
            " var getType;\n" +
            " getType = {};\n" +
            " return functionToCheck && getType.toString.apply(functionToCheck) === '[object Function]';\n" +
            "};";
    final String compiledCode = closureCompiler.compile(originalCode);
    final String expected = "isFunction = function(a) {\n" +
            " return a && \".toString\".call(void 0,a) === \"[object Function]\";\n" +
            "};";
    assertEquals(expected, compiledCode);
}