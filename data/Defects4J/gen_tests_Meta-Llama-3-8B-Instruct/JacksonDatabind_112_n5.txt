java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeReference;
import org.junit.Test;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.fail;

public class StringCollectionDeserializerTest {

    @Test
    public void testStringCollectionDeserializer() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        CustomStringCollection customCollection = new CustomStringCollection();
        customCollection.add("test1");
        customCollection.add("test2");

        String json = mapper.writeValueAsString(customCollection);

        try {
            mapper.readValue(json, new TypeReference<CustomStringCollection>() {
            });
            fail("Expected exception");
        } catch (IOException e) {
            // Expected exception
        }
    }
}
