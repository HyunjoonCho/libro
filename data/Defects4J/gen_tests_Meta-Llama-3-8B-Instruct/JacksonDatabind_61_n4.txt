java
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertThrows;

public class TestJacksonTypeResolver {

    @Test
    public void testTypeResolver() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        Map<String, Object> mapData = new HashMap<>();
        mapData.put("longInMap", 2L);
        mapData.put("longAsField", new Data(1));

        String json = mapper.writeValueAsString(mapData);
        System.out.println("json = " + json);

        TypeFactory typeFactory = mapper.getTypeFactory();
        Map deserializedData = mapper.readValue(json, typeFactory.constructMapType(HashMap.class, String.class, Object.class));

        assertThrows(JsonMappingException.class, () -> mapper.readValue(json, Map.class));
    }

    static class Data {
        public long key;
    }
}
