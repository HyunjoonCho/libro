public void testClosureCompiler() {
    Object obj = new Object();
    obj.f1 = new Function() {
        public void run() {
            System.out.println("f1");
        }
    };
    obj.f1.alwaysCall = true;
    obj.f2 = new Function() {
        public void run() {
            System.out.println("f2");
        }
    };

    Map<String, Function> map = new HashMap<>();
    map.put("f1", obj.f1);
    map.put("f2", obj.f2);

    Function callFunctionByKey = new Function() {
        public void run() {
            Function f = map.get(args[0]);
            if (f!= null && f instanceof Function && ((Function) f).getMember("alwaysCall")!= null) {
                ((Function) f).call();
            }
        }
    };

    callFunctionByKey("f1");
}