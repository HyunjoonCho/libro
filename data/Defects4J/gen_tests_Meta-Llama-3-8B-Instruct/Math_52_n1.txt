
public void testNumericalProblemsInRotationCreation() {
    double[] u1 = { -4921140.837095533, -2151209425044.0013, -890093.279426377 };
    double[] u2 = { -2723858093872.4895, -2169664921341.876, 6749688708885.301 };
    double[] v1 = { 1, 0, 0 };
    double[] v2 = { 0, 0, 1 };

    // Compute the expected results using high precision
    double expectedK1 = 38514410.36093388; //...
    double expectedK2 = -0.374075245201180409222711; //...
    double expectedK3 = -1168590152.10599715208;
    double expectedC = 558382746168463196.7079627;

    // Compute the results using the Java code
    double[] resultK = new double[3];
    double resultC = computeRotation(u1, u2, v1, v2, resultK);

    // Check that the results are incorrect
    assertNotEquals(expectedK1, resultK[0], 0.01);
    assertNotEquals(expectedK2, resultK[1], 0.01);
    assertNotEquals(expectedK3, resultK[2], 0.01);
    assertNotEquals(expectedC, resultC, 0.01);
}
