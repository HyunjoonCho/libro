
public void testImplicitConstructorPropertyNamesNotRenamedProperly() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.setSerializerModifier(new SimpleSerializerModifier() {
        @Override
        public JsonSerializer<?> modifySerializer(SerializerProvider provider, Annotated annotated, JsonSerializer<?> serializer) {
            if (annotated.getAnnotation(ConstructorProperties.class)!= null) {
                return serializer;
            }
            return null;
        }
    });
    mapper.registerModule(module);

    // Create an object with constructor properties
    @ConstructorProperties({"name", "age"})
    public static class Person {
        private String name;
        private int age;

        public Person(String name, int age) {
            this.name = name;
            this.age = age;
        }
    }

    // Serialize the object and verify that constructor properties are not renamed properly
    String json = mapper.writeValueAsString(new Person("John", 30));
    assertEquals("{\"name\":\"John\",\"age\":30}", json);
}
