
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.joda.time.format.DateTimeParser;
import org.joda.time.format.DateTimeParserBucket;
import org.joda.time.format.DateTimeZoneBuilder;
import org.junit.Test;

import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class DateTimeFormatterTest {

    @Test
    public void testParseIntoWithNoYear() {
        DateTimeZone zone = DateTimeZoneBuilder.UTC();
        DateTimeZone.setDefault(zone);
        DateTimeFormatter formatter = new DateTimeFormatterBuilder()
               .appendOptional(DateTimeFormat.forPattern("MM/dd/yyyy"))
               .toFormatter();
        DateTimeZone.setDefault(null);
        DateTime instant = new DateTime(2022, 2, 29, 0, 0, 0, 0);
        DateTimeParser parser = formatter.getParser();
        DateTimeParserBucket bucket = new DateTimeParserBucket();
        parser.parseInto(bucket, "02/29", instant);
        assertEquals(2022, instant.getYear());
    }
}
