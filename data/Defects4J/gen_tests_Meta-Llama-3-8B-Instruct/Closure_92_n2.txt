java
import org.junit.Test;
import static org.junit.Assert.assertThrows;
import static org.junit.Assert.assertTrue;

public class NamespaceBugTest {

    @Test
    public void testImplicitNamespaceBug() {
        // Module A
        Object apps = new Object();
        Object foo = new Object();
        apps.getClass().getDeclaredField("foo").set(apps, foo);

        // Module B
        Object fooBar = new Object();
        apps.getClass().getDeclaredField("foo").get(apps).getClass().getDeclaredField("bar").set(apps.getClass().getDeclaredField("foo").get(apps), fooBar);

        // Module C
        Object fooBarC = new Object();
        apps.getClass().getDeclaredField("foo").get(apps).getClass().getDeclaredField("bar").get(apps.getClass().getDeclaredField("foo").get(apps)).getClass().getDeclaredField("C").set(apps.getClass().getDeclaredField("foo").get(apps).getClass().getDeclaredField("bar").get(apps.getClass().getDeclaredField("foo").get(apps)), fooBarC);

        // This should throw a runtime error because apps.foo.bar is assigned before apps.foo
        assertThrows(RuntimeException.class, () -> {
            apps.getClass().getDeclaredField("foo").get(apps).getClass().getDeclaredField("bar").get(apps.getClass().getDeclaredField("foo").get(apps));
        });
    }
}
