java
import org.junit.Test;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;

import java.io.StringReader;
import java.io.StringWriter;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;

import static org.junit.Assert.assertEquals;

public class ElementHtmlTest {

    @Test
    public void testElementHtml() throws ParserConfigurationException, SAXException {
        String xml = "<root><test attr='  value  '><child>child content</child></test></root>";
        StringReader reader = new StringReader(xml);
        InputSource inputSource = new InputSource(reader);
        SAXParserFactory factory = SAXParserFactory.newInstance();
        SAXParser saxParser = factory.newSAXParser();
        XMLReader xmlReader = saxParser.getXMLReader();
        ContentHandler handler = new MyContentHandler();
        xmlReader.setContentHandler(handler);
        saxParser.parse(inputSource, handler);

        String expected = "<root><test attr=\"value\"><child>child content</child></test></root>";
        String actual = handler.getHtml();
        assertEquals(expected, actual);
    }

    private class MyContentHandler extends ContentHandler {

        private StringBuilder sb = new StringBuilder();

        @Override
        public void startDocument() {
        }

        @Override
        public void startElement(String uri, String localName, String qName, Attributes attributes) {
            sb.append("<" + qName);
            for (int i = 0; i < attributes.getLength(); i++) {
                sb.append(" " + attributes.getQName(i) + "=\"" + attributes.getValue(i) + "\"");
            }
            sb.append(">");
        }

        @Override
        public void characters(char[] ch, int start, int length) {
            sb.append(new String(ch, start, length));
        }

        @Override
        public void endElement(String uri, String localName, String qName) {
            sb.append("</" + qName + ">");
        }

        public String getHtml() {
            return sb.toString();
        }
    }
}
