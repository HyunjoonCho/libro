
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationConfig;
import com.fasterxml.jackson.databind.annotation.JsonInclude;
import com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertEquals;

public class TestJsonInclude {
    @Test
    public void testJsonIncludeForString() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.setSerializationInclusion(SerializationFeature.DEFAULT);
        mapper.getSerializationConfig().addMixInAnnotations(MyClass.class, MyMixin.class);

        MyClass myObject = new MyClass();
        myObject.setMyString(null);

        String json = mapper.writeValueAsString(myObject);

        assertEquals("{\"myString\":null}", json);
    }
}

@JsonInclude(JsonInclude.Include.NON_DEFAULT)
class MyClass {
    private String myString;

    public String getMyString() {
        return myString;
    }

    public void setMyString(String myString) {
        this.myString = myString;
    }
}

class MyMixin {
    @Override
    public void setAnnotationIntrospector(AnnotationIntrospector annotationIntrospector) {
        BeanPropertyDefinition definition = new BeanPropertyDefinition("myString", String.class);
        definition.setDefaultValue(null);
    }
}
