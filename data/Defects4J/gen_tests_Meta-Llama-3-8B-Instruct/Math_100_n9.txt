
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.apache.commons.math.estimation.AbstractEstimator;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

@RunWith(JUnit4.class)
public class AbstractEstimatorTest {

    @Test(expected = ArrayIndexOutOfBoundsException.class)
    public void testGetCovariancesCrashesWhenBoundParametersPresent() {
        AbstractEstimator estimator = mock(AbstractEstimator.class);
        Problem problem = mock(Problem.class);
        when(problem.getAllParameters()).thenReturn(new double[] {1, 2, 3, 4});
        estimator.setProblem(problem);

        estimator.getCovariances();
    }

    @Test
    public void testGetCovariancesWorksWhenUnboundParametersOnly() {
        AbstractEstimator estimator = mock(AbstractEstimator.class);
        Problem problem = mock(Problem.class);
        when(problem.getUnboundParameters()).thenReturn(new double[] {1, 2});
        estimator.setProblem(problem);

        estimator.getCovariances();
    }
}
