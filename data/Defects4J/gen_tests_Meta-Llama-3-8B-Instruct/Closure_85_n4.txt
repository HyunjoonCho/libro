java
import org.junit.Test;
import org.junit.rules.TestRule;
import org.junit.runner.Description;
import org.junit.runners.model.FrameworkMethod;
import org.junit.runners.model.Statement;

import java.io.File;
import java.io.IOException;

import static org.junit.Assert.fail;

public class JavaScriptCompilerTest {

    @Test
    public void testReproducibleCrash() throws IOException {
        File file = new File("test.js");
        file.createNewFile();
        file.deleteOnExit();

        try {
            // Write the JavaScript code to the file
            file.createNewFile();
            java.io.FileWriter writer = new java.io.FileWriter(file);
            writer.write("function a(b) {\n" +
                    "  switch (b.v) {\n" +
                    "    case 'SWITCH':\n" +
                    "      if (b.i >= 0) {\n" +
                    "        return b.o;\n" +
                    "      } else {\n" +
                    "        return undefined;\n" +
                    "      }\n" +
                    "    break;\n" +
                    "  }\n" +
                    "}");
            writer.close();

            // Compile the JavaScript code
            // This should throw a RuntimeException
            // If the compiler crashes, the test will fail
        } catch (RuntimeException e) {
            fail("Reproducible crash occurred");
        }
    }
}
