public void testPolymorphicTypes() {
    @JsonProperty("type")
    public abstract class Animal {
        @JsonProperty("name")
        public String getName();
    }

    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXISTING_PROPERTY)
    @JsonSubTypes({
            @JsonSubTypes.Type(name = "dog", value = Dog.class),
            @JsonSubTypes.Type(name = "cat", value = Cat.class)
    })
    public abstract class AnimalWithSubtype extends Animal {
    }

    public static class Dog extends Animal {
        @Override
        public String getName() {
            return "dog";
        }
    }

    public static class Cat extends Animal {
        @Override
        public String getName() {
            return "cat";
        }
    }

    ObjectMapper mapper = new ObjectMapper();
    AnimalWithSubtype animalWithSubtype = mapper.readValue("{\"type\":\"dog\",\"name\":\"fido\"}", AnimalWithSubtype.class);
    assertEquals("dog", animalWithSubtype.getName());
}