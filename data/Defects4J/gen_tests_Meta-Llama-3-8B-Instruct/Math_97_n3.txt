
import org.junit.Test;
import org.apache.commons.math.analysis.BrentSolver;
import org.apache.commons.math.analysis.UnivariateFunction;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;

public class BrentSolverTest {

    @Test
    public void testBrentSolverThrowsIllegalArgumentException() {
        UnivariateFunction f = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return x * x - 101945.04630982173;
            }
        };
        BrentSolver solver = new BrentSolver();
        assertThrows(IllegalArgumentException.class, () -> solver.solve(0.0, 1.7976931348623157E308, f));
    }

    @Test
    public void testBrentSolverReturnsZeroForZeroValue() {
        UnivariateFunction f = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return x * x - 101945.04630982173;
            }
        };
        BrentSolver solver = new BrentSolver();
        assertEquals(0, solver.solve(0.0, 0.0, f), 0.0);
    }
}
