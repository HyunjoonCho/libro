public void testIssue124() {
    DateTime britishDate = new DateTime(2011, 10, 30, 1, 59, 0, 0, DateTimeZone.forID("Europe/London"));
    DateTime norwDate = new DateTime(2011, 10, 30, 2, 59, 0, 0, DateTimeZone.forID("Europe/Oslo"));
    DateTime finnishDate = new DateTime(2011, 10, 30, 3, 59, 0, 0, DateTimeZone.forID("Europe/Helsinki"));

    assertEquals(2011, britishDate.getYear());
    assertEquals(10, britishDate.getMonthOfYear());
    assertEquals(30, britishDate.getDayOfMonth());
    assertEquals(1, britishDate.getHourOfDay());
    assertEquals(59, britishDate.getMinuteOfHour());
    assertEquals(0, britishDate.getSecondOfMinute());
    assertEquals(0, britishDate.getMillisOfSecond());
    assertEquals(1, britishDate.getOffset().getTotalSeconds() / 3600);

    assertEquals(2011, norwDate.getYear());
    assertEquals(10, norwDate.getMonthOfYear());
    assertEquals(30, norwDate.getDayOfMonth());
    assertEquals(2, norwDate.getHourOfDay());
    assertEquals(59, norwDate.getMinuteOfHour());
    assertEquals(0, norwDate.getSecondOfMinute());
    assertEquals(0, norwDate.getMillisOfSecond());
    assertEquals(2, britishDate.getOffset().getTotalSeconds() / 3600);

    assertEquals(2011, finnishDate.getYear());
    assertEquals(10, finnishDate.getMonthOfYear());
    assertEquals(30, finnishDate.getDayOfMonth());
    assertEquals(3, finnishDate.getHourOfDay());
    assertEquals(59, finnishDate.getMinuteOfHour());
    assertEquals(0, finnishDate.getSecondOfMinute());
    assertEquals(0, finnishDate.getMillisOfSecond());
    assertEquals(3, britishDate.getOffset().getTotalSeconds() / 3600);
}