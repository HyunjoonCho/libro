java
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.CompilerTestCase;
import com.google.javascript.jscomp.SourceFile;

public class Bug107Test extends CompilerTestCase {
    public void testIssue107() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setWarningLevel(WarningLevel.VERBOSE);
        options.setCompilationLevel(COMPILATION_LEVEL.SIMPLE_OPTIMIZATIONS);

        SourceFile sourceFile = new SourceFile("crash.js", "var test = {\n" +
                "  T: function() {}\n" +
                "};\n" +
                "\n" +
                "/**\n" +
                " * @interface\n" +
                " */\n" +
                "test.T = function() {};\n" +
                "\n" +
                "/**\n" +
                " * @constructor\n" +
                " * @implements {test.T}\n" +
                " */\n" +
                "test.A = function() {};\n" +
                "\n" +
                "/**\n" +
                " * @constructor\n" +
                " * @implements {test.T}\n" +
                " */\n" +
                "test.B = function() {};\n" +
                "\n" +
                "/**\n" +
                " * @constructor\n" +
                " */\n" +
                "test.X = function() {\n" +
                "  this.type = test.A;\n" +
                "  this.t = this.f();\n" +
                "};\n" +
                "\n" +
                "/**\n" +
                " * @return {test.T}\n" +
                " */\n" +
                "test.X.prototype.f = function() {\n" +
                "  if (this.type === test.A) {\n" +
                "    return new test.A();\n" +
                "  } else if (this.type === test.B) {\n" +
                "    return new test.B();\n" +
                "  }\n" +
                "};");

        try {
            compiler.compile(sourceFile, options);
            fail("Expected compilation to fail");
        } catch (RuntimeException e) {
            // Expected exception
        }
    }
}
