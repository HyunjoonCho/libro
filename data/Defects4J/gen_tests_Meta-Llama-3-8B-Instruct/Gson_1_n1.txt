java
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonSyntaxException;
import org.junit.Test;
import static org.junit.Assert.assertThrows;

public class GsonTypeVariableSerializationTest {

    @Test
    public void testSerializationAndDeserialization() {
        Gson gson = new GsonBuilder().create();

        Foo<Integer> foo = new Foo<>(1);
        String json = gson.toJson(foo);
        assertThrows(JsonSyntaxException.class, () -> gson.fromJson(json, Bar.class));

        String json2 = "{\"someField\":1}";
        assertThrows(JsonSyntaxException.class, () -> gson.fromJson(json2, Bar.class));
    }
}

class Foo<T> {
    private final T someField;

    public Foo(T value) {
        this.someField = value;
    }

    public boolean equals(Object o) {
        if (!(o instanceof Foo)) {
            return false;
        } else {
            return someField.equals(((Foo<T>) o).someField);
        }
    }
}

class Bar extends Foo<Integer> {
    public Bar(Integer i) {
        super(i);
    }
}
