java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationConfig;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class TestPrimitiveDiscrepancy {

    @Test
    public void testPrimitiveDiscrepancy() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.TYPE_IDENTITY_CHECK);

        // Test 1: Primitive to wrapper
        String json1 = mapper.writeValueAsString(new Integer(1));
        assertEquals("{\"value\":1}", json1);

        // Test 2: Wrapper to primitive
        String json2 = mapper.writeValueAsString(1);
        assertEquals("{\"value\":1}", json2);

        // Test 3: Primitive to primitive (should throw exception)
        try {
            mapper.writeValueAsString(1);
            fail("Expected exception");
        } catch (Exception e) {
            assertEquals("Can not serialize value of type java.lang.Integer as type java.lang.Integer", e.getMessage());
        }
    }
}
