java
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;
import org.junit.Ignore;
import java.io.FileInputStream;
import java.io.IOException;

public class AppTest {

    @Test
    @Ignore
    public void extractNoFileOwner() throws IOException {
        TarArchiveInputStream tarInputStream = new TarArchiveInputStream(new GzipCompressorInputStream(new FileInputStream(new File("/path/to/redis-dist-2.8.3_1-linux.tar.gz"))));
        TarArchiveEntry entry;
        while ((entry = tarInputStream.getNextTarEntry())!= null) {
            System.out.println(entry.getName());
            System.out.println(entry.getUserName() + "/" + entry.getGroupName());
            if (entry.getUserName() == null || entry.getGroupName() == null) {
                // Verify that the test fails with a specific exception
                try {
                    // Try to parse the entry
                    TarArchiveEntry parsedEntry = new TarArchiveEntry(entry.getName(), entry.getMode(), entry.getSize(), entry.getModifyTime(), entry.getAccessTime(), entry.getChangeTime(), entry.getUserName(), entry.getGroupName());
                } catch (IOException e) {
                    // Expected exception
                    return;
                }
                // This should not be reached
                fail("Expected IOException when parsing entry with null username/group");
            }
        }
    }
}
