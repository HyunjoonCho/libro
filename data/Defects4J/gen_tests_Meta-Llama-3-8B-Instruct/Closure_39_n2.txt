java
import org.junit.Test;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerInput;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Externs;
import com.google.javascript.jscomp.SourceFile;

public class ExternExportWithTypedefTest {
    @Test
    public void testExternExportWithTypedef() throws Exception {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setLanguageIn(ECmaScript5);
        CompilerInput input = new CompilerInput(SourceFile.fromCode("test.js", "typedef Foo {a: number}; function test(x: Foo) {return x.a;}; function test2(x:?Foo) {return x.a;};"));
        compiler.compile(input, options);
        Externs externs = compiler.getExterns();
        // Assert that the externs are invalid
    }
}
