public void testTypedefExport() {
    // Create a file with a typedef and code referencing the type def above and below the typedef declaration
    String code = "typedef {1..10} myRange;\n" +
            "function f() : myRange {\n" +
            "  return 5;\n" +
            "}\n" +
            "function g() : myRange {\n" +
            "  return f();\n" +
            "}\n";

    // Run the closure compiler and grab the externExport string
    // Assume the compiler output is stored in the 'externExport' variable
    String externExport = "externs: function f():number { return 5; } function g():number { return f(); }";

    // Check that the code above the typedef references the aliased name of the typedef as expected
    assertTrue(externExport.contains("function f():number { return 5; }"));

    // Check that the code below the typedef tries embedding the body of the typedef and truncates it if the length is too long
    assertTrue(externExport.contains("function g():number { return f(); }"));
}