java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class CorrelatedRandomVectorGeneratorTest {

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {new double[][]{
                        {0.0, 0.0, 0.0, 0.0, 0.0},
                        {0.013445532, 0.01039469, 0.0, 0.009881156, 0.010499559},
                        {0.01039469, 0.023006616, 0.0, 0.008196856, 0.010732709},
                        {0.009881156, 0.008196856, 0.019023866, 0.009210099, 0.019107243},
                        {0.010499559, 0.010732709, 0.009210099, 0.019107243, 0.019107243}
                }},
                new double[][]{
                        {0.013445532, 0.01039469, 0.009881156, 0.010499559},
                        {0.01039469, 0.023006616, 0.008196856, 0.010732709},
                        {0.009881156, 0.008196856, 0.019023866, 0.009210099},
                        {0.010499559, 0.010732709, 0.009210099, 0.019107243}
                }},
                new double[][]{
                        {0.013445047, 0.010478862, 0.009955904, 0.010529542},
                        {0.010478862, 0.022910522, 0.008610113, 0.011046353},
                        {0.009955904, 0.008610113, 0.019250975, 0.009464442},
                        {0.010529542, 0.011046353, 0.009464442, 0.019260317}
                }
        });
    }

    private double[][] matrix;

    public CorrelatedRandomVectorGeneratorTest(double[][] matrix) {
        this.matrix = matrix;
    }

    @Test
    public void testCorrelatedRandomVectorGenerator() {
        CorrelatedRandomVectorGenerator generator = new CorrelatedRandomVectorGenerator(matrix);
        assertEquals(4, generator.getRank());
    }
}
