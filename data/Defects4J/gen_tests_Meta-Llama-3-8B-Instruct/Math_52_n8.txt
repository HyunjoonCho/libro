public void testNumericalProblemsInRotationCreation() {
    double[] u1 = {-4921140.837095533, -2151209425044.0013E7, -890093.279426377};
    double[] u2 = {-2723858093872.4895E9, -2169664921341.876E9, 6749688708885.301E10};
    double[] v1 = {1, 0, 0};
    double[] v2 = {0, 0, 1};

    Quaternion rotation = new Quaternion(u1, u2, v1, v2);

    // expected results from manual computation with enhanced precision
    double expectedKx = 38514410.36093388;
    double expectedKy = -0.374075245201180409222711;
    double expectedKz = -1168590152.10599715208;
    double expectedC = 558382746168463196.7079627;

    // compare results with expected results
    assertNotEquals(expectedKx, rotation.getKx());
    assertNotEquals(expectedKy, rotation.getKy());
    assertNotEquals(expectedKz, rotation.getKz());
    assertNotEquals(expectedC, rotation.getC());
}