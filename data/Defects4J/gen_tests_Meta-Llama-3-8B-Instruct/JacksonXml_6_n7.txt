java
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonSerializer;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationFeature.WRITE_BINARY_AS_STRING;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.SerializerProvider.TypeResolverBuilder;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;

public class ToXmlGeneratorTest {

    @Test
    public void testWriteBinary() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        JsonGenerator gen = mapper.getFactory().createGenerator(bos);
        gen.setCodec(mapper);
        gen.setCodec(mapper);
        gen.setWriteBinaryAsStrings(true);
        gen.useDefaultPrettyPrinters();
        gen.writeStartObject();
        gen.writeStringField("key", "value");
        gen.writeBinaryField("binary", new ByteArrayInputStream(new byte[] {1, 2, 3}));
        gen.writeEndObject();
        gen.close();
        String xml = bos.toString();
        // verify the generated XML
    }
}
