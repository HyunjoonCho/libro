
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.type.TypeReference;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertNull;

public class AsPropertyTypeDeserializerTest {

    @Test
    public void testAsPropertyTypeDeserializerIgnoresAcceptEmptyStringAsNullObject() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT);

        BeanDeserializerFactory factory = mapper.getDeserializationConfig().getDeserializerFactory();
        TypeReference<Object> typeReference = new TypeReference<Object>() {};

        String json = "\"\"";
        Object deserialized = factory.createBeanDeserializer(typeReference, null, null).deserialize(json, mapper.getDeserializationContext());

        assertNull(deserialized);
    }
}
