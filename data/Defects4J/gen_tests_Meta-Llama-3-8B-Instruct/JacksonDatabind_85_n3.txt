java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationConfig;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class DateTimeSerializerTest {

    @Test
    public void testDateTimeSerializer() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd"));

        // Test with custom date format
        MyObject myObject = new MyObject("2022-01-01");
        String json = mapper.writeValueAsString(myObject);
        assertEquals("{\"date\":\"2022-01-01\"}", json);

        // Test with @JsonFormat annotation
        MyObjectWithAnnotation myObjectWithAnnotation = new MyObjectWithAnnotation("2022-02-02");
        String jsonWithAnnotation = mapper.writeValueAsString(myObjectWithAnnotation);
        assertEquals("{\"date\":\"2022-02-02\"}", jsonWithAnnotation);
    }
}

class MyObject {
    private String date;

    public MyObject(String date) {
        this.date = date;
    }

    public String getDate() {
        return date;
    }
}

@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
class MyObjectWithAnnotation {
    private String date;

    public MyObjectWithAnnotation(String date) {
        this.date = date;
    }

    public String getDate() {
        return date;
    }
}
