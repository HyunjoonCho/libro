java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class PosixParserTest {

    @Parameterized.Parameter(0)
    public String commandLine;

    @Parameterized.Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {"-t", "OK"},
                {"-target", "OK"},
                {"-t foobar.com", "processing selected target: foobar.com"},
                {"-target foobar.com", "processing selected target: arget"}
        });
    }

    @Test
    public void testPosixParser() {
        // Simulate the command line parsing
        // This is a simplified example, in a real-world scenario you would use a library like JCommander or Apache Commons CLI
        String[] args = commandLine.split(" ");
        String option = args[0];
        String value = (args.length > 1)? args[1] : null;

        if (option.equals("-t")) {
            assertEquals("processing selected target: " + value, "processing selected target: " + value);
        } else if (option.equals("-target")) {
            assertEquals("processing selected target: " + value, "processing selected target: arget");
        } else {
            assertEquals("Invalid command", "Invalid command");
        }
    }
}
