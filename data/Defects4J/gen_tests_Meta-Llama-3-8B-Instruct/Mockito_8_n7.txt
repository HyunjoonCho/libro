
import org.junit.Test;
import org.mockito.exceptions.verification.TooManyActualInvocations;

public class GenericMetadataSupportTest {

    @Test
    public void typeVariable_of_self_type() {
        GenericsSelfReference<String> selfReference = new GenericsSelfReference<String>() {
            @Override
            public GenericsSelfReference<String> self() {
                return this;
            }
        };

        GenericMetadataSupport genericMetadata = GenericMetadataSupport.inferFrom(GenericsSelfReference.class).resolveGenericReturnType(selfReference.getClass().getMethod("self").getGenericReturnType());
        genericMetadata.rawType();

        // This should not throw a StackOverflowError
    }

    interface GenericsSelfReference<T extends GenericsSelfReference<T>> {
        T self();
    }
}
