java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer;
import com.fasterxml.jackson.databind.type.CollectionType;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.fail;

public class StringCollectionDeserializerTest {

    @Test
    public void testStringCollectionDeserializerFailsWithCustomCollection() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        TypeFactory typeFactory = mapper.getTypeFactory();
        CollectionType collectionType = typeFactory.constructCollectionType(List.class, String.class);

        CustomStringCollection customCollection = new CustomStringCollection();
        customCollection.add("str1");
        customCollection.add("str2");

        String json = mapper.writeValueAsString(customCollection);

        try {
            customCollection = mapper.readValue(json, collectionType);
            fail("Expected failure");
        } catch (IOException e) {
            // Expected exception
        }
    }
}
