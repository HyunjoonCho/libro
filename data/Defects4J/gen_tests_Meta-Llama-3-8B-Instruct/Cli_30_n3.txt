
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Properties;
import java.util.Arrays;

import static org.junit.Assert.*;

@RunWith(Parameterized.class)
public class CommandLineParserTest {
    @Parameters
    public static Iterable<Object[]> data() {
        return Arrays.asList(new Object[][] {
            { true, true, "a", "a" },
            { true, false, "a", "a" },
            { false, true, "b", "b" },
            { false, false, "a", "a" },
            { true, true, "a", "b" } // This test should fail
        });
    }

    private boolean defaultOptionA;
    private boolean defaultOptionB;
    private String expectedOption;
    private String[] args;

    public CommandLineParserTest(boolean defaultOptionA, boolean defaultOptionB, String expectedOption, String[] args) {
        this.defaultOptionA = defaultOptionA;
        this.defaultOptionB = defaultOptionB;
        this.expectedOption = expectedOption;
        this.args = args;
    }

    @Test
    public void testCommandLineParser() {
        Properties defaultOptions = new Properties();
        defaultOptions.setProperty("optionA", String.valueOf(defaultOptionA));
        defaultOptions.setProperty("optionB", String.valueOf(defaultOptionB));

        // Your CommandLineParser class implementation
        CommandLineParser parser = new CommandLineParser();
        CommandLine commandLine = parser.parse(args, defaultOptions);

        assertEquals(expectedOption, commandLine.getOption("option"));
    }
}
