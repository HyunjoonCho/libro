java
import org.junit.Test;
import org.apache.commons.codec.binary.Base64;

import java.io.UnsupportedEncodingException;

public class B64Test {

    @Test
    public void testBase64Encoding() throws UnsupportedEncodingException {
        String s1 = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
        String s2 = "aaaaaaaaaa";
        String s3 = "a";

        byte[] b1 = s1.getBytes("UTF-8");
        byte[] b2 = s2.getBytes("UTF-8");
        byte[] b3 = s3.getBytes("UTF-8");

        byte[] result;
        String expected1 = "YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ==";
        String expected2 = "YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ==";
        String expected3_1 = "YWFhYWFhYWFhYQ==";
        String expected3_2 = "YWFhYWFhYWFhYQ==";

        result = Base64.encodeBase64(b1);
        assertEquals(expected1, new String(result, "UTF-8"));

        Base64 b64 = new Base64();
        result = b64.encode(b1);
        assertEquals(expected1, new String(result, "UTF-8"));

        result = Base64.encodeBase64(b2);
        assertEquals(expected2, new String(result, "UTF-8"));

        result = b64.encode(b2);
        assertEquals(expected2, new String(result, "UTF-8"));

        result = Base64.encodeBase64(b3);
        assertEquals(expected3_1, new String(result, "UTF-8"));

        result = b64.encode(b3);
        assertEquals(expected3_2, new String(result, "UTF-8"));
    }
}
