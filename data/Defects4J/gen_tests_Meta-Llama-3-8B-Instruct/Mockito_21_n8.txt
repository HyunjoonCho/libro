java
import org.junit.Test;
import org.mockito.Mockito;
import org.mockito.exceptions.verification.WantedButNotInvokedException;

import static org.junit.Assert.fail;

public class MockitoAbstractClassTest {

    @Test
    public void testAbstractClass() {
        // Arrange
        abstract class UserAccount implements UserAccountInterface {
            private List<String> emails = new ArrayList<>();

            @Override
            public void addEmail(String email) {
                emails.add(email);
            }

            @Override
            public List<String> getEmails() {
                return ImmutableList.copyOf(emails);
            }
        }

        UserAccount userAccount = Mockito.mock(UserAccount.class);

        // Act
        userAccount.addEmail("email1");
        userAccount.addEmail("email2");

        // Assert
        List<String> emails = userAccount.getEmails();
        Mockito.verify(userAccount).addEmail("email1");
        Mockito.verify(userAccount).addEmail("email2");

        // Verify
        try {
            Mockito.verify(userAccount).addEmail("email3");
            fail("Expected 'addEmail' to be called with 'email3', but it was not");
        } catch (WantedButNotInvokedException e) {
            // Expected
        }
    }
}
