java
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.fail;

public class JacksonTest {

    private final ObjectMapper mapper = new ObjectMapper()
           .enableDefaultTyping()
           .enable(MapperFeature.AUTO_DETECT_GETTERS)
           .enable(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS)
           .disable(MapperFeature.USE_GETTERS_AS_SETTERS)
           .disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)
           .enable(SerializationFeature.INDENT_OUTPUT)
           .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

    @Test
    public void testReadTree() {
        String json = "{\"bar\" : \"bar\"}";
        try {
            JsonNode jsonNode = mapper.readTree(json);
            fail("Expected JsonMappingException");
        } catch (JsonMappingException e) {
            // expected exception
        }
    }

    @Test
    public void testValueToTree() {
        Foo foo = new Foo("bar");
        try {
            JsonNode jsonNode = mapper.valueToTree(foo);
            fail("Expected JsonMappingException");
        } catch (JsonMappingException e) {
            // expected exception
        }
    }

    public static class Foo {
        private String bar;

        public Foo() {
        }

        public Foo(String bar) {
            this.bar = bar;
        }

        public String getBar() {
            return bar;
        }

        public void setBar(String bar) {
            this.bar = bar;
        }
    }
}
