java
public void testWideBoundsToCMAESOptimizer() {
    // Create a fitness function
    FitnessFunction ff = new FitnessFunction() {
        @Override
        public double evaluate(Individual individual) {
            double[] params = individual.getGenes();
            // Simulate a fitness calculation
            return params[0] + params[1];
        }
    };

    // Create a CMAESOptimizer with wide bounds
    CMAESOptimizer optimizer = new CMAESOptimizer();
    optimizer.setLowerBound(-Double.MAX_VALUE);
    optimizer.setUpperBound(Double.MAX_VALUE);

    // Create an individual with random genes
    Individual individual = new Individual(2);

    // Try to optimize the individual
    optimizer.optimize(individual, ff);

    // Check if the parameters passed to the fitness function are NaN
    double[] params = individual.getGenes();
    assertEquals(Double.isNaN(params[0]), true);
    assertEquals(Double.isNaN(params[1]), true);
}
