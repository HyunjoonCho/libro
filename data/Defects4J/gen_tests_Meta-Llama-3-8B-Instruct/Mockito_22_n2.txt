
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.mockito.stubbing.Answer;

import static org.mockito.Mockito.when;

import java.lang.reflect.Type;
import java.util.function.Supplier;

import static org.junit.Assert.assertThrows;

@RunWith(MockitoJUnitRunner.class)
public class MockitoGenericsTest {

    @Mock
    I i;

    @Test
    public void test() throws Exception {
        when(i.m(Boolean.class)).thenAnswer(new Answer<Supplier<?>>() {
            @Override
            public Supplier<?> answer(InvocationOnMock invocation) throws Throwable {
                return () -> "not a string";
            }
        });

        // ClassCastException should be thrown when calling get() method
        assertThrows(ClassCastException.class, () -> i.m(Boolean.class).get());
    }

    interface I {
        <T> Supplier<T> m(Class<T> type);
    }
}
