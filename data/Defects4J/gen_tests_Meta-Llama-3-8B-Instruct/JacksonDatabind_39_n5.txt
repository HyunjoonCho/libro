java
public void testJacksonNotContinueToParseAfterDeserializationFeatureFailOnInvalidSubtypeError() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE);
    mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);
    mapper.disable(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES);

    CallRecord call = mapper.readValue("{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}", CallRecord.class);
    assertEquals(0.0, call.getVersion());
    assertEquals("123", call.getApplication());
    assertEquals("location1", call.getItem().getLocation());
    assertEquals("location1", call.getItem2().getLocation());

    call = mapper.readValue("{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}}", CallRecord.class);
    assertEquals(0.0, call.getVersion());
    assertEquals("123", call.getApplication());
    assertNull(call.getItem());
    assertNull(call.getItem2());

    call = mapper.readValue("{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}, \"version\":0.0,\"application\":\"123\"}", CallRecord.class);
    assertEquals(0.0, call.getVersion());
    assertEquals("123", call.getApplication());
    assertEquals("location1", call.getItem().getLocation());
    assertNull(call.getItem2());
}
