java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.fail;

@RunWith(Parameterized.class)
public class WeightTest {

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {1000},
                {2000},
                {41200} // this should fail due to memory exhaustion
        });
    }

    private int n;

    public WeightTest(int n) {
        this.n = n;
    }

    @Test
    public void testLargeNumberWeights() {
        // Create a large number of weights
        double[] weights = new double[n];
        for (int i = 0; i < n; i++) {
            weights[i] = i;
        }

        // This should fail due to memory exhaustion when n is large
        // Your code to test the multivariate vector optimizers goes here
        fail("This test should fail due to memory exhaustion");
    }
}
