java
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertThrows;
import static org.junit.Assert.assertEquals;

public class JsonAnyGetterTest {

    @Test
    public void testJsonAnyGetterWithJsonSerialize() throws IOException {
        // Given
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        // When
        MyObject obj = new MyObject();
        obj.setParameters(new HashMap<>());

        // Then
        assertThrows(IOException.class, () -> mapper.writeValueAsString(obj));
    }

    @JsonAnyGetter
    @JsonSerialize(using = MySerializer.class)
    public Map<String, String> getParameters() {
        return new HashMap<>();
    }

    public static class MyObject {
        private Map<String, String> parameters;

        public Map<String, String> getParameters() {
            return parameters;
        }

        public void setParameters(Map<String, String> parameters) {
            this.parameters = parameters;
        }
    }
}
