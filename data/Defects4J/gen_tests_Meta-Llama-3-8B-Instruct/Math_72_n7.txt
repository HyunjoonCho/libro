java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.function.BrentSolver;
import org.apache.commons.math3.analysis.function.ScalarFieldUnivariateFunction;

import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class BrentSolverTest {

    @Test
    public void testBrentSolverReturnsWrongValueIfBracketEndpointIsRoot() {
        // Create a test function that returns 0 at the specified points
        final UnivariateFunction function = new ScalarFieldUnivariateFunction() {
            @Override
            public double value(double x) {
                if (x == 1) {
                    return 0;
                } else {
                    return 1;
                }
            }
        };

        // Set up the solver
        BrentSolver solver = new BrentSolver(function);
        double min = 0;
        double max = 2;

        // Solve the function
        double result = solver.solve(min, max);

        // Assert that the result is incorrect
        assertEquals(1, result, 0.001);
    }
}
