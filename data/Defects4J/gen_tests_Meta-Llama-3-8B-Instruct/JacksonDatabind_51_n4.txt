java
@Test
public void testGenericTypeIgnored() throws JsonProcessingException {
    // Create a JavaType for a generic type
    JavaType javaType = new TypeFactory.StdTypeFactory().constructType(List.class, Collection.class, String.class);

    // Create an object mapper
    ObjectMapper mapper = new ObjectMapper();

    // Register the type id resolver
    mapper.setTypeIdResolver(new MyTypeIdResolver());

    // Create a bean with a field of the generic type
    MyBean bean = new MyBean();
    bean.setList(new ArrayList<>());

    // Serialize the bean to a JSON string
    String json = mapper.writeValueAsString(bean);

    // The JSON string should contain the generic type information
    assertEquals("{\"list\":[]}", json);
}

// A simple class with a generic field
class MyBean {
    private List<String> list;

    public List<String> getList() {
        return list;
    }

    public void setList(List<String> list) {
        this.list = list;
    }
}
