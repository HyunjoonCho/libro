java
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.JSTree;
import com.google.javascript.jscomp.SourceFile;

public class TestConstTypeCast {
  public void testConstTypeCast() throws Exception {
    String code = """
      /**
       * Class defining an interface with two numbers.
       * @interface
       */
      function TwoNumbers() {}

      /**
       * @type number
       */
      TwoNumbers.prototype.first;

      /**
       * @type number
       */
      TwoNumbers.prototype.second;

      /**
       * @const
       */
      var SOME_DEFAULT = /**
       * @type {TwoNumbers}
       */ ({first: 1, second: 2});

      /**
       * Class with a two number member.
       * @constructor
       */
      function HasTwoNumbers() {
        /**
         * @type {TwoNumbers}
         */
        this.twoNumbers = this.getTwoNumbers();
      }

      /**
       * Get the default two numbers.
       * @return {TwoNumbers}
       */
      HasTwoNumbers.prototype.getTwoNumbers = function() {
        return SOME_DEFAULT;
      };
      """;

    Compiler compiler = new Compiler();
    SourceFile sourceFile = compiler.compile(code);

    JSTree tree = sourceFile.parseTree();
    JSError[] errors = compiler.getErrors();

    // Assert that the compiler throws a warning about the type cast
    assert errors.length > 0;
  }
}
