java
public void testDefaultOptionsNotProcessed() {
    Options opts = new Options();
    opts.addOption("a", false, "toggle -a");
    opts.addOption("c", "c", false, "toggle -c");
    opts.addOption(OptionBuilder.hasOptionalArg().create('e'));

    Properties properties = new Properties();
    properties.setProperty("a", "false");

    Commandline cmd = parser.parse(opts, null, properties);
    assertFalse(cmd.hasOption("a")); // Should be true
    assertFalse(cmd.hasOption("c")); // Should be true
    assertFalse(cmd.hasOption("e")); // Should be false, since "0" is a valid argument for this option
}

public void testDefaultOptionsNotProcessedWithOptionalArg() {
    Options opts = new Options();
    opts.addOption("a", false, "toggle -a");
    opts.addOption("c", "c", false, "toggle -c");
    opts.addOption(OptionBuilder.hasOptionalArg().create('e'));

    Properties properties = new Properties();
    properties.setProperty("e", "0");

    Commandline cmd = parser.parse(opts, null, properties);
    assertTrue(cmd.hasOption("a")); // Should be false
    assertTrue(cmd.hasOption("c")); // Should be false
    assertTrue(cmd.hasOption("e")); // Should be true, since "0" is a valid argument for this option
}

public void testDefaultOptionsNotProcessedWithInvalidArgument() {
    Options opts = new Options();
    opts.addOption("a", false, "toggle -a");
    opts.addOption("c", "c", false, "toggle -c");
    opts.addOption(OptionBuilder.hasOptionalArg().create('e'));

    Properties properties = new Properties();
    properties.setProperty("e", "abc");

    Commandline cmd = parser.parse(opts, null, properties);
    assertTrue(cmd.hasOption("a")); // Should be false
    assertTrue(cmd.hasOption("c")); // Should be false
    assertTrue(cmd.hasOption("e")); // Should be true, since "abc" is a valid argument for this option
}

public void testDefaultOptionsNotProcessedWithNoArgument() {
    Options opts = new Options();
    opts.addOption("a", false, "toggle -a");
    opts.addOption("c", "c", false, "toggle -c");
    opts.addOption(OptionBuilder.hasOptionalArg().create('e'));

    Properties properties = new Properties();
    properties.setProperty("e", "");

    Commandline cmd = parser.parse(opts, null, properties);
    assertTrue(cmd.hasOption("a")); // Should be false
    assertTrue(cmd.hasOption("c")); // Should be false
    assertTrue(cmd.hasOption("e")); // Should be true, since an empty string is a valid argument for this option
}
