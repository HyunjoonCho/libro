java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.apache.commons.math3.optim.CMAESOptimizer;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.util.FastMath;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class CMAESOptimizerTest {

    @Test
    public void testCMAESOptimizerBounds() {
        double[] lowerBound = new double[]{0};
        double[] upperBound = new double[]{1};
        CMAESOptimizer optimizer = new CMAESOptimizer(1, 1e-5, 1e-8);
        List<PointValuePair> bounds = new ArrayList<>();
        bounds.add(new PointValuePair(lowerBound, 0));
        bounds.add(new PointValuePair(upperBound, 0));
        optimizer.optimize(new MyFunction(), bounds);
        assertEquals(0, optimizer.getResult()[0], 1e-8);
    }
}

class MyFunction implements org.apache.commons.math3.optim.Function {
    @Override
    public double value(double[] point) {
        return point[0];
    }
}
