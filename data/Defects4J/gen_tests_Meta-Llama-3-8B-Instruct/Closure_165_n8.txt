java
import org.junit.Test;

public class RecordTypeTest {
    @Test(expected = CompilationError.class)
    public void testRecordTypeProperties() {
        // Define a record type with a property "name"
        @typedef({name: String, id: Number})
        var RecordType1;

        // Define a function that takes a RecordType1 as parameter
        var func = function(rec) {
            alert(rec.name2); // This should throw a compilation error
        };

        // Call the function with an object that does not have a "name2" property
        func({name: 'jim', id: 0});
    }

    @Test
    public void testRecordTypePropertiesFixed() {
        // Define a record type with a property "name"
        @typedef({name: String, id: Number})
        var RecordType1;

        // Define a record type with a property "name2"
        @typedef({name2: String})
        var RecordType2;

        // Define a function that takes a RecordType1 as parameter
        var func = function(rec) {
            alert(rec.name2); // This should not throw a compilation error
        };

        // Call the function with an object that does not have a "name2" property
        func({name: 'jim', id: 0});
    }
}
