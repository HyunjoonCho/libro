
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

import java.util.Iterator;
import java.util.List;
import java.util.stream.Collectors;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

@RunWith(MockitoJUnitRunner.class)
public class TestIterableMock {

    @Test
    public void testIterableMockReturnsEmptyIterable() {
        @Mock
        Iterable<Integer> iterable = spy(new Iterable<Integer>() {
            @Override
            public Iterator<Integer> iterator() {
                return new Iterator<Integer>() {
                    @Override
                    public boolean hasNext() {
                        return false;
                    }

                    @Override
                    public Integer next() {
                        return null;
                    }
                };
            }
        });

        List<Integer> result = iterable.stream().collect(Collectors.toList());
        assertTrue(result.isEmpty());
    }
}
