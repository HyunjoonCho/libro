
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.List;

import picocli.CommandLine;
import picocli.CommandLine.Option;

@RunWith(Parameterized.class)
public class GroupOptionTest {
    @Parameters
    public static List<Object[]> data() {
        return Arrays.asList(new Object[][]{
            {true, true, true},
            {true, false, true},
            {false, true, false},
            {false, false, false},
        });
    }

    @Parameter(0)
    public boolean groupA;
    @Parameter(1)
    public boolean groupB;
    @Parameter(2)
    public boolean expected;

    @Test
    public void test() {
        CommandLine cmd = new CommandLine(new TestCommand());
        cmd.addOption(new Option("-a", "groupA"));
        cmd.addOption(new Option("-b", "groupB"));
        cmd.addOption(new Option("-B", "groupB").type(GenericType.group(GroupA.class));

        if (groupA) {
            cmd.addOption(new Option("-A", "groupA"));
        }

        boolean hasGroupB = cmd.hasOption("-B");
        boolean hasGroupA = cmd.hasOption("-A");
        boolean hasGroupBChild = cmd.hasOption("-b");

        assertEquals(expected, hasGroupB);
    }
}
