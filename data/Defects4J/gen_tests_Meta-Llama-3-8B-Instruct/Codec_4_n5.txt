java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.apache.commons.codec.binary.Base64;

import java.io.UnsupportedEncodingException;

import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class Base64Test {

    @Test
    public void testInstanceEncodeAppendsCRLF() throws UnsupportedEncodingException {
        Base64 b64 = new Base64();
        String s1 = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
        String s2 = "aaaaaaaaaa";
        String s3 = "a";
        
        byte[] b1 = s1.getBytes("UTF-8");
        byte[] b2 = s2.getBytes("UTF-8");
        byte[] b3 = s3.getBytes("UTF-8");

        byte[] result;
        result = Base64.encodeBase64(b1);
        assertEquals("YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ==", new String(result, "UTF-8"));
        result = b64.encode(b1);
        assertEquals("YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ==\r\n", new String(result, "UTF-8"));

        result = Base64.encodeBase64(b2);
        assertEquals("YWFhYWFhYWFhYQ==", new String(result, "UTF-8"));
        result = b64.encode(b2);
        assertEquals("YWFhYWFhYWFhYQ==\r\n", new String(result, "UTF-8"));

        result = Base64.encodeBase64(b3);
        assertEquals("YQ==", new String(result, "UTF-8"));
        result = b64.encode(b3);
        assertEquals("YQ==\r\n", new String(result, "UTF-8"));
    }
}
