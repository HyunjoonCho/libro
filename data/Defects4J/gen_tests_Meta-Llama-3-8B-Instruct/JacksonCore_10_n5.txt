java
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.lang.reflect.Field;
import java.nio.charset.StandardCharsets;

import static org.junit.Assert.fail;

public class Bug107Test {

    @Test
    public void testArrayIndexOutOfBoundsException() {
        try {
            ObjectMapper objectMapper = new ObjectMapper();
            injectReproducibleSeed(objectMapper);
            objectMapper.readValue("{\"expectedGCperPosition\": null, \"1\": null, \"2\": null, \"3\": null}", Map.class);
            fail("Expected ArrayIndexOutOfBoundsException");
        } catch (Exception e) {
            if (!(e instanceof ArrayIndexOutOfBoundsException)) {
                fail("Expected ArrayIndexOutOfBoundsException, but got " + e.getMessage());
            }
        }
    }

    private void injectReproducibleSeed(ObjectMapper objectMapper) throws Exception {
        JsonFactory jsonFactory = objectMapper.getFactory();
        Field byteSymbolCanonicalizerField = JsonFactory.class.getDeclaredField("_byteSymbolCanonicalizer");
        byteSymbolCanonicalizerField.setAccessible(true);

        Method factoryMethod = ByteQuadsCanonicalizer.class.getDeclaredMethod("createRoot", int.class);
        factoryMethod.setAccessible(true);
        byteSymbolCanonicalizerField.set(jsonFactory, factoryMethod.invoke(null, -523743345));
    }
}
