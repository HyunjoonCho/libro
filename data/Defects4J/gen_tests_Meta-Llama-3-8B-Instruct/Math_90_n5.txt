java
public void testAddValueShouldThrowExceptionForNonComparableObject() {
    Frequency f = new Frequency();
    Object obj = new Object();
    try {
        f.addValue(obj);
        fail("Expected IllegalArgumentException for non-Comparable object");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }
}

public void testGetCountShouldReturnZeroForNonComparableObject() {
    Frequency f = new Frequency();
    Object obj = new Object();
    f.addValue(obj);
    assertEquals(0, f.getCount(obj));
}

public void testGetPctShouldReturnZeroForNonComparableObject() {
    Frequency f = new Frequency();
    Object obj = new Object();
    f.addValue(obj);
    assertEquals(0.0, f.getPct(obj));
}

public void testGetCumFreqShouldThrowExceptionForNonComparableObject() {
    Frequency f = new Frequency();
    Object obj = new Object();
    try {
        f.getCumFreq(obj);
        fail("Expected ClassCastException for non-Comparable object");
    } catch (ClassCastException e) {
        // Expected exception
    }
}

public void testGetCumPctShouldThrowExceptionForNonComparableObject() {
    Frequency f = new Frequency();
    Object obj = new Object();
    try {
        f.getCumPct(obj);
        fail("Expected ClassCastException for non-Comparable object");
    } catch (ClassCastException e) {
        // Expected exception
    }
}
