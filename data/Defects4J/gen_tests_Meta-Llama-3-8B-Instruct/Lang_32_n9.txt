java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import java.lang.reflect.Field;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

@RunWith(SpringRunner.class)
@SpringBootTest
public class MemoryLeakTest {

    @Test
    public void testMemoryLeak() {
        // Create an instance of ToStringStyle
        org.apache.commons.lang3.builder.ToStringStyle toStringStyle = new org.apache.commons.lang3.builder.ToStringStyle();

        // Get the thread local field
        Field threadLocalField = org.apache.commons.lang3.builder.ToStringStyle.class.getDeclaredField("THREAD_LOCAL");
        threadLocalField.setAccessible(true);

        // Get the thread local instance
        ThreadLocal<org.apache.commons.lang3.builder.ToStringStyle> threadLocal = (ThreadLocal<org.apache.commons.lang3.builder.ToStringStyle>) threadLocalField.get(null);

        // Check if the thread local is not null
        assertNotNull(threadLocal.get());

        // Restart the application
        // This will reload the web application
        // The thread local should be cleared after the application restart
        assertNull(threadLocal.get());
    }
}
