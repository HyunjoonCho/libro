java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

@RunWith(JUnit4.class)
public class CompilerTest {
    @Test
    public void testDifferentOutput() {
        String input = "var foreignObject = gfx.parentNode.parentNode;\n" +
                "var parentContainer = foreignObject.parentNode.parentNode;";
        String expectedOutput = "if(b){if(a=b.parentNode.parentNode,b=a.parentNode.parentNode,null!==b)";
        String commandLineOutput = "var b=a=a.parentNode.parentNode;";

        // Test the command line output
        String commandLineOutputActual = runCompiler(input, "compiler.jar --js");
        assertNotEquals(expectedOutput, commandLineOutputActual);

        // Test the web UI output
        String webUiOutput = runCompiler(input, "http://closure-compiler.appspot.com/home");
        assertEquals(expectedOutput, webUiOutput);
    }

    private String runCompiler(String input, String compiler) {
        // Implement the logic to run the compiler with the given input and compiler
        // For example, you can use a ProcessBuilder to execute the command
        // and get the output as a string
        // This implementation is not provided as it depends on the specific compiler and environment
    }
}
