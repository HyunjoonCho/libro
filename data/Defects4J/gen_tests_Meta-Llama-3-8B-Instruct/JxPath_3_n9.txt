java
import org.jxpath.JXPathContext;
import org.jxpath.helpers.BeanContext;
import org.jxpath.util.BeanContextImpl;
import org.jxpath.util.BeanReference;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.Test;

public class JXPathTest {

    @Test
    public void testJXPathCreatePath() {
        Map map = new HashMap();
        map.put("a", null);

        JXPathContext pathContext = JXPathContext.newContext(map);
        pathContext.setFactory(new CustomFactory());

        pathContext.createPath("a/b[1]/c");
        pathContext.createPath("a/b[2]/c"); // expected to throw a StackOverflowError
    }

    private class CustomFactory implements JXPathContext.Factory {
        @Override
        public boolean createObject(JXPathContext context, Object parent, String name, int index) {
            if (parent instanceof Map) {
                Map parentMap = (Map) parent;
                if (index > -1) {
                    List list = (List) parentMap.get(name);
                    if (list == null) {
                        list = new ArrayList();
                    }
                    int size = list.size();
                    for (int i = size; i <= index; i++) {
                        list.add(i, new HashMap());
                    }
                    parentMap.put(name, list);
                } else {
                    parentMap.put(name, new HashMap());
                }
                return true;
            }
            return false;
        }
    }
}
