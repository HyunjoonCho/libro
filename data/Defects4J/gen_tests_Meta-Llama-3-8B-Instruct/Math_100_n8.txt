java
import org.junit.Test;
import org.apache.commons.math3.estimation.AbstractEstimator;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertThrows;

public class AbstractEstimatorTest {

    @Test
    public void testGetCovariancesCrashWhenHavingBoundParameters() {
        // Create an estimator with bound parameters
        AbstractEstimator estimator = new AbstractEstimator() {
            @Override
            public int getParameterCount() {
                return 3;
            }

            @Override
            public double[] getInitialParameterValues() {
                return new double[]{1, 2, 3};
            }

            @Override
            public double[] getLowerParameterBounds() {
                return new double[]{0, 0, 0};
            }

            @Override
            public double[] getUpperParameterBounds() {
                return new double[]{4, 4, 4};
            }
        };

        // Call getCovariances() which should throw an ArrayIndexOutOfBoundsException
        assertThrows(ArrayIndexOutOfBoundsException.class, estimator::getCovariances);
    }

    @Test
    public void testGuessParametersErrorsCrashWhenHavingBoundParameters() {
        // Create an estimator with bound parameters
        AbstractEstimator estimator = new AbstractEstimator() {
            @Override
            public int getParameterCount() {
                return 3;
            }

            @Override
            public double[] getInitialParameterValues() {
                return new double[]{1, 2, 3};
            }

            @Override
            public double[] getLowerParameterBounds() {
                return new double[]{0, 0, 0};
            }

            @Override
            public double[] getUpperParameterBounds() {
                return new double[]{4, 4, 4};
            }
        };

        // Call guessParametersErrors() which should throw an ArrayIndexOutOfBoundsException
        assertThrows(ArrayIndexOutOfBoundsException.class, estimator::guessParametersErrors);
    }
}
