java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertArrayEquals;

@RunWith(Parameterized.class)
public class Base64EncodeTest {

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ==", "YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ=="},
                {"aaaaaaaaaa", "YWFhYWFhYWFhYQ==", "YWFhYWFhYWFhYQ=="},
                {"a", "YQ==", "YQ=="}
        });
    }

    private String input;
    private String expectedStatic;
    private String expectedInstance;

    public Base64EncodeTest(String input, String expectedStatic, String expectedInstance) {
        this.input = input;
        this.expectedStatic = expectedStatic;
        this.expectedInstance = expectedInstance;
    }

    @Test
    public void testBase64Encode() throws Exception {
        byte[] inputBytes = input.getBytes("UTF-8");
        byte[] staticResult = Base64.encodeBase64(inputBytes);
        byte[] instanceResult = new Base64().encode(inputBytes);
        assertArrayEquals(expectedStatic.getBytes("UTF-8"), staticResult);
        assertArrayEquals(expectedInstance.getBytes("UTF-8"), instanceResult);
    }
}
