java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.type.TypeReference;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Arrays;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class JsonValueTest {

    private ObjectMapper mapper;

    public JsonValueTest() {
        this.mapper = new ObjectMapper();
        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
        mapper.enableDefaultTyping();
    }

    @Test
    public void testJsonValue() throws IOException {
        CommandAPDU commandAPDU = new CommandAPDU(new byte[] {1, 2, 3});
        Writer writer = new StringWriter();
        mapper.writeValue(writer, commandAPDU);
        String json = writer.toString();
        assertNotNull(json);
        assertEquals("[\"[B\",\"AKQEAAnw8fLz9AAAAgA=\"]", json);
    }

    public static class CommandAPDU {
        private byte[] apdu;

        @JsonValue
        public byte[] getBytes() {
            return apdu.clone();
        }

        @JsonCreator
        public CommandAPDU(@JsonProperty("bytes") byte[] apdu) {
            this.apdu = apdu.clone();
        }
    }
}
