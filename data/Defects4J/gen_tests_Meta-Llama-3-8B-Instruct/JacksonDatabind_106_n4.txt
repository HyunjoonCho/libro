java
public void testTreeTraversingParser() {
    ObjectMapper mapper = new ObjectMapper();
    IntClass obj = new IntClass();
    
    // Test cases from the bug report
    String[] testCases = new String[] {
        "{\"x\": 0}", "{\"x\": 10}", "{\"x\": 10000}", "{\"x\": 10000000000L}", "{\"x\": 0.1}", "{\"x\": 2147483648}", "{\"x\": 2147483649}", "{\"x\": -2147483649}", "{\"x\": -4294967295}", "{\"x\": true}", "{\"x\": {}}", "{\"x\": []}", "{\"x\": [0]}",
        "{\"x\": \"0\"}", "{\"x\": \"10\"}", "{\"x\": \"10000\"}", "{\"x\": \"10000000000\"}", "{\"x\": \"0.1\"}", "{\"x\": \"1.9\"}", "{\"x\": \"1.9999999999999999\"}", "{\"x\": \"true\"}", "{\"x\": \"{}`}", "{\"x\": \"[]\"}", "{\"x\": \"[0]\"}"
    };

    for (String testCase : testCases) {
        try {
            JsonNode tree = mapper.readTree(testCase);
            IntClass fromTree = mapper.readerFor(IntClass.class).readValue(tree);
            int value = fromTree.x;
            // Check the value is within the expected range
            if (value > Integer.MAX_VALUE || value < Integer.MIN_VALUE) {
                fail("Value " + value + " is out of range");
            }
        } catch (IOException e) {
            fail("Error parsing JSON: " + e.getMessage());
        }
    }
}
