
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.jsonFormat.Shape;
import org.junit.Test;

import java.math.BigDecimal;
import java.math.BigInteger;

import static org.junit.Assert.assertEquals;

public class JacksonTest {

    @Test
    public void testWriteBigDecimalAsPlainIgnoredWithJsonFormat() throws Exception {
        ObjectMapper mapper = new ObjectMapper()
               .configure(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN, true)
               .configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);

        TestObject test = new TestObject(new BigDecimal("0.0000000005"));

        String json = mapper.writeValueAsString(test);

        assertEquals("{\"value\":\"5.0E-10\"}", json);
    }
}

class TestObject {
    @JsonFormat(shape = Shape.STRING)
    private BigDecimal value;

    public TestObject(BigDecimal value) {
        this.value = value;
    }
}
