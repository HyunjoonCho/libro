java
public void testIssue107() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE);
    mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);
    mapper.disable(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES);

    CallRecord call = mapper.readValue("{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}", CallRecord.class);

    assertEquals(0.0f, call.version);
    assertEquals("123", call.application);
    assertEquals("location1", call.item.location);
    assertEquals("location1", call.item2.location);

    call = mapper.readValue("{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}", CallRecord.class);
    assertEquals(0.0f, call.version);
    assertEquals("123", call.application);
    assertNull(call.item);
    assertNull(call.item2);

    call = mapper.readValue("{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}, \"version\":0.0,\"application\":\"123\"}", CallRecord.class);
    assertEquals(0.0f, call.version);
    assertEquals("123", call.application);
    assertEquals("location1", call.item.location);
    assertNull(call.item2);
}
