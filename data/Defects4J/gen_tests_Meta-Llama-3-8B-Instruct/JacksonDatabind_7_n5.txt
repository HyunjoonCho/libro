java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.util.TokenBuffer;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

public class TestJsonCreator {
    @Test
    public void testJsonCreator() throws Exception {
        TokenBuffer buffer = new TokenBuffer();
        buffer.writeStartObject();
        buffer.writeStringField("a", "1");
        buffer.writeNullField("b");
        buffer.writeEndObject();

        ObjectMapper mapper = new ObjectMapper();
        Value value = mapper.treeToValue(buffer.asToken(), Value.class);

        // assert the buffer state
        Object[] expected = {TokenBuffer.StartObject, TokenBuffer.FIELD_NAME, TokenBuffer.VALUE_NUMBER_INT, TokenBuffer.FIELD_NAME, TokenBuffer.VALUE_NULL, TokenBuffer.END_OBJECT};
        Object[] actual = buffer.asToken();
        assertArrayEquals(expected, actual);
    }
}

class Value {
    @JsonCreator
    public static Value from(TokenBuffer buffer) {
        // some logic here
        return null;
    }
}
