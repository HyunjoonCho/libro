java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class NormalDistributionTest {

    @Parameters
    public static Iterable<Object[]> data() {
        return Arrays.asList(new Object[][]{
            {0.9772498680518209, 2.0},
            {0.9986501019683698, 3.0},
            {0.9999683287581673, 4.0},
        });
    }

    private double probability;
    private double expectedValue;

    public NormalDistributionTest(double probability, double expectedValue) {
        this.probability = probability;
        this.expectedValue = expectedValue;
    }

    @Test
    public void testInverseCumulativeProbability() {
        DistributionFactory factory = new DistributionFactory(); // assuming a concrete implementation of DistributionFactory
        NormalDistribution normal = factory.createNormalDistribution(0, 1);
        double result = normal.inverseCumulativeProbability(probability);
        assertEquals(expectedValue, result, 0.001);
    }
}
