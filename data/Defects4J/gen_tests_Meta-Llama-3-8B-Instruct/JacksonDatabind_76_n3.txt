java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.io.IOException;
import java.io.StringWriter;
import java.util.Arrays;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

@RunWith(Parameterized.class)
public class DeserializeBuilderTest {

    @Parameters
    public static Iterable<Object[]> data() {
        return Arrays.asList(new Object[][]{
            { "{\"emp_age\": 30, \"emp_id\": 1234}", "{\"emp_id\": 1234, \"emp_age\": 30, \"emp_first_name\": \"John\", \"emp_last_name\": \"Doe\"}"},
            { "{\"emp_age\": 30, \"emp_first_name\": \"John\", \"emp_last_name\": \"Doe\", \"emp_id\": 1234}", "{\"emp_id\": 1234, \"emp_age\": 30, \"emp_first_name\": \"John\", \"emp_last_name\": \"Doe\"}"},
            { "{\"emp_age\": 30, \"emp_first_name\": \"John\", \"emp_last_name\": \"Doe\"}", "{\"emp_age\": 0, \"emp_id\": 1234, \"emp_first_name\": null, \"emp_last_name\": null}"},
        });
    }

    private String jsonInput;
    private String expectedJson;

    public DeserializeBuilderTest(String jsonInput, String expectedJson) {
        this.jsonInput = jsonInput;
        this.expectedJson = expectedJson;
    }

    @Test
    public void testDeserializeBuilder() throws JsonProcessingException, IOException {
        ObjectMapper mapper = new ObjectMapper();
        Employee emp = mapper.readValue(jsonInput, Employee.class);
        assertEquals(emp.getAge(), 30);
        assertEquals(emp.getId(), 1234);
        assertNotNull(emp.getName());
        String actualJson = mapper.writeValueAsString(emp);
        assertEquals(actualJson, expectedJson);
    }
}
