public void testCompilerRemovesFunctionProperties() {
    Object obj = new Object();
    obj.f1 = new Function() {
        public void invoke() {
            System.out.println("f1");
        }
    };
    obj.f1.alwaysCall = true;
    obj.f2 = new Function() {
        public void invoke() {
            System.out.println("f2");
        }
    };

    Map<String, Function> map = new HashMap<>();
    map.put("f1", obj.f1);
    map.put("f2", obj.f2);

    Function callFunctionByKey = new Function() {
        public void invoke(Object[] args) {
            Function f = map.get(args[0].toString());
            if (f!= null && f instanceof Function && ((Function) f).hasProperty("alwaysCall")) {
                ((Function) f).invoke();
            }
        }
    };

    String key = Math.random() > 0.5? "f1" : "f2";
    callFunctionByKey.invoke(new Object[]{key});
}