java
import org.apache.commons.math3.optimization.linear.LinearConstraint;
import org.apache.commons.math3.optimization.linear.LinearObjectiveFunction;
import org.apache.commons.math3.optimization.linear.SimplexSolver;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

public class SimplexSolverTest {

    @Test
    public void testSimplexSolver() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[]{0.8, 0.2, 0.7, 0.3, 0.6, 0.4}, 0);

        List<LinearConstraint> constraints = new ArrayList<>();
        constraints.add(new LinearConstraint(new double[]{1, 0, 1, 0, 1, 0}, Relationship.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[]{0, 1, 0, 1, 0, 1}, Relationship.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[]{1, 0, 0, 0, 0, 0}, Relationship.GEQ, 10.0));
        constraints.add(new LinearConstraint(new double[]{0, 0, 1, 0, 0, 0}, Relationship.GEQ, 8.0));
        constraints.add(new LinearConstraint(new double[]{0, 0, 0, 0, 1, 0}, Relationship.GEQ, 5.0));

        RealPointValuePair solution = new SimplexSolver().optimize(f, constraints, GoalType.MAXIMIZE, true);

        // Check if the returned value is 22.20
        assertEquals(22.2, solution.getValue(), 0.01);

        // Check if the solution satisfies all constraints
        double x0 = solution.getPoint()[0];
        double x1 = solution.getPoint()[1];
        double x2 = solution.getPoint()[2];
        double x3 = solution.getPoint()[3];
        double x4 = solution.getPoint()[4];
        double x5 = solution.getPoint()[5];

        // Check if x4 >= 5.0
        assertTrue(x4 >= 5.0);
    }
}
