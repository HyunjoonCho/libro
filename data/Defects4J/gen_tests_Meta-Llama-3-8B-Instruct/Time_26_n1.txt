public void testIssue60() {
    Chronology chronUTC = GregorianChronology.getInstance(DateTimeZone.UTC);
    DateTime usCentralStandardInUTC = new DateTime(2008, 11, 2, 7, 0, 0, 0, chronUTC);
    DateTime usCentralDaylightInUTC = new DateTime(2008, 11, 2, 6, 0, 0, 0, chronUTC);

    Chronology chronUSCentral = GregorianChronology.getInstance(DateTimeZone.forID("US/Central"));
    DateTime usCentralStandardInUSCentral = usCentralStandardInUTC.toDateTime(chronUSCentral);
    DateTime usCentralDaylightInUSCentral = usCentralDaylightInUTC.toDateTime(chronUSCentral);

    assertEquals(6, usCentralDaylightInUSCentral.getHourOfDay()); // Expect 6, not 7
    assertEquals(6, usCentralStandardInUSCentral.getHourOfDay()); // Expect 7, not 6

    DateTime australiaNSWStandardInUTC = new DateTime(2008, 4, 5, 16, 0, 0, 0, chronUTC);
    DateTime australiaNSWDaylightInUTC = new DateTime(2008, 4, 5, 15, 0, 0, 0, chronUTC);

    Chronology chronAusNSW = GregorianChronology.getInstance(DateTimeZone.forID("Australia/NSW"));
    DateTime australiaNSWStandardInAustraliaNSW = australiaNSWStandardInUTC.toDateTime(chronAusNSW);
    DateTime australiaNSWDaylightInAustraliaNSW = australiaNSWDaylightInUTC.toDateTime(chronAusNSW);

    assertEquals(15, australiaNSWDaylightInAustraliaNSW.getHourOfDay()); // Expect 15, not 16
    assertEquals(15, australiaNSWStandardInAustraliaNSW.getHourOfDay()); // Expect 16, not 15
}