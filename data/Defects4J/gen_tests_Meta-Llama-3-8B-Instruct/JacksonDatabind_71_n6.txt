java
import org.junit.Test;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.TypeSerializer;
import com.fasterxml.jackson.databind.type.TypeFactory;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.fail;

public class TestCharSequenceKey {
    @Test
    public void testCharSequenceKey() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeatureWRAP_ROOT_VALUE);
        TypeFactory typeFactory = mapper.getTypeFactory();
        TypeSerializer typeSerializer = typeFactory.constructType(CharSequence.class);
        TypeDeserializer typeDeserializer = typeFactory.constructType(CharSequence.class);

        Map<String, Object> map = new HashMap<>();
        map.put("key", "value");

        // This line should not throw an exception
        // but currently it does
        mapper.writeValueAsString(map);
        fail("Expected to not throw an exception");
    }
}
