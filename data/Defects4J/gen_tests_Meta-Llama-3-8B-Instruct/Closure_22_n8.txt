
public void testClassifyNonRightmostExpressionsAsProblematic() {
    // Test 1: foo((1, 2, 42)) is transformed into foo((1, 3)) and a warning is issued only with regard to the first element.
    String originalCode = "foo((1, 2, 42))";
    String expectedCode = "foo((1, 3))";
    String warning = "Warning: Side effect in expression (1, 2, 42)";
    assertTransformation(originalCode, expectedCode, warning);

    // Test 2: foo((bar(), 2, 42)) is transformed into foo((bar(), 3)) and no warning is issued.
    originalCode = "foo((bar(), 2, 42))";
    expectedCode = "foo((bar(), 3))";
    assertNoWarning(originalCode, expectedCode);

    // Test 3: foo(((1, 2, 3), (4, 5, 42))) is transformed into foo((1, 4, 42)) and warnings are issued with regard to the first elements of inner sequences only.
    originalCode = "foo(((1, 2, 3), (4, 5, 42)))";
    expectedCode = "foo((1, 4, 42))";
    String innerWarning = "Warning: Side effect in expression (1, 2, 3)";
    String outerWarning = "Warning: Side effect in expression (4, 5, 42)";
    assertTransformationWithWarnings(originalCode, expectedCode, innerWarning, outerWarning);
}

// Helper methods
private void assertTransformation(String originalCode, String expectedCode) {
    // Implement your assertion logic here
}

private void assertNoWarning(String originalCode, String expectedCode) {
    // Implement your assertion logic here
}

private void assertTransformationWithWarnings(String originalCode, String expectedCode, String innerWarning, String outerWarning) {
    // Implement your assertion logic here
}
