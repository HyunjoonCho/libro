java
import org.apache.commons.math3.optimization.linear.LinearConstraint;
import org.apache.commons.math3.optimization.linear.LinearConstraintRelation;
import org.apache.commons.math3.optimization.linear.LinearObjectiveFunction;
import org.apache.commons.math3.optimization.linear.RealPointValuePair;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

public class SimplexSolverTest {

    @Test
    public void testSimplexSolver() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[]{0.8, 0.2, 0.7, 0.3, 0.6, 0.4}, 0);
        List<LinearConstraint> constraints = new ArrayList<>();
        constraints.add(new LinearConstraint(new double[]{1, 0, 1, 0, 1, 0}, LinearConstraintRelation.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[]{0, 1, 0, 1, 0, 1}, LinearConstraintRelation.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[]{1, 0, 0, 0, 0, 0}, LinearConstraintRelation.GEQ, 10.0));
        constraints.add(new LinearConstraint(new double[]{0, 0, 1, 0, 0, 0}, LinearConstraintRelation.GEQ, 8.0));
        constraints.add(new LinearConstraint(new double[]{0, 0, 0, 0, 1, 0}, LinearConstraintRelation.GEQ, 5.0));

        RealPointValuePair solution = new SimplexSolver().optimize(f, constraints, org.apache.commons.math3.optimization/goal.GoalType.MAXIMIZE, true);

        // Check the solution values
        double[] x = solution.getPoint();
        double value = solution.getValue();

        // Check the solution value and variable values
        assertEquals(22.2, value, 0.01);
        assertEquals(15.0, x[0], 0.01);
        assertEquals(23.0, x[1], 0.01);
        assertEquals(8.0, x[2], 0.01);
        assertEquals(0.0, x[3], 0.01);
        assertEquals(0.0, x[4], 0.01);
        assertEquals(0.0, x[5], 0.01);

        // Check the constraints
        // Add assertions for the constraints
    }
}
