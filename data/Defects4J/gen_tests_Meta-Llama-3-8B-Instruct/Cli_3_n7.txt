java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class PosixParserTest {

    @Parameterized.Parameter(0)
    public String commandLine;

    @Parameterized.Parameter(1)
    public String expectedOutput;

    @Parameterized.Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {"-t", "processing selected target: t"},
                {"-target", "processing selected target: arget"},
                {"-t foobar.com", "processing selected target: foobar.com"},
                {"-target foobar.com", "processing selected target: arget"}
        });
    }

    @Test
    public void testPosixParser() {
        PosixParser parser = new PosixParser();
        OptionSet options = new OptionSet();
        try {
            parser.parse(options, commandLine.split(" "));
        } catch (ParseException e) {
            assertEquals("Invalid command: " + e.getMessage(), expectedOutput);
        } else {
            assertEquals("processing selected target: " + options.getOptionValue("t"), expectedOutput);
        }
    }
}
