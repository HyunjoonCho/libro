java
@Test
public void testDateTimeSerializerBase_IgnoresConfiguredDateFormat() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
    mapper.setDateFormat(format);

    // Create a class with a date field annotated with @JsonFormat
    Class<MyClass> clazz = MyClass.class;
    MyClass obj = new MyClass();
    obj.setDateField(new Date());

    // Serialize the object
    String json = mapper.writeValueAsString(obj);

    // The date format should be "yyyy-MM-dd" but it will be "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" because DateTimeSerializerBase ignores the configured date format
    assertEquals("...T...Z", json);
}

class MyClass {
    @JsonFormat(shape = JsonFormat.Shape.STRING)
    private Date dateField;
}
