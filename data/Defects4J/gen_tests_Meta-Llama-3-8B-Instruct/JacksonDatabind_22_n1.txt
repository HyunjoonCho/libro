
public class CustomSerializerTest {
    
    @Test
    public void testCustomSerializerNotUsedIfJsonValue() {
        // Given
        JacksonJsonMapper mapper = new JacksonJsonMapper();
        CustomSerializer customSerializer = new CustomSerializer();
        mapper.registerSerializer(MyClass.class, customSerializer);
        
        // When
        String json = mapper.writeValueAsString(new MyClass());
        
        // Then
        // This assertion will fail if the custom serializer is not used
        assertTrue(json.contains("customValue"));
    }
}

class MyClass {
    @JsonValue
    private String value;
    
    public MyClass() {
        this.value = "default";
    }
}

class CustomSerializer extends JsonSerializer<MyClass> {
    @Override
    public void serialize(MyClass value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        gen.writeString("customValue");
    }
}
