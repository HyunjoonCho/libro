java
public void testArchiveStreamFactoryEncoding() throws IOException {
    // Create an archive stream factory
    ArchiveStreamFactory factory = new ArchiveStreamFactory();

    // Create an ArjArchiveInputStream with encoding
    ArjArchiveInputStream arjInputStream = (ArjArchiveInputStream) factory.createArchiveInputStream("arj", new byte[] {1, 2, 3}, "UTF-8");

    // Verify the encoding was passed
    assertEquals("UTF-8", arjInputStream.getEncoding());

    // Create a CpioArchiveInputStream with encoding
    CpioArchiveInputStream cpioInputStream = (CpioArchiveInputStream) factory.createArchiveInputStream("cpio", new byte[] {4, 5, 6}, "ISO-8859-1");

    // Verify the encoding was passed
    assertEquals("ISO-8859-1", cpioInputStream.getEncoding());

    // Create a DumpArchiveInputStream with encoding
    DumpArchiveInputStream dumpInputStream = (DumpArchiveInputStream) factory.createArchiveInputStream("dump", new byte[] {7, 8, 9}, "UTF-16BE");

    // Verify the encoding was passed
    assertEquals("UTF-16BE", dumpInputStream.getEncoding());

    // Create a JarArchiveInputStream with encoding
    JarArchiveInputStream jarInputStream = (JarArchiveInputStream) factory.createArchiveInputStream("jar", new byte[] {10, 11, 12}, "Shift-JIS");

    // Verify the encoding was passed
    assertEquals("Shift-JIS", jarInputStream.getEncoding());

    // Create a JarArchiveOutputStream with encoding
    JarArchiveOutputStream jarOutputStream = (JarArchiveOutputStream) factory.createArchiveOutputStream("jar", "test.jar", "UTF-32LE");

    // Verify the encoding was passed
    assertEquals("UTF-32LE", jarOutputStream.getEncoding());
}
