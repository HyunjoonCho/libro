java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.Text;

import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.fail;
import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class JXPathTest {

    @Test
    public void testResettingDefaultNamespaceCausesEndlessLoop() {
        Map<String, String> namespaces = new HashMap<>();
        namespaces.put("b", "bla");
        namespaces.put("", "test111");

        Document document = createDocument(namespaces);
        Element foo = (Element) document.getDocumentElement().getElementsByTagName("foo").item(0);
        Element bar = (Element) foo.getElementsByTagName("bar").item(0);
        Element test = (Element) foo.getElementsByTagName("test").item(0);

        try {
            String path = test.asPath();
            fail("Expected endless loop");
        } catch (StackOverflowError e) {
            // Expected
        }
    }

    private Document createDocument(Map<String, String> namespaces) {
        Document document = new org.w3c.dom.Document();
        Element foo = document.createElement("foo");
        foo.setAttribute("xmlns:b", namespaces.get("b"));
        foo.setAttribute("xmlns", namespaces.get(""));
        document.appendChild(foo);

        Element bar = document.createElement("b:bar");
        foo.appendChild(bar);
        bar.setTextContent("a");

        Element test = document.createElement("test");
        foo.appendChild(test);

        return document;
    }
}
