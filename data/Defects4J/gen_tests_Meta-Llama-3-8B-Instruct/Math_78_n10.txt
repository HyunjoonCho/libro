java
public void testODEIntegrationEventDetection() {
    // Create an ODE solver
    ODEIntegrator integrator = new RungeKuttaIntegrator(new StepController(1e-6, 0.9), new EventController());

    // Define the ODE function
    ODE ode = new ODE() {
        @Override
        public double[] derivative(double t, double[] y) {
            double x = y[0];
            double y1 = y[1];
            double y2 = y[2];

            // Define the switching function
            double g = x * x - y1 * y1 - y2 * y2;

            // Define the event function
            double event = g;

            // Check if the event is detected
            if (event < 0) {
                // Set the event flag
                integrator.setEventFlag(true);
            }

            // Define the derivative
            double[] dydt = new double[3];
            dydt[0] = y1;
            dydt[1] = y2;
            dydt[2] = -g;

            return dydt;
        }
    };

    // Define the initial conditions
    double[] y0 = new double[3];
    y0[0] = 0;
    y0[1] = 0;
    y0[2] = 0;

    // Integrate the ODE
    double t0 = 67.5;
    double t1 = 112.5;
    double[] y = integrator.integrate(ode, y0, t0, t1);

    // Check if the event is detected
    assertEquals(true, integrator.getEventFlag());
}
