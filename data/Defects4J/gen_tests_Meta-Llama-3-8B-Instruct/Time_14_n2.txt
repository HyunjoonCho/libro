public void testIssue151() {
    DateTimeConstants constants = DateTimeConstants.getInstance();
    MonthDay isoLeap = new MonthDay(constants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
    assertEquals(isoLeap, new MonthDay(constants.FEBRUARY, 29, ISOChronology.getInstanceUTC()));
    try {
        isoLeap.plusDays(1);
        fail("Expected IllegalFieldValueException");
    } catch (IllegalFieldValueException e) {
        assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
    }
    try {
        isoLeap.plusDays(2);
        fail("Expected IllegalFieldValueException");
    } catch (IllegalFieldValueException e) {
        assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
    }
    try {
        isoLeap.plusMonths(1);
        fail("Expected IllegalFieldValueException");
    } catch (IllegalFieldValueException e) {
        assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
    }
    try {
        isoLeap.plusMonths(-1);
        fail("Expected IllegalFieldValueException");
    } catch (IllegalFieldValueException e) {
        assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
    }
    try {
        isoLeap.minusMonths(1);
        fail("Expected IllegalFieldValueException");
    } catch (IllegalFieldValueException e) {
        assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
    }
    try {
        isoLeap.minusMonths(-1);
        fail("Expected IllegalFieldValueException");
    } catch (IllegalFieldValueException e) {
        assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
    }
    try {
        isoLeap.minusDays(-1);
        fail("Expected IllegalFieldValueException");
    } catch (IllegalFieldValueException e) {
        assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
    }
    assertEquals(isoLeap.minusDays(1).plusDays(2), new MonthDay(constants.MARCH, 3, ISOChronology.getInstanceUTC()));
}