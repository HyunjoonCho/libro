
public void testCMAESOptimizerNaNParameters() {
    // Set up a simple fitness function
    class MyFitnessFunction implements FitnessFunction {
        @Override
        public double evaluate(double[] parameters) {
            return parameters[0];
        }
    }

    // Create a CMAESOptimizer with large bounds
    CMAESOptimizer optimizer = new CMAESOptimizer(new MyFitnessFunction(), 
            new double[]{-Double.MAX_VALUE}, new double[]{Double.MAX_VALUE});

    // Try to optimize the fitness function
    optimizer.optimize();

    // Verify that the parameters passed to the fitness function are NaN
    double[] parameters = optimizer.getBestParameters();
    for (double parameter : parameters) {
        assertEquals(Double.isNaN(parameter), true);
    }
}
