java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class TestTreeTraversingParser {
    private final ObjectMapper mapper = new ObjectMapper();

    @Test
    public void testTreeTraversingParser() {
        ObjectNode tree = JsonNodeFactory.instance.objectNode();
        tree.put("x", 0);
        assertEquals(0, mapper.treeToValue(tree, Integer.class));
        tree.put("x", 10);
        assertEquals(10, mapper.treeToValue(tree, Integer.class));
        tree.put("x", 10000);
        assertEquals(10000, mapper.treeToValue(tree, Integer.class));
        tree.put("x", 10000000000L);
        assertEquals(2147483647, mapper.treeToValue(tree, Integer.class));
        tree.put("x", -2147483648);
        assertEquals(-2147483648, mapper.treeToValue(tree, Integer.class));
        tree.put("x", -2147483649);
        assertEquals(-2147483647, mapper.treeToValue(tree, Integer.class));
        tree.put("x", -4294967295);
        assertEquals(1, mapper.treeToValue(tree, Integer.class));
        tree.put("x", 0.1);
        assertEquals(0, mapper.treeToValue(tree, Integer.class));
        tree.put("x", 1.9);
        assertEquals(1, mapper.treeToValue(tree, Integer.class));
        tree.put("x", 1.9999999999999999);
        assertEquals(2, mapper.treeToValue(tree, Integer.class));
        tree.put("x", true);
        assertEquals(JsonMappingException.class, mapper.treeToValue(tree, Integer.class).getClass());
        tree.put("x", "{}");
        assertEquals(JsonMappingException.class, mapper.treeToValue(tree, Integer.class).getClass());
        tree.put("x", []);
        assertEquals(JsonMappingException.class, mapper.treeToValue(tree, Integer.class).getClass());
        tree.put("x", "[0]");
        assertEquals(JsonMappingException.class, mapper.treeToValue(tree, Integer.class).getClass());
    }
}
