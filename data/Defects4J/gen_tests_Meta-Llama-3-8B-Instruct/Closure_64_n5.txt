
import org.junit.Test;

import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.SourceFile;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class CompilerTest {
  @Test
  public void testEcmascript5StrictProducesMultipleUseStrict() throws Exception {
    Compiler compiler = new Compiler();
    ByteArrayOutputStream out = new ByteArrayOutputStream();
    PrintStream originalOut = System.out;
    System.setOut(new PrintStream(out));

    compiler.compile(SourceFile.create("get_num.js", "var getNum = function() { return 5; };"),
                    SourceFile.create("alert.js", "alert(getNum());"));

    String output = out.toString();
    System.out.flush();
    System.setOut(originalOut);

    assertEquals("Expected 'use strict' directive only once, but got multiple instances", 1, countUseStrict(output));
  }

  private int countUseStrict(String output) {
    int count = 0;
    for (String line : output.split("\n")) {
      if (line.startsWith("'use strict';")) {
        count++;
      }
    }
    return count;
  }
}
