java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class AdvancedOptimizationsTest {

    @Parameters
    public static Iterable<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {"function () { return function () { var arg = arguments; setTimeout(function() { alert(args); }, 0); } }",
                        "function () { return function () { setTimeout(function() { alert(arguments); }, 0); } }"
                }
        });
    }

    private String originalCode;
    private String rewrittenCode;

    public AdvancedOptimizationsTest(String originalCode, String rewrittenCode) {
        this.originalCode = originalCode;
        this.rewrittenCode = rewrittenCode;
    }

    @Test
    public void testAdvancedOptimizations() throws ScriptException {
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("nashorn");
        engine.eval("advancedOptions = {collapsePropertiesOnExternTypes: true}");
        engine.eval(originalCode);
        assertEquals(originalCode, rewrittenCode);
    }
}
