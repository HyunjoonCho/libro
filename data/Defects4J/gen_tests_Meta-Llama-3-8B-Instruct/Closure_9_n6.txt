java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import java.io.File;
import java.io.IOException;

@RunWith(JUnit4.class)
public class CompilerBugTest {

    @Test
    public void testCompilerFailsToFindAMDModuleInSubdirectory() throws IOException {
        // Create 1st AMD module in lib/Foo.js
        File fooJs = new File("lib", "Foo.js");
        String fooJsContent = "define(['lib/Foo'], function() { return 'Foo'; });";
        FileUtils.writeStringToFile(fooJs, fooJsContent);

        // Create 2nd AMD module in Bar.js depending on lib/Foo.js
        File barJs = new File("Bar.js");
        String barJsContent = "define(['lib/Foo'], function() { return 'Bar'; });";
        FileUtils.writeStringToFile(barJs, barJsContent);

        // Try to compile both files with Bar.js as main module
        ProcessBuilder processBuilder = new ProcessBuilder("java", "-jar", "compiler.jar", "--transform_amd_modules", "--process_common_js_modules", "--common_js_entry_module=Bar.js", "--compilation_level=ADVANCED_OPTIMIZATIONS", "--js_output_file=out.js", "--js=Bar.js", "--js=lib/Foo.js");
        Process process = processBuilder.start();
        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
        String line;
        while ((line = reader.readLine())!= null) {
            System.out.println(line);
        }
        int exitValue = process.waitFor();
        assert exitValue == 1;
    }
}
