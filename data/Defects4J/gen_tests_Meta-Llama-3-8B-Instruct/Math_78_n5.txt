
// Define the test method
public void testLastEventNotDetected() {
    // Create an instance of the ODE integrator
    ODEIntegrator integrator = new ODEIntegrator();

    // Define the switching function
    double[] y = new double[1];
    y[0] = 0;
    double[] dydt = new double[1];
    dydt[0] = 0;

    // Set the event function
    integrator.setEventFunction(new EventFunction() {
        @Override
        public boolean isEvent(double t, double[] y, double[] dydt) {
            return y[0] > 0;
        }
    });

    // Set the initial condition
    integrator.setInitialCondition(0, y);

    // Define the time points for the integration
    double tStart = 67.5;
    double tEnd = 112.5;
    double tNext = 90.0;
    double tNext2 = 153.0;

    // Set the tolerance for the event detection
    integrator.setEventDetectionTolerance(1e-6);

    // Integrate the ODE
    integrator.integrate(tStart, tNext);

    // Check if the first event was detected
    boolean eventDetected = integrator.isEventDetected();
    assertTrue(eventDetected);

    // Check if the second event was detected
    integrator.integrate(tNext, tNext2);
    eventDetected = integrator.isEventDetected();
    assertFalse(eventDetected);

    // Check if the event was not detected due to the tolerance
    y[0] = 0.9999999;
    integrator.setInitialCondition(tNext, y);
    integrator.integrate(tNext, tNext2);
    eventDetected = integrator.isEventDetected();
    assertFalse(eventDetected);
}
