
import org.apache.commons.math3.optimization.univariate.BrentOptimizer;
import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class BrentOptimizerTest {
    @Test
    public void testBrentOptimizer() {
        // Create a simple test function that returns the square of its input
        double[] x = new double[] {0.5};
        double[] y = new double[] {0.25};
        UnivariateFunction f = new AbstractUnivariateFunction() {
            @Override
            public double value(double x) {
                return x * x;
            }
        };

        // Use BrentOptimizer to find the minimum of the function
        BrentOptimizer optimizer = new BrentOptimizer();
        double min = optimizer.optimize(0.0, 1.0, f, x, y).getPoint()[0];

        // Check that the optimizer has found the correct minimum (0)
        assertTrue(Math.abs(min - 0.0) < 1e-6);
    }
}
