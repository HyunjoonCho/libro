java
public void testJacksonDeserializationFailOnInvalidSubtype() throws IOException {
    String json1 = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    CallRecord call1 = mapper.readValue(json1, CallRecord.class);
    assertEquals(0.0f, call1.version);
    assertEquals("123", call1.application);
    assertEquals("location1", call1.item.location);
    // Verify that item2 is not read
    assertNull(call1.item2);

    String json2 = "{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}";
    CallRecord call2 = mapper.readValue(json2, CallRecord.class);
    assertEquals(0.0f, call2.version);
    assertEquals("123", call2.application);
    // Verify that item is read
    assertEquals("location1", call2.item.location);
    // Verify that item2 is not read
    assertNull(call2.item2);

    String json3 = "{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}, \"version\":0.0,\"application\":\"123\"}";
    CallRecord call3 = mapper.readValue(json3, CallRecord.class);
    assertEquals(0.0f, call3.version);
    assertEquals("123", call3.application);
    // Verify that item is read
    assertEquals("location1", call3.item.location);
    // Verify that item2 is not read
    assertNull(call3.item2);
}
