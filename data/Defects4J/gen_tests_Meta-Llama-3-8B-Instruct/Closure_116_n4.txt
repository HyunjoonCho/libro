java
import org.junit.Test;
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.JSModule;
import com.google.javascript.jscomp.Result;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class IssueTest {
    @Test
    public void testIssue() throws IOException {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setCompilationLevel(CompilationLevel.ADVANCED_OPTIMIZATIONS);
        options.setWarningLevel(CompilerOptions.WarningLevel.VERBOSE);

        JSModule input = new JSModule();
        input.addSource(new File("input.js"), "window['anchor'] = function (obj, modifiesProp) {\n" +
                "  return (function (saved) {\n" +
                "    return modifiesProp(obj) + saved;\n" +
                "  })(obj['prop']);\n"
        );

        Result result = compiler.compile(input, options);

        if (result.hasErrors()) {
            for (JSError error : result.getErrors()) {
                System.out.println(error.getMessage());
            }
        }

        // Check the output
        String output = result.toSource();
        // Expected output: window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD};
        // Actual output: window.foo=function(a,b){return b(a)+a.prop};
        // Verify the actual output is different from the expected output
        assert false; // This will fail if the test passes
    }
}
