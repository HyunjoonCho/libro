
public void testMockingAbstractClass1() {
    // Example 1: Fake with trivial Logic
    UserAccount userAccount = mock(UserAccount.class);
    when(userAccount.getEmails()).thenReturn(Arrays.asList("email1", "email2"));
    when(userAccount.addEmail("email3")).thenReturn(null);
    assertEquals(Arrays.asList("email1", "email2"), userAccount.getEmails());
}

public void testMockingAbstractClass2() {
    // Example 2: callback-style API
    AccountService accountService = mock(AccountService.class);
    when(accountService.getAccount(anyString(), any(AsyncCallback.class))).thenAnswer(new Answer<Void>() {
        AsyncCallback<UserAccount> callback = (AsyncCallback<UserAccount>) getArguments()[1];
        @Override
        public Void answer(Invocation invocation) throws Throwable {
            callback.onSuccess(new UserAccount());
            return null;
        }
    });
}

public void testMockingAbstractClass3() {
    // Example 3: Uninteresting parameters
    AccountRpcService accountRpcService = mock(AccountRpcService.class);
    when(accountRpcService.getAccount(any(RpcContext.class), eq("id")).thenReturn(Future.<Account>immediate(new Account()));
}
