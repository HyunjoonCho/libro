java
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.async.ByteArrayFeeder;
import org.junit.Test;

import java.nio.charset.StandardCharsets;
import java.util.Arrays;

import static org.junit.Assert.assertEquals;

public class FeedingOffsetTest {

    @Test
    public void inputOffsetShouldNotAffectLocations() throws Exception {
        JsonFactory jsonFactory = new JsonFactory();
        JsonParser parser = jsonFactory.createNonBlockingByteArrayParser();
        ByteArrayFeeder feeder = (ByteArrayFeeder) parser.getNonBlockingInputFeeder();

        byte[] input = "[[[".getBytes(StandardCharsets.UTF_8);

        feeder.feedInput(input, 7, 3); // feed input with offset 7
        assertEquals(JsonToken.START_ARRAY, parser.nextToken());
        assertEquals(4, parser.getCurrentLocation().getByteOffset()); // expected 1, but actual is 7 + 3
        assertEquals(4, parser.getTokenLocation().getByteOffset()); // expected 1, but actual is 7 + 3

        feeder.feedInput(input, 0, 1); // feed input again with offset 0
        assertEquals(JsonToken.START_ARRAY, parser.nextToken());
        assertEquals(1, parser.getCurrentLocation().getByteOffset()); // expected 1, but actual is 7
        assertEquals(1, parser.getTokenLocation().getByteOffset()); // expected 1, but actual is 7
    }
}
