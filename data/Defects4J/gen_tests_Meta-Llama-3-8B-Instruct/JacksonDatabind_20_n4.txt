java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.PropertyNamingStrategy;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import java.io.IOException;

@RunWith(JUnit4.class)
public class TestPropertyNamingStrategyIssue {

    @Test
    public void reproducer() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.setPropertyNamingStrategy(PropertyNamingStrategy.LOWER_CASE);
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        String json = "{\"id\":\"1\",\"json\":{\"foo\":\"bar\",\"baz\":\"bing\"}}";
        ClassWithObjectNodeField deserialized = mapper.readValue(json, ClassWithObjectNodeField.class);

        // Add assertions here to verify the deserialization result
        // For example:
        assertEquals("1", deserialized.id);
        assertEquals("bar", deserialized.json.get("foo").asText());
        assertEquals("bing", deserialized.json.get("baz").asText());
    }

    public static class ClassWithObjectNodeField {
        public String id;
        public com.fasterxml.jackson.databind.JsonNode json;
    }
}
