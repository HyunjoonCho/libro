java
import org.junit.Test;
import static org.junit.Assert.fail;

public class ExternExportTest {

    @Test
    public void testExternExportWithTypedef() {
        // Create a file with a @typedef and code referencing the type def above and below the typedef declaration
        String code = """
            @typedef myType = {a: string, b: number};
            function f1() {
                var x: myType = {a: "hello", b: 1};
                var y: myType = {a: "hello", b: 2};
            }
            function f2() {
                var z: myType = {a: "hello", b: 3};
            }
            """;

        // Run the closure compiler and grab the externExport string
        String externExport = "externs: (function() {... });";

        // Expect the externExport string to be correct
        if (!externExport.contains("f1(a: myType)")) {
            fail("Expected 'f1' function to be exported with type'myType'");
        }
        if (!externExport.contains("f2(a: myType)")) {
            fail("Expected 'f2' function to be exported with type'myType'");
        }
    }
}
