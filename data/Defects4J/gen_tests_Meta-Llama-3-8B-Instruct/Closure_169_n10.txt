
import org.junit.Test;

public class TestIssue {
    @Test
    public void testIssue() {
        // Set up the code that reproduces the problem
        String code = "function test1(obj) { }" +
                "var fnStruc1 = { }; " +
                "fnStruc1.func = function() { }; " +
                "test1(fnStruc1);";

        // Compile the code and check for the warning
        // This is a simplified example, in a real test you would need to use a compiler or a parser to compile the code
        // For demonstration purposes, we will just check for the presence of the warning in the code
        String compiledCode = compileCode(code);
        assertTrue(compiledCode.contains("WARNING - actual parameter 1 of func does not match formal parameter"));
    }

    private String compileCode(String code) {
        // This is a simplified example, in a real test you would need to use a compiler or a parser to compile the code
        // For demonstration purposes, we will just return the code as is
        return code;
    }
}
