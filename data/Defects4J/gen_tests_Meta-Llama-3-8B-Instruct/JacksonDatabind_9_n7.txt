java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;
import java.io.Writer;
import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.fail;

public class MapWithClassAsKeyTest {

    @Test
    public void testMapWithClassAsKey() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        Map<Class<? extends Object>, String> map = new HashMap<>();
        map.put(ArrayList.class, "ArrayList");
        map.put(HashMap.class, "HashMap");

        Writer writer = new StringWriter();
        mapper.writeValue(writer, map);

        String json = writer.toString();
        System.out.println(json);

        try {
            mapper.readValue(json, TypeFactory.defaultInstance().constructMapType(Map.class, Class.class, String.class));
            fail("Expected IOException");
        } catch (IOException e) {
            // expected
        }
    }
}
