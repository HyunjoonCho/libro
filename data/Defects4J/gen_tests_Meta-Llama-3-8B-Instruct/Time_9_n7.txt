
public void testMaxValidOffset() {
    DateTimeZone dtz = DateTimeZone.forID("UTC");
    try {
        dtz.getOffset(new DateTime(2022, 1, 1, 24, 0, 0, 0));
        fail("Expected an exception for 24:00:00 offset");
    } catch (DateTimeException e) {
        // expected
    }
    try {
        dtz.getOffset(new DateTime(2022, 1, 1, 23, 60, 0, 0));
        fail("Expected an exception for 23:60:00 offset");
    } catch (DateTimeException e) {
        // expected
    }
    try {
        dtz.getOffset(new DateTime(2022, 1, 1, 23, 59, 60, 0));
        fail("Expected an exception for 23:59:60 offset");
    } catch (DateTimeException e) {
        // expected
    }
    try {
        dtz.getOffset(new DateTime(2022, 1, 1, 23, 59, 59, 999));
        assertEquals(0, dtz.getOffset(new DateTime(2022, 1, 1, 23, 59, 59, 999)));
    } catch (DateTimeException e) {
        fail("Expected no exception for 23:59:59.999 offset");
    }
}
