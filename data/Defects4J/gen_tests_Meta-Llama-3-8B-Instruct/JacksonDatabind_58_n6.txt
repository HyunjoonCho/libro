
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationFeature.CAN_OVERRIDE_ACCESS_MODIFIERS;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.fail;

public class JacksonTest {

    @Test
    public void testJsonIgnoreProperties() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(CAN_OVERRIDE_ACCESS_MODIFIERS);

        MyException myException = new MyException(new MyInnerException("inner exception"));

        String json = mapper.writeValueAsString(myException);
        try {
            mapper.readValue(json, MyException.class);
            fail("Expected IllegalAccessError");
        } catch (IllegalAccessError e) {
            // Expected
        }
    }
}

class MyException extends RuntimeException {
    private MyInnerException cause;

    @JsonIgnoreProperties("cause")
    public MyException(MyInnerException cause) {
        this.cause = cause;
    }

    public MyInnerException getCause() {
        return cause;
    }
}

class MyInnerException extends Exception {
    public MyInnerException(String message) {
        super(message);
    }
}
