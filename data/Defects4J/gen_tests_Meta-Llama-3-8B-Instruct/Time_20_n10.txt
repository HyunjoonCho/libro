java
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

import java.util.Set;

import static org.junit.Assert.assertEquals;

public class JodaDateTimeZoneTest {

    private static final DateTimeFormatter formatter = DateTimeFormat.forPattern("MM/dd/yyyy HH:mm:ss.SSS ZZZ");

    @Test
    public void testDateTimeZoneConversion() {
        Set<String> timeZones = DateTimeZone.getAvailableIDs();
        for (String timeZone : timeZones) {
            DateTime dateTime = DateTime.now().withZone(DateTimeZone.forID(timeZone));
            String formattedDateTime = formatter.print(dateTime);
            try {
                DateTime parsedDateTime = formatter.parseDateTime(formattedDateTime);
                assertEquals(timeZone, parsedDateTime.getZone().getID());
            } catch (IllegalArgumentException e) {
                fail("Failed to parse date time for time zone: " + timeZone);
            }
        }
    }
}
