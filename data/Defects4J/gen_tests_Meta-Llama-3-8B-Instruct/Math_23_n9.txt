public void testBrentOptimizer() {
    BrentOptimizer optimizer = new BrentOptimizer();
    double[] lowerBound = new double[] {0.0};
    double[] upperBound = new double[] {1.0};
    double[] initialPoint = new double[] {0.5};
    double[] bestPoint = optimizer.optimize(new UnivariateRealFunction() {
        @Override
        public double value(double x) {
            return Math.sin(x);
        }
    }, lowerBound, upperBound, initialPoint);
    double lastValue = optimizer.getEvaluationCount() > 1? optimizer.getEvaluation().get(0).value : Double.MAX_VALUE;
    double secondLastValue = optimizer.getEvaluationCount() > 2? optimizer.getEvaluation().get(1).value : Double.MAX_VALUE;
    assertTrue(lastValue > secondLastValue);
}