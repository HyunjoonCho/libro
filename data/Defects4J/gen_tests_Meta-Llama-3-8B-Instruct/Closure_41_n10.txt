public void testIssue() {
    Compiler compiler = new Compiler();
    compiler.setCompilationLevel(CompilationLevel ADVANCED);
    compiler.setOutputFileName("default.js");
    compiler.useClosureLibrary(true);

    compiler.addSource("goog.provide('Foo');goog.provide('Bar');");

    compiler.addSource("/** @constructor */ Foo = function() {};");
    compiler.addSource("/** @param {number} a * @param {number} b * @return {number} */ Foo.prototype.add = function(a, b) { return a + b; };");
    compiler.addSource("/** @param {number} a * @param {number} b * @return {number} */ Foo.prototype.sub = goog.abstractMethod;");

    compiler.addSource("/** @constructor * @extends {Foo} */ Bar = function() { goog.base(this); }; goog.inherits(Bar, Foo);");
    compiler.addSource("/** @inheritDoc */ Bar.prototype.add = function(one) { return one; };");
    compiler.addSource("/** @inheritDoc */ Bar.prototype.sub = function(one) { return one; };");

    compiler.compile();
}