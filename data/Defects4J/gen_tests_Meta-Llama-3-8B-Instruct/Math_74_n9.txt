public void testWrongScaleParameter() {
    // Initialize the arrays
    double[] y0 = new double[2];
    double[] yDotK = new double[2];
    double[] yTmp = new double[2];
    double[] scale = new double[2];
    double[] vecAbsoluteTolerance = new double[2];
    double[] vecRelativeTolerance = new double[2];
    
    // Set the initial values
    y0[0] = 1.0;
    y0[1] = 2.0;
    vecAbsoluteTolerance[0] = 1.0;
    vecRelativeTolerance[0] = 0.5;
    vecAbsoluteTolerance[1] = 2.0;
    vecRelativeTolerance[1] = 0.5;
    
    // Set the expected result
    double expectedScale = vecAbsoluteTolerance[0] + vecRelativeTolerance[0] * Math.max(Math.abs(y0[0]), Math.abs(y0[0]));
    expectedScale += vecAbsoluteTolerance[1] + vecRelativeTolerance[1] * Math.max(Math.abs(y0[1]), Math.abs(y0[1]));
    
    // Call the method and check the result
    double actualScale = EmbeddedRungeKuttaIntegrator.initializeStep(y0, yDotK, yTmp, scale, vecAbsoluteTolerance, vecRelativeTolerance);
    assertEquals(expectedScale, actualScale, 0.00001);
}