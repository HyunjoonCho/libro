java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertThrows;

@RunWith(Parameterized.class)
public class LargeWeightVectorTest {

    @Parameterized.Parameter(0)
    public int numWeights;

    @Parameterized.Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {1000}, {2000}, {41200} // adjust this to test different number of weights
        });
    }

    @Test
    public void testLargeWeightVector() {
        // Create a large number of weights
        double[] weights = new double[numWeights];

        // Use the weights with a multivariate vector optimizer
        // This should cause a memory issue due to the creation of a large nxn full matrix

        // Assert that the code throws an OutOfMemoryError
        assertThrows(OutOfMemoryError.class, () -> {
            // Use the weights with a multivariate vector optimizer
            // For example, create a curve fitter with the weights
        });
    }
}
