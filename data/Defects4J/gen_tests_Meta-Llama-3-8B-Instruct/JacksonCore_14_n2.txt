java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;

import static org.junit.Assert.fail;

@RunWith(JUnit4.class)
public class IOContextTest {

    @Test
    public void testRelaxOwnershipChecksForBuffers() throws IOException {
        RandomAccessFile file = new RandomAccessFile("testfile", "rw");
        FileChannel channel = file.getChannel();
        ByteBuffer buffer1 = ByteBuffer.allocate(1024);
        ByteBuffer buffer2 = ByteBuffer.allocate(1024);

        IOContext ioContext = new IOContext(channel);
        ioContext.prepareRead(buffer1);

        // Expected to pass
        ioContext.prepareRead(buffer2);

        // Expected to fail due to different buffer
        try {
            ioContext.prepareRead(new ByteBuffer.allocate(2048));
            fail("Expected IOException");
        } catch (IOException e) {
            // Expected
        }
    }
}
