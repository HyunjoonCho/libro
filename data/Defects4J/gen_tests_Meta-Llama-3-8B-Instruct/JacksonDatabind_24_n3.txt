java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.junit.Test;

import java.io.IOException;
import java.text.SimpleDateFormat;

import static org.junit.Assert.assertEquals;

public class ObjectMapperTest {

    @Test
    public void testConfiguringDateFormatChangesTimeZone() throws IOException {
        ObjectMapper mapper = createObjectMapper();
        String json = mapper.writeValueAsString(new DateTime(1988, 6, 25, 20, 30, DateTimeZone.UTC));
        assertEquals("1988-06-25 20:30:00", json);
    }

    private ObjectMapper createObjectMapper() {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(createJodaModule());
        mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);
        mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"));
        return mapper;
    }

    private SimpleModule createJodaModule() {
        SimpleModule module = new SimpleModule();
        module.addSerializer(DateTime.class, new DateTimeSerializer(
                new org.joda.time.format.DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss").withZoneUTC()));
        return module;
    }
}
