java
public void testMultiDirectionalCorrectStart() {
    // Set up the correct starting point
    double[] solution = {1, 2, 3};
    double[] bounds = new double[][] {{0, 10}, {0, 10}, {0, 10}};

    // Call the method to test
    MultiDirectional.optimize(solution, bounds, new ObjectiveFunction() {
        @Override
        public double evaluate(double[] x) {
            // Simple objective function to test
            return x[0] * x[0] + x[1] * x[1] + x[2] * x[2];
        }
    });

    // Assert that the method loops forever
    // You can add a timeout or a loop detection mechanism to verify this
    // For example, you can use a timeout to check if the method takes too long to finish
    // or you can detect the loop by checking if the solution is the same after a certain number of iterations
}
