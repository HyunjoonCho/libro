
public void testBrentOptimizer() {
    // Create a test function that has a clear minimum
    Function<double[], Double> function = (x) -> {
        return Math.pow(x[0] - 2, 2) + Math.pow(x[1] - 1, 2);
    };

    BrentOptimizer optimizer = new BrentOptimizer();
    OptimizationResult<Double> result = optimizer.optimize(new DoubleArray(x0), function, DoubleArrayEvaluationCountingFunctionFunctionWrapper(function));

    // The result should be the minimum point
    assertEquals(2, result.getMinValue(), 1e-6);
    assertEquals(1, result.getMinEstimatedValue(), 1e-6);
    assertEquals(2, result.getMinParams()[0], 1e-6);
    assertEquals(1, result.getMinParams()[1], 1e-6);
}
