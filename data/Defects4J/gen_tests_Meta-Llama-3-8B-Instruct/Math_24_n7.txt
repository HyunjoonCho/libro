
public void testBrentOptimizer() {
    BrentOptimizer optimizer = new BrentOptimizer();
    // Set up a simple function to optimize
    OptimizableFunction function = new OptimizableFunction() {
        @Override
        public double value(double[] point) {
            return point[0] * point[0] + point[1] * point[1];
        }
    };

    // Set up initial point
    double[] initialPoint = new double[] {1.0, 2.0};

    // Run the optimization
    double[] bestPoint = optimizer.optimize(0, 3, 1e-6, 10000, function, initialPoint);

    // Check if the best point is indeed the best
    double bestValue = function.value(bestPoint);
    for (double[] point : new double[][] {{1.0, 1.5}, {1.5, 1.5}, {1.0, 2.0}}) {
        double value = function.value(point);
        if (value < bestValue) {
            fail("BrentOptimizer did not return the best point");
        }
    }
}
