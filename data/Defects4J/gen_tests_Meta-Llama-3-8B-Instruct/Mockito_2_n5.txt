java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.mockito.junit.MockitoJUnitRunner;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import static org.junit.Assert.fail;

@RunWith(MockitoJUnitRunner.class)
public class MockitoAfterTest {

    @Test
    public void testAfterWithNegativeTimePeriod() {
        Runnable runnable = Mockito.mock(Runnable.class);
        Mockito.verify(runnable, Mockito.after(-1000).atLeastOnce()).run();

        // Verify that the verification always passes
        try {
            Method verifyMethod = MockitoAnnotations.class.getMethod("verify");
            verifyMethod.invoke(runnable);
        } catch (IllegalAccessException | InvocationTargetException e) {
            fail("Verification should not throw an exception");
        }
    }
}
