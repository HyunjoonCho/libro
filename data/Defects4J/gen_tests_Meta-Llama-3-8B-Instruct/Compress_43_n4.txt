java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class ZipArchiveOutputStreamTest {

    @Parameters
    public static List<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {true, true, 0x0000, 0x0002},
                {true, false, 0x0000, 0x0002},
                {false, true, 0x0000, 0x0200},
                {false, false, 0x0000, 0x0002}
        });
    }

    private boolean phased;
    private boolean zip64;
    private short expectedVersionNeeded;
    private byte[] buffer;

    public ZipArchiveOutputStreamTest(boolean phased, boolean zip64, short expectedVersionNeeded, byte[] buffer) {
        this.phased = phased;
        this.zip64 = zip64;
        this.expectedVersionNeeded = expectedVersionNeeded;
        this.buffer = buffer;
    }

    @Test
    public void testVersionNeededToExtract() throws IOException {
        // Given
        ZipArchiveOutputStream zipArchiveOutputStream = new ZipArchiveOutputStream(new ByteArrayOutputStream());
        zipArchiveOutputStream.setPhased(phased);
        zipArchiveOutputStream.setZip64(zip64);

        // When
        zipArchiveOutputStream.putShort(expectedVersionNeeded, buffer, 0x1011);

        // Then
        assertEquals(expectedVersionNeeded, buffer[0]);
        assertEquals(expectedVersionNeeded, buffer[1]);
    }
}
