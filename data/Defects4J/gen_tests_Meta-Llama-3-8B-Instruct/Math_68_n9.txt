
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.junit.Assert;

import org.apache.commons.math3.optimization.leastsquares.LevenbergMarquardtOptimizer;
import org.apache.commons.math3.optimization.leastsquares.VectorialConvergenceChecker;

@RunWith(JUnit4.class)
public class LevenbergMarquardtOptimizerTest {

    @Test
    public void testLevenbergMarquardtOptimizer_Ignores_VectorialConvergenceChecker() {
        // Set up the optimizer
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();

        // Create a custom convergence checker
        VectorialConvergenceChecker convergenceChecker = new CustomConvergenceChecker();

        // Pass the convergence checker to the optimizer
        optimizer.setVectorialConvergenceChecker(convergenceChecker);

        // Perform the optimization
        optimizer.optimize(null, null, null, null);

        // Verify that the convergence checker was ignored
        Assert.fail("Expected the optimizer to ignore the custom convergence checker");
    }
}
