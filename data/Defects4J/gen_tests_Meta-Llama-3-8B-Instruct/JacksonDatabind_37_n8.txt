java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import java.io.IOException;
import java.io.StringWriter;
import java.io.Writer;

@RunWith(Parameterized.class)
public class TestJsonMapSchema {
    @Parameterized.Parameter(0)
    public String json;

    @Parameterized.Parameter(1)
    public JsonMapSchema expected;

    @Parameterized.Parameters
    public static Object[][] data() {
        return new Object[][]{
                {"{\"version\": '1.0', \"schemas\": [{\"name\": 'FoodMart', \"tables\": [{\"name\": 'time_by_day', \"columns\": [{\"name\": 'time_id'}]}, {\"name\":'sales_fact_1997', \"columns\": [{\"name\": 'time_id'}]}]}]}", new JsonMapSchema("FoodMart")},
        };
    }

    @Test
    public void testRead() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);
        JsonMapSchema jsonMapSchema = mapper.readValue(json, JsonMapSchema.class);
        assertEquals(expected.getName(), jsonMapSchema.getName());
    }
}
