public void testGetResult() {
    MultiStartUnivariateRealOptimizer optimizer = new MultiStartUnivariateRealOptimizer();
    // Initialize the optimizer with some values
    optimizer.optimize(new UnivariateRealFunction() {
        @Override
        public double evaluate(double x) {
            return x; // For example, a simple function that returns the input
        }
    });
    // Run the optimizer multiple times
    optimizer.optimize(new UnivariateRealFunction() {
        @Override
        public double evaluate(double x) {
            return x; // For example, a simple function that returns the input
        }
    });
    // The "getResult" method should return the best result, not the last one
    double expected = 0.0; // Replace with the expected result
    double actual = optimizer.getResult();
    assertNotEquals(expected, actual);
}