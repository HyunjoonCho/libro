
import org.junit.Test;
import org.mockito.exceptions.verification.TooManyActualInvocations;

import static org.junit.Assert.assertEquals;

public class GenericMetadataSupportTest {

    @Test
    public void typeVariable_of_self_type() {
        GenericMetadataSupport genericMetadata = GenericMetadataSupport.inferFrom(GenericsSelfReference.class).resolveGenericReturnType(GenericSelfReference.class.getMethod("self"));
        assertEquals(GenericSelfReference.class, genericMetadata.getRawType());
    }

    interface GenericsSelfReference<T extends GenericsSelfReference<T>> {
        T self();
    }

    @Test(expected = TooManyActualInvocations.class)
    public void testStackOverflowError() {
        GenericMetadataSupport.inferFrom(GenericsSelfReference.class).resolveGenericReturnType(GenericSelfReference.class.getMethod("self"));
    }
}
