java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.junit.Test;

import static org.junit.Assert.assertThrows;

public class JacksonDeserializationTest {

    @Test
    public void testDeserializationFromEmptyObjectToJsonNode() throws Exception {
        ObjectMapper om = new ObjectMapper();
        ObjectNode object = new ObjectNode(om.getJsonFactory());
        String json = om.writeValueAsString(object);

        assertThrows(JsonMappingException.class, () -> om.readValue(json, ObjectNode.class));
    }

    @Test
    public void testDeserializationFromEmptyObjectToMyValue() throws Exception {
        ObjectMapper om = new ObjectMapper();
        ObjectNode object = new ObjectNode(om.getJsonFactory());
        String json = om.writeValueAsString(object);

        assertThrows(JsonMappingException.class, () -> om.readValue(json, MyValue.class));
    }
}

class MyValue {
    private final ObjectNode object;

    @JsonCreator
    public MyValue(ObjectNode object) {
        this.object = object;
    }

    @JsonValue
    public ObjectNode getObject() {
        return object;
    }
}
