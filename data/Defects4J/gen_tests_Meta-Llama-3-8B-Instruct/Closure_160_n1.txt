java
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class CheckVarsUndefinedVarsTest {

    @Test
    public void testCheckVarsUndefinedVars() {
        // Test 1: No warnings
        ProcessBuilder pb = new ProcessBuilder("java", "-jar", "compiler.jar", "--js", "test.js");
        Process process = pb.start();
        process.waitFor();
        assertEquals(0, process.exitValue());

        // Test 2: With checkVars warning
        pb = new ProcessBuilder("java", "-jar", "compiler.jar", "--js", "test.js", "--jscomp_warning", "checkVars");
        process = pb.start();
        process.waitFor();
        assertEquals(0, process.exitValue()); // Expecting warnings, but it doesn't work

        // Test 3: With undefinedVars warning
        pb = new ProcessBuilder("java", "-jar", "compiler.jar", "--js", "test.js", "--jscomp_warning", "undefinedVars");
        process = pb.start();
        process.waitFor();
        assertEquals(0, process.exitValue()); // Expecting warnings, but it doesn't work

        // Test 4: With verbose warning level
        pb = new ProcessBuilder("java", "-jar", "compiler.jar", "--js", "test.js", "--warning_level", "VERBOSE");
        process = pb.start();
        process.waitFor();
        assertEquals(0, process.exitValue()); // Expecting warnings, and they work
    }
}
