public void testAbstractClassMocking() {
    // Example 1
    AbstractUserAccount userAccount = mock(AbstractUserAccount.class);
    when(userAccount.getEmails()).thenReturn(Arrays.asList("email1", "email2"));
    when(userAccount.addEmail("newEmail")).thenReturn(userAccount);
    assertEquals("email1", userAccount.getEmails().get(0));
    assertEquals("email2", userAccount.getEmails().get(1));
    userAccount.addEmail("newEmail");
    assertEquals(3, userAccount.getEmails().size());

    // Example 2
    AbstractAccountService accountService = mock(AbstractAccountService.class);
    when(accountService.getAccount("id")).thenReturn(new UserAccount());
    AccountService service = (AccountService) accountService;
    service.getAccount("id", new AsyncCallback<UserAccount>() {
        @Override
        public void onFailure(Throwable throwable) {
            fail();
        }
        @Override
        public void onSuccess(UserAccount userAccount) {
            // do nothing
        }
    });

    // Example 3
    AbstractAccountRpcService accountRpcService = mock(AbstractAccountRpcService.class);
    when(accountRpcService.getAccount("id")).thenReturn(Futures.immediateFuture(new Account()));
    AccountRpcService service = (AccountRpcService) accountRpcService;
    service.getAccount("id", RpcContext.create());
}