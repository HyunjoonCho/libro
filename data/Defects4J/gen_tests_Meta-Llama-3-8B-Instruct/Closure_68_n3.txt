
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class BugReportTest {

    @Test
    public void testCrypticError() {
        // Arrange
        String testJs = "/**\n" +
                " * @type function\n" +
                " */\n" +
                "var callback;\n";

        // Act
        String output = runCompiler(testJs);

        // Assert
        assertTrue(output.contains("WARNING - Parse error. Unexpected end of file"));
        assertEquals("test.js:3: WARNING - Parse error. Unexpected end of file\n" +
                " */\n" +
                " ^", output);
    }

    private String runCompiler(String testJs) {
        // Replace with your actual compiler command
        // For example, you can use a ProcessBuilder to run the command
        // and get the output
        // For simplicity, just return a sample output
        return "Warning reported is:\n" +
                "test.js:3: WARNING - Parse error. Unexpected end of file\n" +
                " */\n" +
                " ^";
    }
}
