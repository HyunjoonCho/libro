java
import org.junit.Test;
import static org.junit.Assert.fail;

public class CompilerIssueTest {
    @Test
    public void testInstanceMethodCall() {
        try {
            // Compile and run the following code
            // goog.require('goog.graphics.Path');
            // function demo() {
            //     var path = new goog.graphics.Path();
            //     var points = [[1,1], [2,2]];
            //     for (var i = 0; i < points.length; i++) {
            //         (i == 0? path.moveTo : path.lineTo)(points[i][0], points[i][1]);
            //     }
            // }
            // goog.exportSymbol('demo', demo);

            // This will throw an error
            Object path = new Object();
            Object points = new Object();
            ((Object[]) points).length = 2;
            ((Object[]) points)[0] = new Object[2];
            ((Object[]) points)[0][0] = 1;
            ((Object[]) points)[0][1] = 1;
            ((Object[]) points)[1] = new Object[2];
            ((Object[]) points)[1][0] = 2;
            ((Object[]) points)[1][1] = 2;

            for (int i = 0; i < 2; i++) {
                ((Object) (i == 0? path : path)).moveTo(((Object[]) points)[i][0], ((Object[]) points)[i][1]);
            }
            fail("Expected an error");
        } catch (Exception e) {
            // Expected exception
        }
    }
}
