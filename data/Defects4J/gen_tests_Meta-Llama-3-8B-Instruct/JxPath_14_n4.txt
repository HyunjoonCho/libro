public void testCoreRoundingFunctions() {
    double resultNaN = XPathUtil.floor(Double.NaN);
    assertEquals(Double.NaN, resultNaN);
    
    double resultNegativeInfinity = XPathUtil.floor(Double.NEGATIVE_INFINITY);
    assertEquals(Double.NEGATIVE_INFINITY, resultNegativeInfinity);
    
    double resultPositiveInfinity = XPathUtil.floor(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, resultPositiveInfinity);
    
    resultNaN = XPathUtil.ceiling(Double.NaN);
    assertEquals(Double.NaN, resultNaN);
    
    resultNegativeInfinity = XPathUtil.ceiling(Double.NEGATIVE_INFINITY);
    assertEquals(Double.NEGATIVE_INFINITY, resultNegativeInfinity);
    
    resultPositiveInfinity = XPathUtil.ceiling(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, resultPositiveInfinity);
    
    resultNaN = XPathUtil.round(Double.NaN);
    assertEquals(Double.NaN, resultNaN);
    
    resultNegativeInfinity = XPathUtil.round(Double.NEGATIVE_INFINITY);
    assertEquals(Double.NEGATIVE_INFINITY, resultNegativeInfinity);
    
    resultPositiveInfinity = XPathUtil.round(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, resultPositiveInfinity);
}