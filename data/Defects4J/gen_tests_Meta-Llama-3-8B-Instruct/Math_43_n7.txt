java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.apache.commons.math3.stat.StatUtils;

import java.util.Arrays;

@RunWith(JUnit4.class)
public class TestStatistics {
    
    @Test
    public void testSetVarianceImpl() {
        int[] scores = {1, 2, 3, 4};
        SummaryStatistics stats = new SummaryStatistics();
        stats.setVarianceImpl(new Variance(false)); //use "population variance"
        for(int i : scores) {
            stats.addValue(i);
        }
        double sd1 = stats.getStandardDeviation();
        // This should print NaN
        assertDoubleNaN(sd1);
        double sd2 = FastMath.sqrt(stats.getSecondMoment() / stats.getN());
        // This should not print NaN
        assertNotDoubleNaN(sd2);
    }

    private void assertDoubleNaN(double value) {
        if (!Double.isNaN(value)) {
            throw new AssertionError("Expected NaN, but got " + value);
        }
    }

    private void assertNotDoubleNaN(double value) {
        if (Double.isNaN(value)) {
            throw new AssertionError("Expected non-NaN, but got NaN");
        }
    }
}
