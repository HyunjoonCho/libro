java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;
import java.io.Writer;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class ExternalIdDeserTest {

    @Test
    public void testExternalPropertyIsNullAfterDeserialization() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);
        TypeFactory typeFactory = mapper.getTypeFactory();

        Map<String, Object> map = new HashMap<>();
        map.put("id", "com.example.ExternalType");

        Writer writer = new StringWriter();
        mapper.writeValue(writer, map);

        String json = writer.getBuffer().toString();
        Map<String, Object> deserializedMap = mapper.readValue(json, typeFactory.constructMapLikeType(Map.class));

        ContextualKeyDeserializer deserializer = (ContextualKeyDeserializer) mapper.getDeserializationConfig().getDeserializers().getDeserializerInstance(Map.class);
        assertNotNull(deserializer);
        // Add assertion to verify that external property is not null
    }
}
