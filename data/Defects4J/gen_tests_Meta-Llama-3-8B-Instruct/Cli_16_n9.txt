java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.List;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

@RunWith(Parameterized.class)
public class GroupConstraintsTest {

    @Parameters
    public static List<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {true, true}, // Group A is present, Group B's min and max constraints should take into account
                {false, true}, // Group A is not present, Group B's min and max constraints should not take into account
        });
    }

    @Parameter(0)
    public boolean isGroupAPresent;

    @Parameter(1)
    public boolean expectedResult;

    @Test
    public void testGroupConstraints() {
        CommandLine commandLine = new CommandLine();
        Option optionA = new Option("A", true);
        Option optionB = new Option("B", true);
        optionB.addGroup(optionA);
        commandLine.addOption(optionA);
        if (isGroupAPresent) {
            commandLine.addOption(optionA);
        }

        OptionGroup optionGroup = new OptionGroup(optionB);
        optionGroup.setMin(1);
        optionGroup.setMax(3);
        commandLine.addOption(optionGroup);

        assertTrue(optionGroup.hasOption(optionB));
        if (isGroupAPresent) {
            assertTrue(optionGroup.hasOption(optionA));
        } else {
            assertFalse(optionGroup.hasOption(optionA));
        }
        assertEquals(expectedResult, optionGroup.isMinIncluded());
        assertEquals(expectedResult, optionGroup.isMaxIncluded());
    }
}
