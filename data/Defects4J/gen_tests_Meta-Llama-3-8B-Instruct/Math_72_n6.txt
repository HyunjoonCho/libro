
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.apache.commons.math3.optimization.univariate.BrentOptimizer;
import org.apache.commons.math3.analysis.UnivariateFunction;

import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class BrentSolverTest {

    @Test
    public void testBrentSolverReturnsWrongValueIfBracketEndpointIsRoot() {
        UnivariateFunction f = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return x * x - 1; // f(x) = x^2 - 1
            }
        };

        double min = 0;
        double max = 1;
        double initial = 0.5;

        BrentOptimizer optimizer = new BrentOptimizer();
        double result = optimizer.solve(f, min, max, initial);

        assertEquals(1, result, 0.0001); // expected result is the root at x = 1
    }
}
