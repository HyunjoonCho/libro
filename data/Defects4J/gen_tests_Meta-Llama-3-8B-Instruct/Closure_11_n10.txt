public void testRecordTypeInvalidProperty() {
    Compiler compiler = new Compiler();
    String code = "var makeClass = function(protoMethods) {" +
            " var clazz = function() {" +
            " this.initialize.apply(this, arguments);" +
            "};" +
            " for (var i in protoMethods) {" +
            " clazz.prototype[i] = protoMethods[i];" +
            "};" +
            " return clazz;" +
            "}" +
            "\*\* @constructor" +
            " \* @param {{name: string, height: number}} options" +
            " var Person = function(options){" +
            "};" +
            "Person = makeClass(/\*\* @lends Person.prototype \*/ {" +
            " \*\* @this {Person}" +
            " \* @param {{name: string, height: number}} options" +
            " initialize: function(options) {" +
            " \*\* @type {string} \*" +
            " this.name_ = options.thisPropDoesNotExist;" +
            "}," +
            " \*\* @param {string} message" +
            " \* @this {Person}" +
            " say: function(message) {" +
            " window.console.log(this.name_ +'says:'+ message);" +
            "}" +
            "');" +
            "var joe = new Person({name: 'joe', height: 300});" +
            "joe.say('hi');";
    try {
        compiler.compile(code);
        fail("Expected a compiler error");
    } catch (CompilationException e) {
        // expected
    }
}