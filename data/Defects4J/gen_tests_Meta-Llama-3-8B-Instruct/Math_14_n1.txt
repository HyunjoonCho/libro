java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertThrows;
import static org.junit.Assert.fail;

@RunWith(Parameterized.class)
public class LargeWeightTest {

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][] {
                { 10000 },
                { 20000 },
                { 30000 },
                { 40000 },
                { 50000 }
        });
    }

    private int n;

    public LargeWeightTest(int n) {
        this.n = n;
    }

    @Test
    public void testLargeWeight() {
        // Create a large number of weights
        double[] weights = new double[n * n];

        // Create a multivariate vector optimizer
        //...

        // This should throw an OutOfMemoryError when n is large
        assertThrows(OutOfMemoryError.class, () -> {
            // Use the multivariate vector optimizer
        });
    }
}
