public void testWriting7zEmptyEntriesProducesIncorrectOrCorruptArchive() {
    // Scenario 1: 7 empty files
    String[] files = new String[7];
    for (int i = 0; i < 7; i++) {
        files[i] = "emptyFile" + i + ".txt";
    }
    // Create archive with 7 empty files
    // Verify that the created archive contains a single folder entry with the name of the archive
    //...

    // Scenario 2: 7 files, some empty, some with content
    files = new String[7];
    for (int i = 0; i < 7; i++) {
        if (i % 2 == 0) {
            files[i] = "emptyFile" + i + ".txt";
        } else {
            files[i] = "fileWithContent" + i + ".txt";
        }
    }
    // Create archive with 7 files, some empty, some with content
    // Verify that the created archive contains a folder entry with the name of the archive and a number of file entries also with the name of the archive
    //...

    // Scenario 3: 8 empty files
    files = new String[8];
    for (int i = 0; i < 8; i++) {
        files[i] = "emptyFile" + i + ".txt";
    }
    try {
        // Create archive with 8 empty files
        // Verify that 7Zip Manager cannot open archive and stops working
        //...
        fail("Expected 7Zip Manager to stop working");
    } catch (Exception e) {
        // Expected exception
    }

    // Scenario 4.1: 8 files: some empty, some with content, last file (alphabetically) with content
    files = new String[8];
    for (int i = 0; i < 8; i++) {
        if (i % 2 == 0) {
            files[i] = "emptyFile" + i + ".txt";
        } else {
            files[i] = "fileWithContent" + i + ".txt";
        }
    }
    // Create archive with 8 files, some empty, some with content, last file with content
    // Verify that the created archive contains a folder entry with the name of the archive and a number of file entries also with the name of the archive
    //...

    // Scenario 4.2: 8 files, some empty, some with content, last file empty
    files = new String[8];
    for (int i = 0; i < 8; i++) {
        if (i % 2 == 0) {
            files[i] = "emptyFile" + i + ".txt";
        } else {
            files[i] = "fileWithContent" + i + ".txt";
        }
    }
    files[7] = "emptyFile8.txt"; // Last file is empty
    try {
        // Create archive with 8 files, some empty, some with content, last file empty
        // Verify that the archive is corrupt and the following message is received: "Cannot open file 'archivename.7z' as archive"
        //...
        fail("Expected archive to be corrupt");
    } catch (Exception e) {
        assertEquals("Cannot open file 'archivename.7z' as archive", e.getMessage());
    }
}