
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.List;

import picocli.CommandLine;

@RunWith(Parameterized.class)
public class LongOptAmbiguousTest {
    
    @Parameters
    public static List<Object[]> data() {
        return Arrays.asList(new Object[][] {
            {"--import=FILE", true},
            {"--importToOpen=FILE", true},
            {"--import=FILE --importToOpen=FILE", false}
        });
    }

    @Parameter(0)
    public String[] args;

    @Parameter(1)
    public boolean expectedAmbiguous;

    @Test
    public void testLongOptAmbiguous() {
        Options options = new Options();
        options.addOption(Option.builder().longOpt("importToOpen").hasArg().argName("FILE").build());
        options.addOption(Option.builder("i").longOpt("import").hasArg().argName("FILE").build());
        CommandLine commandLine = new DefaultParser().parse(options, args);
        boolean ambiguous = commandLine.ambiguousOptions();
        assertEquals(expectedAmbiguous, ambiguous);
    }
}
