public void testDerivativeStructureAtan2() {
    DerivativeStructure ds = new DerivativeStructure(1.0, 1.0, 0.0, 0.0);
    assertEquals(Double.NaN, ds.atan2(0.0, 0.0).doubleValue());
    ds = new DerivativeStructure(1.0, 1.0, 0.0, Double.POSITIVE_INFINITY);
    assertEquals(Math.PI / 2, ds.atan2(0.0, Double.POSITIVE_INFINITY).doubleValue(), 1e-15);
    ds = new DerivativeStructure(1.0, 1.0, 0.0, Double.NEGATIVE_INFINITY);
    assertEquals(-Math.PI / 2, ds.atan2(0.0, Double.NEGATIVE_INFINITY).doubleValue(), 1e-15);
    ds = new DerivativeStructure(1.0, 1.0, Double.POSITIVE_INFINITY, 0.0);
    assertEquals(Math.PI / 2, ds.atan2(Double.POSITIVE_INFINITY, 0.0).doubleValue(), 1e-15);
    ds = new DerivativeStructure(1.0, 1.0, Double.NEGATIVE_INFINITY, 0.0);
    assertEquals(-Math.PI / 2, ds.atan2(Double.NEGATIVE_INFINITY, 0.0).doubleValue(), 1e-15);
}