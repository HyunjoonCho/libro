java
import org.junit.Test;
import static org.junit.Assert.assertArrayEquals;

import org.apache.commons.math3.distribution.GammaDistribution;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

public class GammaDistributionCloningTest {
    
    @Test
    public void testGammaDistributionCloning() {
        GammaDistribution gammaDistribution = new GammaDistribution(1, 1);
        byte[] serialized = serialize(gammaDistribution);
        GammaDistribution cloned = (GammaDistribution) deserialize(serialized);
        double[] samples = new double[100];
        cloned.sample(samples);
        double[] expectedSamples = new double[100];
        gammaDistribution.sample(expectedSamples);
        assertArrayEquals(expectedSamples, samples);
    }

    private byte[] serialize(Object obj) {
        try (ByteArrayOutputStream bos = new ByteArrayOutputStream();
             ObjectOutputStream oos = new ObjectOutputStream(bos)) {
            oos.writeObject(obj);
            return bos.toByteArray();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    private Object deserialize(byte[] bytes) {
        try (ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
             ObjectInputStream ois = new ObjectInputStream(bis)) {
            return ois.readObject();
        } catch (IOException | ClassNotFoundException e) {
            throw new RuntimeException(e);
        }
    }
}
