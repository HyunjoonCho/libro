java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class JsCompilerFlagsTest {

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {"--warning_level VERBOSE --jscomp_off globalThis --jscomp_off nonStandardJsDocs", "nonStandardJsDocs", "globalThis"},
                {"--jscomp_error --jscomp_off globalThis", "Error", "globalThis"}
        });
    }

    private String command;
    private String expectedOutput;
    private String expectedWarning;

    public JsCompilerFlagsTest(String command, String expectedOutput, String expectedWarning) {
        this.command = command;
        this.expectedOutput = expectedOutput;
        this.expectedWarning = expectedWarning;
    }

    @Test
    public void testJsCompilerFlags() {
        // Run the command and capture the output
        Process process = Runtime.getRuntime().exec(command);
        String output = new BufferedReader(new InputStreamReader(process.getInputStream())).lines().collect(Collectors.joining("\n"));

        // Check the output
        assertEquals(expectedOutput, output);

        // Check the warning
        assertEquals(expectedWarning, output.contains(expectedWarning));
    }
}
