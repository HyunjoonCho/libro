java
public void testTarArchiveInputStreamSilentlyFinishedWhenUnexpectedEOF() throws IOException {
    // Create a test archive with a corrupted bzip2 stream
    String archivePath = PathUtil.join(testdataDir, "test.tar.bz2");
    BZip2CompressorInputStream bzip2Stream = new BZip2CompressorInputStream(new ByteArrayInputStream(new byte[]{0x12, 0x34, 0x56}), true);
    TarArchiveInputStream input = new TarArchiveInputStream(bzip2Stream, true);
    ArchiveEntry nextMatchedEntry = input.getNextEntry();

    // Expect an exception to be thrown when encountering unexpected EOF
    try {
        while (nextMatchedEntry!= null) {
            logger.infofmt("Extracting %s", nextMatchedEntry.getName());
            String outputPath = PathUtil.join("/tmp/", nextMatchedEntry.getName());
            OutputStream out = new FileOutputStream(outputPath);
            ByteStreams.copy(input, out);
            out.close();
            nextMatchedEntry = input.getNextEntry();
        }
    } catch (IOException expected) {
        // The test should pass if an IOException is thrown
        return;
    }
    fail("Expected IOException not thrown");
}
