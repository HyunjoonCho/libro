java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.io.ByteArrayInputStream;
import java.io.InputStream;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class UTF8StreamJsonParserTest {

    @Parameters
    public static Iterable<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {0, 0, 10, 0, 10, false},
                {10, 5, 20, 10, 15, false}
        });
    }

    private int expectedStart;
    private int expectedEnd;
    private boolean bufferRecyclable;
    private int expectedCol;

    public UTF8StreamJsonParserTest(int expectedStart, int expectedEnd, int inputBuffer, int start, int end, boolean bufferRecyclable) {
        this.expectedStart = expectedStart;
        this.expectedEnd = expectedEnd;
        this.bufferRecyclable = bufferRecyclable;
        this.expectedCol = start - expectedStart + 1;
    }

    @Test
    public void testCurrInputRowStart() {
        UTF8StreamJsonParser parser = new UTF8StreamJsonParser(new IOContext(), 0, new ByteArrayInputStream(new byte[inputBuffer]), null, null, new byte[inputBuffer], expectedStart, expectedEnd, bufferRecyclable);
        assertEquals(expectedCol, parser._currInputRowStart);
    }
}
