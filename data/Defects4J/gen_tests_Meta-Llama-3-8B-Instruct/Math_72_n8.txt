java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

@RunWith(Parameterized.class)
public class BrentSolverTest {

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {1, 0, 2}, // min is a root
                {2, 1, 3}, // max is a root
                {1, 2, 3} // min and max are not roots
        });
    }

    private final double min;
    private final double max;
    private final double expected;

    public BrentSolverTest(double min, double max, double expected) {
        this.min = min;
        this.max = max;
        this.expected = expected;
    }

    @Test
    public void testBrentSolver() {
        // create a function that always returns the input
        UnivariateRealFunction f = new UnivariateRealFunction() {
            @Override
            public double value(double x) {
                return x;
            }
        };

        double result = BrentSolver.solve(f, min, max, 1.0);
        assertEquals(expected, result, 0.00001);
    }
}
