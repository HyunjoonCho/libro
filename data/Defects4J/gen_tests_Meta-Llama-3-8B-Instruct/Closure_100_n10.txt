java
import com.google.javascript.jscomp.CompilerTestCase;

public class TestDangerousUseOfGlobalThis extends CompilerTestCase {

  public void testDangerousUseOfGlobalThis() {
    // Test code
    String code = """
      function Foo() {
        this._bar = null;
      }

      function writeMethodWithAnnotation() {
        this._bar = 123; // no warning. ok
      }

      function readMethodWithAnnotation() {
        return this._bar; // no warning. ok
      }

      function writeMethodWithoutAnnotation() {
        this._bar = 123; // warning. ok.
      }

      function readMethodWithoutAnnotation() {
        return this._bar; // <- No warning!
      }
      """;

    // Expected warnings
    String[] expectedWarnings = {
      "readMethodWithoutAnnotation() uses the global this object",
      "writeMethodWithoutAnnotation() uses the global this object"
    };

    // Run the compiler
    CompilerResult result = compiler.compile(code);

    // Check the warnings
    String[] warnings = result.getWarnings();
    assertEquals(expectedWarnings, warnings);
  }
}
