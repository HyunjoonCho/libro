
public void testExtraneousTypeMapping() {
    // Create a base type with an explicit name
    Type baseType = new Type("BaseType");
    baseType.addAnnotation("type", "BaseType");

    // Create a type that extends the base type
    Type subType = new Type("SubType");
    subType.addAnnotation("type", "SubType");
    subType.addAnnotation("extends", baseType);

    // Add the base type to the type resolution list
    TypeResolutionList typeResolutionList = new TypeResolutionList();
    typeResolutionList.add(baseType);

    // Check if the base type is included in the type resolution list
    assertTrue(typeResolutionList.contains(baseType));

    // Create a type with the same name as the base type
    Type sameNameType = new Type("BaseType");

    // Add the same name type to the type resolution list
    typeResolutionList.add(sameNameType);

    // Check if the same name type is included in the type resolution list
    assertTrue(typeResolutionList.contains(sameNameType));
}
