java
public class TestTreeTraversingParser {
    private final ObjectMapper mapper = new ObjectMapper();

    @Test
    public void testTreeTraversingParser() throws IOException {
        readAndPrint("{\"x\": 0}");
        readAndPrint("{\"x\": 10}");
        readAndPrint("{\"x\": 1e4}");
        readAndPrint("{\"x\": 1e10}");
        readAndPrint("{\"x\": 1e-1}");
        readAndPrint("{\"x\": 2147483648}");
        readAndPrint("{\"x\": 2147483649}");
        readAndPrint("{\"x\": -2147483649}");
        readAndPrint("{\"x\": -4294967295}");
        readAndPrint("{\"x\": 0.1}");
        readAndPrint("{\"x\": 1.9}");
        readAndPrint("{\"x\": 1.9999999999999999}");
        readAndPrint("{\"x\": true}");
        readAndPrint("{\"x\": {}}");
        readAndPrint("{\"x\": []}");
        readAndPrint("{\"x\": [0]}");
        readAndPrint("{\"x\": \"0\"}");
        readAndPrint("{\"x\": \"10\"}");
        readAndPrint("{\"x\": \"1e4\"}");
        readAndPrint("{\"x\": \"1e10\"}");
        readAndPrint("{\"x\": \"1e-1\"}");
        readAndPrint("{\"x\": \"2147483648\"}");
        readAndPrint("{\"x\": \"2147483649\"}");
        readAndPrint("{\"x\": \"-2147483649\"}");
        readAndPrint("{\"x\": \"-4294967295\"}");
        readAndPrint("{\"x\": \"0.1\"}");
        readAndPrint("{\"x\": \"1.9\"}");
        readAndPrint("{\"x\": \"1.9999999999999999\"}");
        readAndPrint("{\"x\": \"true\"}");
        readAndPrint("{\"x\": \"{}\"}");
        readAndPrint("{\"x\": \"[]\"}");
        readAndPrint("{\"x\": \"[0]\"}");
    }

    private void readAndPrint(String example) throws IOException {
        String fromTree;
        try {
            JsonNode tree = mapper.readTree(example);
            fromTree = mapper.readerFor(IntClass.class).readValue(tree).toString();
        } catch (IOException e) {
            fromTree = e.getClass().getSimpleName();
        }

        String fromString;
        try {
            fromString = mapper.readerFor(IntClass.class).readValue(example).toString();
        } catch (IOException e) {
            fromString = e.getClass().getSimpleName();
        }

        System.out.printf("|%30s | %30s | %-30s|\n", example, fromTree, fromString);
    }
}
