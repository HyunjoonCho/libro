public void testTreeTraversingParserDoesNotCheckIntBounds() {
    assertEquals(0, mapper.readValue("{\"x\": 0}", IntClass.class).x);
    assertEquals(10, mapper.readValue("{\"x\": 10}", IntClass.class).x);
    assertEquals(10000, mapper.readValue("{\"x\": 10000}", IntClass.class).x);
    assertEquals(2147483647, mapper.readValue("{\"x\": 2147483647}", IntClass.class).x);
    assertEquals(-2147483648, mapper.readValue("{\"x\": -2147483648}", IntClass.class).x);
    assertEquals(-2147483647, mapper.readValue("{\"x\": -2147483647}", IntClass.class).x);
    try {
        mapper.readValue("{\"x\": 2147483649}", IntClass.class);
        fail("Expected JsonMappingException");
    } catch (JsonMappingException e) {
        // expected
    }
    try {
        mapper.readValue("{\"x\": -4294967295}", IntClass.class);
        fail("Expected JsonMappingException");
    } catch (JsonMappingException e) {
        // expected
    }
    assertEquals(0, mapper.readValue("{\"x\": 0.1}", IntClass.class).x);
    assertEquals(1, mapper.readValue("{\"x\": 1}", IntClass.class).x);
    assertEquals(2, mapper.readValue("{\"x\": 1.9999999999999999}", IntClass.class).x);
    try {
        mapper.readValue("{\"x\": true}", IntClass.class);
        fail("Expected MismatchedInputException");
    } catch (MismatchedInputException e) {
        // expected
    }
    try {
        mapper.readValue("{\"x\": {}}", IntClass.class);
        fail("Expected MismatchedInputException");
    } catch (MismatchedInputException e) {
        // expected
    }
    try {
        mapper.readValue("{\"x\": []}", IntClass.class);
        fail("Expected MismatchedInputException");
    } catch (MismatchedInputException e) {
        // expected
    }
    try {
        mapper.readValue("{\"x\": [0]}", IntClass.class);
        fail("Expected MismatchedInputException");
    } catch (MismatchedInputException e) {
        // expected
    }
    assertEquals(0, mapper.readValue("\"0\"", IntClass.class).x);
    assertEquals(10, mapper.readValue("\"10\"", IntClass.class).x);
    try {
        mapper.readValue("\"1e4\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"1e10\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"1e-1\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"2147483648\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"2147483649\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"-2147483649\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"-4294967295\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"0.1\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"1.9\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"1.9999999999999999\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"true\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"{}\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"[]\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
    try {
        mapper.readValue("\"[0}\"", IntClass.class);
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // expected
    }
}