java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

public class JacksonDeserializationTest {

    @Test
    public void testDeserializeNull() throws IOException {
        ObjectMapper objectMapper = new ObjectMapper();
        ObjectReader objectReader = objectMapper.readerFor(MyBean.class);

        MyBean intRef = objectReader.readValue("{\"refRef\": 2}");
        assertNotNull(intRef.getRefRef()); // succeeds
        assertNotNull(intRef.getRefRef().get()); // succeeds
        assertEquals(new Integer(2), intRef.getRefRef().get().get()); // succeeds

        MyBean nullRef = objectReader.readValue("{\"refRef\": null}");
        assertNotNull(nullRef.getRefRef()); // succeeds
        assertNotNull(nullRef.getRefRef().get()); // fails
        assertNull(nullRef.getRefRef().get().get()); // fails
    }
}

class MyBean {
    private AtomicReference<AtomicReference<Integer>> refRef;
    public AtomicReference<AtomicReference<Integer>> getRefRef() {
        return refRef;
    }
    public void setRefRef(AtomicReference<AtomicReference<Integer>> refRef) {
        this.refRef = refRef;
    }
}
