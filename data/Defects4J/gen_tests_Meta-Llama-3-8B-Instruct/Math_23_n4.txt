public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    double[] lowerBounds = new double[] {0};
    double[] upperBounds = new double[] {1};
    ObjectiveFunction objectiveFunction = new ObjectiveFunction(new double[] {0});
    double bestSoFar = Double.NEGATIVE_INFINITY;
    double bestPoint = 0;
    for (double point : new double[] {0, 0.5, 1}) {
        brentOptimizer.optimize(new UnivariateRealPointEvaluation(objectiveFunction), lowerBounds, upperBounds, point);
        if (objectiveFunction.value(0) > bestSoFar) {
            bestSoFar = objectiveFunction.value(0);
            bestPoint = point;
        }
    }
    assertEquals(bestPoint, 0.5, 1e-6);
}