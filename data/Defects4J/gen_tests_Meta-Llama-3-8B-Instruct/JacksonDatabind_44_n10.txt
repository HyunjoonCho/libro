java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationFeature.BeanAsArray;

import java.io.IOException;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.List;

public class TestPolymorphicTypes {
    public static class BaseType {
        public String field1;
    }

    public static class SubType extends BaseType {
        public String field2;
    }

    public static class ObjectMapperTest {
        public static void main(String[] args) throws IOException {
            ObjectMapper mapper = new ObjectMapper();
            mapper.enable(SerializationFeature.WRITE_NULL_MAP_MERGEABLE);
            mapper.enable(SerializationFeature.WRITE_ENUM_FOR_UNKNOWN_FIELD);
            mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);

            BaseType baseType = new BaseType();
            baseType.field1 = "baseTypeField1";

            SubType subType = new SubType();
            subType.field1 = "subTypeField1";
            subType.field2 = "subTypeField2";

            List<BaseType> list = new ArrayList<>();
            list.add(baseType);
            list.add(subType);

            String json = mapper.writeValueAsString(list);
            System.out.println(json);
        }
    }
}
