
public void testJSCUsedGlobalThisWarning() {
    JSC jsc = new JSC();
    jsc.setWarningMode(JSC.WarningMode.ALL);

    // Non-inline notation
    var ns = {
        read: function() {
            return this.foo; // expected warning: JSC_USED_GLOBAL_THIS
        },
        write: function() {
            this.foo = 123; // expected warning: JSC_USED_GLOBAL_THIS
        }
    };

    jsc.executeScript("var NS = " + jsc.toSource(ns));
    jsc.checkWarning("JSC_USED_GLOBAL_THIS", "read", 1);
    jsc.checkWarning("JSC_USED_GLOBAL_THIS", "write", 1);

    // Inline notation
    jsc.executeScript("var NS = {" +
            "write2: function() {" +
            "    this.foo = 123;" +
            "}" +
            "};");
    jsc.checkWarning("JSC_USED_GLOBAL_THIS", "write2", 1);
}
