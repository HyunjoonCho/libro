java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertArrayEquals;

public class ObjectReaderTest {

    @Test
    public void testReadValuesIgnoreOffsetAndLength() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED);

        String json = "{\"value\":[1,2,3,4,5]}";
        ObjectReader reader = mapper.readerFor(List.class);

        List<Integer> result = reader.withType(ArrayList.class).readValue(json);

        // Since readValues ignores offset and length, this should read the full array
        assertArrayEquals(new Integer[]{1, 2, 3, 4, 5}, result.toArray(new Integer[0]));
    }
}
