java
import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;
import com.google.gson.reflect.TypeToken;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;

public class JsonReaderTest {
    @Test
    public void testJsonReader() {
        Gson gson = new Gson();
        String json = "{\"0\":1}";
        Map<Integer, Integer> expected = new HashMap<>();
        expected.put(0, 1);

        Map<Integer, Integer> actual = gson.fromJson(json, new TypeToken<Map<Integer, Integer>>() {}.getType());
        assertEquals(expected, actual);
    }

    @Test
    public void testJsonReaderWithPeekedUnquoted() {
        Gson gson = new Gson();
        String json = "{\"0\":1}";
        Map<Integer, Integer> expected = new HashMap<>();
        expected.put(0, 1);

        JsonSyntaxException exception = assertThrows(JsonSyntaxException.class, () -> {
            gson.fromJson(json, new TypeToken<Map<Integer, Integer>>() {}.getType());
        });
        assertEquals("Expected a colon at line 1 column 3 path $.0", exception.getMessage());
    }
}
