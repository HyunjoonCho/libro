public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    int maxEvaluations = 10;
    double[] minPoint = new double[] {0};
    double[] upperBounds = new double[] {10};
    double[] lowerBounds = new double[] {0};
    double[] initialGuess = new double[] {5};
    double result = brentOptimizer.optimize(new RootFunction(), minPoint, upperBounds, lowerBounds, initialGuess, maxEvaluations);
    double previousValue = Double.POSITIVE_INFINITY;
    for (double[] point : brentOptimizer.getPoints()) {
        if (Math.abs(point[0] - minPoint[0]) < 1e-6) {
            if (Math.abs(RootFunction.value(point)) > previousValue) {
                fail("BrentOptimizer did not return the best point");
            }
            previousValue = RootFunction.value(point);
        }
    }
}