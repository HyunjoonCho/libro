public void testTypedCoverageLessThan100() throws Exception {
    // Create JavaScript file
    String code = "/**global window**/\n" +
            "/*jslint sub: true*/\n" +
            "/**\n" +
            " * @constructor\n" +
            " * @param {!Element} element\n" +
            " */\n" +
            "function Example(element) {\n" +
            "    /\*\*\n" +
            "     * @param {!string} ns\n" +
            "     * @param {!string} name\n" +
            "     * @return {undefined}\n" +
            "     */\n" +
            "    this.appendElement = function appendElement(ns, name) {\n" +
            "        var e = element.ownerDocument.createElementNS(ns, name);\n" +
            "        element.appendChild(e);\n" +
            "    };\n" +
            "}\n" +
            "window[\"Example\"] = Example;";
    
    // Compile it
    // Assuming the compiler is in the classpath
    String[] args = new String[] {"-jar", "compiler.jar", "--jscomp_error", "checkTypes", "--summary_detail_level", "3", "--js", "v.js", "--js_output_file", "compiled.js"};
    ProcessBuilder pb = new ProcessBuilder("java", args);
    Process process = pb.start();
    process.waitFor();
    
    // Check the output
    String output = new String(process.getInputStream().readAllBytes());
    assertEquals(0, Integer.parseInt(output.split("error\\(|\\)")[1].split(",")[0].trim()));
    assertEquals(0, Integer.parseInt(output.split("warning\\(|\\)")[1].split(",")[0].trim()));
    // Expect 73.7% typed, but since this is a test, we'll just check if it's less than 100
    assertTrue(Integer.parseInt(output.split("typed\\(|\\)")[1].split("%")[0].trim()) < 100);
}