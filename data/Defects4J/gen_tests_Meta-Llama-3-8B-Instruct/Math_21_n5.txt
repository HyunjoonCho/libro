java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;

@RunWith(Parameterized.class)
public class CorrelatedRandomVectorGeneratorTest {

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {new Array2DRowRealMatrix(new double[][]{{0.0, 0.0, 0.0, 0.0, 0.0},
                        {0.0, 0.013445532, 0.01039469, 0.009881156, 0.010499559},
                        {0.0, 0.01039469, 0.023006616, 0.008196856, 0.010732709},
                        {0.0, 0.009881156, 0.008196856, 0.019023866, 0.009210099},
                        {0.0, 0.010499559, 0.010732709, 0.009210099, 0.019107243}}),
                        5},
                {new Array2DRowRealMatrix(new double[][]{{0.013445532, 0.01039469, 0.0, 0.009881156, 0.010499559},
                        {0.01039469, 0.023006616, 0.0, 0.008196856, 0.010732709},
                        {0.0, 0.0, 0.0, 0.0, 0.0},
                        {0.009881156, 0.008196856, 0.0, 0.019023866, 0.009210099},
                        {0.010499559, 0.010732709, 0.0, 0.009210099, 0.019107243}}),
                        3},
                {new Array2DRowRealMatrix(new double[][]{{0.013445532, 0.01039469, 0.009881156, 0.010499559},
                        {0.01039469, 0.023006616, 0.008196856, 0.010732709},
                        {0.009881156, 0.008196856, 0.019023866, 0.009210099},
                        {0.010499559, 0.010732709, 0.009210099, 0.019107243}}),
                        4}
        });
    }

    private final Array2DRowRealMatrix matrix;
    private final int expectedRank;

    public CorrelatedRandomVectorGeneratorTest(Array2DRowRealMatrix matrix, int expectedRank) {
        this.matrix = matrix;
        this.expectedRank = expectedRank;
    }

    @Test
    public void testCorrelatedRandomVectorGenerator() {
        CorrelatedRandomVectorGenerator generator = new CorrelatedRandomVectorGenerator(matrix);
        int actualRank = generator.getRank();
        assertEquals(expectedRank, actualRank);
    }
}
