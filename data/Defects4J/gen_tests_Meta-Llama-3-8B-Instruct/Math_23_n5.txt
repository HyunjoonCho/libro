
public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    double[] bounds = new double[]{0, 10};
    double[] initialGuess = new double[]{5};
    double[] optimum = new double[]{4};
    
    // Initialize the brent optimizer
    brentOptimizer.setInitialStepSize(1);
    brentOptimizer.setEpsilon(1e-6);
    brentOptimizer.setMaxEvaluations(1000);
    brentOptimizer.setMinEvaluations(10);
    brentOptimizer.setMaxIterations(1000);
    
    // Evaluate the function at the optimum
    double optimumValue = brentOptimizer.optimize(new MyFunction(), bounds, initialGuess);
    
    // Check that the last evaluated point is the best one
    double lastPoint = brentOptimizer.getLastPoint()[0];
    double lastPointValue = brentOptimizer.getLastPointValue();
    assertTrue(lastPoint == optimum[0] || lastPointValue < optimumValue);
}

class MyFunction implements ObjectiveFunction {
    @Override
    public double value(double[] point) {
        return Math.pow(point[0] - 4, 2);
    }
}
