
import org.joda.time.DateTimeConstants;
import org.joda.time.DateTimeUtils;
import org.joda.time.IllegalFieldValueException;
import org.joda.time.MonthDay;
import org.joda.time.MutableDateTime;
import org.joda.time.ReadablePartial;
import org.joda.time.ReadablePartialField;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.ISODateTimeFormat;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class TestIssue151 {
    @Test(expected = IllegalFieldValueException.class)
    public void testIssue151() {
        DateTimeFormatter dtf = ISODateTimeFormat.monthDay();
        MonthDay isoLeap = MonthDay.fromDateFields(2012, DateTimeConstants.FEBRUARY, 29);
        System.out.println(isoLeap);
        System.out.println(isoLeap.plusDays(2));
    }

    @Test
    public void testPlusDays() {
        DateTimeFormatter dtf = ISODateTimeFormat.monthDay();
        MonthDay isoLeap = MonthDay.fromDateFields(2012, DateTimeConstants.FEBRUARY, 29);
        System.out.println(isoLeap);
        System.out.println(isoLeap.plusDays(1));
        System.out.println(isoLeap.plusDays(2));
    }

    @Test
    public void testMinusDays() {
        DateTimeFormatter dtf = ISODateTimeFormat.monthDay();
        MonthDay isoLeap = MonthDay.fromDateFields(2012, DateTimeConstants.FEBRUARY, 29);
        System.out.println(isoLeap);
        System.out.println(isoLeap.minusDays(1));
        System.out.println(isoLeap.minusDays(2));
    }
}
