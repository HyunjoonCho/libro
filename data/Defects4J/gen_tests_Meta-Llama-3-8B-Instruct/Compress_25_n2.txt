java
import org.junit.Test;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertNotNull;

public class ZipTest {

    @Test
    public void testZip() throws IOException {
        byte[] zip = {
                (byte) 0x50, (byte) 0x4b, (byte) 0x03, (byte) 0x04, (byte) 0x0a, (byte) 0x00,
                (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x7b,
                (byte) 0xd1, (byte) 0x42, (byte) 0x82, (byte) 0xc5, (byte) 0xc1, (byte) 0xe6,
                //...
        };

        ByteArrayInputStream bin = new ByteArrayInputStream(zip);
        ZipArchiveInputStream in = new ZipArchiveInputStream(bin);
        assertNotNull(in);

        byte[] expected = {
                (byte) 0x74, (byte) 0x65, (byte) 0x73, (byte) 0x74, (byte) 0x2e, (byte) 0x74,
                (byte) 0x78, (byte) 0x74, (byte) 0x55, (byte) 0x54, (byte) 0x09, (byte) 0x00,
                (byte) 0x03, (byte) 0x56, (byte) 0x62, (byte) 0xbf, (byte) 0x51, (byte) 0x2a,
                //...
        };

        ZipArchiveEntry entry = in.getNextZipEntry();
        assertNotNull(entry);
        byte[] actual = new byte[(int) entry.getSize()];
        in.read(actual);
        assertArrayEquals(expected, actual);
    }
}
