java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class CompilerTest {
    @Test
    public void testLastWarningOrErrorTruncation() {
        // Create a test file
        String testFile = "test.js";
        StringBuilder sb = new StringBuilder();
        sb.append("alert(foo);\n");
        sb.append("alert(bar);");
        String content = sb.toString();
        java.io.FileWriter fileWriter = new java.io.FileWriter(testFile);
        fileWriter.write(content);
        fileWriter.close();

        // Compile the test file
        String[] args = new String[] {"--warning_level", "VERBOSE", "--js", testFile};
        Process process = new ProcessBuilder("java", "-jar", "compiler.jar").command(args).start();
        StringBuilder output = new StringBuilder();
        String line;
        while ((line = process.readLine())!= null) {
            output.append(line).append("\n");
        }
        process.waitFor();

        // Verify the output
        String expectedOutput = "test.js:1: ERROR - variable foo is undefined\nalert(foo);\n ^\n" +
                "test.js:2: ERROR - variable bar is undefined\n2 error(s), 0 warning(s)\n";
        assertEquals(expectedOutput, output.toString());
    }
}
