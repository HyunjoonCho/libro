java
import org.junit.Test;
import org.junit.Assert;

public class AnonymousObjectTypeInferenceTest {
    @Test
    public void testAnonymousObjectTypeInference() {
        // Test that the compiler infers the correct type for an anonymous object
        // when calling a constructor
        callz({ prop1: 'hi' });
        // This should compile fine

        // Test that the compiler infers the correct type for an anonymous object
        // when calling a function
        callz({ prop1: 'hi' });
        // This should also compile fine

        // Test that the compiler infers the correct type for an anonymous object
        // when calling a constructor, but fails when the object does not have a required property
        try {
            new callz({ prop1: 'hi' });
            Assert.fail("Expected a compiler error");
        } catch (CompilationError e) {
            // Expected error: actual parameter 1 of callz does not match formal parameter
            // found : {prop1: string}
            // required: {prop1: string, prop2: (number|undefined)}
        }
    }
}
