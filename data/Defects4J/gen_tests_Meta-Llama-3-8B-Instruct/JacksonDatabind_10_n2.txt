java
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class JsonAnyGetterTest {

    @Test
    public void testJsonAnyGetterWithJsonSerialize() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        // This test case will fail
        MyObject obj = new MyObject();
        String json = mapper.writeValueAsString(obj);
        assertNotNull(json);

        // This test case will pass
        obj = new MyObjectWithKeySerializer();
        json = mapper.writeValueAsString(obj);
        assertNotNull(json);
    }
}

class MyObject {
    @JsonAnyGetter
    @JsonSerialize
    public Map<String, String> getParameters() {
        Map<String, String> map = new HashMap<>();
        map.put("key", "value");
        return map;
    }
}

class MyObjectWithKeySerializer {
    @JsonAnyGetter
    @JsonSerialize(keyUsing = MyKeySerializer.class)
    public Map<String, String> getParameters() {
        Map<String, String> map = new HashMap<>();
        map.put("key", "value");
        return map;
    }
}
