
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class BrentSolverTest {

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
            {0.0, 1.0, 0.0},
            {1.0, 2.0, 1.0},
            {2.0, 3.0, 2.0},
            // add more test cases here
        });
    }

    private double min;
    private double max;
    private double expected;

    public BrentSolverTest(double min, double max, double expected) {
        this.min = min;
        this.max = max;
        this.expected = expected;
    }

    @Test
    public void testBrentSolver() {
        UnivariateRealFunction f = new UnivariateRealFunction() {
            @Override
            public double value(double x) {
                return x * x - 1; // example function
            }
        };
        double result = BrentSolver.solve(f, min, max, initial);
        assertEquals(expected, result, 0.00001);
    }
}
