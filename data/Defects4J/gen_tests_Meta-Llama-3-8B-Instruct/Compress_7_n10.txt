java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.Arrays;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class TarUtilsTest {

    @Parameters
    public static Iterable<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {new byte[]{(byte) 0x30, (byte) 0x30, (byte) 0x30, (byte) 0x2D, (byte) 0x30, (byte) 0x36, (byte) 0x30, (byte) 0x31, (byte) 0x2D, (byte) 0x33, (byte) 0x0B, (byte) 0x2B, (byte) 0x2B, (byte) 0x2B, (byte) 0x46, (byte) 0x30, (byte) 0x36, (byte) 0x57, (byte) 0x32, (byte) 0x32, (byte) 0x30, (byte) 0x5A, (byte) 0x42, (byte) 0x5A, (byte) 0x4C, (byte) 0x41, (byte) 0x4C, (byte) 0x41, (byte) 0x4C, (byte) 0x41, (byte) 0x2B, (byte) 0x2B, (byte) 0x2B, (byte) 0x2B, (byte) 0x2B, (byte) 0x2B, (byte) 0x43, (byte) 0x41, (byte) 0x4E, (byte) 0x2B, (byte) 0x2B, (byte) 0x44, (byte) 0x43, (byte) 0x2C, (byte) 0x30, (byte) 0x36, (byte) 0x30, (byte) 0x30, (byte) 0x32, (byte) 0x4D, (byte) 0x6F, (byte) 0x64, (byte) 0x65, (byte) 0x6C},
        });
    }

    @Parameter(0)
    public byte[] input;

    @Test
    public void testTarUtils() throws IOException {
        ByteBuffer buffer = ByteBuffer.wrap(input);
        buffer.order(ByteOrder.BIG_ENDIAN);

        String expected = "0302-0601-3±±±F06±W220±ZB±LALALA±±±±±±±±±±CAN±±DC±±±04±060302±MOE.model";
        String actual = TarUtils.parseName(buffer);
        assertEquals(expected, actual);
    }
}
