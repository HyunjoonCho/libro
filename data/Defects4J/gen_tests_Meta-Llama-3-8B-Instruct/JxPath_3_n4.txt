java
import org.jxpath.JXPathContext;
import org.jxpath.xml.NodePointer;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.Test;

public class JXPathContextTest {

    @Test
    public void testCreatePath() {
        Map<String, Object> map = new HashMap<>();
        map.put("a", null);

        JXPathContext pathContext = JXPathContext.newContext(map);
        pathContext.setFactory(new AbstractFactory() {
            @Override
            public boolean createObject(JXPathContext context, NodePointer pointer, Object parent, String name, int index) {
                Map parentMap = (Map) parent;
                System.out.println(parent + ":" + name + ":" + index);
                if (index > -1) {
                    List list = (List) parentMap.get(name);
                    if (list == null) {
                        list = new ArrayList<>();
                    }
                    int size = list.size();
                    for (int i = size; i <= index; i++) {
                        list.add(i, new HashMap()); // Don't set to 'null'
                    }
                    parentMap.put(name, list);
                } else {
                    parentMap.put(name, new HashMap());
                }
                return true;
            }
        });

        pathContext.createPath("a/b[1]/c");
        // pathContext.createPath("a/b[2]/c"); // This will cause the stack overflow
    }
}
