
@Test
public void testRemoveIgnoreCase() {
    LinkedHashMap<String, Attribute> attributes = new LinkedHashMap<>();
    attributes.put("key1", new Attribute("value1"));
    attributes.put("key2", new Attribute("value2"));
    attributes.put("KEY1", new Attribute("value3"));

    // This will throw a ConcurrentModificationException
    for (Map.Entry<String, Attribute> entry : attributes.entrySet()) {
        if (entry.getKey().equalsIgnoreCase("key1")) {
            attributes.remove(entry.getKey());
        }
    }

    // This should not throw a ConcurrentModificationException
    Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator();
    while (iter.hasNext()) {
        Map.Entry<String, Attribute> entry = iter.next();
        if (entry.getKey().equalsIgnoreCase("key1")) {
            iter.remove();
        }
    }
}
