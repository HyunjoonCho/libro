java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.junit.Test;

import static org.junit.Assert.assertThrows;

public class DeserializationFromEmptyObjectNodeTest {

    private final ObjectMapper mapper = new ObjectMapper();

    @Test
    public void testDeserializationFromEmptyObjectNode() throws Exception {
        ObjectNode object = new ObjectNode(mapper.getNodeFactory());

        String json = mapper.writeValueAsString(object);
        System.out.println("json: " + json);

        // This should work
        ObjectNode de1 = mapper.readValue(json, ObjectNode.class);
        System.out.println("Deserialized to ObjectNode: " + de1);

        // This should throw an exception
        assertThrows(JsonMappingException.class, () -> mapper.readValue(json, MyValue.class));
    }

    private static class MyValue {
        private final ObjectNode object;

        @JsonCreator
        public MyValue(ObjectNode object) {
            this.object = object;
        }

        @JsonValue
        public ObjectNode getObject() {
            return object;
        }
    }
}
