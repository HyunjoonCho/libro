
public void testConstructingInvalidPartials() {
    try {
        new Partial(new DateTimeFieldType[] { clockHourOfDay(), hourOfDay() }, new int[] { 1, 1 });
        fail("Expected Types array must not contain duplicate");
    } catch (IllegalArgumentException e) {
        // expected
    }

    Partial partial = new Partial(clockHourOfDay(), 1);
    partial = partial.with(hourOfDay(), 1);
    assertEquals("clockhourOfDay=1, hourOfDay=1", partial.toString());
}

public void testInvalidPartialEquality() {
    Partial partial1 = new Partial(clockHourOfDay(), 1).with(hourOfDay(), 1);
    Partial partial2 = new Partial(hourOfDay(), 1).with(clockHourOfDay(), 1);
    try {
        partial1.isEqual(partial2);
        fail("Expected objects must have matching field types");
    } catch (UnsupportedOperationException e) {
        // expected
    }
}
