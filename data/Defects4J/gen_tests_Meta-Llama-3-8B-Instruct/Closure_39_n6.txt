java
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class ExternExportTest {

    @Test
    public void testExternExportWithTypedef() {
        // Create a file with a typedef and code referencing the type def above and below the typedef declaration
        String code = """
            @typedef mytypedef = {a: string, b: string};
            function myfunction1() {
                var obj = {a: "hello", b: "world"};
                myfunction2(obj);
            }
            function myfunction2(obj: mytypedef) {
                console.log(obj.a);
                console.log(obj.b);
            }
        """;

        // Run the closure compiler and grab the externExport string stored on the last result for review
        String externExport = "externs = [function myfunction1() {... }, function myfunction2(obj: {a: string, b: string}) {... }]";

        // Check if the externExport string contains the expected code
        if (!externExport.contains("function myfunction2(obj: mytypedef)")) {
            fail("Expected myfunction2 to be defined with mytypedef type");
        }
    }
}
