
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import java.text.ParsePosition;
import java.math.Fraction;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

@RunWith(JUnit4.class)
public class FractionParseTest {

    @Test
    public void testParseNegative() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "-1 -2 / 3";
        ParsePosition pos = new ParsePosition(0);

        Fraction actual = properFormat.parse(source, pos);
        assertNull(actual);
    }

    @Test
    public void testParseNegative2() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "-1 -2 / 3";
        ParsePosition pos = new ParsePosition(0);

        Fraction actual = properFormat.parse(source, pos);
        assertNotNull(actual);
        assertEquals(1, actual.getNumerator());
        assertEquals(3, actual.getDenominator());
    }

    @Test
    public void testParseInvalidNumerator() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "abc -2 / 3";
        ParsePosition pos = new ParsePosition(0);

        Fraction actual = properFormat.parse(source, pos);
        assertNotNull(actual);
        assertEquals(0, actual.getNumerator());
        assertEquals(1, actual.getDenominator());
    }

    @Test
    public void testParseInvalidDenominator() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "1 -2 / abc";
        ParsePosition pos = new ParsePosition(0);

        Fraction actual = properFormat.parse(source, pos);
        assertNotNull(actual);
        assertEquals(1, actual.getNumerator());
        assertEquals(1, actual.getDenominator());
    }
}
