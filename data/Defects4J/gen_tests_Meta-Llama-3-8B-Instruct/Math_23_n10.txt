public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    final double[] functionValues = new double[10];
    final double[] points = new double[10];
    for (int i = 0; i < 10; i++) {
        points[i] = i;
        functionValues[i] = i * i; // example function, just for demonstration
    }
    brentOptimizer.optimize(new UnivariateFunction() {
        @Override
        public double value(double x) {
            return functionValues[(int) x];
        }
    }, 0, 9, new Result());
    // Assert that the best point is indeed the best
    // You might need to add more assertions based on your specific use case
    assertEquals(9, brentOptimizer.getResult().getMinimizer());
}