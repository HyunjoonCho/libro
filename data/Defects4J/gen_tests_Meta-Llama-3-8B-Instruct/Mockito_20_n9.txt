
public void testExample1() {
    // Arrange
    FakeUserAccount userAccount = Mockito.mock(FakeUserAccount.class);
    when(userAccount.getEmails()).thenReturn(new ArrayList<>());
    when(userAccount.addEmail(anyString())).thenReturn(voidResult());

    // Act
    userAccount.addEmail("email1");
    userAccount.addEmail("email2");

    // Assert
    assertEquals(2, userAccount.getEmails().size());
}

public void testExample2() {
    // Arrange
    MockAccountService service = Mockito.mock(MockAccountService.class);
    when(service.getAccount(anyString())).thenReturn(new FakeUserAccount());

    // Act
    service.getAccount("id");

    // Assert
    verify(service, times(1)).getAccount("id");
}

public void testExample3() {
    // Arrange
    MockAccountRpcService service = Mockito.mock(MockAccountRpcService.class);
    when(service.getAccount(anyString())).thenReturn(Future.<Account>completedFuture(new Account()));

    // Act
    service.getAccount("id");

    // Assert
    verify(service, times(1)).getAccount("id");
}
