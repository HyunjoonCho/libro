
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

import static org.junit.Assert.fail;

public class TestJsonStreamContexts {
    @Test
    public void testJsonStreamContexts() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        // create a write context
        JsonGenerator gen = mapper.getFactory().createGenerator(new StringWriter());
        mapper.writeValue(gen, new Object());
        JsonNode node = mapper.readTree(gen.getOutputBuffer().toString());

        // create a convert context
        JsonGenerator gen2 = mapper.getFactory().createGenerator(new StringWriter());
        mapper.writeValue(gen2, new Object());
        JsonNode node2 = mapper.readTree(gen2.getOutputBuffer().toString());

        // check if both contexts are the same
        if (!node.equals(node2)) {
            fail("JsonStreamContexts are not the same");
        }
    }
}
