java
public void testNumericalProblemsInRotationCreation() {
    double[] u1 = new double[] {-4921140.837095533, -21512094250440013E7, -890093.279426377};
    double[] u2 = new double[] {-27238580938724895E9, -2169664921341876E9, 6749688708885301E10};
    double[] v1 = new double[] {1, 0, 0};
    double[] v2 = new double[] {0, 0, 1};

    // Compute k and c
    double[] k = new double[] {(v1[0] - u1[0]), (v1[1] - u1[1]), (v1[2] - u1[2])};
    double[] v1MinusU1 = new double[] {(v1[0] - u1[0]), (v1[1] - u1[1]), (v1[2] - u1[2])};
    double[] v2MinusU2 = new double[] {(v2[0] - u2[0]), (v2[1] - u2[1]), (v2[2] - u2[2])};
    double c = 0;
    for (int i = 0; i < 3; i++) {
        c += (k[i] * (v1MinusU1[i] * v2MinusU2[i] - v1MinusU1[i] * v2MinusU2[i]));
    }

    // Check the result
    assertEquals(-1.2397173627587605E20, c, 0);
}
