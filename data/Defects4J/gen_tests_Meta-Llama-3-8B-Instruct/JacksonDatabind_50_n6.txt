java
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class JacksonTest {

    @JsonIdentityInfo(generator = ObjectIdInfo.IdStrategy.DELEGATING)
    public static class A {
        public int id;
        public List<B> list;

        public A() {
        }

        public A(int id, List<B> list) {
            this.id = id;
            this.list = list;
        }
    }

    @JsonIdentityInfo(generator = ObjectIdInfo.IdStrategy.DELEGATING)
    public static class B {
        public int id;

        @JsonCreator
        public B(int id) {
            this.id = id;
        }
    }

    @Test
    public void testJsonDeserialization() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        A a = new A(1, new ArrayList<>());
        a.list.add(new B(1));

        String json = mapper.writeValueAsString(a);

        A deserialized = mapper.readValue(json, A.class);

        assertEquals(1, deserialized.id);
        assertEquals(1, deserialized.list.size());
        assertEquals(1, deserialized.list.get(0).id);
    }
}
