
public void testAbstractClassSpying() {
    // Example 1
    AbstractUserAccount fakeUserAccount = mock(AbstractUserAccount.class);
    when(fakeUserAccount.getEmails()).thenReturn(Arrays.asList("email1", "email2"));
    when(fakeUserAccount.addEmail("newEmail")).thenReturn(fakeUserAccount);
    assertEquals(Arrays.asList("email1", "email2", "newEmail"), fakeUserAccount.getEmails());

    // Example 2
    AbstractAccountService fakeAccountService = mock(AbstractAccountService.class);
    when(fakeAccountService.getAccount("id")).thenReturn(new UserAccount() {
        @Override
        public List<String> getEmails() {
            return Arrays.asList("email1", "email2");
        }
    });
    assertEquals("email1", ((UserAccount) fakeAccountService.getAccount("id")).getEmails().get(0));

    // Example 3
    AbstractAccountRpcService fakeAccountRpcService = mock(AbstractAccountRpcService.class);
    when(fakeAccountRpcService.getAccount("id")).thenReturn(Future.<Account>completedFuture(new Account()));
    verify(fakeAccountRpcService, times(1)).getAccount("id");
}
