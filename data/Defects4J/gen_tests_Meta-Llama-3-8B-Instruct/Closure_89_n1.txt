java
import org.junit.Test;

public class CompilerRemovesFunctionPropertiesTest {
    @Test
    public void testCompilerRemovesFunctionProperties() {
        // Create a function with a property
        Function f1 = new Function() {
            public void execute() {
                System.out.println("f1");
            }
        };
        f1.addProperty("alwaysCall", true);

        // Create another function
        Function f2 = new Function() {
            public void execute() {
                System.out.println("f2");
            }
        };

        // Add functions to a map
        Map<String, Function> map = new HashMap<>();
        map.put("f1", f1);
        map.put("f2", f2);

        // Simulate the compiler removing the property
        Function compiledF1 = map.get("f1");
        // Verify that the property is gone
        assert!compiledF1.hasProperty("alwaysCall");

        // Try to use the function
        map.get(Math.random() > 0.5? "f1" : "f2").execute();
    }
}
