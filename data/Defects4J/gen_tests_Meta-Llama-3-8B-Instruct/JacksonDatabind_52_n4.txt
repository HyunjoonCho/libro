java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class ExternalIdDeserTest {
    private final ObjectMapper mapper = new ObjectMapper();

    @Test
    public void testExternalPropertyIsNotDeserialized() throws IOException {
        // Create a custom class with an external property
        Class<?> clazz = new ExternalClass().getClass();

        // Create an object and serialize it
        ExternalClass obj = new ExternalClass();
        String json = mapper.writeValueAsString(obj);

        // Deserialize the object
        ExternalClass deserializedObj = mapper.readValue(json, clazz);

        // Verify the external property is not deserialized
        assertEquals(null, deserializedObj.getExternalProperty());
    }

    private static class ExternalClass {
        private String externalProperty;

        public String getExternalProperty() {
            return externalProperty;
        }

        public void setExternalProperty(String externalProperty) {
            this.externalProperty = externalProperty;
        }
    }
}
