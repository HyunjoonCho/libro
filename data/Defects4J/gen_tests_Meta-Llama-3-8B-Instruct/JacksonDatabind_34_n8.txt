
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.math.BigDecimal;
import java.util.Arrays;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class BigDecimalSchemaTest {

    @Parameters
    public static Iterable<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {"10.0", "10.0"},
                {"-10.0", "-10.0"},
                {"10.12345678901234567890", "10.12345678901234567890"},
                {"-10.12345678901234567890", "-10.12345678901234567890"}
        });
    }

    private String input;
    private String expected;

    public BigDecimalSchemaTest(String input, String expected) {
        this.input = input;
        this.expected = expected;
    }

    @Test
    public void testSchema() {
        // Generate the schema for the given BigDecimal
        // This should produce a schema that correctly represents the BigDecimal
        // For example, for the input "10.0", the schema should be {"type": "double"}

        // Write the schema to a string
        String schema = generateSchema(input);

        // Check that the schema is correct
        assertEquals(expected, schema);
    }

    // Implement the generateSchema method to generate the schema for the given BigDecimal
}
