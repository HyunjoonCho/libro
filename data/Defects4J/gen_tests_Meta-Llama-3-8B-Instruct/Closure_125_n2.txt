java
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.CompilerTestCase;
import com.google.javascript.jscomp.Result;

public class CrashTest extends CompilerTestCase {
    public void testCrash() {
        CompilerOptions options = getCompilerOptions();
        Compiler compiler = new Compiler(options);
        String source = 
            "var test = {};" +
            "/** @interface */" +
            "test.T = function() {};" +
            "/** @constructor *" +
            " * @implements {test.T}" +
            " */" +
            "test.A = function() {};" +
            "/** @constructor *" +
            " * @implements {test.T}" +
            " */" +
            "test.B = function() {};" +
            "/** @constructor */" +
            "test.X = function() {" +
            "  this.type = test.A;" +
            "  this.t = this.f();" +
            "};" +
            "/** @return {test.T} */" +
            "test.X.prototype.f = function() {" +
            "  if (this.type === test.A) {" +
            "    return new test.A();" +
            "  } else if (this.type === test.B) {" +
            "    return new test.B();" +
            "  };" +
            "};";
        Result result = compiler.compile(source);
        fail("Expected compilation to fail, but it did not.");
    }
}
