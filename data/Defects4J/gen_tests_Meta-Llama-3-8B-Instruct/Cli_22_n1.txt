
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

@RunWith(Parameterized.class)
public class PosixParserTest {

    private String[] args;
    private String expectedOutput;

    @Parameterized.Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {"-t", "processing selected target: t"},
                {"-target", "processing selected target: arget"},
                {"-t foobar.com", "processing selected target: foobar.com"}
        });
    }

    public PosixParserTest(String arg, String expectedOutput) {
        this.args = new String[]{arg};
        this.expectedOutput = expectedOutput;
    }

    @Test
    public void testPosixParser() {
        PosixParser parser = new PosixParser();
        try {
            parser.parse(args);
            fail("ParseException expected");
        } catch (ParseException pe) {
            assertEquals(expectedOutput, pe.getMessage());
        }
    }
}
