public void testEigenDecomposition() {
    double[] mainTridiagonal = {
            7484.860960227216, 18405.28129035345, 13855.225609560746,
            10016.708722343366, 559.8117399576674, 6750.190788301587,
            71.21428769782159
    };
    double[] secondaryTridiagonal = {
            -4175.088570476366, 1975.7955858241994, 5193.178422374075,
            1995.286659169179, 75.34535882933804, -234.0808002076056
    };

    EigenDecomposition decomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN);

    double[] eigenValues = decomposition.getRealEigenvalues();
    RealVector[] eigenvectors = decomposition.getEigenvectors();

    for (int i = 0; i < eigenValues.length; ++i) {
        assertEquals(20654.744890306974412, eigenValues[i], 1.0e-3);
        assertEquals(-0.270356342026904, eigenvectors[i].getEntry(0), 1.0e-5);
        assertEquals(0.852811091326997, eigenvectors[i].getEntry(1), 1.0e-5);
        assertEquals(-0.399582721284727, eigenvectors[i].getEntry(2), 1.0e-5);
        assertEquals(0.058515721572821, eigenvectors[i].getEntry(3), 1.0e-5);
        assertEquals(0.855205995537564, eigenvectors[i].getEntry(4), 1.0e-5);
        assertEquals(-0.002913069901144, eigenvectors[i].getEntry(5), 1.0e-5);
        assertEquals(-0.005738311176435, eigenvectors[i].getEntry(6), 1.0e-5);
    }
}