java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationFeature.WriteBigDecimalAsPlain;
import org.junit.Test;

import java.math.BigDecimal;

public class JacksonTest {

    @Test
    public void testWriteBigDecimalAsPlainIgnoredWithJsonFormat() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN, true);
        mapper.enable(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN);

        Test test = new Test(new BigDecimal("0.0000000005"));

        String result = mapper.writeValueAsString(test);

        // Expected output: {"value": "0.0000000005"}
        // Actual output: {"value": "5.0E-10"}
        // The WRITE_BIGDECIMAL_AS_PLAIN configuration is ignored when @JsonFormat is used
    }
}
