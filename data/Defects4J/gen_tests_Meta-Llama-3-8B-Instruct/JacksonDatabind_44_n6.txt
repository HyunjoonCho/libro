public void testPolymorphicTypes() {
    @JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        include = JsonTypeInfo.As.EXISTING_PROPERTY,
        property = "type"
    )
    @JsonSubTypes({
        @JsonSubTypes.Type(value = SubType.class, name = "subType")
    })
    public static class SuperType {
        private String type = "superType";
    }

    @JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        include = JsonTypeInfo.As.EXISTING_PROPERTY,
        property = "type"
    )
    public static class SubType extends SuperType {
        private String type = "subType";
        private String superProperty = "superValue";
    }

    @Test
    public void testPolymorphicSerialization() throws JsonProcessingException {
        SuperType superType = new SubType();
        String json = mapper.writeValueAsString(superType);
        assertEquals("{\"type\":\"subType\",\"superProperty\":\"superValue\"}", json);
    }