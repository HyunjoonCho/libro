java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.type.TypeReference;

import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class JacksonPolymorphicTypeTest {

    @Test
    public void testPolymorphicTypeLosesProperties() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED);

        ParentClass parent = new ParentClass();
        parent.setChild(new ChildClass("Child value"));

        String json = mapper.writeValueAsString(parent);

        ParentClass parentFromJson = mapper.readValue(json, ParentClass.class);

        assertEquals("Child value", parentFromJson.getChild().getValue());
    }

    public static class ParentClass {
        private ChildClass child;

        public ChildClass getChild() {
            return child;
        }

        public void setChild(ChildClass child) {
            this.child = child;
        }
    }

    public static class ChildClass extends ParentClass {
        private String value;

        public ChildClass(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }
    }
}
