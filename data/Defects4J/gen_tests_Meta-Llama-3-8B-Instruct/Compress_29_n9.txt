java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertThrows;

@RunWith(Parameterized.class)
public class ArchiveStreamFactoryTest {

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {"ArjArchiveInputStream", ArjArchiveInputStream.class},
                {"CpioArchiveInputStream", CpioArchiveInputStream.class},
                {"DumpArchiveInputStream", DumpArchiveInputStream.class},
                {"JarArchiveInputStream", JarArchiveInputStream.class},
                {"JarArchiveOutputStream", JarArchiveOutputStream.class}
        });
    }

    private final String streamType;
    private final Class<?> clazz;

    public ArchiveStreamFactoryTest(String streamType, Class<?> clazz) {
        this.streamType = streamType;
        this.clazz = clazz;
    }

    @Test
    public void testEncodingPassing() throws IOException {
        // Create a stream of the given type
        InputStream stream = (InputStream) clazz.newInstance();

        // Assert that the encoding is passed
        // (Replace this with the actual assertion logic)
        assertThrows(IOException.class, () -> {
            // Simulate an operation that should fail due to encoding issue
        });
    }
}
