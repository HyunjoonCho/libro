java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.TypeSerializer;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.type.TypeReference;
import org.junit.Test;

import java.io.IOException;
import java.util.List;

public class AfterburnerTest {

    @Test
    public void testNonEmptyExclusion() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        // Create a simple POJO
        class SimplePOJO {
            private int value;

            public SimplePOJO(int value) {
                this.value = value;
            }
        }

        // Serialize and deserialize the POJO
        String json = mapper.writeValueAsString(new SimplePOJO(1));
        SimplePOJO deserialized = mapper.readValue(json, SimplePOJO.class);

        // Verify that the deserialization worked correctly
        assertEquals(1, deserialized.value);
    }
}
