java
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.lang.reflect.Field;
import java.nio.charset.StandardCharsets;

import static org.junit.Assert.assertThrows;
import static org.junit.Assert.fail;

public class ByteQuadsCanonicalizerTest {

    @Test
    public void testArrayIndexOutOfBoundsException() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        JsonFactory factory = mapper.getFactory();
        Field byteSymbolCanonicalizerField = JsonFactory.class.getDeclaredField("_byteSymbolCanonicalizer");
        byteSymbolCanonicalizerField.setAccessible(true);

        Method factoryMethod = ByteQuadsCanonicalizer.class.getDeclaredMethod("createRoot", int.class);
        factoryMethod.setAccessible(true);
        byteSymbolCanonicalizerField.set(factory, factoryMethod.invoke(null, -523743345));

        String json = "{\"expectedGCperPosition\": null";
        for (int i = 0; i < 60; ++i) {
            json += ", \"";
            json += i + 1;
            json += "\": null";
        }
        json += "}";

        assertThrows(ArrayIndexOutOfBoundsException.class, () -> {
            mapper.readValue(json.getBytes(StandardCharsets.UTF_8), Map.class);
        });
    }
}
