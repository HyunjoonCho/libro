java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;
import org.apache.commons.compress.utils.IOUtils;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.DataFormatException;

import static org.junit.Assert.fail;

@RunWith(JUnit4.class)
public class TarArchiveInputStreamTest {

    @Test
    public void testTarArchiveInputStream() throws IOException {
        File file = new File("test.tar");
        TarArchiveOutputStream tarOut = new TarArchiveOutputStream(new FileOutputStream(file));
        tarOut.putArchiveEntry(new TarArchiveEntry("symlink", new byte[] {(byte) 0x1b, (byte) 0x6e, (byte) 0x75, (byte) 0x6c, (byte) 0x6c, (byte) 0x6b}));
        tarOut.close();

        TarArchiveInputStream tarIn = new TarArchiveInputStream(new FileInputStream(file));
        TarArchiveEntry entry = tarIn.getNextTarEntry();
        if (entry == null) {
            fail("Expected to find an entry in the tar file");
        }
        if (!entry.getName().equals("symlink")) {
            fail("Expected the entry name to be'symlink'");
        }
        if (tarIn.read(new byte[12])!= -1) {
            fail("Expected to have read the entire entry");
        }
        tarIn.close();
    }
}
