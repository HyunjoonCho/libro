java
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class TestTypeCheck {
    @Test
    public void testTypeCheck() {
        try {
            // Compile the following JavaScript code
            // with --compilation_level=ADVANCED_OPTIMIZATIONS --jscomp_error=accessControls --jscomp_error=checkTypes --jscomp_error=checkVars
            // and run it
            // It should fail with an error message indicating that the actual parameter 1 of temp3 does not match the formal parameter
            // found : {b: boolean, n: number, text: (string|undefined)}
            // required: {b: boolean, n: number, text: string}
            String output = temp3(new Object() {
                public boolean b;
                public int n;
                public String text;
            }.setB(true).setN(0).setText("a string"));
            assertEquals("n: 0, t: a string.", output);
        } catch (Exception e) {
            fail("Expected no exception");
        }
    }

    public static String temp3(Object optData) {
        return "n: " + ((Integer) optData.getClass().getDeclaredField("n").get(optData)) + ", t: " + ((String) optData.getClass().getDeclaredField("text").get(optData)) + ".";
    }
}
