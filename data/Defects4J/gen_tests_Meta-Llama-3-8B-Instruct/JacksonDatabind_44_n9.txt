
public void testPolymorphicTypeResolution() {
    class Base {
        private String baseProperty = "base";
    }

    class Sub extends Base {
        private String subProperty = "sub";
    }

    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.WRAPPER_ARRAY)
    @JsonSubTypes({ @JsonSubTypes.Type(Sub.class) })
    public static class BaseWrapper {
        public Base base;
    }

    ObjectMapper mapper = new ObjectMapper();
    BaseWrapper wrapper = mapper.readValue("{\"base\":{\"baseProperty\":\"base\"}}", BaseWrapper.class);
    assertEquals("base", wrapper.base.baseProperty);
    // This test fails because subProperty is not present in the JSON
    // So, the test case should fail if the polymorphic type resolution is working correctly
    assertNotPresent(wrapper.base, "subProperty");
}
