java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.powermock.core.classloader.annotations.PowerMockIgnore;
import org.powermock.core.classloader.annotations.PowerMockSuperclass;
import org.powermock.modules.junit4.PowerMockRunner;
import org.powermock.reflect.exceptions.PowerMockException;

import static org.junit.Assert.assertThrows;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@RunWith(PowerMockRunner.class)
@PowerMockIgnore("sun.reflect.*")
@PowerMockSuperclass
public class TestExceptionWhenStubbing {

    @Test
    public void testThrowException() throws Exception {
        Object o = mock(Object.class);

        // test behavior with Runtimeexception
        when(o.toString()).thenThrow(new RuntimeException("First exception"));
        // invoke the stubbed method
        assertThrows(RuntimeException.class, () -> o.toString());

        // test behavior with another exception
        // this should not throw a RuntimeException
        when(o.toString()).thenThrow(new IllegalArgumentException("Second exception"));
        // invoke the stubbed method
        assertThrows(IllegalArgumentException.class, () -> o.toString());

        verify(o, times(1)).toString();
    }
}
