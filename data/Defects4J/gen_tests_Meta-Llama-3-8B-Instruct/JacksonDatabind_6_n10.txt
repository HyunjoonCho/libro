java
@Test
public void testISO8601DateParsing() throws Exception {
    String date1 = "2014-10-03T18:00:00.6-05:00";
    String date2 = "2014-10-03T18:00:00.61-05:00";
    String date3 = "1997-07-16T19:20+01:00";
    String date4 = "1997-07-16T19:20:30.45+01:00";

    // Test date1
    try {
        // Expected exception because of the fractional seconds
        DateTimeFormatter formatter = new DateTimeFormatterBuilder().appendPattern("yyyy-MM-dd'T'HH:mm:ss.SSS").toFormatter();
        DateTime parsedDate = formatter.parseDateTime(date1);
        fail("Expected exception but didn't get one");
    } catch (DateTimeParseException e) {
        // Expected
    }

    // Test date2
    try {
        // Expected exception because of the fractional seconds
        DateTimeFormatter formatter = new DateTimeFormatterBuilder().appendPattern("yyyy-MM-dd'T'HH:mm:ss.SSS").toFormatter();
        DateTime parsedDate = formatter.parseDateTime(date2);
        fail("Expected exception but didn't get one");
    } catch (DateTimeParseException e) {
        // Expected
    }

    // Test date3
    try {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mmZ");
        DateTime parsedDate = formatter.parseDateTime(date3);
        assertEquals(LocalDate.parse("1997-07-16"), parsedDate.toLocalDate());
        assertEquals(LocalTime.parse("19:20"), parsedDate.toLocalTime());
        assertEquals(ZoneOffset.ofHours(1), parsedDate.getZone().getRules().getOffset(parsedDate.toInstant()));
    } catch (DateTimeParseException e) {
        fail("Expected successful parsing but got exception");
    }

    // Test date4
    try {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
        DateTime parsedDate = formatter.parseDateTime(date4);
        assertEquals(LocalDate.parse("1997-07-16"), parsedDate.toLocalDate());
        assertEquals(LocalTime.parse("19:20:30"), parsedDate.toLocalTime());
        assertEquals(ZoneOffset.ofHours(1), parsedDate.getZone().getRules().getOffset(parsedDate.toInstant()));
    } catch (DateTimeParseException e) {
        fail("Expected successful parsing but got exception");
    }
}
