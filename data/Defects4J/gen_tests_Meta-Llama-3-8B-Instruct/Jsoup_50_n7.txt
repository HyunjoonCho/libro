java
public void testUtf16StreamWithBom() throws IOException {
    byte[] data = new byte[] {(byte)0xFF, (byte)0xFE, (byte)0x68, (byte)0x65, (byte)0x6c, (byte)0x6c, (byte)0x6f}; // UTF-16LE BOM followed by "hello"
    byte[] dataWithBomUtf8 = new byte[] {(byte)0xEF, (byte)0xBB, (byte)0xBF, (byte)0x68, (byte)0x65, (byte)0x6c, (byte)0x6c, (byte)0x6f}; // UTF-8 BOM followed by "hello"
    byte[] dataWithoutBom = new byte[] {(byte)0x68, (byte)0x65, (byte)0x6c, (byte)0x6c, (byte)0x6f}; // "hello" without BOM

    String resultUtf16 = DataUtil.parseByteData(data);
    String resultUtf8 = DataUtil.parseByteData(dataWithBomUtf8);
    String resultNoBom = DataUtil.parseByteData(dataWithoutBom);

    assertEquals("hello", resultNoBom);
    assertEquals("hello", resultUtf8);
    // The bug is that the UTF-16 stream with BOM is processed as UTF-8
    // So this assertion will fail
    // assertEquals("hello", resultUtf16);
}
