java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class QuaternionRotationCreationTest {
    @Test
    public void testRotationCreation() {
        double[] u1 = {-4921140.837095533, -21512094250440013E7, -890093.279426377};
        double[] u2 = {-27238580938724895E9, -2169664921341876E9, 6749688708885301E10};
        double[] v1 = {1, 0, 0};
        double[] v2 = {0, 0, 1};

        // Manual computation with enhanced precision
        double manualKx = 38514410.36093388;
        double manualKy = -0.374075245201180409222711;
        double manualKz = -1168590152.10599715208;
        double manualC = 558382746168463196.7079627;

        // Your code
        double kx = calculateK(u1, u2, v1, v2);
        double ky = calculateY(u1, u2, v1, v2);
        double kz = calculateZ(u1, u2, v1, v2);
        double c = calculateC(u1, u2, v1, v2);

        assertEquals(manualKx, kx, 1e-10);
        assertEquals(manualKy, ky, 1e-10);
        assertEquals(manualKz, kz, 1e-10);
        assertEquals(manualC, c, 1e-10);
    }

    private double calculateK(double[] u1, double[] u2, double[] v1, double[] v2) {
        // Your code to calculate k
    }

    private double calculateY(double[] u1, double[] u2, double[] v1, double[] v2) {
        // Your code to calculate y
    }

    private double calculateZ(double[] u1, double[] u2, double[] v1, double[] v2) {
        // Your code to calculate z
    }

    private double calculateC(double[] u1, double[] u2, double[] v1, double[] v2) {
        // Your code to calculate c
    }
}
