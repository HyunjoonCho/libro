java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationConfig;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationConfig;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class TestPolymorphicTypes {
    @Test
    public void testPolymorphicTypes() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.USE_STATIC_TYPE_INFO);

        // Define a base class
        abstract class Animal {
            public abstract String getName();
        }

        // Define a sub-class
        class Dog extends Animal {
            @Override
            public String getName() {
                return "Dog";
            }
        }

        // Define a sub-class of the sub-class
        class Bulldog extends Dog {
            @Override
            public String getName() {
                return "Bulldog";
            }
        }

        // Create a polymorphic type with defaultImpl
        mapper.addMixIn(Dog.class, new SerializationConfig.DefaultImplHandler(Bulldog.class));

        // Serialize the object
        String json = mapper.writeValueAsString(new Bulldog());

        // Assert that the correct type is serialized
        assertEquals("{\"name\":\"Bulldog\"}", json);
    }
}
