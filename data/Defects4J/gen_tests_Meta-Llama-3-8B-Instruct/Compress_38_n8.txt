java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

@RunWith(JUnit4.class)
public class TarArchiveTest {

    @Test
    public void testPaxHeaderEntryWithTrailingSlash() throws IOException {
        TarArchiveEntry entry = new TarArchiveEntry("dir/"); // entry with trailing slash
        entry.setLinkName("dir2"); // set link flag to 'x' for PAX header
        TarArchiveInputStream tarIn = new TarArchiveInputStream(new ByteArrayInputStream(entry.getName().getBytes()));
        entry.setSize(0);
        entry.setCompressedSize(0);
        entry.setLastModifiedTime(System.currentTimeMillis());
        entry.setModificationTime(System.currentTimeMillis());
        entry.setAccessTime(System.currentTimeMillis());
        entry.setFileMode(0o755);

        assertTrue(entry.isDirectory()); // should return true

        // simulate reading the tar entry
        tarIn.close();

        // test that the stream is not advanced
        InputStream stream = new ByteArrayInputStream(new byte[1024]);
        assertTrue(tarIn.read(stream) == -1); // should not read anything
    }
}
