public void testPolymorphicTypes() {
    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.WRAPPER_OBJECT)
    @JsonSubTypes({@JsonSubTypes.Type(name = "type1", value = Type1.class), @JsonSubTypes.Type(name = "type2", value = Type2.class)})
    public static class BaseType {}

    @JsonTypeName("type1")
    public static class Type1 extends BaseType {
        @JsonProperty("prop1")
        private String prop1;
    }

    @JsonTypeName("type2")
    public static class Type2 extends BaseType {
        @JsonProperty("prop2")
        private String prop2;
    }

    @Test
    public void testPolymorphicSerialization() throws JsonProcessingException {
        BaseType baseType = new Type1();
        baseType.setProp1("value1");

        String json = new ObjectMapper().writeValueAsString(baseType);
        assertEquals("{\"type\":\"type1\",\"prop1\":\"value1\"}", json);
    }