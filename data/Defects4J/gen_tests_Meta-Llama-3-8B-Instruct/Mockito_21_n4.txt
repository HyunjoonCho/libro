java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.mockito.junit.MockitoJUnitRunner;

import java.util.List;
import java.util.ArrayList;
import java.util.concurrent.Future;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class MockitoTest {

    @Test
    public void testAbstractClass() {
        // Example 1
        abstract class FakeUserAccount implements UserAccount {
            private final List<String> emails = new ArrayList<>();

            @Override
            public void addEmail(String email) {
                emails.add(email);
            }

            @Override
            public List<String> getEmails() {
                return new ArrayList<>(emails);
            }
        }

        UserAccount userAccount = Mockito.mock(FakeUserAccount.class);
        when(userAccount.getEmails()).thenReturn(new ArrayList<>());
        assertEquals(0, userAccount.getEmails().size());

        // Example 2
        abstract class MockAccountService implements AccountService {
            @Override
            public void getAccount(String id, AsyncCallback<UserAccount> callback) {
                callback.onSuccess(getAccount(id));
            }

            abstract UserAccount getAccount(String id);
        }

        AccountService service = Mockito.mock(MockAccountService.class);
        when(service.getAccount("id")).thenReturn(new FakeUserAccount());
        // Rest of the test code

        // Example 3
        abstract class MockAccountRpcService implements AccountRpcService {
            @Override
            public Future<Account> getAccount(RpcContext context, String id) {
                checkNotNull(context);
                return getAccount(id);
            }

            abstract Future<Account> getAccount(String id);
        }

        AccountRpcService service = Mockito.mock(MockAccountRpcService.class);
        when(service.getAccount("id")).thenReturn(new FakeAccount());
        // Rest of the test code
    }
}
