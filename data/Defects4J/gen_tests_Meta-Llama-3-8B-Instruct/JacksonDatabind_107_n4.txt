java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.deser.DeserializationProblemHandler;
import com.fasterxml.jackson.databind.type.TypeFactory;

import org.junit.Test;

import java.io.IOException;

public class DeserializationProblemHandlerTest {

    @Test(expected = NullPointerException.class)
    public void testDeserializationWithDeserializationProblemHandler() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enableDefaultTyping();
        mapper.setDeserializationFeature(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        DeserializationProblemHandler handler = new DeserializationProblemHandler() {
            @Override
            public Object handleUnknownTypeId(DeserializationContext ctxt, JavaType type, String typeId, TypeIdResolver typeIdRes, String...) {
                return Void.class;
            }
        };

        mapper.setHandler(new DeserializationProblemHandler() {
            @Override
            public Object handleUnknownTypeId(DeserializationContext ctxt, JavaType type, String typeId, TypeIdResolver typeIdRes, String... args) {
                return Void.class;
            }
        });

        // This should throw a NPE
        mapper.readValue("{}", TypeFactory.defaultInstance().constructType(Void.class));
    }
}
