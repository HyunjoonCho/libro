java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import java.util.Arrays;
import java.util.Collection;

@RunWith(Parameterized.class)
public class TypeInferenceTest {

    @Parameterized.Parameter(0)
    public Object record;

    @Parameterized.Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {new Record("a")},
                {"a"}
        });
    }

    @Test
    public void testFunc() {
        func(record);
    }

    @Test
    public void testFunc2() {
        func2(record);
    }

    interface Record {
        String prop();
    }

    interface RecordOrString {
        String prop();
    }

    void func(Record record) {
        System.out.println(record.prop());
    }

    void func2(RecordOrString record) {
        if (record instanceof String) {
            System.out.println(record);
        } else {
            System.out.println(record.prop());
        }
    }
}
