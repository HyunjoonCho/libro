public void testUnwantedPojos() {
    X<Integer> x = new X<>();
    x.s = "test";
    x.items = Arrays.asList(1, 2, 3);
    ObjectMapper mapper = new ObjectMapper();
    mapper.setSerializerProvider(new SerializerProvider() {
        @Override
        public JsonSerializer<?> findValueSerializer(SerializerProvider provider, JavaType type) throws JsonMappingException {
            return new ListAttributeSerializer();
        }
    });
    String json = mapper.writeValueAsString(x);
    JsonNode tree = mapper.readTree(json);
    assertEquals("test", tree.get("s").textValue());
    assertEquals(3, tree.get("items").size());
    for (int i = 0; i < 3; i++) {
        assertEquals(i + 1, tree.get("items").get(i).asInt());
    }
}