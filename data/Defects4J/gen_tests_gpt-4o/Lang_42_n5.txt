
import org.apache.commons.text.StringEscapeUtils;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import java.nio.charset.StandardCharsets;

public class StringEscapeUtilsTest {

    @Test
    public void testEscapeHtmlHighUnicodeCharacter() throws Exception {
        // UTF-8 bytes for the Unicode character COUNTING ROD UNIT DIGIT THREE (U+1D362)
        byte[] data = new byte[] {(byte)0xF0, (byte)0x9D, (byte)0x8D, (byte)0xA2};

        // Convert the byte array to a String using UTF-8 encoding
        String unicodeChar = new String(data, StandardCharsets.UTF_8);

        // Use escapeHtml4 from Apache Commons Text to escape the HTML
        String escapedHtml = StringEscapeUtils.escapeHtml4(unicodeChar);

        // The expected HTML entity for the Unicode character U+1D362
        String expectedHtmlEntity = "&#119650;";

        // Assert that the escaped HTML matches the expected entity representation
        assertEquals(expectedHtmlEntity, escapedHtml);
    }

}
