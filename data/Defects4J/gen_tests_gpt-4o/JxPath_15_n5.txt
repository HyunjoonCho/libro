
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import org.w3c.dom.Document;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathFactory;

public class XPathUnionTest {

    @Test
    public void testUnionOperationRespectsDocumentOrder() throws Exception {
        String xml = "<MAIN><A>avalue</A><B>bvalue</B></MAIN>";

        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));

        XPathFactory xPathFactory = XPathFactory.newInstance();
        XPath xPath = xPathFactory.newXPath();

        // Evaluating the XPath expression that uses union operation
        String result = (String) xPath.evaluate("string(/MAIN/B | /MAIN/A)", doc, XPathConstants.STRING);

        // Asserting the expected result
        assertEquals("avalue", result);
    }
}
