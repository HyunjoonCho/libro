
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionBuilder;
import org.apache.commons.cli.Options;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class OptionBuilderTest {

    @Test
    public void testOptionBuilderNotResetAfterFailure() {
        try {
            // Intentionally call create() with an invalid setting to trigger an IllegalArgumentException
            OptionBuilder.withLongOpt("test");
            Option opt1 = OptionBuilder.create(' '); // Invalid character for option

        } catch (IllegalArgumentException e) {
            // Expected exception
        }

        // Try to use OptionBuilder again - it should be reset, but it won't be due to the bug
        OptionBuilder.withLongOpt("valid");
        Option opt2 = OptionBuilder.create('a');

        // Verify that a valid option can be created after a failure
        assertEquals("a", opt2.getOpt());
        assertEquals("valid", opt2.getLongOpt());

        // If the OptionBuilder is not reset, opt2 might have incorrect settings
    }
}
