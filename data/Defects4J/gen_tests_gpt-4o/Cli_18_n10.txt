
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

import static org.junit.Assert.*;

public class PosixParserBugTest {

    @Test
    public void testUnrecognizedOptionWithDash() {
        Options options = new Options();
        options.addOption("a", false, "Option a");

        String[] args = new String[]{"-z", "-a", "foo"};

        PosixParser parser = new PosixParser();
        CommandLine cmd = null;
        try {
            cmd = parser.parse(options, args, true);
        } catch (ParseException e) {
            fail("Parsing failed. Exception: " + e.getMessage());
        }

        // Verify that '-a' is recognized correctly
        assertTrue("Option 'a' should be recognized", cmd.hasOption("a"));
        
        // With bug, '-z' is ignored, and "foo" would be misinterpreted. We expect '-z' to stop parsing.
        String[] remainingArgs = cmd.getArgs();

        // Test expected vs actual remaining arguments, should be "-z", "foo"
        assertArrayEquals("Stopped at unrecognized option, expecting remaining args to include '-z' and 'foo'",
                new String[]{"-z", "foo"}, remainingArgs);
    }
}
