
import org.junit.Test;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

import static org.junit.Assert.*;

public class IdentifierMinusNegativeTest {

    @Test
    public void testSubtractionOfNegativeNumber() {
        String jsSourceCode = "var g = 5;\n" +
                              "var result = g--0.0;\n" +
                              "console.log(result);";

        String jsFileName = "bulletfail.js";
        String compiledJsFileName = "cc.js";
        String compilerJar = "path/to/build/compiler.jar";  // Update this path to where the closure compiler jar is located

        // Write the JavaScript source code to a file
        try (FileWriter fileWriter = new FileWriter(jsFileName)) {
            fileWriter.write(jsSourceCode);
        } catch (IOException e) {
            fail("Failed to write JavaScript source code to file");
        }

        try {
            // Compile the JavaScript file using the Closure Compiler
            Process compileProcess = Runtime.getRuntime().exec(new String[]{
                "java", "-jar", compilerJar,
                "--compilation_level", "ADVANCED_OPTIMIZATIONS",
                "--js", jsFileName,
                "--js_output_file", compiledJsFileName
            });

            compileProcess.waitFor();

            // Check if the compiled JavaScript contains the problematic line
            String compiledCode = new String(Files.readAllBytes(Paths.get(compiledJsFileName)));
            assertTrue("The compiled code should contain 'g--0.0'", compiledCode.contains("g--0.0"));

            // Run the compiled JavaScript in Node.js
            Process nodeProcess = Runtime.getRuntime().exec(new String[]{"node", compiledJsFileName});
            nodeProcess.waitFor();

            // Capture Node.js output (if any) and check for errors
            String nodeOutput = new String(nodeProcess.getInputStream().readAllBytes());
            assertTrue("Node.js should fail to parse 'g--0.0'", nodeOutput.contains("SyntaxError"));

        } catch (Exception e) {
            fail("An error occurred while compiling or executing the JavaScript: " + e.getMessage());
        } finally {
            // Clean up temporary files
            new File(jsFileName).delete();
            new File(compiledJsFileName).delete();
        }
    }
}
