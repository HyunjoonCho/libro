public void testJSC_USED_GLOBAL_THISWarning() {
    String externs = ""
        + "/**@interface */"
        + "function MyParent() {}"
        + "/** @param {*} a */"
        + "MyParent.prototype.MyMethod = function(a) {}";
    
    String jsCode = ""
        + "/** @constructor */"
        + "function MyClass() {} "
        + "MyClass.prototype[\"MyMethod\"] = function(a) { "
        + "this.a = a; "
        + "}; "
        + "window[\"MyClass\"] = MyClass;";

    List<SourceFile> externFiles = ImmutableList.of(SourceFile.fromCode("externs", externs));
    List<SourceFile> jsFiles = ImmutableList.of(SourceFile.fromCode("input", jsCode));

    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.WARNING);

    Compiler compiler = new Compiler();
    compiler.compile(externFiles, jsFiles, options);

    assertEquals(0, compiler.getErrorManager().getErrorCount());
    assertEquals(1, compiler.getErrorManager().getWarningCount());
    checkWarning(compiler.getWarnings(), "dangerous use of the global this object");
}