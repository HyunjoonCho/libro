
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.TextBuffer;
import org.junit.Test;
import static org.junit.Assert.*;

public class TextBufferTest {

    @Test
    public void testTextBufferInconsistency() {
        TextBuffer buffer = new TextBuffer(new BufferRecycler());

        buffer.resetWithEmpty();
        char[] firstCallResult = buffer.getTextBuffer();
        assertNull("Initial call to getTextBuffer should return null", firstCallResult);

        // Simulating usage of buffer which could transform the state.
        buffer.contentsAsString();  // This prepares internal char buffer

        char[] secondCallResult = buffer.getTextBuffer();
        assertNotNull("Subsequent call to getTextBuffer should not return null", secondCallResult);
        assertEquals("Subsequent call to getTextBuffer should return an empty array", 0, secondCallResult.length);
    }
}
