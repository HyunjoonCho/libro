
import org.apache.commons.codec.binary.Base64;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Base64EncodingTest {
    
    @Test
    public void testBase64EncodingWithoutChunking() throws Exception {
        Base64 base64Instance = new Base64();

        String input = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
        byte[] inputBytes = input.getBytes("UTF-8");

        // Using static method from both versions (expected no chunking)
        byte[] expectedOutput = Base64.encodeBase64(inputBytes);
        String expectedString = new String(expectedOutput, "UTF-8");

        // Using instance method, should match expected output without adding newlines
        byte[] actualOutput = base64Instance.encode(inputBytes);
        String actualString = new String(actualOutput, "UTF-8");

        assertEquals("The encoded output should not be chunked or have line breaks.", 
                     expectedString, actualString);
    }
    
    @Test
    public void testBase64EncodingWithChunking() throws Exception {
        Base64 base64WithChunk = new Base64(76); // Explicitly create an instance with chunking

        String input = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
        byte[] inputBytes = input.getBytes("UTF-8");

        // When using a Base64 instance that performs chunking, the result will be split into lines
        byte[] chunkedOutput = base64WithChunk.encode(inputBytes);
        String chunkedString = new String(chunkedOutput, "UTF-8");

        // Expected output should contain line breaks due to explicit chunking
        String expectedChunkedString = "YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFh\n" +
                                       "YWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ==\n";

        assertEquals("The encoded output should be chunked with line breaks.", 
                     expectedChunkedString, chunkedString);
    }
}
