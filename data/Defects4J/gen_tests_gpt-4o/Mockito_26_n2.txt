
import static org.junit.Assert.assertNotNull;
import static org.mockito.MockitoAnnotations.initMocks;

import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;

public class InjectMocksFinalFieldTest {

    static class Service {
        // This should be injected by Mockito
        private final Dependency dependency;

        Service(Dependency dependency) {
            this.dependency = dependency;
        }

        public Dependency getDependency() {
            return dependency;
        }
        
        public String serve() {
            return dependency.getSomething();
        }
    }

    static class Dependency {
        public String getSomething() {
            return "something";
        }
    }

    @Mock
    private Dependency dependencyMock;

    @InjectMocks
    private Service service;

    @Before
    public void setUp() {
        initMocks(this);
    }

    @Test
    public void testInjectMocksWithFinalField() {
        // Since the field `dependency` is final, expect it to be injected if mockito 
        // supports final field injection, but in the failing scenario, it doesn't.
        assertNotNull("Dependency should be injected by @InjectMocks", service.getDependency());

        // To see if the injected mock is functioning
        assertNotNull("The service should return a non-null result", service.serve());
    }
}
