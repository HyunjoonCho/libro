
import static org.junit.Assert.assertTrue;
import org.junit.Test;

public class ClosureCompilerTest {

    @Test
    public void testFunctionNameConsistency() {
        // Simulate source code before compilation
        String sourceCodeBefore = 
            "function preload_check_all() {" +
            "  // function logic" +
            "}" +
            "preload_check_all();";

        // Simulate the expected result after compilation with SIMPLE optimization
        String expectedCompiledCode = 
            "function a() {" +
            "  // function logic" +
            "}" +
            "a();";

        // Simulate what might happen if the bug occurs
        String buggyCompiledCode = 
            "function a() {" +
            "  // function logic" +
            "}" +
            "preload_check_all();"; // Name not updated here

        // Check that the 'buggyCompiledCode' does NOT match expected behavior
        boolean isConsistentlyTranslated = buggyCompiledCode.equals(expectedCompiledCode);

        // The test should fail, indicating a problem with the transformation
        assertTrue("Function name was not consistently translated", !isConsistentlyTranslated);
    }
}
