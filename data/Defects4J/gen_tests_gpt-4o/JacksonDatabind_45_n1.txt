
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class JsonFormatShapeTest {

    public static class TestNumberShape {
        @JsonFormat(shape = JsonFormat.Shape.NUMBER)
        public Double value;

        public TestNumberShape(Double value) {
            this.value = value;
        }
    }

    @Test
    public void testExplicitNumberShape() {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        TestNumberShape testObj = new TestNumberShape(1234.56);

        try {
            String jsonOutput = mapper.writeValueAsString(testObj);
            System.out.println(jsonOutput);  // For debugging purposes

            // Check that the serialized output uses number format
            assertEquals("{\"value\":1234.56}", jsonOutput.trim());
        } catch (Exception e) {
            fail("Serialization failed: " + e.getMessage());
        }
    }
}
