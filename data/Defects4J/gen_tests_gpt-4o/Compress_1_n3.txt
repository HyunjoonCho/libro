
import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;
import org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream;
import org.apache.commons.io.IOUtils;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

import static org.junit.Assert.fail;

public class CpioArchiveInputStreamTest {

    @Test
    public void testCpioUnpack() {
        File input = getFile("cmdcreated.cpio"); // Make sure to have the cmdcreated.cpio file available

        try (InputStream in = new FileInputStream(input);
             CpioArchiveInputStream cin = new CpioArchiveInputStream(in)) {

            CpioArchiveEntry entry;
            File dir = new File("outputDir"); // Directory where you want to extract files
            dir.mkdir(); // Make sure the directory exists

            while ((entry = (CpioArchiveEntry) cin.getNextCPIOEntry()) != null) {
                File target = new File(dir, entry.getName());
                try (OutputStream out = new FileOutputStream(target)) {
                    IOUtils.copy(cin, out); // Ensure you copy from the correct stream
                }
            }

        } catch (java.io.EOFException e) {
            // Explicitly catching the EOFException to demonstrate the issue
            System.err.println("Caught EOFException as expected: " + e.getMessage());
            // Consider this a failure based on the behavior being unexpected
            fail("EOFException occurred when it shouldn't: " + e.getMessage());
        } catch (Exception e) {
            fail("An unexpected error occurred: " + e.getMessage());
        }
    }

    private File getFile(String name) {
        // This should point to the directory where 'cmdcreated.cpio' is located.
        return new File("path/to/your/test/resources", name);
    }
}
