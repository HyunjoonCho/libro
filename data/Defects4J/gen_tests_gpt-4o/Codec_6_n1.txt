
import org.apache.commons.codec.binary.Base64InputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import static org.junit.Assert.assertEquals;

public class Base64InputStreamTest {

    @Test
    public void testBase64InputStreamEndOfStream() throws IOException {
        // Create a Base64 encoded string whose length is a multiple of 3
        String base64Encoded = "QUJDREVGRw=="; // ABCDEFG (7 characters, so 21 base64 encoded characters - multiple of 3)
        
        // Decode the base64 encoded string using a Base64InputStream
        Base64InputStream base64InputStream = new Base64InputStream(
                new ByteArrayInputStream(base64Encoded.getBytes()), true
        );

        // Use InputStreamReader to read from the Base64InputStream
        InputStreamReader reader = new InputStreamReader(base64InputStream);
        
        char[] buffer = new char[7];
        int readChars = reader.read(buffer);

        // Assert that all characters are read successfully and there's no premature end of stream
        assertEquals(7, readChars);

        // Assert that the content read is as expected
        assertEquals("ABCDEFG", new String(buffer, 0, readChars));

        // Try to read further and assert that no more characters are returned
        assertEquals(-1, reader.read());
    }
}
