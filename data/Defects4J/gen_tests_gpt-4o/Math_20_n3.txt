public void testCMAESOptimizerEnforcesBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer(1000, 1e-9, true, 0, 0, RandomSource.WELL_19937_C, false, null);
    MaxEval maxEval = new MaxEval(1000);
    SimpleBounds bounds = new SimpleBounds(new double[] {-1.0, -1.0}, new double[] {1.0, 1.0});
    MultivariateFunction fitnessFunction = new MultivariateFunction() {
        @Override
        public double value(double[] point) {
            for (double coordinate : point) {
                if (coordinate < -1.0 || coordinate > 1.0) {
                    return Double.POSITIVE_INFINITY;
                }
            }
            return 0.0; // Minimize this value
        }
    };
    
    PointValuePair result = optimizer.optimize(
        new ObjectiveFunction(fitnessFunction),
        new InitialGuess(new double[] {0.0, 0.0}),
        bounds,
        GoalType.MINIMIZE,
        maxEval
    );

    double[] foundPoint = result.getPoint();
    for (double coordinate : foundPoint) {
        assertTrue("Coordinate " + coordinate + " is out of bounds!", coordinate >= -1.0 && coordinate <= 1.0);
    }
}