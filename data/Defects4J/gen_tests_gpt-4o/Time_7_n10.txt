
import org.joda.time.MutableDateTime;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

import java.util.Locale;
import java.util.TimeZone;

public class TestDateTimeFormatter {

    public void testParseInto_monthDay_feb29_startOfYear() {
        DateTimeFormatter f = DateTimeFormat.forPattern("M d").withLocale(Locale.UK);
        MutableDateTime result = new MutableDateTime(2000, 1, 1, 0, 0, 0, 0, TimeZone.getTimeZone("America/New_York"));
        assertEquals(4, f.parseInto(result, "2 29", 0));
        assertEquals(new MutableDateTime(2000, 2, 29, 0, 0, 0, 0, TimeZone.getTimeZone("America/New_York")), result);
    }

    // Helper method to simulate assertion logic
    private void assertEquals(Object expected, Object actual) {
        if (!expected.equals(actual)) {
            throw new AssertionError("Expected: " + expected + ", but got: " + actual);
        }
    }

    public static void main(String[] args) {
        TestDateTimeFormatter test = new TestDateTimeFormatter();
        test.testParseInto_monthDay_feb29_startOfYear();
        System.out.println("Test passed");
    }
}
