
import org.apache.commons.codec.binary.Base64;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Base64Test {

    @Test
    public void testEncodeBase64WithValidMaxResultSizeAndNoChunking() {
        byte[] binaryData = "testData".getBytes();
        boolean isChunked = false;
        boolean urlSafe = false;
        int maxResultSize = 20; // Valid max size, greater than the length of the expected output

        try {
            byte[] encodedData = Base64.encodeBase64(binaryData, isChunked, urlSafe, maxResultSize);
            assertEquals("dGVzdERhdGE=", new String(encodedData));
        } catch (IllegalArgumentException e) {
            // The bug is that this exception should not occur for this valid maxResultSize
            throw new AssertionError("Base64 encoding threw an exception for a valid maxResultSize when isChunked is false", e);
        }
    }
}
