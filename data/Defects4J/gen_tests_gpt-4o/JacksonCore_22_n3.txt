public void testFilteringParserDelegateMatchCount() throws IOException {
    // Set up a FilteringParserDelegate
    String json = "{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}";
    ObjectMapper mapper = new ObjectMapper();
    JsonNode rootNode = mapper.readTree(json);
    
    TokenFilter filter = new TokenFilter() {
        @Override
        public TokenFilter includeProperty(String name) {
            return "name".equals(name) ? TokenFilter.INCLUDE_ALL : null;
        }
    };

    FilteringParserDelegate filteringParser = new FilteringParserDelegate(
        rootNode.traverse(mapper),
        filter,
        FilteringParserDelegate.INCLUDE_ALL_AND_PATH,
        null
    );

    // Iterate through the JSON using filteringParser and check the matchCount behavior
    int matchCount = 0;
    while (filteringParser.nextToken() != null) {
        ++matchCount;
    }

    // Incorrect matchCount behavior needs to be asserted
    assertEquals("Expected match count should be 1 for property 'name'", 1, filteringParser.getMatchCount());
}