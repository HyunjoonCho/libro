
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.filter.FilteringParserDelegate;
import com.fasterxml.jackson.core.filter.TokenFilter;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertEquals;

public class FilteringParserDelegateTest {

    @Test
    public void testMatchCountUsage() throws IOException {
        String json = "{\"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\"}";

        JsonFactory jsonFactory = new JsonFactory();
        JsonParser parser = jsonFactory.createParser(json);

        TokenFilter tokenFilter = new TokenFilter() {
            @Override
            public TokenFilter includeProperty(String name) {
                if ("key1".equals(name) || "key3".equals(name)) {
                    return TokenFilter.INCLUDE_ALL;
                }
                return null;
            }
        };

        FilteringParserDelegate delegate = new FilteringParserDelegate(parser, tokenFilter, true, true);

        ObjectMapper mapper = new ObjectMapper(new JsonFactory());

        // Read filtered JSON content
        String filteredJson = mapper.readTree(delegate).toString();

        // Verify matched content
        // Assuming matchCount would have counted the matching scenarios when the feature is implemented
        assertEquals("{\"key1\":\"value1\",\"key3\":\"value3\"}", filteredJson);
    }
}
