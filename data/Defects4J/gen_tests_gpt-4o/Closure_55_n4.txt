public void testExceptionWhenEmittingCodeWithGetters() {
    // Sample JavaScript code containing a getter
    String jsCode = "var obj = { get name() { return 'Inspector'; } };";
    
    // Initialize the compiler and compile the JavaScript code
    com.google.javascript.jscomp.Compiler compiler = new com.google.javascript.jscomp.Compiler();
    com.google.javascript.jscomp.CompilerOptions options = new com.google.javascript.jscomp.CompilerOptions();

    // Process the compilation and check for exceptions
    try {
        compiler.compile(
            com.google.common.collect.ImmutableList.of(),
            com.google.common.collect.ImmutableList.of(com.google.javascript.jscomp.SourceFile.fromCode("Settings.js", jsCode)),
            options
        );
    } catch (RuntimeException e) {
        assertTrue(e.getCause() instanceof IllegalStateException);
        assertEquals("Expected function but was call Reference node CALL 128 [free_call: 1] [source_file: Settings.js]", e.getCause().getMessage());
    }
}