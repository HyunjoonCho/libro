
import com.google.javascript.jscomp.CommandLineRunner;
import org.junit.Test;

import java.io.FileWriter;
import java.io.IOException;

public class ClosureCompilerTest {

    @Test(expected = IllegalStateException.class)
    public void testClosureCompilerCrash() throws IOException {
        // Create a temporary JavaScript file with the content of crash.js
        String crashJsContent = 
                "var test = {};\n" +
                "\n" +
                "/**\n" +
                " * @interface\n" +
                " */\n" +
                "test.T = function() {};\n" +
                "\n" +
                "/**\n" +
                " * @constructor\n" +
                " * @implements {test.T}\n" +
                " */\n" +
                "test.A = function() {};\n" +
                "\n" +
                "/**\n" +
                " * @constructor\n" +
                " * @implements {test.T}\n" +
                " */\n" +
                "test.B = function() {};\n" +
                "\n" +
                "/**\n" +
                " * @constructor\n" +
                " */\n" +
                "test.X = function() {\n" +
                "  this.type = test.A;\n" +
                "  this.t = this.f();\n" +
                "};\n" +
                "\n" +
                "/**\n" +
                " * @return {test.T}\n" +
                " */\n" +
                "test.X.prototype.f = function() {\n" +
                "  if (this.type === test.A) {\n" +
                "    return new test.A();\n" +
                "  } else if (this.type === test.B) {\n" +
                "    return new test.B();\n" +
                "  }\n" +
                "};";

        java.nio.file.Path tempFilePath = java.nio.file.Files.createTempFile("crash", ".js");

        try (FileWriter writer = new FileWriter(tempFilePath.toFile())) {
            writer.write(crashJsContent);
        }

        // Construct command line arguments for Closure Compiler
        String[] args = {
                "--js", tempFilePath.toString(),
                "--warning_level", "VERBOSE",
                "--compilation_level", "SIMPLE_OPTIMIZATIONS"
        };

        // Run the Closure Compiler
        CommandLineRunner.main(args);
    }
}
