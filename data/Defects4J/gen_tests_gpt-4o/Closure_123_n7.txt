
import static org.junit.Assert.*;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Scriptable;
import org.junit.Test;

public class CompilerTest {

    @Test
    public void testInvalidForInLeftHandAssignment() {
        String script = "window.Foo = function(A, B, C, D) {" +
                        "    if (A) {" +
                        "        if (B) {" +
                        "            C = 0;" +
                        "        } else {" +
                        "            C = 0 in D;" +
                        "        }" +
                        "        while (C--);" +
                        "    }" +
                        "}";

        String expected = "window.Foo=function(b,c,a,d){if(b)for(a=c?0:(0 in d);a--;);}";

        Context ctx = Context.enter();
        try {
            Scriptable scope = ctx.initStandardObjects();
            ctx.evaluateString(scope, script, "source", 1, null);
            Object result = ctx.evaluateString(scope, expected, "minified", 1, null);
            assertNotNull("The script should execute without syntax errors", result);
        } finally {
            Context.exit();
        }
    }
}
