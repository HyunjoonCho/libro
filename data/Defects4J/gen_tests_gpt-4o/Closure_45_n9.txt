public void testAssignmentInArrayPush() {
    // Original function intended to be compiled by Closure Compiler
    Object f = new Object() {
        Object[] f() {
            Object[] a = {};
            Object[] b;
            a = push(a, b = new Object[]{});
            b[0] = 1;
            return a;
        }
        
        Object[] push(Object[] array, Object element) {
            Object[] newArray = new Object[array.length + 1];
            System.arraycopy(array, 0, newArray, 0, array.length);
            newArray[array.length] = element;
            return newArray;
        }
    };
    
    // Execute the function and check the result
    Object[] result = (Object[]) ((Object[]) java.lang.reflect.MethodHandles.lookup()
                                    .unreflect(java.lang.reflect.MethodHandles.lookup()
                                    .in(f.getClass())
                                    .findSpecial(f.getClass(), "f", java.lang.invoke.MethodType.methodType(Object[].class), f.getClass()))
                                    .bindTo(f).invokeExact());
    
    // Verify the expected content of the result array
    assertEquals(1, ((Object[]) result[0])[0]);
}