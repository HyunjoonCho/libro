public void testLargeNumberOfWeightsInOptimizer() {
    int numPoints = 41200;
    double[] xValues = new double[numPoints];
    double[] yValues = new double[numPoints];
    double[] weights = new double[numPoints];
    Arrays.fill(xValues, 1.0);
    Arrays.fill(yValues, 1.0);
    Arrays.fill(weights, 1.0);

    PolynomialCurveFitter fitter = PolynomialCurveFitter.create(2);

    try {
        fitter.withStartPoint(new double[] {0.0, 0.0, 0.0});
        fitter.withMaxIterations(1000);
        fitter.fit(new WeightedObservedPoints().add(xValues, yValues, weights).toList());
        fail("Expected an OutOfMemoryError to be thrown due to large number of weights.");
    } catch (OutOfMemoryError e) {
        // Success, out of memory error was expected
    }
}