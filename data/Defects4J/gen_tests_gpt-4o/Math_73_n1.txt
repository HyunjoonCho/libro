
import static org.junit.Assert.assertThrows;

import org.apache.commons.math4.analysis.UnivariateFunction;
import org.apache.commons.math4.analysis.solvers.BrentSolver;
import org.junit.Test;

public class BrentSolverTest {

    @Test
    public void testSolveThrowsExceptionWhenAllSameSign() {
        // Define a simple univariate function
        UnivariateFunction function = new UnivariateFunction() {
            @Override
            public double value(double x) {
                // A simple function where all values are positive in the interval
                return x * x + 1;
            }
        };

        BrentSolver solver = new BrentSolver();

        // Using min, max and initial guess where the function has the same sign
        double min = 0.0;
        double max = 2.0;
        double initial = 1.0;

        // Expecting IllegalArgumentException due to same sign at min, max, and initial
        assertThrows(IllegalArgumentException.class, () -> 
            solver.solve(100, function, min, max, initial)
        );
    }
}
