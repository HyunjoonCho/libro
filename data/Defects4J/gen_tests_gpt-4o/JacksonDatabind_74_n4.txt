
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;
import org.junit.Test;

import static org.junit.Assert.assertNull;

public class AsPropertyTypeDeserializerTest {

    static class TestClass {
        @JsonDeserialize(using = CustomDeserializer.class)
        public Object value;
    }

    static class CustomDeserializer extends AsPropertyTypeDeserializer {
        private static final long serialVersionUID = 1L;

        public CustomDeserializer(AsPropertyTypeDeserializer src) {
            super(src);
        }
    }

    @Test
    public void testDeserializeEmptyStringAsNull() throws Exception {
        String json = "{\"value\":\"\"}";

        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.configure(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT, true);

        TestClass result = objectMapper.readValue(json, TestClass.class);
        assertNull(result.value);
    }
}
