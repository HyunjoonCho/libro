
import static org.junit.Assert.fail;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.junit.Test;

public class GsonNullTypeAdapterFactoryTest {

    private static class NullTypeAdapterFactory implements TypeAdapterFactory {
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            // Returning null to reproduce the issue
            return null;
        }
    }
    
    @Test
    public void testNullTypeAdapterFactory() {
        try {
            Gson gson = new GsonBuilder()
                    .registerTypeAdapterFactory(new NullTypeAdapterFactory())
                    .create();

            // Trying to use Gson with a fallback TypeAdapterFactory that returns null
            gson.toJson("test");
            fail("Expected NullPointerException, but none was thrown.");
        } catch (NullPointerException e) {
            // Expected exception
        }
        // You can also add assertions for specific elements if they are known
    }
}
