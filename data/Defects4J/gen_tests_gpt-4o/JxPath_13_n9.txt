
import org.junit.Test;
import org.w3c.dom.Document;
import org.xml.sax.InputSource;

import javax.xml.namespace.NamespaceContext;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;
import java.io.StringReader;
import java.util.Iterator;

import static org.junit.Assert.fail;

public class NamespaceHandlingTest {

    @Test
    public void testAttributeNamespaceHandling() {
        String xmlContent = "<ElementA xmlns:A=\"http://example.com/A\" A:myAttr=\"Mytype\">" +
                            "<B:ElementB xmlns:B=\"http://example.com/B\">MY VALUE</B:ElementB>" +
                            "</ElementA>";

        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            factory.setNamespaceAware(true);
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document document = builder.parse(new InputSource(new StringReader(xmlContent)));

            XPathFactory xPathFactory = XPathFactory.newInstance();
            XPath xPath = xPathFactory.newXPath();

            // Set a custom namespace context
            xPath.setNamespaceContext(new NamespaceContext() {
                @Override
                public String getNamespaceURI(String prefix) {
                    switch (prefix) {
                        case "A": return "http://example.com/A";
                        case "B": return "http://example.com/B";
                        default: return null;
                    }
                }

                @Override
                public String getPrefix(String uri) {
                    return null;
                }

                @Override
                public Iterator getPrefixes(String uri) {
                    return null;
                }
            });

            XPathExpression expr = xPath.compile("/ElementA/@A:myAttr");
            String result = (String) expr.evaluate(document, XPathConstants.STRING);

            // Assert that the attribute value is correctly fetched
            if (!"Mytype".equals(result)) {
                fail("The namespace for the attribute was not handled correctly.");
            }

        } catch (Exception e) {
            fail("Exception occurred: " + e.getMessage());
        }
    }
}
