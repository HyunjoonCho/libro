
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;
import org.junit.Test;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

public class TarArchiveInputStreamTest {

    @Test(expected = IOException.class)
    public void testCorruptedBzip2() throws IOException {
        // Path to a deliberately corrupted tar.bz2 file for testing
        String archivePath = "path/to/corrupted/test.tar.bz2";

        try (
            InputStream fileInputStream = new FileInputStream(archivePath);
            BZip2CompressorInputStream bzip2Input = new BZip2CompressorInputStream(fileInputStream, true);
            TarArchiveInputStream input = new TarArchiveInputStream(bzip2Input)
        ) {
            ArchiveEntry nextMatchedEntry;
            
            while ((nextMatchedEntry = input.getNextEntry()) != null) {
                // Attempt to read the entry, expecting an IOException due to corruption
                // Since we're expecting an exception, we don't need to process the entry
            }
        }
    }
}
