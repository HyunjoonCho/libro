
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import static org.junit.Assert.assertTrue;

public class DateTimeSerializerBaseTest {

    // A simple POJO that contains a date field with a custom format.
    static class Event {
        @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd-MM-yyyy")
        public Date eventDate;

        public Event(Date eventDate) {
            this.eventDate = eventDate;
        }
    }

    @Test
    public void testDateSerializationWithCustomFormat() throws IOException {
        // Given
        SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        Date date = df.parse("01-04-2021");
        Event event = new Event(date);

        ObjectMapper mapper = new ObjectMapper();
        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);

        // When
        String result = mapper.writeValueAsString(event);

        // Then
        assertTrue("Serialized date should be in 'dd-MM-yyyy' format",
                   result.contains("01-04-2021"));
    }
}
