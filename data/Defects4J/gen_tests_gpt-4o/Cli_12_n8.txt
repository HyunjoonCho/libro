
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class PosixParserTest {

    private static final String OPTION_TARGET = "t";
    private static final String OPTION_TARGET_LONG = "target";

    @Test
    public void testTargetOptionParsesIncorrectly() {
        String[] args = new String[]{"-target", "foobar.com"};

        Options options = new Options();
        Option generateTarget = new Option(OPTION_TARGET, OPTION_TARGET_LONG, true, "Generate files for the specified target machine");
        options.addOption(generateTarget);

        CommandLineParser parser = new PosixParser();

        try {
            CommandLine parsedLine = parser.parse(options, args);

            if (parsedLine.hasOption(OPTION_TARGET)) {
                String value = parsedLine.getOptionValue(OPTION_TARGET);
                // The error described is that "arget" is parsed instead of "foobar.com"
                assertEquals("Expected value was 'foobar.com', but was parsed as 'arget'", "foobar.com", value);
            } else {
                fail("Option -target should be present");
            }
        } catch (ParseException pe) {
            fail("Parsing failed. Invalid command: " + pe.getMessage());
        }
    }
}
