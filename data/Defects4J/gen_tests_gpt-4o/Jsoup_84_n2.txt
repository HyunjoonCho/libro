
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.helper.W3CDom;
import org.junit.Test;
import org.w3c.dom.Document as W3cDocument;

import javax.xml.parsers.DocumentBuilderFactory;

import static org.junit.Assert.fail;

public class W3CDomNamespaceTest {

    @Test
    public void testW3CDomConversionWithMissingNamespace() {
        String html = "<html><body><fb:like></fb:like></body></html>";

        // Parse HTML with Jsoup
        Document jsoupDoc = Jsoup.parse(html);

        // Convert Jsoup Document to W3C DOM Document
        W3CDom w3cDom = new W3CDom();

        try {
            // This should throw an exception due to the missing namespace declaration for 'fb'
            W3cDocument w3cDoc = w3cDom.fromJsoup(jsoupDoc);

            // If no exception is thrown, fail the test
            fail("Expected NAMESPACE_ERR due to missing namespace declaration for 'fb'");
        } catch (RuntimeException e) {
            // Check if the exception is due to NAMESPACE_ERR
            if (!(e.getCause() instanceof org.w3c.dom.DOMException)) {
                fail("Unexpected exception type: " + e);
            }
            org.w3c.dom.DOMException domException = (org.w3c.dom.DOMException) e.getCause();
            // Verify that the code corresponds to a namespace error
            if (domException.code != org.w3c.dom.DOMException.NAMESPACE_ERR) {
                fail("Unexpected DOMException code. Expected NAMESPACE_ERR but got: " + domException.code);
            }
            // Exception expected, so the test passes
        }
    }
}
