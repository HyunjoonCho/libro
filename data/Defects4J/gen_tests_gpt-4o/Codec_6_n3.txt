
import org.apache.commons.codec.binary.Base64InputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import static org.junit.Assert.assertEquals;

public class Base64InputStreamTest {

    @Test
    public void testBase64InputStreamMultipleOfThreeBytes() throws IOException {
        // Input data is "abc", which is a multiple of 3 bytes long
        byte[] base64Data = java.util.Base64.getEncoder().encode("abc".getBytes());
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(base64Data);
        Base64InputStream base64InputStream = new Base64InputStream(byteArrayInputStream, true);
        InputStreamReader inputStreamReader = new InputStreamReader(base64InputStream);

        char[] buffer = new char[1024];
        int bytesRead = inputStreamReader.read(buffer);

        // Ensure that bytesRead is not zero unless at the end of the stream
        // The decoded string "abc" is 3 characters long
        assertEquals(3, bytesRead);

        // Further reads should return -1 to indicate the end of the stream
        assertEquals(-1, inputStreamReader.read(buffer));
    }
}
