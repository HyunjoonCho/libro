
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter;
import com.fasterxml.jackson.core.util.Instantiatable;
import org.junit.Test;
import static org.junit.Assert.*;

public class DefaultPrettyPrinterTest {

    // A custom subclass of DefaultPrettyPrinter
    static class CustomPrettyPrinter extends DefaultPrettyPrinter {
        @Override
        public DefaultPrettyPrinter createInstance() {
            return new CustomPrettyPrinter();
        }

        @Override
        public DefaultPrettyPrinter withRootSeparator(String sep) {
            return this;
        }

        @Override
        public DefaultPrettyPrinter withArrayIndenter(Indenter i) {
            return this;
        }

        @Override
        public DefaultPrettyPrinter withObjectIndenter(Indenter i) {
            return this;
        }

        @Override
        public DefaultPrettyPrinter withoutSpacesInObjectEntries() {
            return this;
        }

        @Override
        public DefaultPrettyPrinter withSeparators(com.fasterxml.jackson.core.util.Separators separators) {
            return this;
        }

        @Override
        protected DefaultPrettyPrinter _withSeparators(com.fasterxml.jackson.core.util.Separators separators) {
            return this;
        }
    }

    @Test
    public void testCreateInstanceForSubClass() {
        // Test the default createInstance behavior for the CustomPrettyPrinter
        CustomPrettyPrinter customPrettyPrinter = new CustomPrettyPrinter();
        DefaultPrettyPrinter instance = customPrettyPrinter.createInstance();

        // Assert that the returned instance should be of the same class type
        assertTrue("Instance should be of the type CustomPrettyPrinter", instance instanceof CustomPrettyPrinter);

        // Assert it is not an instance of DefaultPrettyPrinter to assert sub-classing works logically
        assertFalse("Instance should not be of the type DefaultPrettyPrinter", instance.getClass() == DefaultPrettyPrinter.class);
    }
}
