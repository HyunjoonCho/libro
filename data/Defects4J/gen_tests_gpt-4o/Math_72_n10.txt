
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class BrentSolverTest {

    @Test
    public void testBracketEndpointAsRoot() {
        // Define a function where x = 2 is a root
        UnivariateRealFunction function = new UnivariateRealFunction() {
            public double value(double x) {
                return (x - 2) * (x - 3);  // Roots at x = 2 and x = 3
            }
        };

        BrentSolver solver = new BrentSolver();
        double min = 2.0;
        double max = 4.0;
        double initial = 3.5;

        // Call solve where min = 2 is a root
        double result = solver.solve(function, min, max, initial);

        // We expect the solver to return 'min' because it's a root
        assertEquals("The solver should return the min bracket as it's a root", min, result, 1e-6);
    }
}
