
import static org.mockito.Mockito.*;
import static org.junit.Assert.*;
import org.junit.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Captor;
import org.mockito.MockitoAnnotations;
import org.junit.Before;

import java.util.function.Consumer;

public class ArgumentCaptorTest {

    @Captor
    private ArgumentCaptor<Consumer<String>> consumerCaptor;

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test(expected = CompileTimeError.class) // This is conceptual, Java doesn't allow capture of compile errors like this
    public void testArgumentCaptorWithFromClass() {
        // This line fails to compile due to the type mismatch mentioned in the bug report
        ArgumentCaptor<Consumer<String>> captor = ArgumentCaptor.fromClass(Consumer.class);
    }

    @Test
    public void testArgumentCaptorWithWorkaround() {
        // Using a workaround as described in the bug report
        ArgumentCaptor<? extends Consumer<String>> workaroundCaptor = ArgumentCaptor.fromClass(Consumer.class);
        assertNotNull(workaroundCaptor);
    }

    @Test
    public void testCaptorAnnotation() {
        assertNotNull(consumerCaptor);
    }
}
