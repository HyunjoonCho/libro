
import org.apache.commons.math3.stat.descriptive.SummaryStatistics;
import org.apache.commons.math3.stat.descriptive.moment.Variance;
import org.junit.Test;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class StatisticsTest {

    @Test
    public void testStandardDeviationNotNaN() {
        int[] scores = {1, 2, 3, 4};
        SummaryStatistics stats = new SummaryStatistics();
        stats.setVarianceImpl(new Variance(false)); // use "population variance"
        
        for (int i : scores) {
            stats.addValue(i);
        }
        
        double sd = stats.getStandardDeviation();
        
        // Check that the standard deviation is not NaN
        assertFalse(Double.isNaN(sd));
        
        // Optionally, print the standard deviation to verify the value
        System.out.println("Standard Deviation: " + sd);
        
        // For comparison, using the workaround
        double workaroundSd = Math.sqrt(stats.getSecondMoment() / stats.getN());
        System.out.println("Workaround Standard Deviation: " + workaroundSd);
        
        // Check that both methods produce a similar result
        assertTrue(Math.abs(sd - workaroundSd) < 1e-10);
    }
}
