
import org.apache.commons.lang3.time.StopWatch;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;

class StopWatchTest {

    @Test
    void testSuspendActsAsSplitOnStop() throws InterruptedException {
        StopWatch sw = new StopWatch();

        sw.start();
        Thread.sleep(1000);
        sw.suspend();

        // Capturing time after first suspend
        long time1 = sw.getTime();

        Thread.sleep(2000);

        // Assert time hasn't changed after suspend
        assertEquals(time1, sw.getTime());

        sw.resume();
        Thread.sleep(3000);
        sw.suspend();

        // Capturing time after second suspend
        long time2 = sw.getTime();

        Thread.sleep(4000);

        // Assert time hasn't changed after second suspend
        assertEquals(time2, sw.getTime());

        Thread.sleep(5000);
        sw.stop();

        // Assert time hasn't changed after stop
        // This demonstrates the bug: expected time2 but getTime() will report time3
        assertEquals(time2, sw.getTime());
    }
}
