
import org.apache.commons.math3.stat.Frequency;
import org.junit.Test;

public class FrequencyTest {

    @Test(expected = IllegalArgumentException.class)
    public void testAddNonComparableObject() {
        Frequency frequency = new Frequency();
        final Object OBJ = new Object();
        frequency.addValue(OBJ); // This should fail, as per the bug report suggestion
    }

    @Test
    public void testGetCountForNonComparableObject() {
        Frequency frequency = new Frequency();
        final Object OBJ = new Object();
        frequency.addValue(OBJ); // Adds non-Comparable object
        assertEquals(0, frequency.getCount(OBJ)); // Expected to fail with incorrect API behavior
    }

    private void assertEquals(long expected, long actual) {
        if (expected != actual) {
            throw new AssertionError("Expected: " + expected + ", but was: " + actual);
        }
    }

    @Test
    public void testGetPctForNonComparableObject() {
        Frequency frequency = new Frequency();
        final Object OBJ = new Object();
        frequency.addValue(OBJ); // Adds non-Comparable object
        assertEquals(0.0, frequency.getPct(OBJ), 0.0001); // Expected to fail with incorrect API behavior
    }

    private void assertEquals(double expected, double actual, double delta) {
        if (Math.abs(expected - actual) > delta) {
            throw new AssertionError("Expected: " + expected + ", but was: " + actual);
        }
    }
}
