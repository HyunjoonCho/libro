
import org.joda.time.DateTime;
import org.joda.time.chrono.GJChronology;
import org.joda.time.chrono.JulianChronology;
import org.junit.Test;
import org.junit.Assert;

public class DateTimeTest {

    @Test
    public void testJulianChronologyValidDate() {
        DateTime jdt = new DateTime(1500, 2, 29, 0, 0, 0, 0, JulianChronology.getInstanceUTC());
        Assert.assertEquals(1500, jdt.getYear());
        Assert.assertEquals(2, jdt.getMonthOfYear());
        Assert.assertEquals(29, jdt.getDayOfMonth());
    }

    @Test
    public void testGJChronologyShouldAllowFeb2921500() {
        try {
            DateTime gjdt = new DateTime(1500, 2, 29, 0, 0, 0, 0, GJChronology.getInstanceUTC());
            Assert.assertEquals(1500, gjdt.getYear());
            Assert.assertEquals(2, gjdt.getMonthOfYear());
            Assert.assertEquals(29, gjdt.getDayOfMonth());
        } catch (IllegalArgumentException e) {
            Assert.fail("GJChronology incorrectly rejects valid Julian date 1500-02-29");
        }
    }
}
