
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import org.junit.Test;
import static org.junit.Assert.*;

public class GoogleClosureCompilerTest {

    @Test
    public void testGoogIsArrayHint() throws Exception {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        String jsCode =
            "/**\n" +
            " * @param {*} object\n" +
            " * @return {*}\n" +
            " */\n" +
            "var test = function(object) {\n" +
            "  if (goog.isArray(object)) {\n" +
            "    /** @type {Array} */ var x = object;\n" +
            "    return x;\n" +
            "  }\n" +
            "};";

        String externs = "var goog = {}; goog.isArray = function(obj) {};";

        compiler.compile(JSSourceFile.fromCode("externs.js", externs), JSSourceFile.fromCode("test.js", jsCode), options);

        if (compiler.getErrorCount() > 0) {
            fail("Compilation errors occurred: " + compiler.getErrors());
        }
    }
}
