
import org.joda.time.DateTimeConstants;
import org.joda.time.MonthDay;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.IllegalFieldValueException;
import org.junit.Test;

public class MonthDayTest {

    @Test(expected = IllegalFieldValueException.class)
    public void testAddDaysToISOLeapDate() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        System.out.println(isoLeap);
        // Attempt to add days to February 29th, expecting an exception
        System.out.println(isoLeap.plusDays(2));
    }
    
    @Test(expected = IllegalFieldValueException.class)
    public void testAddMonthsToISOLeapDate() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        System.out.println(isoLeap);
        // Attempt to add months to February 29th, expecting an exception
        System.out.println(isoLeap.plusMonths(1));
    }

    // Test additional related cases that are also failing
    @Test(expected = IllegalFieldValueException.class)
    public void testSubtractMonthsFromISOLeapDate() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        System.out.println(isoLeap);
        // Attempt to subtract months from February 29th, expecting an exception
        System.out.println(isoLeap.minusMonths(1));
    }

    @Test
    public void testMinusDaysFromISOLeapDate() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        // This should print the day before leap day without exception
        System.out.println(isoLeap.minusDays(1));
    }

    @Test
    public void testPlusDaysNegativeFromISOLeapDate() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        // This should correctly subtract a day, landing on Feb 28th without exception
        System.out.println(isoLeap.plusDays(-1));
    }

    @Test
    public void testExpectedBehaviorAroundLeapDate() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        // Calculate --02-29 minus 1 day plus 2 days to reach --03-01
        MonthDay result = isoLeap.minusDays(1).plusDays(2);
        System.out.println(result);
    }

}
