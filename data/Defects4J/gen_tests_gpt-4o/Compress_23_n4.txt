
import org.apache.commons.compress.archivers.sevenz.SevenZFile;
import org.apache.commons.compress.archivers.sevenz.SevenZOutputFile;
import org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry;
import org.junit.Test;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import static org.junit.Assert.fail;

public class SevenZFileTest {

    @Test
    public void testLZMA2DictionarySizeLimit() {
        try {
            // Create a temporary directory and a file within it
            Path tempDir = Files.createTempDirectory("compress-test");
            Path filePath = Paths.get(tempDir.toString(), "test.txt");
            Files.write(filePath, "This is a test file".getBytes());

            // Create a .7z archive using LZMA2 compression with a 16MB dictionary
            File archive = new File(tempDir.toFile(), "test.7z");
            try (SevenZOutputFile sevenZOutput = new SevenZOutputFile(archive)) {
                SevenZArchiveEntry entry = sevenZOutput.createArchiveEntry(filePath.toFile(), "test.txt");
                entry.setMethod(SevenZMethod.LZMA2);
                entry.setDictionarySize(16 * 1024 * 1024); // 16MB dictionary size
                sevenZOutput.putArchiveEntry(entry);
                Files.copy(filePath, sevenZOutput);
                sevenZOutput.closeArchiveEntry();
            }

            // Attempt to read the .7z archive
            try (SevenZFile sevenZFile = new SevenZFile(archive)) {
                fail("Expected UnsupportedOptionsException was not thrown");
            } catch (Exception e) {
                if (!(e instanceof org.tukaani.xz.UnsupportedOptionsException)) {
                    fail("Unexpected exception thrown: " + e);
                } else {
                    System.out.println("Caught expected exception: " + e);
                }
            }

        } catch (IOException e) {
            fail("IOException occurred: " + e);
        }
    }
}
