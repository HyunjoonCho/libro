
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidFormatException;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class JsonMappingExceptionTest {

    @Test
    public void testDuplicateLocationInExceptionMessage() {
        // JSON with incorrect format (string instead of expected integer)
        String json = "{\"age\": \"notANumber\"}";

        ObjectMapper mapper = new ObjectMapper();
        try {
            mapper.readValue(json, Person.class);
        } catch (InvalidFormatException e) {
            // Check if the exception message contains "at [source]" more than once
            String message = e.getMessage();
            int firstOccurrence = message.indexOf(" at [source]");
            int secondOccurrence = message.indexOf(" at [source]", firstOccurrence + 1);
            assertTrue("Location information is included twice in the exception message", 
                       firstOccurrence != -1 && secondOccurrence != -1);
        } catch (JsonMappingException e) {
            // Fail the test if a different JsonMappingException is thrown, which is unexpected
            assertTrue("Unexpected JsonMappingException type: " + e.getClass().getSimpleName(), false);
        }
    }

    static class Person {
        public int age;
    }
}
