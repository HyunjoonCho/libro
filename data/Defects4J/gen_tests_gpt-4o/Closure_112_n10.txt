
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class TemplateInferenceTest {

    /**
     * Dummy Class with a template.
     * @param <CLASS> Template for the class.
     */
    static class MyClass<CLASS> {
        /**
         * Method with its own template.
         * @param a A function taking and returning CLASS
         * @param <T> Method level template
         * @return A string result.
         */
        public <T> String foo(Function<CLASS, CLASS> a) {
            return "string";
        }
    }

    interface Function<T, R> {
        R apply(T t);
    }

    @Test
    public void testTemplateInference() {
        MyClass<?> myClass = new MyClass<>();
        
        // Function taking a Number and returning a String, since CLASS is unknown.
        Function<Number, Number> func = a -> null;

        // This line should compile without errors, demonstrating the issue.
        String result = myClass.foo(func);

        assertEquals("string", result);
    }
}
