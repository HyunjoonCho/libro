
import org.apache.commons.codec.binary.Base64InputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;

import static org.junit.Assert.*;

public class Base64InputStreamTest {
    
    @org.junit.Test
    public void testBase64InputStreamReturnZeroAtEnd() {
        // Arrange
        // The string "abc" in Base64 is "YWJj", which is a length of 4 since "abc".getBytes() is exactly 3 bytes long
        byte[] base64Data = "YWJj".getBytes();
        
        try (Base64InputStream base64InputStream = new Base64InputStream(new ByteArrayInputStream(base64Data), true);
             Reader reader = new InputStreamReader(base64InputStream)) {
            
            // Act
            char[] buffer = new char[3];
            int bytesReadFirst = reader.read(buffer); // First read, should read all 3 characters
            int bytesReadSecond = reader.read(buffer); // Second read, should return -1

            // Assert
            assertEquals("The first read should return 3 characters", 3, bytesReadFirst);
            assertEquals("The second read should indicate end of stream with -1", -1, bytesReadSecond);
            
        } catch (IOException e) {
            fail("IOException occurred: " + e.getMessage());
        }
    }
}
