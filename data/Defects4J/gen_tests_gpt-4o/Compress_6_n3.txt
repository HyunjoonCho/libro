public void testZipFileCorruptionWithCommonsCompress() throws IOException {
    FileOutputStream fos = new FileOutputStream("test.zip");
    ZipArchiveOutputStream zos = new ZipArchiveOutputStream(fos);

    // Use filenames that are likely to produce hash collisions
    for (int i = 0; i < 1000; i++) {
        String filename = "file" + (i % 10);
        ZipArchiveEntry entry = new ZipArchiveEntry(filename);
        entry.setName(filename);
        zos.putArchiveEntry(entry);
        zos.write(("Content of file " + i).getBytes());
        zos.closeArchiveEntry();
    }

    zos.close();

    // Attempt to read back the zip file to verify if it's corrupted
    try (ZipFile zipFile = new ZipFile("test.zip")) {
        for (Enumeration<ZipArchiveEntry> entries = zipFile.getEntries(); entries.hasMoreElements(); ) {
            ZipArchiveEntry entry = entries.nextElement();
            InputStream stream = zipFile.getInputStream(entry);
            assertNotNull("Failed to read entry: " + entry.getName(), stream);
            stream.close();
        }
    }
}