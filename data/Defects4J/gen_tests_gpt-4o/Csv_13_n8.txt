
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVPrinter;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

import static org.junit.Assert.assertEquals;

public class CsvFormatTest {

    @Test
    public void testNullStringNotEscaped() throws IOException {
        // Set up the CSV format to use the specific representation for null
        CSVFormat format = CSVFormat.DEFAULT.withNullString("\\N");

        // Prepare a writer to capture the output
        StringWriter writer = new StringWriter();

        // Instantiate a CSVPrinter with the custom null string configuration
        try (CSVPrinter printer = new CSVPrinter(writer, format)) {
            // Print a row with a null value that should be represented as "\N"
            printer.printRecord("value1", null, "value3");
        }

        // Get the output
        String result = writer.toString();

        // Expected output line: "value1,\N,value3"
        String expected = "value1,\\N,value3\n";

        // Assert that the null string is not unnecessarily escaped
        assertEquals(expected, result);
    }
}
