
import static org.junit.Assert.*;
import org.junit.Test;

import com.google.javascript.jscomp.*;

public class ClosureCompilerTest {

    @Test
    public void testMultipleExtendsCausingCompilerCrash() {
        Compiler compiler = new Compiler();

        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
        WarningLevel.VERBOSE.setOptionsForWarningLevel(options);

        SourceFile extern = SourceFile.fromCode("externs.js", "");
        SourceFile input = SourceFile.fromCode("input.js", 
            "/**\n" +
            " * @interface\n" +
            " * @extends {unknown_1}\n" +
            " * @extends {unknown_2}\n" +
            " */\n" +
            "function Foo() {}");

        // Run the compiler
        Result result = compiler.compile(extern, input, options);

        // Assert that the compilation didn't result in errors (NPE etc.)
        assertFalse("Compiler should not crash", result.errors.length > 0);
    }
}
