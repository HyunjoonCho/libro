
import org.apache.commons.codec.binary.Base64InputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class Base64InputStreamTest {

    @Test
    public void testReadMultiOf3BytesLengthStream() throws IOException {
        // Sample Base64 encoded input, whose decoded form is a multiple of 3 bytes in length.
        // "TWFu" is "Man" in ASCII, which is 3 bytes long.
        String encoded = "TWFu";

        // Wrap it with Base64InputStream for decoding
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(encoded.getBytes());
        Base64InputStream base64InputStream = new Base64InputStream(byteArrayInputStream, true);

        // Wrap with InputStreamReader
        InputStreamReader reader = new InputStreamReader(base64InputStream);
        char[] buffer = new char[1024];
        int bytesRead = reader.read(buffer);

        // Ensure bytes are read correctly
        assertTrue(bytesRead > 0);

        // Verify content
        String result = new String(buffer, 0, bytesRead);
        assertEquals("Man", result);

        // Attempt to read further, should return -1 indicating end of stream, not 0
        bytesRead = reader.read(buffer);
        assertEquals(-1, bytesRead);
    }
}
