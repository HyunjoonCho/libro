
import com.google.javascript.jscomp.CommandLineRunner;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.Assert.*;

public class CodeEmissionTest {

    @Test
    public void testExceptionWhenEmittingCodeWithGetters() {
        // Sample JavaScript code containing a getter
        String sourceCode = "var obj = { get name() { return 'test'; } };";

        // Set up the CommandLineRunner to compile the JS code
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        PrintStream printStream = new PrintStream(outputStream);
        CommandLineRunner runner = new CommandLineRunner(new String[]{
            "--compilation_level", "SIMPLE_OPTIMIZATIONS",
            "--js", "input.js"
        }, printStream, printStream);

        // Try to compile the code
        boolean exceptionThrown = false;
        try {
            runner.doRun();
        } catch (RuntimeException e) {
            exceptionThrown = true;
            String message = e.getMessage();
            assertTrue(message.contains("Expected function but was call Reference node"));
        }

        // Verify that the expected exception was thrown
        assertTrue("Expected RuntimeException due to 'get name()' getter", exceptionThrown);
    }

}
