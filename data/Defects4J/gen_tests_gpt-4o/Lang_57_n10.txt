
import org.junit.Test;
import org.apache.commons.lang.LocaleUtils;
import java.util.Locale;

import static org.junit.Assert.*;

public class LocaleUtilsTest {

    @Test(expected = NullPointerException.class)
    public void testIsAvailableLocale_NullPointerException() {
        // Assuming the snippet `cAvailableLocaleSet` is a static field
        // hypothetically we directly set it to null for this test case to mimic uninitialized scenario
        LocaleUtils localeUtils = new LocaleUtils();
        
        // Use reflection to set cAvailableLocaleSet to null if it's private
        try {
            java.lang.reflect.Field field = LocaleUtils.class.getDeclaredField("cAvailableLocaleSet");
            field.setAccessible(true);
            field.set(null, null);
        } catch (Exception e) {
            fail("Failed to set cAvailableLocaleSet to null: " + e.getMessage());
        }

        // Attempt to use isAvailableLocale without initializing the locale set
        // This should trigger a NullPointerException as described
        localeUtils.isAvailableLocale(Locale.US);
    }
}
