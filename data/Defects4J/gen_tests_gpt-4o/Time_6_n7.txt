
import org.joda.time.Chronology;
import org.joda.time.GJChronology;
import org.joda.time.LocalDate;
import org.joda.time.Period;
import org.junit.Test;
import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;
import org.joda.time.IllegalFieldValueException;

public class GJChronologyBugTest {

    @Test(expected = IllegalFieldValueException.class)
    public void testGJChronologyCrossingYearZero() {
        Chronology chronology = GJChronology.getInstance();

        LocalDate start = new LocalDate(2013, 5, 31, chronology);
        LocalDate expectedEnd = new LocalDate(-1, 5, 31, chronology); // 1 BC

        // These are the operations expected to fail
        LocalDate result1 = start.minusYears(2013);
        assertThat(result1, is(equalTo(expectedEnd)));

        LocalDate result2 = start.plus(Period.years(-2013));
        assertThat(result2, is(equalTo(expectedEnd)));
    }
}
