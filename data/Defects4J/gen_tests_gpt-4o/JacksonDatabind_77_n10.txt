
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping;
import org.junit.Test;

import static org.junit.Assert.fail;

public class JacksonDeserializationTest {

    @Test(expected = Exception.class)
    public void testDefaultTypingVulnerability() {
        String maliciousJson = "[\"org.apache.commons.collections.functors.InvokerTransformer\",{\"iMethodName\":\"exec\",\"iParamTypes\":[\"java.lang.String\"],\"iArgs\":[\"calc\"]}]";
        ObjectMapper mapper = new ObjectMapper();
        // This is vulnerable to a security flaw prior to the fix.
        // Enabling default typing without setting a whitelist allows arbitrary code execution.
        mapper.enableDefaultTyping(DefaultTyping.NON_FINAL);

        try {
            Object obj = mapper.readValue(maliciousJson, Object.class);
            fail("Deserialization should fail due to security constraints.");
        } catch (Exception e) {
            // Expected: Deserialization should fail due to security constraints.
        }
    }
}
