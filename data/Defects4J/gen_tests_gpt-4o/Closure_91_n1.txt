public void testLendsAnnotationSupport() {
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.WARNING);

    String jsCode =
        "/**\n" +
        " * @name MyClass\n" +
        " * @class\n" +
        " * @extends {superClass1}\n" +
        " * @extends {superClass2}\n" +
        " */\n" +
        "dojo.declare(\"MyClass\", [superClass1, superClass2], /** @lends MyClass.prototype */ {\n" +
        "  /**\n" +
        "   * @this {MyClass}\n" +
        "   */\n" +
        "  foo: function() { this.bar(); },\n" +
        "  /**\n" +
        "   * @this {MyClass}\n" +
        "   */\n" +
        "  bar: function() {}\n" +
        "});";

    Compiler compiler = new Compiler();
    Result result = compiler.compile(
        ExternsSupplier.getDefaultExterns(), // supply externs
        SourceFile.fromCode("testcode.js", jsCode),
        options
    );
    
    assertFalse("Compilation has warnings or errors", result.errors.length > 0 || result.warnings.length > 0);
    assertEquals(
        "Compiled code should contain function declaration",
        -1,
        compiler.toSource().indexOf("function")
    );
}