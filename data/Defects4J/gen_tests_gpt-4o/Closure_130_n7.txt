
import static org.junit.jupiter.api.Assertions.assertThrows;

import org.junit.jupiter.api.Test;

import java.util.concurrent.atomic.AtomicReference;

public class ArgumentsScopeTest {
    
    @Test
    public void testArgumentsScope() {
        AtomicReference<Object[]> capturedArgs = new AtomicReference<>();
        
        // Original function that simulates collapsing issue
        Runnable runnable = () -> {
            Object[] args = new Object[] {"arg1", "arg2"};
            new Thread(() -> capturedArgs.set(args)).start();
        };

        // Execute the function
        runnable.run();

        // Give some time for the thread to execute
        try {
            Thread.sleep(100); // This is just for the sake of demonstration
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
        
        // Validate that the arguments from the outer scope were captured correctly
        assertThrows(NullPointerException.class,() -> {
            if(capturedArgs.get() == null) {
                System.out.println("Failed to capture arguments from outer scope!");
                throw new NullPointerException("Mismatched arguments scope.");
            }
        });

    }
}
