
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class PropertyCompressionTest {

    public class GlowLibrary {
        // Initialize Glow object
        public static class Glow {
            
            /** @public */
            public static int[] versions = {1, 2, 3};

            /** Show versions using alert (simulated as returning a string for test) */
            public static String showVersions() {
                return "Versions: " + joinArray(versions);
            }
            
            // Helper to join array elements to a string
            private static String joinArray(int[] array) {
                StringBuilder result = new StringBuilder();
                for (int i = 0; i < array.length; i++) {
                    if (i > 0) {
                        result.append(",");
                    }
                    result.append(array[i]);
                }
                return result.toString();
            }
        }
    }

    @Test
    public void testPublicTagPreventsCompression() {
        // Before simulated "compilation"
        GlowLibrary.Glow glow = new GlowLibrary.Glow();
        assertEquals("Versions: 1,2,3", glow.showVersions());

        // Simulating change using public API
        GlowLibrary.Glow.versions = new int[]{4, 5, 6};
        assertEquals("Versions: 4,5,6", glow.showVersions());

        // In this scenario, the Glow.versions property should not be renamed
        // and should be accessible via the public API after "optimizations".
    }
}
