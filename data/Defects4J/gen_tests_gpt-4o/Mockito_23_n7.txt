
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;

public class AbstractClassTest {

    @Mock
    private ClassExtendsAbstractClass classExtendsAbstractClass;
    private A a;

    @Before
    public void setUp() {
        MockitoAnnotations.openMocks(this);

        // Mock the give method to return "aaa"
        Mockito.when(classExtendsAbstractClass.give()).thenReturn("aaa");

        // Initialize the A class with the mock
        a = new A(classExtendsAbstractClass);
    }

    @Test
    public void testDoSomeThing() {
        // This is where the WrongTypeOfReturnValue error will likely occur as described in the bug report
        String result = a.doSomeThing();
        
        // Assert the expected behavior, though this line might not be reached due to the error
        assertEquals("WOW", result);
    }
}

abstract class AbstractClass {
    abstract protected Long lol();
    abstract protected String wow();
    public String give() {
        wow();
        lol();
        return "give";
    }
}

class ClassExtendsAbstractClass extends AbstractClass {
    @Override
    protected Long lol() {
        return 2L;
    }

    @Override
    protected String wow() {
        return "WOW";
    }
}

class A {
    private ClassExtendsAbstractClass classExtendsAbstractClass;

    public A(ClassExtendsAbstractClass classExtendsAbstractClass) {
        this.classExtendsAbstractClass = classExtendsAbstractClass;
    }

    public String doSomeThing() {
        return classExtendsAbstractClass.wow();
    }
}
