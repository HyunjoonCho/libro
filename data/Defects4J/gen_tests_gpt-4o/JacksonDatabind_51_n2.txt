public void testGenericTypeReturnedFromTypeIdResolver() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerSubtypes(new NamedType(CustomType.class, "customType"));
    String json = "{\"type\":\"customType\",\"value\":{\"field\":\"test\"}}";

    BaseType result = mapper.readValue(json, BaseType.class);
    assertTrue(result instanceof CustomType);
    CustomType<CustomField> customResult = (CustomType<CustomField>) result;
    assertEquals("test", customResult.getValue().getField());
}