
import org.apache.commons.math3.fraction.Fraction;
import org.apache.commons.math3.fraction.FractionConversionException;
import org.junit.Assert;
import org.junit.Test;

public class FractionBugTest {

    @Test
    public void testFractionConstructorPositiveResult() {
        try {
            Fraction fraction = new Fraction(-33655.1677817278, 371880);
            // Verify that the fraction is negative
            Assert.assertTrue("Fraction should be negative", fraction.toString().startsWith("-"));
        } catch (FractionConversionException e) {
            Assert.fail("FractionConversionException was thrown: " + e.getMessage());
        }
    }

    @Test
    public void testFractionConstructorReductionIssue() {
        try {
            Fraction fraction = new Fraction(-43979.60679604749, 366081);

            // The fraction should reduce to -24654898/3831
            Fraction expectedFraction = new Fraction(-24654898, 3831);
            Assert.assertEquals("Fraction did not reduce correctly", expectedFraction, fraction.reduce());
        } catch (FractionConversionException e) {
            Assert.fail("FractionConversionException was thrown: " + e.getMessage());
        }
    }
}
