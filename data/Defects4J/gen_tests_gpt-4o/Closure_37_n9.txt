
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import static org.junit.Assert.*;

public class CompilerTest {

    @Test
    public void testIncompleteFunctionDefinition() {
        // Initialize the Closure Compiler
        Compiler compiler = new Compiler();

        // Enable ideMode
        CompilerOptions options = new CompilerOptions();
        options.ideMode = true;

        // JavaScript code to be compiled
        String jsCode = "f f f ;\nfunction t";

        // Set up the input source file
        SourceFile input = SourceFile.fromCode("test.js", jsCode);

        // Perform the compilation
        try {
            Result result = compiler.compile(
                    JSSourceFile.fromCode("externs.js", ""),
                    input,
                    options);

            // Check if compilation was successful
            assertTrue("Compilation should not crash", result.success);
        } catch (RuntimeException e) {
            // If there's an internal compiler error, fail the test
            fail("Compiler crashed with INTERNAL COMPILER ERROR: " + e.getMessage());
        }
    }
}
