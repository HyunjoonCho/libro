
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.apache.xpath.XPathAPI;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.ByteArrayInputStream;

import static org.junit.Assert.assertNotNull;

public class XPathWildcardNamespaceTest {

    private static final String XML_DATA = "<xml xmlns:x='foo' x:pop='a'/>";

    @Test
    public void testWildcardNamespaceAttributeSelection() throws Exception {
        // Prepare a DOM Document from the XML string
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.parse(new ByteArrayInputStream(XML_DATA.getBytes()));

        // Attempt to select the namespaced attribute with a wildcard
        NodeList result = XPathAPI.selectNodeList(doc, "/xml/@*");

        // Check that the result is not null and at least one attribute is selected
        assertNotNull("Expected to find at least one attribute using wildcard.", result);
        assertTrue("Expected at least one attribute to be selected with wildcard.", result.getLength() > 0);
   
        Node attribute = result.item(0);
        assertNotNull("Expected not null attribute node.", attribute);
        
        // Asserting the selected attribute's name and value
        assertEquals("Expected attribute name to be 'x:pop'.", "x:pop", attribute.getNodeName());
        assertEquals("Expected attribute value to be 'a'.", "a", attribute.getNodeValue());
    }
}
