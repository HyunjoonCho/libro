public void testJacksonDeserializationFailure() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper().disable(
            DeserializationFeature.FAIL_ON_INVALID_SUBTYPE,
            DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES,
            DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES
    );

    String json1 = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    CallRecord result1 = objectMapper.readValue(json1, CallRecord.class);
    assertNotNull(result1.item2);  // fails because item2 is valid but not read

    String json2 = "{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}}";
    CallRecord result2 = objectMapper.readValue(json2, CallRecord.class);
    assertNotNull(result2.application);  // fails because application should be read

    String json3 = "{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}, \"version\":0.0,\"application\":\"123\"}";
    CallRecord result3 = objectMapper.readValue(json3, CallRecord.class);
    assertNotNull(result3.application);  // fails due to invalid subtype stopping further parsing
}