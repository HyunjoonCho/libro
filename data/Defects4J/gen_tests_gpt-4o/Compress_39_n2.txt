public void testTruncatedZipFileProducesVerboseErrorMessage() {
    byte[] truncatedZipData = {80, 75, 3, 4, 20, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0};
    
    try {
        InputStream inputStream = new ByteArrayInputStream(truncatedZipData);
        ZipInputStream zipInputStream = new ZipInputStream(inputStream);
        
        while (zipInputStream.getNextEntry() != null) {
            // Attempt to read the file in the zip entry to trigger the exception
            new byte[4096];
            zipInputStream.read(new byte[4096], 0, 4096);
        }
        zipInputStream.close();
        fail("Expected EOFException");
    } catch (EOFException e) {
        String message = e.getMessage();
        
        // Check that the exception message does not contain large amounts of data
        // and is not overly verbose
        assertTrue("Error message should not contain raw byte data or be excessively long", 
                   message == null || message.length() < 500);
    } catch (IOException e) {
        fail("Unexpected IOException: " + e.getMessage());
    }
}