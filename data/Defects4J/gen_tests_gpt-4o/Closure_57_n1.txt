
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.DiagnosticGroups;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;

public class GoogProvideTest {

    public static void main(String[] args) {
        // Create a new compiler instance
        Compiler compiler = new Compiler();

        // Set up compiler options
        CompilerOptions options = new CompilerOptions();
        options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CompilerOptions.WarningLevel.WARNING);

        // Sample JavaScript code that uses goog.provide with a non-string argument
        String jsCode = "goog.provide(mine.Spike);";

        // Set up the source file (assuming "file.js" for this example)
        SourceFile input = SourceFile.fromCode("file.js", jsCode);

        // Create an externs file (can be empty for this test)
        SourceFile externs = JSSourceFile.fromCode("externs.js", "");

        // Run the compilation process
        Result result = compiler.compile(externs, input, options);

        // Check and print out the error messages
        if (result.success) {
            System.out.println("The compilation succeeded, but an error was expected.");
        } else {
            System.out.println("The compilation failed with the following errors:");
            compiler.getErrors().forEach(error -> System.out.println(error.getDescription()));
        }
    }
}
