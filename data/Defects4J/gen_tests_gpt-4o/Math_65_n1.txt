public void testChiSquareWeights() {
    AbstractLeastSquares ls = new AbstractLeastSquares() {
        @Override
        public void modelFunction(double[] point, double[] residuals, double[][] jacobian) {
            // Assume some dummy model for testing
            residuals[0] = point[0] - 1.0;
            residuals[1] = point[1] - 2.0;
        }
    };
    double[] observations = {1.0, 2.0};
    double[] weights = {0.5, 0.2};  // Example weights for testing
    ls.setStartPoint(new double[]{1, 2});
    ls.setResidualsWeights(weights);
    ls.setObservations(observations);

    double expectedChiSquare = 0.0; // Corrected expected chi-square value
    for (int i = 0; i < observations.length; i++) {
        double residual = observations[i] - (i + 1);
        expectedChiSquare += weights[i] * Math.pow(residual, 2);
    }
    
    double actualChiSquare = ls.getChiSquare();
    
    assertEquals(expectedChiSquare, actualChiSquare, 1e-12);
}