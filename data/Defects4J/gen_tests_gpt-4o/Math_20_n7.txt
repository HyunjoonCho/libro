public void testCMAESOptimizerRespectsBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer(10000, 1e-5, true, 0, 0, new Well19937c(), false, new SimpleValueChecker(1e-9, 1e-9));
    MultivariateFunction objectiveFunction = new MultivariateFunction() {
        @Override
        public double value(double[] point) {
            return point[0] * point[0] + point[1] * point[1];
        }
    };
    
    double[] startPoint = {0, 0};
    double[] lowerBound = {-1, -1};
    double[] upperBound = {1, 1};
    
    PointValuePair result = optimizer.optimize(
        new MaxEval(1000),
        new ObjectiveFunction(objectiveFunction),
        GoalType.MINIMIZE,
        new InitialGuess(startPoint),
        new SimpleBounds(lowerBound, upperBound)
    );
    
    double[] resultPoint = result.getPoint();
    for (int i = 0; i < resultPoint.length; i++) {
        assertTrue("Value out of bounds: " + resultPoint[i], 
                   resultPoint[i] >= lowerBound[i] && resultPoint[i] <= upperBound[i]);
    }
}