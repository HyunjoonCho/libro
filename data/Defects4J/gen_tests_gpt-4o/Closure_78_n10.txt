
import static org.junit.Assert.*;

import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

public class DivisionByZeroTest {

    @Test
    public void testDivisionByZero() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
        
        // Source code to be compiled
        SourceFile input = SourceFile.fromCode("input.js", "var result = 1 / 0;");
        
        // Empty externs need to be provided for closure-compiler
        SourceFile extern = SourceFile.fromCode("externs.js", "function alert(x) {}");
        
        // Compile the source code
        compiler.compile(extern, input, options);
        
        // Retrieve the result after compiling
        String output = compiler.toSource();
        
        // Asserting no errors are thrown and code is minified correctly
        assertNotNull("Output was null", output);
        assertFalse("Division by zero threw an error", compiler.hasErrors());
        System.out.println(output);  // optionally print the result
    }
}
