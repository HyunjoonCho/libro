public void testWideBoundsToCMAESOptimizer() {
    CMAESOptimizer optimizer = new CMAESOptimizer();
    MultivariateFunction fitnessFunction = point -> {
        for (double value : point) {
            if (Double.isNaN(value)) {
                throw new IllegalArgumentException("Parameters should not be NaN");
            }
        }
        return 0;
    };

    try {
        optimizer.optimize(
            new MaxEval(100),
            new ObjectiveFunction(fitnessFunction),
            GoalType.MINIMIZE,
            new InitialGuess(new double[]{0, 0}),
            new SimpleBounds(
                new double[]{-Double.MAX_VALUE, -Double.MAX_VALUE},
                new double[]{Double.MAX_VALUE, Double.MAX_VALUE}
            )
        );
        fail("Expected IllegalArgumentException due to NaN parameters.");
    } catch (IllegalArgumentException e) {
        assertEquals("Parameters should not be NaN", e.getMessage());
    }
}