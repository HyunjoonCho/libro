
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipFile;
import org.junit.Test;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;

import static org.junit.Assert.assertFalse;

public class ZipSymlinkTest {

    @Test
    public void testIsUnixSymlink() throws IOException {
        // Set up a temporary file for the jar
        URL jarUrl = getClass().getResource("/invalid-entry.jar");
        File tempJarFile = File.createTempFile("invalid-entry", ".jar");
        Files.copy(jarUrl.openStream(), tempJarFile.toPath(), StandardCopyOption.REPLACE_EXISTING);

        try (ZipFile zipFile = new ZipFile(tempJarFile)) {
            assertEntryIsNotSymlink(zipFile, "META-INF/");
            assertEntryIsNotSymlink(zipFile, "META-INF/maven/");
        }
    }

    private void assertEntryIsNotSymlink(ZipFile zipFile, String name) {
        ZipArchiveEntry entry = zipFile.getEntry(name);
        assertFalse("Entry should not be a symlink: " + name, entry.isUnixSymlink());
    }
}
