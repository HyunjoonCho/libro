
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class TypeRefinementTest {

    static class BaseClass {
        public int value;

        public BaseClass() {}
        public BaseClass(int value) {
            this.value = value;
        }
    }

    static class DerivedClass extends BaseClass {
        public Integer value;

        public DerivedClass() {}
        public DerivedClass(Integer value) {
            super(value);
            this.value = value;
        }
    }

    @Test
    public void testPrimitiveAndWrapperTypeRefinement() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();

        DerivedClass original = new DerivedClass(42);

        // Serialize the object
        String json = objectMapper.writeValueAsString(original);

        // Deserialize back to DerivedClass
        DerivedClass result = objectMapper.readValue(json, DerivedClass.class);

        // Check primitive int value is correctly read as Integer
        assertEquals(original.value, result.value);
    }
}
