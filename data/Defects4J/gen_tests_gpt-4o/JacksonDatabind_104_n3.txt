
import com.fasterxml.jackson.databind.util.StdDateFormat;
import org.junit.Test;

import java.text.ParseException;
import java.util.Date;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class StdDateFormatTest {

    @Test
    public void testLargeYearDateFormat() {
        StdDateFormat formatter = new StdDateFormat();
        
        // Example of a large year date beyond 9999
        String largeYearDateStr = "10000-01-01T00:00:00.000+0000";

        try {
            // Attempt to parse a date string with a year greater than 9999
            Date parsedDate = formatter.parse(largeYearDateStr);
            fail("Expected a ParseException due to unsupported year format");
        } catch (ParseException e) {
            // Expected exception due to unsupported year format
            System.out.println("Caught expected ParseException: " + e.getMessage());
        }

        try {
            // Formatting a date with a large year
            Date largeYearDate = new Date(Long.MAX_VALUE); // Using Long.MAX_VALUE for testing purposes
            String formattedDate = formatter.format(largeYearDate);
            System.out.println("Formatted Date: " + formattedDate);

            // Re-parsing the formatted date
            Date reparsedDate = formatter.parse(formattedDate);
            assertEquals("Re-parsed date should match the original date", largeYearDate.getTime(), reparsedDate.getTime());
        } catch (ParseException e) {
            fail("Parsing should not have failed here");
        }
    }
}
