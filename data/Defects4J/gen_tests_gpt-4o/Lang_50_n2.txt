
import org.apache.commons.lang3.time.FastDateFormat;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.text.ParseException;
import java.util.Date;
import java.util.Locale;

import static org.junit.Assert.assertEquals;

public class FastDateFormatLocaleChangeTest {

    private Locale defaultLocale;

    @Before
    public void setUp() {
        // Save the default locale to restore it later
        defaultLocale = Locale.getDefault();
    }

    @After
    public void tearDown() {
        // Restore the original default locale
        Locale.setDefault(defaultLocale);
    }

    @Test
    public void testFastDateFormatWithLocaleChange() throws ParseException {
        // Ensure a known default locale
        Locale.setDefault(Locale.US);

        // Create a FastDateFormat instance using the default locale
        FastDateFormat dateFormat = FastDateFormat.getDateInstance(FastDateFormat.SHORT, null);
        
        // Format a specific date
        String formattedDateBeforeChange = dateFormat.format(new Date(0)); // January 1, 1970

        // Change the default locale
        Locale.setDefault(Locale.FRANCE);

        // Format the same date again
        String formattedDateAfterChange = dateFormat.format(new Date(0));

        // The formatted date should not change just because the default locale changed
        assertEquals("The formatted date should be consistent regardless of locale changes",
                formattedDateBeforeChange, formattedDateAfterChange);
    }
}
