public void testAdvancedOptimizations() throws IOException, InterruptedException {
    // Create a temporary input file
    File inputFile = File.createTempFile("input", ".js");
    try (FileWriter writer = new FileWriter(inputFile)) {
        writer.write("window[\"anchor\"] = function (obj, modifiesProp) {\n" +
                     "    return (function (saved) {\n" +
                     "        return modifiesProp(obj) + saved;\n" +
                     "    })(obj[\"prop\"]);\n" +
                     "};");
    }

    // Define the path to the closure-compiler jar
    String compilerPath = "path/to/closure-compiler.jar";

    // Create a temporary output file
    File outputFile = File.createTempFile("output", ".js");

    // Run the compiler
    Process process = new ProcessBuilder(
        "java", "-jar", compilerPath,
        "--compilation_level", "ADVANCED_OPTIMIZATIONS",
        "--warning_level", "VERBOSE",
        "--externs", "path/to/window.js",
        "--js", inputFile.getAbsolutePath(),
        "--js_output_file", outputFile.getAbsolutePath()
    ).start();

    // Wait for the process to complete
    process.waitFor();

    // Read the output
    StringBuilder output = new StringBuilder();
    try (BufferedReader reader = new BufferedReader(new FileReader(outputFile))) {
        String line;
        while ((line = reader.readLine()) != null) {
            output.append(line).append("\n");
        }
    }

    // Assert that the output matches the expected result
    String expectedOutput = "window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD};";
    assertEquals(expectedOutput.trim(), output.toString().trim());
}