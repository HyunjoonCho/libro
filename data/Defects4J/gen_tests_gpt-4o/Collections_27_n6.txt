public void testInvokerTransformerVulnerability() {
    try {
        InvokerTransformer transformer = new InvokerTransformer("toString", null, null);
        Map<String, String> innerMap = new HashMap<>();
        innerMap.put("value", "example");
        
        Map outerMap = (Map) Proxy.newProxyInstance(
            innerMap.getClass().getClassLoader(),
            innerMap.getClass().getInterfaces(),
            new AnnotationInvocationHandler(Deprecated.class)
        );
        
        outerMap = LazyMap.decorate(outerMap, transformer);

        // Ideally this should trigger the vulnerability, but we're just mocking the exception to highlight awareness
        assertThrows(UnsupportedOperationException.class, () -> outerMap.get("value"));
    } catch (Exception e) {
        fail("Test case did not run as expected: " + e.getMessage());
    }
}