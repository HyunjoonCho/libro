
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.filter.FilteringParserDelegate;
import com.fasterxml.jackson.core.filter.NameMatchFilter;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class FilteringParserTest {

    @Test
    public void testFilteringParserDelegateMissingEndObject() throws Exception {
        String json = "{\n" +
                "  \"a\":123,\n" +
                "  \"array\":[1,2],\n" +
                "  \"ob\": {\n" +
                "    \"value0\":2,\n" +
                "    \"value\":3,\n" +
                "    \"value2\":4\n" +
                "  },\n" +
                "  \"b\":true\n" +
                "}";

        ObjectMapper mapper = new ObjectMapper();
        JsonParser p0 = mapper.getFactory().createParser(json);
        FilteringParserDelegate p = new FilteringParserDelegate(
                p0,
                new NameMatchFilter("value"),
                true,  // includePath
                false  // multipleMatches
        );

        StringBuilder sb = new StringBuilder();
        while (!p.isClosed()) {
            JsonToken token = p.nextToken();
            if (token == null) {
                break;
            }
            sb.append(token).append(": ");

            if (token == JsonToken.START_OBJECT || token == JsonToken.END_OBJECT ||
                token == JsonToken.FIELD_NAME || token == JsonToken.VALUE_NUMBER_INT) {
                sb.append(p.getCurrentName()).append(", ");
            }
        }

        String expectedOutput = "START_OBJECT: null, FIELD_NAME: ob, "
                + "START_OBJECT: null, FIELD_NAME: value, "
                + "VALUE_NUMBER_INT: value, END_OBJECT: ob, END_OBJECT: null, ";

        assertEquals(expectedOutput, sb.toString(), "The JSON output is missing END_OBJECT tokens correctly.");
    }
}
