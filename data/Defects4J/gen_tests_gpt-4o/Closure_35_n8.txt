script
/**
 * Tests the function `func` and its return type.
 */

function testFunc() {
    // Function under test
    /** @returns {{prop1: (Object|undefined), prop2: (string|undefined), prop3: (string|undefined)}} */
    function func(a, b) {
        /** @type {{prop1: (Object|undefined), prop2: (string|undefined), prop3: (string|undefined)}} */
        var results;
        if (a) {
            results = {};
            results.prop1 = {a: 3};
        }
        if (b) {
            results = results || {};
            results.prop2 = 'prop2';
        } else {
            results = results || {};
            results.prop3 = 'prop3';
        }
        return results;
    }

    // Test 1: a is true, b is true; expected to have prop1 and prop2
    let result1 = func(true, true);
    console.assert(result1.prop1 !== undefined, "Test 1 Failed: prop1 should be defined");
    console.assert(result1.prop2 === 'prop2', "Test 1 Failed: prop2 should be 'prop2'");
    console.assert(result1.prop3 === undefined, "Test 1 Failed: prop3 should be undefined");

    // Test 2: a is true, b is false; expected to have prop1 and prop3
    let result2 = func(true, false);
    console.assert(result2.prop1 !== undefined, "Test 2 Failed: prop1 should be defined");
    console.assert(result2.prop2 === undefined, "Test 2 Failed: prop2 should be undefined");
    console.assert(result2.prop3 === 'prop3', "Test 2 Failed: prop3 should be 'prop3'");

    // Test 3: a is false, b is true; expected to have prop2 only
    let result3 = func(false, true);
    console.assert(result3.prop1 === undefined, "Test 3 Failed: prop1 should be undefined");
    console.assert(result3.prop2 === 'prop2', "Test 3 Failed: prop2 should be 'prop2'");
    console.assert(result3.prop3 === undefined, "Test 3 Failed: prop3 should be undefined");

    // Test 4: a is false, b is false; expected to have prop3 only
    let result4 = func(false, false);
    console.assert(result4.prop1 === undefined, "Test 4 Failed: prop1 should be undefined");
    console.assert(result4.prop2 === undefined, "Test 4 Failed: prop2 should be undefined");
    console.assert(result4.prop3 === 'prop3', "Test 4 Failed: prop3 should be 'prop3'");

    console.log("All tests passed.");
}

testFunc();
