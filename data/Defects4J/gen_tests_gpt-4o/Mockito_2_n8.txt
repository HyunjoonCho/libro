
import org.junit.Test;
import org.mockito.Mockito;

import static org.mockito.Mockito.after;
import static org.mockito.Mockito.atLeastOnce;
import static org.mockito.Mockito.verify;

public class MockitoNegativeAfterTest {

    @Test
    public void testNegativeAfter() {
        // Arrange
        Runnable runnable = Mockito.mock(Runnable.class);
        
        // Act
        // (No calls to runnable.run() here)
        
        // Assert
        verify(runnable, Mockito.never()).run(); // passes as expected
        verify(runnable, after(1000).never()).run(); // passes as expected
        
        try {
            verify(runnable, after(-1000).atLeastOnce()).run(); // should fail, but passes incorrectly
            throw new AssertionError("Verification should not have passed with negative after delay.");
        } catch (Exception e) {
            // Expected to fail due to incorrect behavior in Mockito with negative values.
            System.out.println("Verification failed as expected with negative after delay.");
        }
    }
}
