
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathException;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.junit.Test;

import static org.junit.Assert.*;

public class XPathTest {

    @Test
    public void testUnionOfVariableAndNode() {
        try {
            // Create an example XML context
            String xml = "<MAIN><A>Value</A></MAIN>";

            // Create JXPathContext with XML
            JXPathContext context = JXPathContext.newContext(new org.xml.sax.InputSource(new java.io.StringReader(xml)));

            // Set a variable in the context
            context.getVariables().declareVariable("var", "SomeValue");

            // Perform XPath selection using union of a variable and a node
            context.selectNodes("$var | /MAIN/A");
            fail("Expected JXPathException due to comparing pointers from different trees");
        } catch (JXPathException e) {
            // Check if the exception message matches the expected error regarding node pointer comparison
            assertTrue(e.getMessage().contains("Cannot compare pointers that do not belong to the same tree"));
        }
    }
}
