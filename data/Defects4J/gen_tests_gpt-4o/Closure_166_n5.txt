script
/**
 * In this test we are going to check type inference inconsistency
 * with function parameters in a union type scenario.
 */

/**
 * Mock console to capture log outputs for assertions
 */
var consoleOutput = [];
var storeLog = function(log) {
    consoleOutput.push(log);
};
window.console = {
    log: storeLog
};

/**
 * @param {{prop: string, prop2: (string|undefined)}} record
 */
var func = function(record) {
    window.console.log(record.prop);
}

/**
 * @param {{prop: string, prop2: (string|undefined)}|string} record
 */
var func2 = function(record) {
    if (typeof record == 'string') {
        window.console.log(record);
    } else {
        window.console.log(record.prop);
    }
}

func({prop: 'a'});   // Expect this to run without errors
func2({prop: 'a'});  // Expect this to reproduce the error

// Assert the output to highlight the behavior
console.assert(consoleOutput[0] === 'a', "Expected 'a' for func");
console.assert(consoleOutput[1] === 'a', "Expected 'a' for func2, but inference inconsistency caused an issue");
