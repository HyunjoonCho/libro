public void testThreadLocalMemoryLeakInToStringStyle() {
    System.gc();
    int availableMemoryBefore = getAvailableMemory();

    for (int i = 0; i < 10000; i++) {
        ToStringStyle style = ToStringStyle.DEFAULT_STYLE;
        new ToStringBuilder(new Object(), style).append("test", "value").toString();
    }

    System.gc();
    int availableMemoryAfter = getAvailableMemory();

    assertTrue(availableMemoryAfter >= availableMemoryBefore * 0.9, 
               "Memory leak detected in ToStringStyle due to ThreadLocal");
}

private int getAvailableMemory() {
    return (int) (Runtime.getRuntime().freeMemory() + (Runtime.getRuntime().maxMemory() - Runtime.getRuntime().totalMemory()));
}