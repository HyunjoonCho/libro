
import com.google.javascript.jscomp.*;

import org.junit.Test;
import static org.junit.Assert.*;

public class ClosureCompilerTest {

    @Test
    public void testMultipleExtendsWithInterfaceCrash() {
        String jsCode = "/**\n"
                      + " * @interface\n"
                      + " * @extends {unknown_1}\n"
                      + " * @extends {unknown_2}\n"
                      + " */\n"
                      + "function Foo() {}";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
        
        SourceFile extern = SourceFile.fromCode("externs.js", "");
        SourceFile input = SourceFile.fromCode("input.js", jsCode);

        try {
            Result result = compiler.compile(extern, input, options);
            assertFalse("Compiler should have reported errors", result.success);
        } catch (Exception e) {
            fail("Compilation failed due to unexpected exception: " + e.getMessage());
        }
    }
}
