
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import static org.junit.Assert.fail;

public class JavaScriptCompilerTest {

    @Test
    public void testGetterCompilation() {
        // JavaScript code with a getter
        String jsCode = "var obj = { get name() { return 'test'; } };";

        // Create a new instance of the compiler
        Compiler compiler = new Compiler();

        // Set up the compiler options
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Compile the source code
        Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), 
                                         SourceFile.fromCode("input.js", jsCode), 
                                         options);

        // The test should fail if any errors are reported
        if (result.success) {
            System.out.println("Compilation succeeded.");
        } else {
            // If there's an error, it indicates the bug was reproduced
            fail("Compilation failed due to the presence of a getter.");
        }
    }
}
