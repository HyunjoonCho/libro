
import org.junit.Test;
import org.mockito.InOrder;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.verification.VerificationMode;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

public class CustomVerificationModeTest {

    @Mock
    private List<String> mockList;

    public CustomVerificationModeTest() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testCustomVerificationMode() {
        // Arrange
        mockList.add("first call");
        mockList.add("second call");

        InOrder inOrder = inOrder(mockList);

        // Act
        inOrder.verify(mockList, new FirstInvocation());

        // The test will fail if the custom verification mode does not function as expected
    }

    private static class FirstInvocation implements VerificationMode {
        @Override
        public void verify(VerificationData data) {
            Object firstInvocation = data.getAllInvocations().get(0);
            Object currentInvocation = data.getWanted().getInvocation();
            assertTrue("Expected the first invocation, but got a different one.",
                    firstInvocation.equals(currentInvocation));
        }
    }
}
