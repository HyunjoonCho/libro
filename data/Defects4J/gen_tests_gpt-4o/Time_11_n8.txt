
import org.joda.time.tz.DateTimeZoneBuilder;
import org.joda.time.tz.ZoneInfoCompiler;
import org.junit.Test;

public class DateTimeZoneBuilderTest {

    @Test
    public void testDateTimeZoneBuilder() throws Exception {
        // Initialize cVerbose correctly for the first thread
        ZoneInfoCompiler.verbose();
        
        getTestDataTimeZoneBuilder().toDateTimeZone("TestDTZ1", true);

        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                // Attempt to create the same DateTimeZone in a different thread
                getTestDataTimeZoneBuilder().toDateTimeZone("TestDTZ2", true);
            }
        });
        t.start();
        t.join();
    }

    private DateTimeZoneBuilder getTestDataTimeZoneBuilder() {
        return new DateTimeZoneBuilder()
            .addCutover(1601, 'w', 1, 1, 1, false, 7200000)
            .setStandardOffset(3600000)
            .addRecurringSavings("", 3600000, 1601, Integer.MAX_VALUE, 'w', 3, -1, 1, false, 7200000)
            .addRecurringSavings("", 0, 1601, Integer.MAX_VALUE, 'w', 10, -1, 1, false, 10800000);
    }
}
