
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.fail;

public class PolymorphicDeserializationTest {

    @Test
    public void testPolymorphicDeserializationVulnerability() {
        ObjectMapper objectMapper = new ObjectMapper();

        // Attempt to deserialize a payload with a known malicious type
        String jsonPayload = "{\"@type\":\"java.util.logging.FileHandler\",\"pattern\":\"temp.txt\",\"limit\":0,\"count\":0,\"append\":true}";

        try {
            Object obj = objectMapper.readValue(jsonPayload, Object.class);
            fail("Deserialization succeeded when it should be blocked for security reasons.");
        } catch (IOException e) {
            // Expected behavior, catching the security exception
            System.out.println("Polymorphic deserialization attempt blocked: " + e.getMessage());
        }
    }
}
