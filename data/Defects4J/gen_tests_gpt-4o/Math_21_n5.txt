
import org.apache.commons.math3.linear.Array2DRowRealMatrix;
import org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;
import org.apache.commons.math3.random.Well19937c;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class CorrelatedRandomVectorGeneratorTest {
    
    @Test
    public void testCovarianceMatrixWithZeroRows() {
        // Input covariance matrices
        double[][] covariance1 = {
            {0.0, 0.0, 0.0, 0.0, 0.0},
            {0.0, 0.013445532, 0.01039469, 0.009881156, 0.010499559},
            {0.0, 0.01039469, 0.023006616, 0.008196856, 0.010732709},
            {0.0, 0.009881156, 0.008196856, 0.019023866, 0.009210099},
            {0.0, 0.010499559, 0.010732709, 0.009210099, 0.019107243}
        };

        double[][] covariance2 = {
            {0.013445532, 0.01039469, 0.0, 0.009881156, 0.010499559},
            {0.01039469, 0.023006616, 0.0, 0.008196856, 0.010732709},
            {0.0, 0.0, 0.0, 0.0, 0.0},
            {0.009881156, 0.008196856, 0.0, 0.019023866, 0.009210099},
            {0.010499559, 0.010732709, 0.0, 0.009210099, 0.019107243}
        };

        double[][] covariance3 = {
            {0.013445532, 0.01039469, 0.009881156, 0.010499559},
            {0.01039469, 0.023006616, 0.008196856, 0.010732709},
            {0.009881156, 0.008196856, 0.019023866, 0.009210099},
            {0.010499559, 0.010732709, 0.009210099, 0.019107243}
        };

        // Setup random generator and CorrelatedRandomVectorGenerator
        Well19937c rng = new Well19937c();
        CorrelatedRandomVectorGenerator gen1 = new CorrelatedRandomVectorGenerator(
                new Array2DRowRealMatrix(covariance1),
                0.01,
                rng);

        CorrelatedRandomVectorGenerator gen2 = new CorrelatedRandomVectorGenerator(
                new Array2DRowRealMatrix(covariance2),
                0.01,
                rng);

        CorrelatedRandomVectorGenerator gen3 = new CorrelatedRandomVectorGenerator(
                new Array2DRowRealMatrix(covariance3),
                0.01,
                rng);

        // The getRank() method should return the expected rank of 4 for each root matrix
        assertEquals(4, gen1.getRank());
        assertEquals(4, gen2.getRank());
        assertEquals(4, gen3.getRank());
    }
}
