
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.deps.DependencyOptions;
import org.junit.Test;

import java.util.List;
import static org.junit.Assert.*;

public class ClosureCompilerTest {

    @Test
    public void testWhitespaceOnlyWithManageClosureDependencies() {
        String source = 
            "goog.provide('example');\n" +
            "goog.require('dependency');\n" +
            "function example() { console.log('example'); }\n";

        String dependency = 
            "goog.provide('dependency');\n" +
            "function dependency() { console.log('dependency'); }\n";

        CompilerOptions options = new CompilerOptions();
        CompilationLevel.WHITESPACE_ONLY.setOptionsForCompilationLevel(options);
        
        // Enabling dependency management for the test
        DependencyOptions dependencyOptions = new DependencyOptions();
        dependencyOptions.setDependencySorting(true);
        dependencyOptions.setDependencyPruning(true);
        
        options.setDependencyOptions(dependencyOptions);

        Compiler compiler = new Compiler();
        compiler.init(List.of(), List.of(
            JSSourceFile.fromCode("source.js", source),
            JSSourceFile.fromCode("dependency.js", dependency)
        ), options);

        compiler.compile(List.of(), List.of(
            JSSourceFile.fromCode("source.js", source),
            JSSourceFile.fromCode("dependency.js", dependency)
        ), options);

        String compiledCode = compiler.toSource();
        // Check that the compiled code includes the 'dependency' code before 'example'
        assertTrue(compiledCode.indexOf("console.log('dependency');") < compiledCode.indexOf("console.log('example');"));
    }
}
