public void testClosureCompilerVariableRenaming() {
    // Original JavaScript input
    String jsInput = "function(argument){\n"
                     + "  // use argument\n"
                     + "  var variable = 5;\n"
                     + "  // argument not used anymore\n"
                     + "}";

    // Expected obfuscated output should not have redeclared argument name
    String expectedOutput = "function(a){\n"
                            + "  // use argument\n"
                            + "  var b = 5;\n"
                            + "  // argument not used anymore\n"
                            + "}";

    // Use a mock or a valid ClosureCompiler API call to perform the obfuscation
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

    // Assume there's a function to run the compiler, for test purpose we directly compile here
    SourceFile input = SourceFile.fromCode("input.js", jsInput);
    SourceFile extern = SourceFile.fromCode("externs.js", "");
    compiler.compile(extern, input, options);

    String actualOutput = compiler.toSource();

    // Test to ensure the actual output doesn't trigger the Firefox TypeError
    assertEquals(expectedOutput, actualOutput);
}