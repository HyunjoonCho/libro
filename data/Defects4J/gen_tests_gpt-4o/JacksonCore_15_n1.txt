public void testAllowMultipleMatchesNotUtilized() {
    JsonFactory jsonFactory = new JsonFactory();
    String json = "{\"field1\": \"value1\", \"field2\": \"value2\", \"field1\": \"value3\"}";

    try {
        JsonParser parser = jsonFactory.createParser(json);
        FilteringParserDelegate delegate = new FilteringParserDelegate(parser,
                new NameMatchFilter("field1"), false, false);

        List<String> matchedValues = new ArrayList<>();
        while (delegate.nextToken() != JsonToken.END_OBJECT) {
            if (delegate.currentToken() == JsonToken.VALUE_STRING) {
                matchedValues.add(delegate.getValueAsString());
            }
        }

        // This assertion assumes _allowMultipleMatches is meant to capture all matches, which should not be an empty list.
        assertTrue("Allow multiple matches should capture multiple values", matchedValues.size() > 1);
    } catch (IOException e) {
        fail("Test failed due to IOException: " + e.getMessage());
    }
}