
import org.apache.commons.text.ExtendedMessageFormat;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class ExtendedMessageFormatTest {

    private static final Map<String, Object> formatRegistry = new HashMap<>();
    
    static {
        formatRegistry.put(DummyFormatFactory.DUMMY_FORMAT, new DummyFormatFactory());
    }

    @Test
    public void testOutOfMemoryWithSingleQuotes() {
        ExtendedMessageFormat mf = new ExtendedMessageFormat("it''s a {dummy} 'test'!", formatRegistry);
        String formattedPattern = mf.format(new Object[]{"great"});
        assertEquals("it's a great 'test'!", formattedPattern);
    }
    
    // Mock DummyFormatFactory implementation
    public static class DummyFormatFactory implements ExtendedMessageFormat.FormatFactory {
        public static final String DUMMY_FORMAT = "dummy";

        @Override
        public Format getFormat(String name, String arguments, Locale locale) {
            return new Format() {
                @Override
                public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {
                    return toAppendTo.append(obj);
                }

                @Override
                public Object parseObject(String source, ParsePosition pos) {
                    return null;
                }
            };
        }
    }
}
