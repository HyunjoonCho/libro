
import static org.junit.Assert.assertEquals;

import java.math.BigDecimal;

import org.junit.Test;

public class BigDecimalSchemaTest {

    @Test
    public void testBigDecimalSchemaType() {
        // Hypothetical JSON schema generator library
        JsonSchemaGenerator schemaGenerator = new JsonSchemaGenerator();
        
        // Generate schema for BigDecimal
        JsonSchema schema = schemaGenerator.generateSchema(BigDecimal.class);

        // Check that the type in the schema is correctly identified as "number"
        // and not "integer" which could be a sign it's considered as BigInteger
        assertEquals("number", schema.getType());
    }

    // Hypothetical classes to simulate JSON schema generation
    // These would actually belong to the JSON schema library you are testing
    class JsonSchemaGenerator {
        JsonSchema generateSchema(Class<?> clazz) {
            // Simulated schema generation logic (for illustration only)
            if (clazz.equals(BigDecimal.class)) {
                return new JsonSchema("number");
            } else if (clazz.equals(BigInteger.class)) {
                return new JsonSchema("integer");
            } else {
                throw new IllegalArgumentException("Unsupported type");
            }
        }
    }

    class JsonSchema {
        private final String type;

        JsonSchema(String type) {
            this.type = type;
        }

        String getType() {
            return type;
        }
    }
}
