public void testObjectIdAndTypeIdWithWrapper() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new JaxbAnnotationModule());
    TestData testData = new TestData(1, "test");

    // Serialization
    String json = mapper.writeValueAsString(testData);

    // Expect specific structure with wrapper-object for type id
    String expectedJson = "{\"TestDataWrapper\":{\"@id\":1,\"name\":\"test\"}}";
    assertEquals(expectedJson, json);

    // Deserialization
    TestData result = mapper.readValue(json, TestData.class);
    assertEquals(testData, result);
}

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.WRAPPER_OBJECT)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public static class TestData {
    public int id;
    public String name;

    // Needed for deserialization
    public TestData() {}

    public TestData(int id, String name) {
        this.id = id;
        this.name = name;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        TestData testData = (TestData) o;
        return id == testData.id && Objects.equals(name, testData.name);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name);
    }
}