
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class NonEmptyExclusionTest {

    static class TestData {
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public int number;

        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String text;
    }

    @Test
    public void testNonEmptyExclusion() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        
        // TestData where both fields should be considered empty
        TestData emptyData = new TestData();
        emptyData.number = 0;  // int default value, should be excluded
        emptyData.text = "";   // empty string, should be excluded
        
        String serializedEmptyData = mapper.writeValueAsString(emptyData);
        assertEquals("{}", serializedEmptyData, "Empty values should not be serialized");

        // Test where only text is non-empty
        TestData nonEmptyText = new TestData();
        nonEmptyText.number = 0;
        nonEmptyText.text = "Hello";

        String serializedNonEmptyText = mapper.writeValueAsString(nonEmptyText);
        assertEquals("{\"text\":\"Hello\"}", serializedNonEmptyText, "Only non-empty text should be serialized");

        // Test where only number is non-empty
        TestData nonEmptyNumber = new TestData();
        nonEmptyNumber.number = 5;
        nonEmptyNumber.text = "";

        String serializedNonEmptyNumber = mapper.writeValueAsString(nonEmptyNumber);
        assertEquals("{\"number\":5}", serializedNonEmptyNumber, "Only non-empty number should be serialized");

        // Test where both fields are non-empty
        TestData nonEmptyData = new TestData();
        nonEmptyData.number = 5;
        nonEmptyData.text = "World";

        String serializedNonEmptyData = mapper.writeValueAsString(nonEmptyData);
        assertEquals("{\"number\":5,\"text\":\"World\"}", serializedNonEmptyData, "Both non-empty fields should be serialized");
    }
}
