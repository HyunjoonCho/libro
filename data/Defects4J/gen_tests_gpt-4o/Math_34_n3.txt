
import org.apache.commons.math3.genetics.Chromosome;
import org.apache.commons.math3.genetics.ListPopulation;
import org.apache.commons.math3.genetics.Population;
import org.junit.Test;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import static org.junit.Assert.fail;

public class ListPopulationTest {

    @Test
    public void testIteratorAllowsRemoval() {
        // Create a simple chromosome subclass for testing
        Chromosome chromosome = new Chromosome() {
            @Override
            protected double fitness() {
                return 0;
            }

            @Override
            public int compareTo(Chromosome o) {
                return 0;
            }
        };

        // Add some chromosomes to a list
        List<Chromosome> chromosomes = new ArrayList<>();
        chromosomes.add(chromosome);
        chromosomes.add(chromosome);
        
        // Create a ListPopulation with the chromosomes list
        Population population = new ListPopulation(chromosomes, 10);

        // Obtain the iterator from the population
        Iterator<Chromosome> iterator = population.iterator();

        // Try to remove an element from the population using the iterator
        try {
            if (iterator.hasNext()) {
                iterator.next();
                iterator.remove(); // This should not be allowed
                fail("Iterator should not allow removal of elements from ListPopulation.");
            }
        } catch (UnsupportedOperationException e) {
            // Expected behavior, the iterator should be unmodifiable
        }
    }
}
