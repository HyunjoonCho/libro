public void testDefaultMockingDetailsTest_shouldGetExtraInterfaces() {
    Bar bar = mock(Bar.class, withSettings().extraInterfaces(List.class, Observer.class));
    MockingDetails details = mockingDetails(bar);
    assertTrue(details.getExtraInterfaces().contains(List.class));
    assertTrue(details.getExtraInterfaces().contains(Observer.class));
}

public void testNoJUnitDependenciesTest_pureMockitoShouldNotDependJUnitByteBuddy() {
    String dependency = "org.mockito.internal.progress.TimesTest";
    try {
        Class<?> clazz = Class.forName(dependency);
        fail("Expected NoClassDefFoundError but found: " + clazz);
    } catch (NoClassDefFoundError e) {
        assertTrue(e.getMessage().contains("junit/framework/Assert"));
    }
}

public void testClassLoadersTest_excludingClassLoaderCannotLoadClassesWithoutCorrectSourceUrl() {
    ClassLoader excludingLoader = new ExcludingURLClassLoader(new URL[0], getClass().getClassLoader(), "junit", "org.junit");
    try {
        excludingLoader.loadClass("junit.framework.TestCase");
        fail("Expected ClassNotFoundException for excluded class");
    } catch (ClassNotFoundException e) {
        // Expected exception was thrown
    }
}