
import org.w3c.dom.*;
import javax.xml.parsers.*;
import java.io.*;
import org.junit.Test;
import static org.junit.Assert.*;

public class NamespaceInheritanceTest {

    @Test
    public void testSiblingNamespaceInheritance() throws Exception {
        // Sample HTML content representing a similar structure to what might be in the "test.html"
        String htmlContent = "<root xmlns:ns=\"http://example.com/ns\">" +
                             "<elementWithNS ns:attr=\"value\">Content</elementWithNS>" +
                             "<sibling>Another Content</sibling>" +
                             "</root>";

        // Parse the HTML content using a DOM parser
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document document = builder.parse(new ByteArrayInputStream(htmlContent.getBytes()));

        // Retrieve the sibling element
        NodeList siblings = document.getElementsByTagName("sibling");
        assertTrue("Element <sibling> should be found", siblings.getLength() > 0);

        Element sibling = (Element) siblings.item(0);

        // The sibling element should not inherit the namespace from the previous element
        assertNull("Sibling element should not inherit namespace", sibling.getNamespaceURI());

        // Verify that the original element is correctly namespaced
        NodeList elementsWithNS = document.getElementsByTagName("elementWithNS");
        assertTrue("Element <elementWithNS> should be found", elementsWithNS.getLength() > 0);

        Element elementWithNS = (Element) elementsWithNS.item(0);
        assertEquals("http://example.com/ns", elementWithNS.getNamespaceURI());
    }
}
