
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

import java.util.TimeZone;
import java.util.Date;

public class Iso8601DateParsingTest {

    @Test
    public void testParseIso8601Formats() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.findAndRegisterModules(); // Ensures the necessary modules are loaded
        objectMapper.setTimeZone(TimeZone.getTimeZone("UTC"));
        objectMapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);

        String date1 = "2014-10-03T18:00:00.6-05:00";
        Date expectedDate1 = objectMapper.readValue("\"2014-10-03T23:00:00.6Z\"", Date.class);
        Date actualDate1 = objectMapper.readValue("\"" + date1 + "\"", Date.class);
        assertEquals(expectedDate1, actualDate1);

        String date2 = "2014-10-03T18:00:00.61-05:00";
        Date expectedDate2 = objectMapper.readValue("\"2014-10-03T23:00:00.61Z\"", Date.class);
        Date actualDate2 = objectMapper.readValue("\"" + date2 + "\"", Date.class);
        assertEquals(expectedDate2, actualDate2);

        String date3 = "1997-07-16T19:20+01:00";
        Date expectedDate3 = objectMapper.readValue("\"1997-07-16T18:20:00Z\"", Date.class);
        Date actualDate3 = objectMapper.readValue("\"" + date3 + "\"", Date.class);
        assertEquals(expectedDate3, actualDate3);

        String date4 = "1997-07-16T19:20:30.45+01:00";
        Date expectedDate4 = objectMapper.readValue("\"1997-07-16T18:20:30.45Z\"", Date.class);
        Date actualDate4 = objectMapper.readValue("\"" + date4 + "\"", Date.class);
        assertEquals(expectedDate4, actualDate4);
    }
}
