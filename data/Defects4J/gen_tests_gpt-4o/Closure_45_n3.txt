
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.ArrayList;

public class ClosureCompilerBugTest {

    @Test
    public void testAssignmentWithinArrayPush() {
        // Original function prior to Closure Compiler processing
        final String expectedFunction = "function f() {" +
                                        "  var a = [], b;" +
                                        "  a.push(b = []);" +
                                        "  b[0] = 1;" +
                                        "  return a;" +
                                        "}";

        // Run the function to get the actual result
        ArrayList<ArrayList<Integer>> result = f();
        
        // There should be one inner list, with the first element being 1.
        assertEquals(1, result.get(0).size(), "Inner array should have one element");
        assertEquals(1, result.get(0).get(0), "First element of inner array should be 1");
    }
    
    // This is the function to be tested, simulating the effect of the Closure Compiler modification.
    public ArrayList<ArrayList<Integer>> f() {
        ArrayList<ArrayList<Integer>> a = new ArrayList<>();
        ArrayList<Integer> b = new ArrayList<>();
        a.add(b);
        b.add(0, 1);
        return a;
    }
}
