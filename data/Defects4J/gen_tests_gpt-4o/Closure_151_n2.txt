
import org.junit.Test;
import java.io.BufferedReader;
import java.io.InputStreamReader;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class CompilerVersionOptionTest {

    @Test
    public void testCompilerVersionOption() {
        try {
            // Assume 'compiler.jar' is in the project's root directory
            ProcessBuilder processBuilder = new ProcessBuilder("java", "-jar", "compiler.jar", "--version");
            Process process = processBuilder.start();
            BufferedReader stdInput = new BufferedReader(new InputStreamReader(process.getInputStream()));
            BufferedReader stdError = new BufferedReader(new InputStreamReader(process.getErrorStream()));

            String s;
            StringBuilder output = new StringBuilder();
            
            // Read the output from the command
            while ((s = stdInput.readLine()) != null) {
                output.append(s);
            }

            // Read any errors from the attempted command
            StringBuilder errorOutput = new StringBuilder();
            while ((s = stdError.readLine()) != null) {
                errorOutput.append(s);
            }

            // Check that the expected output is not an error message about unsupported option
            assertTrue("Expected a version statement, but got: " + errorOutput.toString(), !errorOutput.toString().contains("unsupported"));
            
            // Additional check to ensure that some output is provided assuming version will print something
            assertTrue("Expected a version statement, but no output captured", output.length() > 0);
            
        } catch (Exception e) {
            e.printStackTrace();
            fail("An exception occurred while testing the compiler --version option.");
        }
    }
}
