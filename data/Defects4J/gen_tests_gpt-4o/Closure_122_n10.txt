public void testNonJSDocCommentWarning() {
    String codeWithPreserve = "/* @preserve Foo License */ alert(\"foo\");";
    String codeWithExclamation = "/*! @preserve Foo License */ alert(\"foo\");";

    // Simulate parsing and check for expected warning
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    Result resultPreserve = compiler.compile(
        SourceFile.fromCode("externs.js", ""),
        SourceFile.fromCode("test.js", codeWithPreserve),
        options
    );
    assertEquals(1, compiler.getWarnings().length);
    assertEquals("Parse error. Non-JSDoc comment has annotations. Did you mean to start it with '/**'?", 
        compiler.getWarnings()[0].description);

    // Test code with /*! which should not trigger warning but not preserve comment
    compiler = new Compiler();
    Result resultExclamation = compiler.compile(
        SourceFile.fromCode("externs.js", ""),
        SourceFile.fromCode("test.js", codeWithExclamation),
        options
    );
    assertEquals(0, compiler.getWarnings().length);
    String output = compiler.toSource();
    assertFalse(output.contains("@preserve Foo License"));
    assertTrue(output.contains("alert(\"foo\");"));
}