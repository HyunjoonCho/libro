script
/**
 * Class defining an interface with two numbers.
 * @interface
 */
function TwoNumbers() {}

/** @type {number} */
TwoNumbers.prototype.first;

/** @type {number} */
TwoNumbers.prototype.second;

/**
 * @const
 * @type {TwoNumbers}
 */
var SOME_DEFAULT = /** @type {TwoNumbers} */ ({first: 1, second: 2});

/**
 * Class with a two number member.
 * @constructor
 */
function HasTwoNumbers() {
    /** @type {TwoNumbers} */
    this.twoNumbers = this.getTwoNumbers();
}

/**
 * Get the default two numbers.
 * @return {TwoNumbers}
 */
HasTwoNumbers.prototype.getTwoNumbers = function() {
    return SOME_DEFAULT;
};

// Test function to illustrate the problem
function testConstTypeIssue() {
    // Create an instance of HasTwoNumbers
    var instance = new HasTwoNumbers();

    // Check the values to ensure they are as expected
    console.log(instance.twoNumbers.first); // Expected to print 1
    console.log(instance.twoNumbers.second); // Expected to print 2
    
    // Run this code through Closure Compiler to see the types being dumped and warnings
}

// Execute the test function
testConstTypeIssue();
