public void testDeserializeMapWithClassAsKey() throws Exception {
    Map<Class<? extends Object>, String> map = new HashMap<>();
    map.put(ArrayList.class, "ArrayList");
    map.put(HashMap.class, "HashMap");

    ObjectMapper mapper = new ObjectMapper();

    SimpleModule module = new SimpleModule();
    module.addKeyDeserializer(Class.class, new KeyDeserializer() {
        @Override
        public Object deserializeKey(String key, DeserializationContext ctxt) throws IOException {
            try {
                return Class.forName(key.replace("class ", ""));
            } catch (ClassNotFoundException e) {
                throw new IOException("Cannot deserialize key: " + key, e);
            }
        }
    });
    mapper.registerModule(module);

    String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(map);
    Map<Class<? extends Object>, String> resultMap = mapper.readValue(json, new TypeReference<Map<Class<? extends Object>, String>>(){});

    assertEquals("ArrayList", resultMap.get(ArrayList.class));
    assertEquals("HashMap", resultMap.get(HashMap.class));
}