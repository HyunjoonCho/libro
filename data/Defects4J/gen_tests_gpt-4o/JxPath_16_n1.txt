
import org.junit.Test;
import org.w3c.dom.*;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import static org.junit.Assert.assertTrue;

public class NodePointerTest {

    @Test
    public void testNodeTypeNode() throws Exception {
        // Create a simple XML document
        String xml = "<root><element>text</element><!-- a comment --></root>";
        
        // Initialize a DOM parser
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));

        // Get various node types
        Element elementNode = doc.getDocumentElement();
        Comment commentNode = (Comment) doc.getDocumentElement().getChildNodes().item(1);
        Text textNode = (Text) doc.getDocumentElement().getFirstChild().getFirstChild();

        // Simulate the node() behavior to check if it matches all node types
        // This implementation should return 'true' instead of false
        assertTrue(matchesNode(elementNode));
        assertTrue(matchesNode(commentNode)); // Should be true after fix
        assertTrue(matchesNode(textNode)); // Should be true after fix
    }

    // Simulated method to verify the behavior
    public boolean matchesNode(Node node) {
        int nodeType = node.getNodeType();
        // Incorrect implementation based on the bug report; currently only matches ELEMENT_NODE and DOCUMENT_NODE
        return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;
        
        // Correct implementation proposed in the bug report should be:
        // return true;
    }
}
