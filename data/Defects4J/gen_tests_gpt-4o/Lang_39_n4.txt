
import static org.junit.Assert.assertEquals;

import org.apache.commons.lang3.StringUtils;
import org.junit.Test;

public class StringUtilsTest {

    @Test
    public void replaceEachWithNullReplacement() {
        String original = "Hello World!";
        String[] searchList = {"Hello", "World"};
        String[] replacementList = {"Greetings", null};

        try {
            String result = StringUtils.replaceEach(original, searchList, replacementList);
            
            // Based on expectations outlined in the bug report,
            // we are testing the behavior and documenting each case
            assertEquals("Greetings !", result); // Expectation 1
            // assertEquals("Greetings World!", result); // Alternate expectation: null replacement is ignored
            // assertEquals("Greetings null!", result); // Alternate expectation: null treated as "null" string
        } catch (NullPointerException e) {
            // If the API is not "null-friendly," it would throw a NullPointerException
            // Depending on the API's decision, the documentation should be updated accordingly.
            System.out.println("NullPointerException caught: " + e.getMessage());
        }
    }
}
