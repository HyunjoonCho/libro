
import org.apache.commons.compress.archivers.zip.ZipFile;
import org.junit.Test;
import org.apache.tika.Tika;

import java.io.ByteArrayInputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import static org.junit.Assert.fail;

public class ZipParsingTest {

    @Test
    public void testZeroSizedUXFieldInZip() {
        try {
            // Create a zip file with a zero-sized "ux" field
            byte[] zipContent = createZipWithZeroSizedUXField();

            // Use Apache Tika to detect the content type, which triggers the bug
            Tika tika = new Tika();
            tika.detect(zipContent, "TR_01.ZIP");

        } catch (Exception e) {
            // Verify that no exception is thrown
            fail("Exception was thrown during detection: " + e.getMessage());
        }
    }

    private byte[] createZipWithZeroSizedUXField() throws Exception {
        Path tempFile = Files.createTempFile("tempZip", ".zip");

        try (ZipOutputStream zos = new ZipOutputStream(Files.newOutputStream(tempFile))) {
            ZipEntry entry = new ZipEntry("image.jpg");
            // Set the extra data with a zero-sized ux field simulation
            entry.setExtra(new byte[]{85, 84, 5, 0, 7, -112, -108, 51, 85, 117, 120, 0, 0});
            zos.putNextEntry(entry);
            zos.write(new byte[]{0, 0, 0, 0}); // Simulate image data
            zos.closeEntry();
        }

        byte[] content = Files.readAllBytes(tempFile);
        Files.delete(tempFile); // Clean up
        return content;
    }
}
