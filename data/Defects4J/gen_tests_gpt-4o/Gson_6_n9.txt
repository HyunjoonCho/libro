
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.junit.Test;
import static org.junit.Assert.assertNotNull;

public class GsonNullTypeAdapterFactoryTest {

    @Test
    public void testGsonHandlesNullTypeAdapterFactoryGracefully() {
        // Create a custom TypeAdapterFactory that returns null
        TypeAdapterFactory nullReturningFactory = new TypeAdapterFactory() {
            @Override
            public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
                return null; // Intentionally returning null
            }
        };

        // Build Gson with the custom factory
        Gson gson = new GsonBuilder()
                .registerTypeAdapterFactory(nullReturningFactory)
                .create();

        // Attempt to use Gson to serialize an object
        String json = gson.toJson("Test string");

        // If the creation and serialization worked, gson object should not be null
        assertNotNull(json);
    }
}
