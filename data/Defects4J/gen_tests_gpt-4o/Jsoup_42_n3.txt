
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.jsoup.Connection;
import org.jsoup.helper.HttpConnection;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class FormElementTest {

    @Test
    public void testCheckboxWithoutValueIsOnWhenChecked() {
        final String html = "<html>\n"
                + "    <head>\n"
                + "        <title>Test</title>\n"
                + "    </head>\n"
                + "    \n"
                + "    <body>\n"
                + "\n"
                + "    <form name=\"myForm\" method=\"POST\">\n"
                + "        <input type=\"checkbox\" name=\"testCheckBox\" checked=\"checked\" /> Something<br/>\n"
                + "\n"
                + "        <input type=\"submit\" value=\"Submit\" />\n"
                + "    </form>\n"
                + "\n"
                + "    </body>\n"
                + "</html>";

        final Document document = Jsoup.parse(html);

        Element formElement = document.select("form[name=myForm]").first();
        Elements inputs = formElement.select("input");

        for (Element input : inputs) {
            if ("checkbox".equals(input.attr("type")) && input.hasAttr("checked")) {
                String value = input.hasAttr("value") ? input.val() : "on";
                assertEquals("Checkbox without a value should default to 'on' when checked.", "on", value);
                
                // Simulating form data collection as would be done in Jsoup.FormElement.formData
                Connection.KeyVal keyVal = HttpConnection.KeyVal.create(input.attr("name"), value);

                // This is where we check that the key-value pair is correct
                assertEquals("testCheckBox", keyVal.key());
                assertEquals("on", keyVal.value());
            }
        }
    }
}
