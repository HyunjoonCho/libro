
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class EnumSerializationTest {

    private enum TestEnum {
        @JsonProperty("value1")
        VALUE_ONE("value1");

        private final String valueInJson;

        TestEnum(String valueInJson) {
            this.valueInJson = valueInJson;
        }

        @JsonCreator
        public static TestEnum getEnumFromValue(String value) {
            for (TestEnum testEnum : values()) {
                if (testEnum.valueInJson.equals(value)) {
                    return testEnum;
                }
            }
            throw new IllegalArgumentException();
        }

        @Override
        public String toString() {
            return valueInJson;
        }
    }

    @Test
    public void testEnumSerializationDeserialization() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();

        // Serialize enum to JSON
        String jsonValue = objectMapper.writeValueAsString(TestEnum.VALUE_ONE);
        assertEquals("\"value1\"", jsonValue);

        // Deserialize JSON to enum
        TestEnum enumValue = objectMapper.readValue("\"value1\"", TestEnum.class);
        assertEquals(TestEnum.VALUE_ONE, enumValue);
    }
}
