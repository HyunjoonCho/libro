
import org.apache.commons.math3.dfp.Dfp;
import org.apache.commons.math3.dfp.DfpField;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DfpToDoubleTest {

    @Test
    public void testDfpToDoubleZero() {
        DfpField field = new DfpField(100);
        double zeroDoubleValue = field.getZero().toDouble();

        // Check that the double value of zero is properly converted to 0.0
        assertEquals("The double value of Dfp zero should be 0.0", 0.0, zeroDoubleValue, 0.0);

        // Also test the same for a Dfp explicitly created from 0.0
        Dfp dfpZero = field.newDfp(0.0);
        double newDfpZeroDoubleValue = dfpZero.toDouble();
        
        assertEquals("The double value of Dfp(0.0) should be 0.0", 0.0, newDfpZeroDoubleValue, 0.0);
    }
    
    public static void main(String[] args) {
        DfpField field = new DfpField(100);
        System.out.println("toDouble value of getZero() =" + field.getZero().toDouble() +
        "\ntoDouble value of newDfp(0.0) =" + field.newDfp(0.0).toDouble());
    }
}
