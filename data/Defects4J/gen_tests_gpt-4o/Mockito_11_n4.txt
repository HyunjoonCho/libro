
import static org.mockito.Mockito.*;
import org.mockito.internal.verification.VerificationModeFactory;
import org.mockito.verification.VerificationMode;
import org.junit.Test;
import static org.junit.Assert.*;

public class CustomVerificationModeTest {

    @Test
    public void testCustomVerificationModeEqualsMethod() {
        // A mock object
        List<String> mockList = mock(List.class);

        // Custom VerificationMode class
        VerificationMode firstInvocationVerificationMode = new VerificationMode() {
            @Override
            public void verify(VerificationData data) {
                if (data.getAllInvocations().isEmpty() || !data.getAllInvocations().get(0).equals(data.getWanted())) {
                    throw new MockitoAssertionError("Expected invocation was not the first invocation.");
                }
            }

            @Override
            public boolean equals(Object obj) {
                return obj != null && obj instanceof VerificationMode; // Simplified check
            }
        };

        // Use the custom verification mode
        mockList.add("first");
        verify(mockList, firstInvocationVerificationMode).add("first");

        // Test the equals method on VerificationMode
        VerificationMode anotherInstance = VerificationModeFactory.times(1);
        assertFalse(firstInvocationVerificationMode.equals(anotherInstance)); // They should not be equal

        assertTrue(firstInvocationVerificationMode.equals(firstInvocationVerificationMode)); // Should be true, same instance
    }
}
