
import java.util.List;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;

public class ArrayDelegateDeserializationTest {
    
    public static class MyTypeImpl implements MyType {
        private final List<Integer> values;

        MyTypeImpl(List<Integer> values) {
            this.values = values;
        }

        @Override
        public List<Integer> getValues() {
            return values;
        }
    }

    public interface MyType {
        @JsonValue
        List<Integer> getValues();

        @JsonCreator
        static MyType of(List<Integer> values) {
            return new MyTypeImpl(values);
        }
    }

    @org.junit.Test
    public void testArrayDelegateDeserialization() throws Exception {
        // Set up Jackson ObjectMapper
        ObjectMapper mapper = new ObjectMapper();

        // Register a module to handle MyType
        SimpleModule module = new SimpleModule();
        module.addAbstractTypeMapping(MyType.class, MyTypeImpl.class);
        mapper.registerModule(module);

        // Test JSON deserialization
        MyType thing = mapper.readValue("[]", MyType.class);

        // Assert expected output
        List<Integer> expectedValues = List.of();
        org.junit.Assert.assertEquals(expectedValues, thing.getValues());
    }
}
