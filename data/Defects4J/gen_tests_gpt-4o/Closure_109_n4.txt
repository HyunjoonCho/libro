public void testConstructorTypeParsing() {
    // Simulate parsing of JSDoc type annotations to reproduce the issue
    String annotation1 = "/** @type {function(new:?)} */ var foo = function() {};";
    String annotation2 = "/** @type {function(new:*)} */ var bar = function() {};";

    try {
        // Attempt to parse the annotations (replace with actual parsing logic)
        parseTypeAnnotation(annotation1);
        fail("Expected parsing to fail for annotation1");
    } catch (ParseException e) {
        // Expected the parsing to fail, verify the error message
        assertTrue(e.getMessage().contains("type not recognized due to syntax error"));
    }

    try {
        // Attempt to parse the annotations (replace with actual parsing logic)
        parseTypeAnnotation(annotation2);
        fail("Expected parsing to fail for annotation2");
    } catch (ParseException e) {
        // Expected the parsing to fail, verify the error message
        assertTrue(e.getMessage().contains("type not recognized due to syntax error"));
    }
}

private void parseTypeAnnotation(String annotation) throws ParseException {
    // Mock parsing function, replace with actual parsing logic
    if (annotation.contains("new:?") || annotation.contains("new:*")) {
        throw new ParseException("type not recognized due to syntax error");
    }
}