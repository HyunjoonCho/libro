
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;

public class JsonStreamContextTest {

    public static class TestData {
        public String name;
        public int age;
        
        public TestData(String name, int age) {
            this.name = name;
            this.age = age;
        }
    }
    
    @Test
    public void testJsonStreamContextDifference() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        
        TestData data = new TestData("John Doe", 30);
        
        // Convert object to JSON string using writeValueAsString
        String jsonString = objectMapper.writeValueAsString(data);
        JsonStreamContext writeContext = objectMapper.getFactory().getGenerator().getOutputContext();
        
        // Convert object to ObjectNode and back using convertValue
        ObjectNode objectNode = objectMapper.convertValue(data, ObjectNode.class);
        String convertedJsonString = objectMapper.writeValueAsString(objectNode);
        JsonStreamContext convertContext = objectMapper.getFactory().getGenerator().getOutputContext();
        
        // Verify if the output JsonStreamContext from both methods are the same or not
        System.out.println("Write Context: " + writeContext);
        System.out.println("Convert Context: " + convertContext);
        
        assertEquals(jsonString, convertedJsonString); // Check if both JSON outputs are the same
        assertNotEquals(writeContext, convertContext); // Intentionally fail to observe context difference
    }
}
