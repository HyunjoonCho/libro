
import org.apache.commons.math3.optim.nonlinear.scalar.BracketFinder;
import org.apache.commons.math3.optim.nonlinear.scalar.GoalType;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.function.Sin;
import org.junit.Test;

public class OptimizerTest {

    @Test(expected = NullPointerException.class)
    public void testPowellOptimizerWithoutConvergenceChecker() {
        // Simulate an optimization problem
        UnivariateFunction function = new Sin();
        double initialGuess = 3.0;
        double lowerBound = 0;
        double upperBound = 10;

        // Instantiate Powell Optimizer without setting a ConvergenceChecker
        PowellOptimizer optimizer = new PowellOptimizer(1e-8, 1e-8);
        
        // By default, PowellOptimizer expects a convergence checker, if none is set, 
        // attempting to optimize should result in a NullPointerException.
        optimizer.optimize(100, function, GoalType.MINIMIZE, lowerBound, upperBound, initialGuess);
    }
}
