public void testCommaOperatorExpressions() {
    // Test case 1: Check for warning and correct transformation
    Expression exp1 = parseExpression("foo((1, 2, 42))");
    TransformationResult result1 = transformExpression(exp1);
    assertEquals("foo((1, 3))", result1.getTransformedExpression());
    assertTrue(result1.hasWarning()); // Expect a warning due to the first element

    // Test case 2: Check that no warning is issued and transformation is correct
    Expression exp2 = parseExpression("foo((bar(), 2, 42))");
    TransformationResult result2 = transformExpression(exp2);
    assertEquals("foo((bar(), 3))", result2.getTransformedExpression());
    assertFalse(result2.hasWarning()); // No warning expected as the first element has side effects

    // Test case 3: Check for warnings on inner sequences and correct transformation
    Expression exp3 = parseExpression("foo(((1, 2, 3), (4, 5, 42)))");
    TransformationResult result3 = transformExpression(exp3);
    assertEquals("foo((1, 4, 42))", result3.getTransformedExpression());
    assertTrue(result3.hasWarning()); // Expect warnings due to first elements in inner sequences
}