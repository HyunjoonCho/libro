
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.w3c.dom.Document;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.util.HashSet;
import java.util.Set;

public class NamespacePrefixTest {
    public void testMultiplePrefixesForSingleNamespaceURI() throws Exception {
        String xml = "<a:doc xmlns:a=\"ns\">" +
                     "  <a:elem />" +
                     "  <b:elem xmlns:b=\"ns\" />" +
                     "</a:doc>";

        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.parse(new org.xml.sax.InputSource(new java.io.StringReader(xml)));

        JXPathContext context = JXPathContext.newContext(doc);
        context.registerNamespace("a", "ns");
        context.registerNamespace("b", "ns");

        Iterable<Pointer> pointers = context.iteratePointers("//elem");
        Set<String> elementsFound = new HashSet<>();

        for (Pointer pointer : pointers) {
            elementsFound.add(pointer.asPath());
        }

        // Check if both elements with different prefixes are found
        assertTrue(elementsFound.contains("/a:doc/a:elem"));
        assertTrue(elementsFound.contains("/a:doc/b:elem"));

        // Ensure that both elements have been found exactly once
        assertEquals(2, elementsFound.size());
    }

    private void assertTrue(boolean condition) {
        if (!condition) {
            throw new AssertionError("Assertion failed");
        }
    }

    private void assertEquals(int expected, int actual) {
        if (expected != actual) {
            throw new AssertionError("Expected " + expected + " but found " + actual);
        }
    }

    public static void main(String[] args) {
        NamespacePrefixTest test = new NamespacePrefixTest();
        try {
            test.testMultiplePrefixesForSingleNamespaceURI();
            System.out.println("Test passed.");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Test failed.");
        }
    }
}
