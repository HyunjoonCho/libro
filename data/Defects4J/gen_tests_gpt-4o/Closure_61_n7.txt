
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.jscomp.WarningLevel;
import org.junit.Test;

import java.util.Arrays;

import static org.junit.Assert.assertTrue;

public class ClosureCompilerTest {

    @Test
    public void testClosureDoesNotRemoveNeededCode() {
        String originalCode = 
            "Math.blah = function(test) { test.a = 5; };\n" +
            "var test = new Object();\n" +
            "Math.blah(test);";
        
        String expectedOutput = 
            "Math.blah=function(a){a.a=5};var test={};Math.blah(test);";
        
        // Set up the compiler options
        CompilerOptions options = new CompilerOptions();
        WarningLevel.DEFAULT.setOptionsForWarningLevel(options);
        options.setLanguageIn(CompilerOptions.LanguageMode.ECMASCRIPT5);
        options.setLanguageOut(CompilerOptions.LanguageMode.ECMASCRIPT5);
        
        CommandLineRunner runner = new CommandLineRunner(
            new String[]{},
            options);

        // Compile the source
        Result result = runner.doRun(
            null, // Pass precompiled externs, if any
            Arrays.asList(SourceFile.fromCode("input.js", originalCode)), 
            false); // do not output the result to the console

        // Ensure that the compiled output includes the call to Math.blah(test);
        assertTrue("Expected Math.blah(test) to be part of the compiled output",
                result.generatedOutput.equals(expectedOutput));
    }
}
