
import org.apache.commons.lang3.math.NumberUtils;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class NumberUtilsTest {

    @Test
    public void testCreateNumberWithSingleDigitLong() {
        try {
            // Attempt to parse "1l" as a Long (expected behavior is that it should parse correctly)
            Number number = NumberUtils.createNumber("1l");
            assertEquals(1L, number.longValue());

            // Attempt to parse "2l" as a Long (expected behavior is that it should parse correctly)
            number = NumberUtils.createNumber("2l");
            assertEquals(2L, number.longValue());
            
        } catch (NumberFormatException e) {
            fail("NumberFormatException was thrown for parsing single-digit long with 'l' suffix");
        }
    }

    // Additional tests for longer numbers which should parse correctly as Long
    @Test
    public void testCreateNumberWithLongValues() {
        try {
            Number number = NumberUtils.createNumber("10l");
            assertEquals(10L, number.longValue());

            number = NumberUtils.createNumber("100l");
            assertEquals(100L, number.longValue());
            
            number = NumberUtils.createNumber("01l");
            assertEquals(1L, number.longValue());

            number = NumberUtils.createNumber("02l");
            assertEquals(2L, number.longValue());
            
        } catch (NumberFormatException e) {
            fail("NumberFormatException was thrown incorrectly when it should not have been.");
        }
    }
}
