
import static org.junit.Assert.assertEquals;

import java.util.Arrays;
import java.util.List;
import java.util.Random;

import org.apache.commons.math.stat.clustering.Cluster;
import org.apache.commons.math.stat.clustering.EuclideanIntegerPoint;
import org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer;
import org.junit.Test;

public class ClusterAnalysisTest {

    @Test
    public void testNPEInKMeansPlusPlusClusterer() {
        KMeansPlusPlusClusterer<EuclideanIntegerPoint> transformer = new KMeansPlusPlusClusterer<EuclideanIntegerPoint>(
                new Random(1746432956321L));

        EuclideanIntegerPoint[] points = new EuclideanIntegerPoint[] { 
                new EuclideanIntegerPoint(new int[] { 1959, 325100 }), 
                new EuclideanIntegerPoint(new int[] { 1960, 373200 })
        };

        try {
            List<Cluster<EuclideanIntegerPoint>> clusters = transformer.cluster(Arrays.asList(points), 1, 1);
            assertEquals(1, clusters.size());
        } catch (NullPointerException npe) {
            System.out.println("Caught NullPointerException: " + npe.getMessage());
            // The test is expected to fail with NPE as per the bug description
            // You could rethrow the exception to see detailed stack traces if needed
            throw npe;
        }
    }
    
    public static void main(String[] args) {
        ClusterAnalysisTest test = new ClusterAnalysisTest();
        test.testNPEInKMeansPlusPlusClusterer();
    }
}
