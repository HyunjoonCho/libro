
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

// Mock service class
class Service {
    public String performAction() {
        return "Success";
    }
}

// Class under test with a final field
class FinalFieldHolder {
    private final Service service;

    public FinalFieldHolder() {
        this.service = new Service(); // default behavior
    }

    public String useService() {
        return service.performAction();
    }
}

public class FinalFieldInjectionTest {

    @Mock
    private Service mockService;

    @InjectMocks
    private FinalFieldHolder finalFieldHolder;

    @Before
    public void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testFinalFieldInjection() {
        when(mockService.performAction()).thenReturn("Mocked Success");

        // The injection should have overridden the default behavior
        String result = finalFieldHolder.useService();

        // Expected to fail from Mockito version 1.9.0 onwards as the final field is not injected
        assertEquals("Mocked Success", result);
    }
}
