
import org.apache.commons.lang3.time.FastDateFormat;
import org.junit.Test;

import java.text.ParseException;
import java.util.Date;
import java.util.Locale;

import static org.junit.Assert.assertEquals;

public class FastDateFormatLocaleTest {

    @Test
    public void testLocaleChangeAffectsDateFormat() throws ParseException {
        // Set the default locale to US and get a date instance
        Locale defaultLocale = Locale.getDefault();
        try {
            Locale.setDefault(Locale.US);
            FastDateFormat dateFormatUS = FastDateFormat.getDateInstance(FastDateFormat.SHORT);
            // Parse a sample date
            Date parsedDate = dateFormatUS.parse("01/02/03");

            // Change the default locale to France
            Locale.setDefault(Locale.FRANCE);
            FastDateFormat dateFormatFR = FastDateFormat.getDateInstance(FastDateFormat.SHORT);

            // Now the format should be different, but due to the bug, we expect it to be wrongly cached
            String formattedDate = dateFormatFR.format(parsedDate);

            // Assert that the date formatted after changing locale should be in French date format
            // If the locale change bug exists, it will format as US date format
            assertEquals("02/01/03", formattedDate);
        } finally {
            // Restore the original default locale
            Locale.setDefault(defaultLocale);
        }
    }
}
