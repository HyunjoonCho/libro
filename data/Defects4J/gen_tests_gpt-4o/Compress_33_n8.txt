
import org.apache.commons.compress.compressors.CompressorException;
import org.apache.commons.compress.compressors.CompressorInputStream;
import org.apache.commons.compress.compressors.CompressorStreamFactory;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

import static org.junit.Assert.*;

public class CompressorStreamFactoryTest {

    @Test
    public void testZlibDeflateStreamHandling() {
        try {
            // Load a test zlib compressed file which contains a zlib header
            byte[] zlibCompressedData = Files.readAllBytes(Paths.get("path/to/your/bla.tar.deflatez"));

            // Create an input stream from the byte array
            ByteArrayInputStream inputStream = new ByteArrayInputStream(zlibCompressedData);

            // Attempt to create a CompressorInputStream
            CompressorInputStream compressorInputStream = new CompressorStreamFactory()
                    .createCompressorInputStream(inputStream);

            // If the compressorInputStream is correctly created, it means the zlib with header was handled
            assertNotNull(compressorInputStream);

            compressorInputStream.close();
        } catch (CompressorException e) {
            fail("Failed with CompressorException: " + e.getMessage());
        } catch (IOException e) {
            fail("IOException while reading the test file: " + e.getMessage());
        }
    }
}
