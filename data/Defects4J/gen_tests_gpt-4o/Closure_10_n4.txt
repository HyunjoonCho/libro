
import com.google.javascript.jscomp.*;
import org.junit.Test;
import static org.junit.Assert.*;

public class ClosureCompilerTest {

    @Test
    public void testMixedTypeInTernaryOperator() {
        // Input JavaScript code
        String jsCode = "var a = (Math.random() > 0.5 ? '1' : 2) + 3 + 4;";

        // Compile the code using Google Closure Compiler
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        SourceFile input = SourceFile.fromCode("test.js", jsCode);
        SourceFile extern = SourceFile.fromCode("externs.js", "");

        // Run the compiler
        compiler.compile(extern, input, options);

        // Get the compiled output
        String compiledCode = compiler.toSource();

        // Check if the result matches the unexpected output
        String expectedWrongOutput = "var a=(0.5<Math.random()?1:2)+7;";
        assertEquals("The compiled output does not match the expected incorrect transformation.", 
                     expectedWrongOutput, compiledCode);
    }
}
