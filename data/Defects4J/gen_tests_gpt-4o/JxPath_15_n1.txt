
import org.junit.Test;
import org.w3c.dom.Document;
import org.xml.sax.InputSource;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;
import java.io.StringReader;

import static org.junit.Assert.assertEquals;

public class CoreUnionOperationTest {

    private Document loadXMLFromString(String xml) throws Exception {
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        InputSource is = new InputSource(new StringReader(xml));
        return builder.parse(is);
    }

    @Test
    public void testXPathUnionOperationDocumentOrder() throws Exception {
        String xmlContent = "<MAIN><A>avalue</A><B>bvalue</B></MAIN>";
        Document document = loadXMLFromString(xmlContent);

        XPathFactory xPathFactory = XPathFactory.newInstance();
        XPath xPath = xPathFactory.newXPath();
        XPathExpression expression = xPath.compile("string(/MAIN/B | /MAIN/A)");

        String result = (String) expression.evaluate(document, XPathConstants.STRING);

        assertEquals("avalue", result);
    }
}
