public void testDeserializationProblemHandlerWithVoidClass() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.enableDefaultTyping();
    objectMapper.addHandler(new DeserializationProblemHandler() {
        @Override
        public JavaType handleUnknownTypeId(DeserializationContext ctxt, JavaType baseType,
                                             String subTypeId, TypeIdResolver idResolver, String failureMsg) throws IOException {
            return ctxt.constructType(Void.class);
        }
    });

    String json = "{\"type\":\"unknownType\"}";
    try {
        objectMapper.readValue(json, Object.class);
        fail("Expected NullPointerException due to Void.class usage"); // The test should expect a failure here
    } catch (NullPointerException e) {
        // expected exception, test should pass
    }
}