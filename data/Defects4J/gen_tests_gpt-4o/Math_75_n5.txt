
import org.apache.commons.math3.stat.Frequency;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class FrequencyTest {

    @Test
    public void testGetPctIssue() {
        Frequency frequency = new Frequency();

        // Add data to the frequency table
        frequency.addValue("A");
        frequency.addValue("A");
        frequency.addValue("B");

        // Calculating expected simple percentage and cumulative percentage
        double expectedPctA = 2.0 / 3.0; // 2 occurrences of "A" out of 3 total
        double expectedCumPctA = 2.0 / 3.0; // first value is "A" so it is the same in this case

        // The issue is that getPct(Object) incorrectly calls getCumPct
        // Here we check if getPct(Object) incorrectly returns cumulative percentage
        double actualPctA = frequency.getPct("A");

        // Assert that the actual percentage (using the incorrect method) is not equal to the expected simple percentage
        // Instead, it would be the cumulative percentage
        assertEquals(expectedCumPctA, actualPctA, 0.00001); // To reflect the bug: compare with expectedCumPctA

        // Correct method should be used: getPct(Comparable<?>) though this is deprecated usage
        double correctPctA = frequency.getPct((Comparable<?> ) "A");
        assertEquals(expectedPctA, correctPctA, 0.00001); // Test for the correct usage
    }
}
