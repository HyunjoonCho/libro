
import org.joda.time.IllegalFieldValueException;
import org.joda.time.field.FieldUtils;
import org.junit.Test;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class FieldUtilsTest {

    @Test
    public void testSafeMultiplyWithLongMinValue() {
        try {
            long result = FieldUtils.safeMultiply(Long.MIN_VALUE, -1);
            fail("Expected an IllegalFieldValueException to be thrown due to overflow");
        } catch (IllegalFieldValueException e) {
            assertTrue("IllegalFieldValueException was thrown as expected due to overflow", true);
        } catch (ArithmeticException e) {
            // If under some implementation specifics an ArithmeticException is thrown, this is also acceptable
            assertTrue("ArithmeticException was thrown as expected due to overflow", true);
        }
    }
}
