public void testCMAESOptimizerRespectsBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer(
        1000, 1e-9, true, 10, 100, 
        new Well19937c(), false, new SimpleValueChecker(1e-9, 1e-9)
    );

    MultivariateFunction sphereFunction = new MultivariateFunction() {
        @Override
        public double value(double[] point) {
            double sum = 0;
            for (double v : point) {
                sum += v * v;
            }
            return sum;
        }
    };

    double[] startPoint = {0.0, 0.0};
    double[][] boundaries = {{-1.0, -1.0}, {1.0, 1.0}};
    PointValuePair result = optimizer.optimize(
        new MaxEval(10000),
        new ObjectiveFunction(sphereFunction),
        GoalType.MINIMIZE,
        new InitialGuess(startPoint),
        new CMAESOptimizer.Sigma(new double[]{0.3, 0.3}),
        new SimpleBounds(boundaries[0], boundaries[1])
    );

    double[] bestPoint = result.getPoint();
    assertTrue("Point should be within lower bounds", bestPoint[0] >= -1.0 && bestPoint[1] >= -1.0);
    assertTrue("Point should be within upper bounds", bestPoint[0] <= 1.0 && bestPoint[1] <= 1.0);
}