
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class ExternalIdDeserTest {

    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXTERNAL_PROPERTY, property = "type")
    @JsonSubTypes({
        @JsonSubTypes.Type(value = SubTypeA.class, name = "A"),
        @JsonSubTypes.Type(value = SubTypeB.class, name = "B")
    })
    public static abstract class BaseType {
        public String commonProperty;
    }

    public static class SubTypeA extends BaseType {
        public String specificPropertyA;
    }

    public static class SubTypeB extends BaseType {
        public String specificPropertyB;
    }

    public static class Wrapper {
        public String type;
        public BaseType payload;
    }

    @Test
    public void testExternalPropertyDeserialization() throws Exception {
        String json = "{\"type\": \"A\", \"payload\": {\"commonProperty\": \"value1\", \"specificPropertyA\": \"valueA\"}}";

        ObjectMapper objectMapper = new ObjectMapper();
        Wrapper wrapper = objectMapper.readValue(json, Wrapper.class);

        assertTrue(wrapper.payload instanceof SubTypeA, "Payload should be of type SubTypeA");
    }
}
