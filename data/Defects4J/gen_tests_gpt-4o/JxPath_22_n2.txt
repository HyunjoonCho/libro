
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.Test;
import org.w3c.dom.Document;
import org.xml.sax.InputSource;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.StringReader;

import static org.junit.Assert.assertEquals;

public class NamespaceLoopTest {

    @Test
    public void testAsPathWithEmptyNamespace() throws Exception {
        String xml = "<b:foo xmlns:b=\"bla\" xmlns=\"test111\">" +
                        "<b:bar>a</b:bar>" +
                        "<test xmlns=\"\"></test>" +
                     "</b:foo>";

        // Parse the XML
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document document = builder.parse(new InputSource(new StringReader(xml)));

        // Create JXPathContext
        JXPathContext context = JXPathContext.newContext(document);

        // Retrieve the node for 'test' and get its path
        Pointer pointer = context.getPointer("//test");

        // This will test if the path leads to a loop or not, and checks if the path is formed correctly.
        String path = ((DOMNodePointer) pointer).asPath();
        System.out.println("Path: " + path);

        // Verify expected path
        assertEquals("/b:foo/test[1]", path); // Adjust assert as per expected correct path.
    }
}
