public void testC3P0GadgetBlocking() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);
    
    String maliciousJson1 = "[\"com.mchange.v2.c3p0.impl.PoolBackedDataSourceBase\", {\"userOverridesAsString\":\"HexAsciiSerializedMap::rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAAAAAAAAAABDAAAeHB3CAAAAAE/QAAAAD4=\"}]";
    String maliciousJson2 = "[\"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\", {\"numHelperThreads\":\"1\"}]";
    
    try {
        mapper.readValue(maliciousJson1, Object.class);
        fail("Deserialization of maliciousJson1 did not throw an exception");
    } catch (JsonMappingException e) {
        assertTrue(e.getMessage().contains("Illegal type"));
    }
    
    try {
        mapper.readValue(maliciousJson2, Object.class);
        fail("Deserialization of maliciousJson2 did not throw an exception");
    } catch (JsonMappingException e) {
        assertTrue(e.getMessage().contains("Illegal type"));
    }
}