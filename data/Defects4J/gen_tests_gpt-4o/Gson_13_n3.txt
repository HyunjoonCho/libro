
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;
import junit.framework.TestCase;

public class NegativeZeroTest extends TestCase {

    public void testNegativeZeroParsing() {
        String json = "{\"value\": -0}";
        Gson gson = new Gson();
        JsonElement jsonElement = JsonParser.parseString(json);

        // Verify the representation of the parsed value
        Number number = gson.fromJson(jsonElement.getAsJsonObject().get("value"), Number.class);

        // Check the behavior: expect the lexical "-0" but result is "0" as currently implemented
        assertEquals("0", number.toString());
        // Demonstrating the issue: number returns 0 instead of preserving "-0"
        assertEquals(0, number.intValue());
        assertTrue(number instanceof LazilyParsedNumber);
    }
}
