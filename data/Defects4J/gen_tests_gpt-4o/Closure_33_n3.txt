public void testWeirdObjectLiteralError() {
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CheckLevel.ERROR);
    options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.ERROR);
    options.setWarningLevel(DiagnosticGroups.CHECK_VARS, CheckLevel.ERROR);

    String jsCode = ""
        + "/**\n"
        + " * @param {{text: string}} opt_data\n"
        + " * @return {string}\n"
        + " */\n"
        + "function temp1(opt_data) {\n"
        + "  return opt_data.text;\n"
        + "}\n"
        + "/**\n"
        + " * @param {{activity: (boolean|number|string|null|Object)}} opt_data\n"
        + " * @return {string}\n"
        + " */\n"
        + "function temp2(opt_data) {\n"
        + "  /** @notypecheck */\n"
        + "  function __inner() {\n"
        + "    return temp1(opt_data.activity);\n"
        + "  }\n"
        + "  return __inner();\n"
        + "}\n"
        + "/**\n"
        + " * @param {{n: number, text: string, b: boolean}} opt_data\n"
        + " * @return {string}\n"
        + " */\n"
        + "function temp3(opt_data) {\n"
        + "  return 'n: ' + opt_data.n + ', t: ' + opt_data.text + '.';\n"
        + "}\n"
        + "function callee() {\n"
        + "  var output = temp3({\n"
        + "    n: 0,\n"
        + "    text: 'a string',\n"
        + "    b: true\n"
        + "  })\n"
        + "  alert(output);\n"
        + "}\n"
        + "callee();";

    Compiler compiler = new Compiler();
    Result result = compiler.compile(CompilerTestCase.DEFAULT_EXTERNS, SourceFile.fromCode("repro.js", jsCode), options);

    assertFalse(result.success);
    assertEquals(1, result.errors.length);
    assertEquals(
        "repro.js:30: ERROR - actual parameter 1 of temp3 does not match formal parameter\n"
        + "found   : {b: boolean, n: number, text: (string|undefined)}\n"
        + "required: {b: boolean, n: number, text: string}\n"
        + " var output = temp3({\n",
        result.errors[0].description);
}