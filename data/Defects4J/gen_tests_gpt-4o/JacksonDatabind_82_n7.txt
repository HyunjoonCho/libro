
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;

@JsonIgnoreProperties(value = { "password" }, ignoreUnknown = true, allowSetters = true)
class JsonTest {
    private String username;
    private String password;

    public JsonTest() {
        super();
    }

    public JsonTest(String username, String password) {
        super();
        this.username = username;
        this.password = password;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
}

public class JsonTestCase {

    @Test
    public void testJsonIgnorePropertiesAllowSetters() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        
        // Create a JSON string with both username and password
        String jsonString = "{ \"username\":\"username\",\"password\":\"password\" }";
        
        // Deserialize JSON to JsonTest object
        JsonTest jsonTest = mapper.readValue(jsonString, JsonTest.class);

        // Check that the username has been set
        assertEquals("username", jsonTest.getUsername());
        
        // The password field should be set due to allowSetters=true, but the bug causes it to be null
        // The expected behavior per the bug report would be that this is non-null
        assertNull(jsonTest.getPassword(), "Expected password to be set, but it was null");
    }
}
