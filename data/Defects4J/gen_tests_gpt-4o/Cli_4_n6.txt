
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class PosixParserBugTest {

    @Test
    public void testPosixParserWithTargetOption() {
        String OPTION_TARGET = "t";
        String OPTION_TARGET_LONG = "target";
        
        Options options = new Options();
        Option generateTarget = new Option(OPTION_TARGET, OPTION_TARGET_LONG, true, "Generate files for the specified target machine");
        options.addOption(generateTarget);

        CommandLineParser parser = new PosixParser();
        String[] args = {"-target", "foobar.com"};

        try {
            CommandLine parsedLine = parser.parse(options, args);
            if (parsedLine.hasOption(OPTION_TARGET)) {
                String targetValue = parsedLine.getOptionValue(OPTION_TARGET);
                assertEquals("foobar.com", targetValue);
            }
        } catch (ParseException pe) {
            System.out.println("Invalid command: " + pe.getMessage() + "\n");
            HelpFormatter hf = new HelpFormatter();
            hf.printHelp("Usage", options);
        }
    }
}
