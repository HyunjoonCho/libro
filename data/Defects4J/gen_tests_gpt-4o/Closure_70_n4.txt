public void testUnexpectedTypedCoverage() {
    String jsCode = "/*global window*/\n" +
                    "/*jslint sub: true*/\n" +
                    "/**\n" +
                    " * @constructor\n" +
                    " * @param {!Element} element\n" +
                    " */\n" +
                    "function Example(element) {\n" +
                    " /**\n" +
                    "  * @param {!string} ns\n" +
                    "  * @param {!string} name\n" +
                    "  * @return {undefined}\n" +
                    "  */\n" +
                    " this.appendElement = function appendElement(ns, name) {\n" +
                    " var e = element.ownerDocument.createElementNS(ns, name);\n" +
                    " element.appendChild(e);\n" +
                    " };\n" +
                    "}\n" +
                    "window[\"Example\"] = Example;";
    
    CompilerOptions options = new CompilerOptions();
    options.setCheckTypes(true);
    
    Compiler compiler = new Compiler();
    compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("v.js", jsCode), options);
    
    // Check the typed percentage; this should be 100%, expecting failure to show actual behavior
    TypedPercentTracker tracker = compiler.getTypedPercentTracker();
    double typedPercentage = tracker.getTypedPercent();
    assertEquals(100.0, typedPercentage, 0.1);
}