
import org.apache.commons.math3.distribution.NormalDistribution;
import org.apache.commons.math3.distribution.RealDistribution;
import org.junit.Test;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class RealDistributionTest {

    @Test
    public void testIsSupportXxxInclusive() {
        RealDistribution distribution = new NormalDistribution();

        double lowerBound = distribution.getSupportLowerBound();
        double upperBound = distribution.getSupportUpperBound();

        // Check if density at lower bound returns a finite number.
        boolean isLowerBoundInclusive = isFiniteValue(distribution.density(lowerBound));

        // Check if density at upper bound returns a finite number.
        boolean isUpperBoundInclusive = isFiniteValue(distribution.density(upperBound));

        // Include assertions to check inclusivity based on expected behavior.
        assertTrue("Lower bound should be inclusive", isLowerBoundInclusive);
        assertTrue("Upper bound should be inclusive", isUpperBoundInclusive);
    }

    private boolean isFiniteValue(double value) {
        return !Double.isInfinite(value) && !Double.isNaN(value);
    }
}
