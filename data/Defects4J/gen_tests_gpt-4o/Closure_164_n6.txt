script
// This section is a conceptual representation and might not run as is.
// Consider this as a test concept with a linter or type-checker like Closure Compiler.

function func(param) {}

// Annotation for Closure Compiler (normally, you'd run the compiler with these checks)
var /** function(string, number, boolean):boolean */ paramFunc1 = function(string, number, boolean) {
    return true; // sample return value
};

var /** function(string):boolean */ paramFunc2 = function(string) {
    return true; // sample return value
};

function testFunctionAssignments() {
    try {
        // first call: should not throw an error
        func(paramFunc1);
        
        // second call: should throw an error in strict type-checking
        func(paramFunc2);
        console.error("Test failed: func should not accept paramFunc2.");
    } catch (e) {
        console.log("Test passed: func correctly rejected paramFunc2.");
    }
}

testFunctionAssignments();
