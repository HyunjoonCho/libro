
import org.apache.commons.math.distribution.FDistributionImpl;
import org.apache.commons.math.MathException;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils;

public class FDistributionTest {

    public void testFDistributionWithDenominatorDegreesOfFreedomEqualsTwo() {
        try {
            double numeratorDegreesOfFreedom = 5.0;
            double denominatorDegreesOfFreedom = 2.0;
            double alpha = 0.95;
            
            FDistributionImpl fDistribution = new FDistributionImpl(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom);

            // This operation will internally call the UnivariateRealSolverUtils.bracket()
            // which will lead to an IllegalArgumentException due to the infinity issue highlighted in the bug report
            double result = fDistribution.inverseCumulativeProbability(alpha);
            
            // For a valid test, we should never reach this line
            fail("Expected exception not thrown");
            
        } catch (IllegalArgumentException e) {
            // Check that the exception is the one we expect regarding invalid initial domain for the bracket method
            assertTrue(e.getMessage().contains("Invalid endpoint parameters"));
        } catch (MathException e) {
            // Handle math-related exceptions that might occur
            fail("Unexpected MathException: " + e.getMessage());
        }
    }
}
