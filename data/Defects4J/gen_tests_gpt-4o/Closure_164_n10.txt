typescript
// TypeScript class mimicking type-checking based on comments

/**
 * @param {function(string, number): boolean} param
 */
function func(param: (a: string, b: number) => boolean) {}

/**
 * @type {function(string, number, boolean): boolean}
 */
function paramFunc1(a: string, b: number, c: boolean): boolean {
    return true;
}

/**
 * @type {function(string): boolean}
 */
function paramFunc2(a: string): boolean {
    return true;
}

// Assert if TypeScript (or a JS type-checker) reports an error

// First call - should not compile in a strict type-checking environment because 'paramFunc1' has an extra parameter.
func(paramFunc1 as (a: string, b: number) => boolean);  // This should be OK with the correct type assertion

// Second call - should not compile because 'paramFunc2' lacks a required parameter.
func(paramFunc2 as (a: string, b: number) => boolean);  // Call with necessary parameters specified
