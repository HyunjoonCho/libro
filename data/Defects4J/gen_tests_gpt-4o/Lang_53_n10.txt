
import org.apache.commons.lang3.time.DateUtils;
import org.junit.Test;

import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class DateRoundTest {

    @Test
    public void testRoundMinute() {
        Calendar testCalendar = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        testCalendar.set(2007, Calendar.JULY, 2, 3, 9, 50); // Note the hour is set to 3 for CDT
        Date date = testCalendar.getTime();

        Date roundedDate = DateUtils.round(date, Calendar.MINUTE);
        testCalendar.setTime(roundedDate);

        assertEquals(2007, testCalendar.get(Calendar.YEAR));
        assertEquals(Calendar.JULY, testCalendar.get(Calendar.MONTH));
        assertEquals(2, testCalendar.get(Calendar.DAY_OF_MONTH));
        assertEquals(3, testCalendar.get(Calendar.HOUR_OF_DAY));
        assertEquals(10, testCalendar.get(Calendar.MINUTE));
        assertEquals(0, testCalendar.get(Calendar.SECOND));
    }

    @Test
    public void testRoundSecond() {
        Calendar testCalendar = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        testCalendar.set(2007, Calendar.JULY, 2, 3, 9, 29); // 29 seconds should round down
        Date date = testCalendar.getTime();

        Date roundedDate = DateUtils.round(date, Calendar.SECOND);
        testCalendar.setTime(roundedDate);

        assertEquals(2007, testCalendar.get(Calendar.YEAR));
        assertEquals(Calendar.JULY, testCalendar.get(Calendar.MONTH));
        assertEquals(2, testCalendar.get(Calendar.DAY_OF_MONTH));
        assertEquals(3, testCalendar.get(Calendar.HOUR_OF_DAY));
        assertEquals(9, testCalendar.get(Calendar.MINUTE));
        assertEquals(29, testCalendar.get(Calendar.SECOND));
    }
    
    @Test
    public void testRoundSecondUp() {
        Calendar testCalendar = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        testCalendar.set(2007, Calendar.JULY, 2, 3, 9, 31); // 31 seconds should round up
        Date date = testCalendar.getTime();

        Date roundedDate = DateUtils.round(date, Calendar.SECOND);
        testCalendar.setTime(roundedDate);

        assertEquals(2007, testCalendar.get(Calendar.YEAR));
        assertEquals(Calendar.JULY, testCalendar.get(Calendar.MONTH));
        assertEquals(2, testCalendar.get(Calendar.DAY_OF_MONTH));
        assertEquals(3, testCalendar.get(Calendar.HOUR_OF_DAY));
        assertEquals(9, testCalendar.get(Calendar.MINUTE));
        assertEquals(32, testCalendar.get(Calendar.SECOND));
    }
}
