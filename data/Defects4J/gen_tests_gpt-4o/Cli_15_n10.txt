
import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.cli2.CommandLine;
import org.apache.commons.cli2.Option;
import org.apache.commons.cli2.builder.DefaultOptionBuilder;
import org.apache.commons.cli2.builder.ArgumentBuilder;
import org.apache.commons.cli2.builder.GroupBuilder;
import org.apache.commons.cli2.option.DefaultOption;
import org.apache.commons.cli2.commandline.Parser;

import java.util.List;

public class DefaultArgumentTest {

    @Test
    public void testSingleOptionSingleArgument() throws Exception {
        String defaultValue1 = "100";
        String defaultValue2 = "1000";

        final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
        final ArgumentBuilder abuilder = new ArgumentBuilder();
        final GroupBuilder gbuilder = new GroupBuilder();

        DefaultOption bOption = obuilder.withShortName("b")
                .withLongName("b")
                .withArgument(abuilder.withName("b")
                        .withMinimum(0)
                        .withMaximum(2)
                        .withDefault(defaultValue1)
                        .withDefault(defaultValue2)
                        .create())
                .create();

        Option options = gbuilder
                .withName("options")
                .withOption(bOption)
                .create();

        Parser parser = new Parser();
        parser.setHelpTrigger("--help");
        parser.setGroup(options);

        // Test Case 1: Two arguments - should correctly pick both args
        String enteredValue1 = "1";
        String enteredValue2 = "2";
        String[] argsTwo = {"-b", enteredValue1, enteredValue2};
        CommandLine clTwo = parser.parse(argsTwo);
        assertNotNull(clTwo);
        List twoArgumentValues = clTwo.getValues("-b");
        assertEquals("[" + enteredValue1 + ", " + enteredValue2 + "]", twoArgumentValues.toString());

        // Test Case 2: Zero arguments - should pick both default values
        String[] argsZero = {};
        CommandLine clZero = parser.parse(argsZero);
        assertNotNull(clZero);
        List zeroArgumentValues = clZero.getValues("-b");
        assertEquals("[" + defaultValue1 + ", " + defaultValue2 + "]", zeroArgumentValues.toString());

        // Test Case 3: One argument - should use first argument and second default value
        String[] argsOne = {"-b", enteredValue1};
        CommandLine clOne = parser.parse(argsOne);
        assertNotNull(clOne);
        List oneArgumentValues = clOne.getValues("-b");
        // This is where the expected behavior differs from the actual output
        assertEquals("[" + enteredValue1 + ", " + defaultValue2 + "]", oneArgumentValues.toString());
    }
}
