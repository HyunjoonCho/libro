public void testSevenZipEmptyEntries() throws IOException {
    // Prepare a temporary directory with files for the test
    Path tempDir = Files.createTempDirectory("test");
    
    // Scenario 1: Create 7 empty files
    for (int i = 0; i < 7; i++) {
        Files.createFile(tempDir.resolve("empty-file" + i + ".txt"));
    }
    Path archive1 = tempDir.resolve("archive1.7z");
    SevenZOutputFile sevenZOutput1 = new SevenZOutputFile(archive1.toFile());
    for (File file : tempDir.toFile().listFiles()) {
        SevenZArchiveEntry entry = sevenZOutput1.createArchiveEntry(file, file.getName());
        sevenZOutput1.putArchiveEntry(entry);
        sevenZOutput1.closeArchiveEntry();
    }
    sevenZOutput1.close();

    // Verify Scenario 1: The archive should not contain correct entries
    SevenZFile sevenZFile1 = new SevenZFile(archive1.toFile());
    SevenZArchiveEntry entry1 = sevenZFile1.getNextEntry();
    assertNotNull(entry1);
    assertFalse(sevenZFile1.getFilePointer() > 0);
    sevenZFile1.close();

    // Scenario 3: Create 8 empty files
    Files.createFile(tempDir.resolve("empty-file7.txt")); // the 8th empty file
    Path archive3 = tempDir.resolve("archive3.7z");
    SevenZOutputFile sevenZOutput3 = new SevenZOutputFile(archive3.toFile());
    for (File file : tempDir.toFile().listFiles()) {
        SevenZArchiveEntry entry = sevenZOutput3.createArchiveEntry(file, file.getName());
        sevenZOutput3.putArchiveEntry(entry);
        sevenZOutput3.closeArchiveEntry();
    }
    sevenZOutput3.close();

    // Verify Scenario 3: Archive should be corrupt
    try {
        new SevenZFile(archive3.toFile()).close();
        fail("Expected exception due to corrupt archive");
    } catch (IOException e) {
        // Expected
    }
}