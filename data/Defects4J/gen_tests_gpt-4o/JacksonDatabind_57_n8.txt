public void testObjectReaderReadValuesWithOffsetAndLength() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper();
    ObjectReader objectReader = objectMapper.readerFor(SomeClass.class);
    
    // Sample JSON data
    String jsonData = "{\"key1\":\"value1\"}{\"key2\":\"value2\"}";
    byte[] byteArray = jsonData.getBytes(StandardCharsets.UTF_8);

    // Using offset and length to only read the second JSON object
    int offset = jsonData.indexOf("{\"key2\":\"value2\"}");
    int length = jsonData.length() - offset;
    
    // This should ignore the first object and only parse the second object
    MappingIterator<SomeClass> iterator = objectReader.readValues(byteArray, offset, length);

    // Assert only second object is read
    assertTrue(iterator.hasNext());
    SomeClass secondObject = iterator.next();
    assertEquals("value2", secondObject.getKey2());

    assertFalse(iterator.hasNext());
}