
import org.apache.commons.lang3.time.DateUtils;
import org.junit.Test;

import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class DateUtilsDSTBugTest {

    @Test
    public void testTruncateDSTSwitchingHour() {
        // Set the time zone to MDT/MST with daylight saving changes
        TimeZone mdtTimeZone = TimeZone.getTimeZone("America/Denver"); // MDT and MST during DST
        TimeZone defaultTimeZone = TimeZone.getDefault();
        
        try {
            TimeZone.setDefault(mdtTimeZone);

            // Date representing 2004-10-31 01:00:00 MDT (1099206000000L)
            // Creating date in the ALREADY adjusted time (MDT, DST GMT-6:00)
            Calendar cal = Calendar.getInstance();
            cal.setTimeZone(mdtTimeZone);
            cal.set(Calendar.YEAR, 2004);
            cal.set(Calendar.MONTH, Calendar.OCTOBER);
            cal.set(Calendar.DAY_OF_MONTH, 31);
            cal.set(Calendar.HOUR_OF_DAY, 1);
            cal.set(Calendar.MINUTE, 0);
            cal.set(Calendar.SECOND, 0);
            cal.set(Calendar.MILLISECOND, 0);
            Date oct31_01MDT = cal.getTime();

            // Perform truncation
            Date result = DateUtils.truncate(oct31_01MDT, Calendar.HOUR_OF_DAY);

            // Validate the result
            assertEquals("Truncated date should match the input date", oct31_01MDT, result);
        } finally {
            // Reset the default time zone
            TimeZone.setDefault(defaultTimeZone);
        }
    }
}
