script
// Define the SuperClass with a constructor and a prototype method
/**
 * @constructor
 */
function SuperClass() {}

SuperClass.prototype.CustomMethod = function() {};

// Define the SubClass and assign its prototype to an instance of SuperClass
/**
 * @constructor
 * @extends {SuperClass}
 */
function SubClass() {}

SubClass.prototype = new SuperClass();

/**
 * @override
 */
SubClass.prototype.CustomMethod = function() {
    this.myProperty = "value";
};

// Create an instance of SubClass and assign it to the window object
window['SubClassInstance'] = new SubClass();
