
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class ClosureCompilerBugTest {

    @Test
    public void testAssignmentRemovedInPushExpression() {
        // Original JavaScript code
        String jsCode = "function f() { var a = [], b; a.push(b = []); b[0] = 1; return a; }";
        
        // Compile the code using Closure Compiler
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setLanguageIn(CompilerOptions.LanguageMode.ECMASCRIPT5);
        options.setLanguageOut(CompilerOptions.LanguageMode.ECMASCRIPT5);
        compiler.init(
                JSSourceFile.fromCode("externs.js", ""), // No externs
                new JSSourceFile[] {JSSourceFile.fromCode("input.js", jsCode)},
                options
        );
        
        Result result = compiler.compile();
        
        // Get the compiled code
        String compiledCode = compiler.toSource();
        
        // The expected output should retain the initialization of 'b' before being pushed to 'a'
        String expectedOutput = "function f(){var a=[],b;b=[];a.push(b);b[0]=1;return a}";
        
        // Assertion to check if the correct code is generated
        assertEquals(expectedOutput, compiledCode);
    }
}
