
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class LineTest {

    @Test
    public void testRevertPrecision() {
        // Create a line with a direction vector
        Vector3D direction = new Vector3D(1.0, 1.0e-10, 0.0); // Small component to test precision
        Vector3D point = new Vector3D(1000000.0, 0.0, 0.0);   // Far from the origin

        Line line = new Line(point, direction);

        // Revert the line
        Line revertedLine = line.revert();

        // Verify that the directions are negated correctly with precise values
        Vector3D expectedDirection = direction.negate();
        
        // Using a very small delta for floating point comparison to test precision
        assertEquals(expectedDirection.getX(), revertedLine.getDirection().getX(), 1e-12);
        assertEquals(expectedDirection.getY(), revertedLine.getDirection().getY(), 1e-12);
        assertEquals(expectedDirection.getZ(), revertedLine.getDirection().getZ(), 1e-12);
        
        // Ensure it is still a line with precise direction calculations
        assertTrue(revertedLine.contains(point));
    }
}
