
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.text.SimpleDateFormat;
import java.util.Date;

import static org.junit.Assert.assertEquals;

public class DateTimeSerializerBaseTest {

    static class TestEntity {
        // Configure the date format that should be used
        @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd-MM-yyyy HH:mm:ss")
        public Date date;

        TestEntity(Date date) {
            this.date = date;
        }
    }

    @Test
    public void testCustomDateFormatWithJsonFormatAnnotation() throws Exception {
        // Set a specific date for testing
        Date testDate = new SimpleDateFormat("yyyy-MM-dd").parse("2023-10-15");
        
        ObjectMapper mapper = new ObjectMapper();
        // Ensure that dates are written as timestamps
        mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);

        // Serialize the TestEntity object
        String json = mapper.writeValueAsString(new TestEntity(testDate));

        // Check if the date is formatted according to the specified pattern
        String expectedJson = "{\"date\":\"15-10-2023 00:00:00\"}";
        assertEquals(expectedJson, json);
    }
}
