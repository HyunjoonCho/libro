public void testCompilerCrashWithMultipleExtends() {
    String jsCode = "/**\n" +
            " * @interface\n" +
            " * @extends {unknown_1}\n" +
            " * @extends {unknown_2}\n" +
            " */\n" +
            "function Foo() {}\n";

    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();

    // Simulate usual compilation settings
    CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    WarningLevel.VERBOSE.setOptionsForWarningLevel(options);

    // Simulate the compilation process
    CompilerInput input = new CompilerInput(SourceFile.fromCode("test.js", jsCode));
    compiler.init(ImmutableList.of(), ImmutableList.of(input), options);

    try {
        compiler.parseInputs();
        compiler.check();
        fail("Expected NullPointerException due to multiple @extends with unknown types");
    } catch (NullPointerException e) {
        // Expected behavior: compiler crashes with NullPointerException
    }
}