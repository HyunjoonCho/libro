
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

// Base class with the "name" field
class JsonSchema {
    public String name;
}

// Subclass with additional properties, using JsonTypeInfo for polymorphic deserialization
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", defaultImpl = JsonMapSchema.class)
class JsonMapSchema extends JsonSchema {
    public String[] tables;
}

public class JsonSchemaTest {

    @Test
    public void testDeserializationWithInheritedField() throws Exception {
        String json = "{\n" +
                      "  \"type\": \"JsonMapSchema\",\n" +
                      "  \"name\": \"FoodMart\",\n" +
                      "  \"tables\": [\"time_by_day\", \"sales_fact_1997\"]\n" +
                      "}";

        ObjectMapper objectMapper = new ObjectMapper();
        JsonMapSchema schema = objectMapper.readValue(json, JsonMapSchema.class);

        // Verify the inherited field "name" is properly deserialized
        assertEquals("FoodMart", schema.name);
        // Verify other fields are deserialized as well
        assertEquals(2, schema.tables.length);
    }
}
