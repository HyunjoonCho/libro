script
// ==ClosureCompiler==
// @compilation_level ADVANCED_OPTIMIZATIONS
// @output_file_name default.js
// ==/ClosureCompiler==

/** @param {string} x */
function g(x) {
  // Expected to be called with a string, but will compile with an undefined argument.
  console.log("String expected, got:", typeof x);
}

/** @param {undefined} x */
function f(x) {
  if (x != undefined) { // The condition always evaluates to false.
    g(x); // This line should not execute, but type checking erroneously warns.
  }
}

// Test function
function test() {
  f(undefined);

  // Output is expected to show that g() has not been called
  // or log "String expected, got: undefined"
  // Type inference in closure compiler should not warn wrongly in this context.
}

test();
