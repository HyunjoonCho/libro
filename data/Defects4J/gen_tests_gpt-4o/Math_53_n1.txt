
import org.apache.commons.math3.complex.Complex;
import org.junit.Test;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertEquals;

public class ComplexTest {

    // Helper to verify if a Complex number is NaN
    private boolean isComplexNaN(Complex complex) {
        return Double.isNaN(complex.getReal()) && Double.isNaN(complex.getImaginary());
    }

    @Test
    public void testComplexAddWithNaN() {
        Complex nanComplex = Complex.NaN;
        Complex regularComplex = new Complex(1, 1);

        Complex resultAdd1 = nanComplex.add(regularComplex);
        Complex resultAdd2 = regularComplex.add(nanComplex);

        // According to javadoc, if either operand is NaN, the result should be NaN
        assertTrue("Complex addition with NaN operand should return NaN", isComplexNaN(resultAdd1));
        assertTrue("Complex addition with NaN operand should return NaN", isComplexNaN(resultAdd2));
    }

    @Test
    public void testComplexSubtractWithNaN() {
        Complex nanComplex = Complex.NaN;
        Complex regularComplex = new Complex(1, 1);

        Complex resultSubtract1 = nanComplex.subtract(regularComplex);
        Complex resultSubtract2 = regularComplex.subtract(nanComplex);

        // According to javadoc, if either operand is NaN, the result should be NaN
        assertTrue("Complex subtraction with NaN operand should return NaN", isComplexNaN(resultSubtract1));
        assertTrue("Complex subtraction with NaN operand should return NaN", isComplexNaN(resultSubtract2));
    }
}
