
import org.junit.Test;
import org.apache.commons.lang3.time.FastDateParser;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import static org.junit.Assert.*;

public class DateParserWhitespaceTest {

    @Test
    public void testFastDateParserWhitespaceFailure() throws ParseException {
        String pattern = "yyyy-MM-dd";
        String validDateString = "2023-10-05";
        String invalidDateStringWithSpaces = "2023- 10- 05"; // Invalid according to SimpleDateFormat

        // Using SimpleDateFormat
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
        try {
            Date simpleDate = simpleDateFormat.parse(invalidDateStringWithSpaces);
            fail("Expected ParseException for SimpleDateFormat with extra spaces.");
        } catch (ParseException e) {
            // Expected behavior
        }

        // Using FastDateParser
        FastDateParser fastDateParser = new FastDateParser(pattern, java.util.Locale.US);
        try {
            Date fastDate = fastDateParser.parse(invalidDateStringWithSpaces);
            assertNotEquals("2013-10-05", fastDate.toString()); // Should not parse correctly
        } catch (ParseException e) {
            // Fail because FastDateParser actually should throw an error but it doesn't due to the bug
            fail("FastDateParser should not parse the date successfully with extra spaces");
        }
    }
}
