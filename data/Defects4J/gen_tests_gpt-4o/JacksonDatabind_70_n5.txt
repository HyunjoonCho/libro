
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidDefinitionException;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertThrows;

public class UnwrappedCaseInsensitiveDeserializationTest {

    public static class Person {
        @JsonUnwrapped(prefix = "businessAddress.")
        public Address businessAddress;
    }

    public static class Address {
        public String street;
        public String addon;
        public String zip = "";
        public String town;
        public String country;
    }

    @Test
    public void testCaseInsensitiveDeserializationWithJsonUnwrapped() {
        String json = "{ \"businessAddress.street\": \"123 Main St\", \"businessAddress.town\": \"Springfield\" }";

        ObjectMapper mapper = new ObjectMapper()
                .enable(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES)
                .enable(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT);

        assertThrows(InvalidDefinitionException.class, () -> {
            mapper.readValue(json, Person.class);
        });
    }
}
