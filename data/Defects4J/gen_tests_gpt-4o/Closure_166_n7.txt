script
/* Test function for anonymous object type inference inconsistency */
function testAnonymousObjectTypeInference() {
    /** @param {{prop: string, prop2: (string|undefined)}} record */
    var func = function(record) {
        console.log(record.prop); // This should log 'a'
    };

    /** @param {{prop: string, prop2: (string|undefined)}|string} record */
    var func2 = function(record) {
        if (typeof record == 'string') {
            console.log(record); // This should log the string if record is of type string
        } else {
            console.log(record.prop); // This should log 'a' if record is of the object type
        }
    };

    // Should not cause an error
    try {
        func({prop: 'a'});
        console.log("func executed successfully with object parameter.");
    } catch (e) {
        console.error("func execution failed with object parameter: " + e.message);
    }

    // Reproducing the error in func2
    try {
        func2({prop: 'a'});
        console.log("func2 executed successfully with object parameter.");
    } catch (e) {
        console.error("func2 execution failed with object parameter: " + e.message);
    }
}

// Running the test function
testAnonymousObjectTypeInference();
