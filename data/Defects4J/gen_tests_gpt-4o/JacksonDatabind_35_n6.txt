
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class ObjectIdAndTypeIdTest {

    @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.WRAPPER_OBJECT)
    static class MyObject {
        public int id;
        public String name;

        public MyObject() { }

        public MyObject(int id, String name) {
            this.id = id;
            this.name = name;
        }
    }

    @Test
    public void testObjectIdAndTypeIdSerializationDeserialization() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.enable(SerializationFeature.INDENT_OUTPUT);

        MyObject original = new MyObject(1, "TestObject");

        // Serialize the object
        String json = objectMapper.writeValueAsString(original);
        System.out.println("Serialized JSON:\n" + json);

        // Deserialize the JSON back to object
        MyObject deserialized = objectMapper.readValue(json, MyObject.class);

        // Check if object properties are equal
        assertEquals(original.id, deserialized.id);
        assertEquals(original.name, deserialized.name);
    }
}
