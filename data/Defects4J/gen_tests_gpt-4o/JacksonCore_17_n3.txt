
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.core.JsonFactory;
import java.io.IOException;
import java.io.StringWriter;

public class JsonGenerationExceptionTest {

    public static void main(String[] args) throws IOException {
        try {
            testSplitSurrogateException();
        } catch (JsonGenerationException e) {
            System.out.println("Exception caught: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public static void testSplitSurrogateException() throws IOException {
        JsonFactory jsonFactory = new JsonFactory();
        StringWriter writer = new StringWriter();

        try (JsonGenerator jsonGenerator = jsonFactory.createGenerator(writer)) {
            jsonGenerator.writeStartObject();
            jsonGenerator.writeFieldName("text");
            
            // Carefully crafted string to trigger the exception
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < 32767; i++) { // Adjust length around problematic point
                sb.append('x');
            }
            sb.append("\uD83D\uDE00"); // Append a surrogate pair character (ðŸ˜€)
            
            jsonGenerator.writeRawValue(sb.toString());
            jsonGenerator.writeEndObject();
        } catch (JsonGenerationException e) {
            throw e;
        }

        System.out.println("Generated JSON: " + writer.toString());
    }
}
