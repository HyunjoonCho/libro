
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidTypeIdException;
import org.junit.Test;
import static org.junit.Assert.*;

public class PolymorphicDeserializationTest {

    @Test
    public void testPolymorphicDeserializationOfJDKType() {
        ObjectMapper mapper = new ObjectMapper();
        String potentiallyUnsafeJson = "[\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\", {}]";

        try {
            Object obj = mapper.readValue(potentiallyUnsafeJson, Object.class);
            fail("Deserialization should have failed for blacklisted JDK type.");
        } catch (InvalidTypeIdException e) {
            // Expected exception due to security restrictions on deserializing unsafe types
            assertTrue(e.getMessage().contains("blacklisted"));
        } catch (Exception e) {
            // If any other exception occurs, the test should still fail
            fail("Unexpected exception type: " + e.getClass().getName());
        }
    }
}
