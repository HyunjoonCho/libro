
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class ArrayJoinOptimizationTest {

    @Test
    public void testArrayJoinOptimization() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        String jsCode = "var variable = confirm(\"value from user\");" +
                        "var array = [\"constant\", variable];" +
                        "alert(array.join(\",\"));";

        Result result = compiler.compile(
            JSSourceFile.fromCode("externs.js", ""), 
            JSSourceFile.fromCode("input.js", jsCode), 
            options
        );

        String compiledCode = compiler.toSource();
        System.out.println("Compiled Code: " + compiledCode);

        // Check if compiled code does NOT contain .join(",") and instead uses .join()
        assertTrue("Optimization did not occur as expected",
            compiledCode.contains("a.join()") && !compiledCode.contains("a.join(\",\")"));
    }
}
