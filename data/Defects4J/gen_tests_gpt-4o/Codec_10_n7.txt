
import org.apache.commons.codec.language.Caverphone2;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class CaverphoneTest {

    @Test
    public void testCaverphoneEncodingEndingWithMB() {
        // Create an instance of Caverphone2
        Caverphone2 caverphone = new Caverphone2();

        // Test a name ending with "mb"
        String name = "Tromb";
        // Expected encoding should apply the rule correctly to replace ending "mb" with "m2"
        String expectedEncoding = "TRAM2";

        // Get the Caverphone encoding of the name
        String encoded = caverphone.encode(name);

        // Assert that the encoded string is as expected
        assertEquals(expectedEncoding, encoded);
    }

    @Test
    public void testCaverphoneEncodingStartingWithMB() {
        // Create an instance of Caverphone2
        Caverphone2 caverphone = new Caverphone2();

        // Test a name starting with "mb"
        String name = "Mbelo";
        // Expected encoding assuming the start "mb" rule is removed
        String expectedEncoding = "MPALA1111";

        // Get the Caverphone encoding of the name
        String encoded = caverphone.encode(name);

        // Assert that the encoded string is as expected
        assertEquals(expectedEncoding, encoded);
    }
}
