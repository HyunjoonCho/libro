
import org.apache.commons.cli.*;
import org.junit.Test;
import static org.junit.Assert.*;

public class PosixParserTest {

    @Test
    public void testUnrecognizedOptionWithStopAtNonOption() {
        // Create an options object and add a recognized option 'a'
        Options options = new Options();
        options.addOption("a", false, "Option a");

        // Create the command line arguments array
        String[] args = {"-z", "-a", "foo"};

        // Initialize the PosixParser
        CommandLineParser parser = new PosixParser();
        CommandLine cmd = null;

        try {
            // Parse the command line arguments with stopAtNonOption enabled
            cmd = parser.parse(options, args, true);
        } catch (ParseException e) {
            fail("Parsing failed. Reason: " + e.getMessage());
        }

        // Test if the recognized option 'a' is detected
        assertTrue("Option 'a' should be recognized", cmd.hasOption("a"));

        // Check if unrecognized options stopped further option parsing
        String[] remainingArgs = cmd.getArgs();
        assertEquals("Unexpected number of non-option arguments", 2, remainingArgs.length);
        assertEquals("First non-option argument should be '-z'", "-z", remainingArgs[0]);
        assertEquals("Second non-option argument should be 'foo'", "foo", remainingArgs[1]);
    }
}
