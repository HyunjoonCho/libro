@Test
public void testFastDateFormatSerialization() {
    // Create a FastDateFormat instance
    FastDateFormat format = FastDateFormat.getInstance("yyyy-MM-dd");

    // Attempt to serialize and then deserialize the instance
    FastDateFormat deserializedFormat = null;
    try (ByteArrayOutputStream baos = new ByteArrayOutputStream();
         ObjectOutputStream out = new ObjectOutputStream(baos)) {
         
        out.writeObject(format);
        out.flush();

        // Deserialize the object
        try (ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
             ObjectInputStream in = new ObjectInputStream(bais)) {
             
            deserializedFormat = (FastDateFormat) in.readObject();
        }
    } catch (IOException | ClassNotFoundException e) {
        fail("Serialization or deserialization failed: " + e.getMessage());
    }

    // Ensure the deserialized instance is not null and checks equivalence
    assertNotNull("Deserialized FastDateFormat should not be null", deserializedFormat);
    assertEquals("Deserialized format should be equivalent to original", format, deserializedFormat);

    // Optionally, format a date to check if functionality is preserved
    String date = format.format(new Date());
    String deserializedDate = deserializedFormat.format(new Date());
    assertEquals("Formatted dates should match", date, deserializedDate);
}