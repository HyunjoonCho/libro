
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.Assert.assertTrue;

public class HelpFormatterTest {

    @Test
    public void testOptionOrderWithNullComparator() {
        // Create OptionGroup with options
        OptionGroup group = new OptionGroup();
        Option h = Option.builder("h").desc("option h").build();
        Option s = Option.builder("s").desc("option s").build();
        Option b = Option.builder("b").desc("option b").build();
        Option t = Option.builder("t").desc("option t").build();
        group.addOption(h).addOption(s).addOption(b).addOption(t);

        // Create Options and add OptionGroup and another option
        Options options = new Options();
        options.addOptionGroup(group);
        options.addOption(Option.builder("o").desc("option o").build());

        // Create a HelpFormatter
        HelpFormatter formatter = new HelpFormatter();
        formatter.setOptionComparator(null);

        // Capture the output of formatter.printHelp
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        PrintStream printStream = new PrintStream(outputStream);
        System.setOut(printStream);

        formatter.printHelp("cmd", "", options, null);

        // Restore original System.out
        System.setOut(System.out);

        // Get the output and check if order is maintained
        String output = outputStream.toString();

        // Verify the expected order in the output
        // Note: This is where the current bug lies - output order might not match insertion order due to HashMap
        int indexH = output.indexOf("-h");
        int indexS = output.indexOf("-s");
        int indexB = output.indexOf("-b");
        int indexT = output.indexOf("-t");

        // Assert that the options appear in the order they were added
        assertTrue("Option h should appear before option s", indexH < indexS);
        assertTrue("Option s should appear before option b", indexS < indexB);
        assertTrue("Option b should appear before option t", indexB < indexT);
    }
}
