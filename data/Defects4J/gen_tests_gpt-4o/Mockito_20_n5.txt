
import org.junit.Test;
import org.mockito.Spy;
import org.mockito.MockitoAnnotations;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

public class UserAccountTest {

    interface UserAccount {
        List<String> getEmails();
        void addEmail(String email);
    }

    abstract class FakeUserAccount implements UserAccount {
        private final List<String> emails = new ArrayList<>();

        @Override
        public void addEmail(String email) {
            emails.add(email);
        }

        @Override
        public List<String> getEmails() {
            return new ArrayList<>(emails);
        }
    }

    @Spy
    FakeUserAccount userAccount;

    @Test
    public void testUserAccountSpying() {
        // Initialize the Mockito annotations
        MockitoAnnotations.openMocks(this);

        doCallRealMethod().when(userAccount).addEmail(anyString());
        doCallRealMethod().when(userAccount).getEmails();

        // Interact with the 'spy' object
        userAccount.addEmail("test@example.com");

        List<String> emails = userAccount.getEmails();

        // Verification
        assertEquals(1, emails.size());
        assertEquals("test@example.com", emails.get(0));

        verify(userAccount, times(1)).addEmail("test@example.com");
        verify(userAccount, times(1)).getEmails();
    }
}
