
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathException;
import org.apache.commons.jxpath.xml.DocumentContainer;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class XPathTest {
    @Test
    public void testUnionOfVariableAndNode() {
        // Creating JXPathContext with a sample XML document
        DocumentContainer container = new DocumentContainer(getClass().getResource("/sample.xml"));
        JXPathContext context = JXPathContext.newContext(container);

        // Setting a variable in the context
        context.getVariables().declareVariable("var", "/OTHER/B");

        try {
            // Using XPath expression that causes the bug
            List<Object> result = context.selectNodes("$var | /MAIN/A");
            fail("Expected a JXPathException to be thrown");
        } catch (JXPathException e) {
            // Validate if the exception message matches the expected problem
            String expectedMessageFragment = "Cannot compare pointers that do not belong to the same tree";
            assertEquals(true, e.getMessage().contains(expectedMessageFragment));
        }
    }
}
