
import com.google.javascript.jscomp.*;
import com.google.javascript.jscomp.Compiler;
import org.junit.Test;

import static org.junit.Assert.*;

public class ClosureCompilerBugTest {

    @Test
    public void testUnexpectedExpressionNodeDELPROP() {
        // The problematic JavaScript code that causes the compiler issue
        String jsCode = "function x() { return delete a; }";

        // Create a Compiler
        Compiler compiler = new Compiler();

        // Set the compiler options
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Compile the JavaScript code
        SourceFile input = SourceFile.fromCode("test.js", jsCode);
        SourceFile extern = SourceFile.fromCode("externs.js", "");

        // Compile and capture the result
        try {
            Result result = compiler.compile(extern, input, options);

            // Ensure that the compiler should have an error
            assertFalse("Expected a compiler error due to an internal issue", result.success);
        } catch (RuntimeException e) {
            // Check that the internal compiler error occurs
            assertTrue("Expected RuntimeException with specific message",
                e.getMessage().contains("INTERNAL COMPILER ERROR"));
        }
    }
}
