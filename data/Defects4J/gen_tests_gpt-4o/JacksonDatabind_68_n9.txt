public void testAcceptSingleValueAsArray() throws IOException {
    final String JSON = "[{\"message\":\"messageHere\"}]";
    
    static class A {
        List<B> bs = Collections.emptyList();

        @JsonCreator
        A(final List<B> bs) {
            this.bs = bs;
        }
    }

    static class B {
        List<C> cs = Collections.emptyList();

        @JsonCreator
        B(final List<C> cs) {
            this.cs = cs;
        }
    }

    public static class C {
        String message;

        @JsonCreator
        C(@JsonProperty("message") String message) {
            this.message = message;
        }
    }

    ObjectMapper om = new ObjectMapper();
    om.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);

    A a = om.readValue(JSON, A.class);
    assertNotNull(a);
    assertNotNull(a.bs);
    assertEquals(1, a.bs.size());
    assertNotNull(a.bs.get(0).cs);
    assertEquals(1, a.bs.get(0).cs.size());
    assertEquals("messageHere", a.bs.get(0).cs.get(0).message);
}