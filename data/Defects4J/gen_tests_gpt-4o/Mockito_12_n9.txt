
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.anyVararg;
import static org.mockito.Mockito.doNothing;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.times;

import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;

public class VarargsCaptorTest {

    interface VarargService {
        void performAction(String... values);
    }

    @Test
    public void testVarargsCaptor() {
        // Mock the service
        VarargService service = mock(VarargService.class);
        
        // Use doNothing to allow the method to be called without any operation
        doNothing().when(service).performAction(anyVararg());
        
        // Call the method with varargs
        service.performAction("one", "two", "three");

        // Capture the arguments
        ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);
        verify(service, times(1)).performAction(captor.capture());

        // Verify the captured arguments
        assertEquals(3, captor.getAllValues().size());
        assertEquals("one", captor.getAllValues().get(0));
        assertEquals("two", captor.getAllValues().get(1));
        assertEquals("three", captor.getAllValues().get(2));
    }
}
