
import static org.junit.Assert.*;
import org.junit.Test;
import org.apache.commons.cli2.*;
import org.apache.commons.cli2.builder.*;

import java.util.List;

public class DefaultArgumentTest {

    @Test
    public void testSingleOptionSingleArgument() throws Exception {

        // Default values
        String defaultValue1 = "100";
        String defaultValue2 = "1000";

        // Create the option builder
        final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
        final ArgumentBuilder abuilder = new ArgumentBuilder();
        final GroupBuilder gbuilder = new GroupBuilder();

        // Create the option with possible 0 to 2 arguments and default values
        DefaultOption bOption = obuilder.withShortName("b")
                                         .withLongName("b")
                                         .withArgument(abuilder.withName("b")
                                                                .withMinimum(0)
                                                                .withMaximum(2)
                                                                .withDefault(defaultValue1)
                                                                .withDefault(defaultValue2)
                                                                .create())
                                         .create();

        // Create the group of options
        Group options = gbuilder.withName("options")
                                .withOption(bOption)
                                .create();

        // Setting up the parser
        Parser parser = new Parser();
        parser.setHelpTrigger("--help");
        parser.setGroup(options);

        // Arguments passed to the command line
        String enteredValue1 = "1";
        String[] args = new String[]{"-b", enteredValue1};

        // Parse the arguments
        CommandLine cl = parser.parse(args);

        // Verify if command line was parsed successfully
        assertNotNull(cl);

        // Obtain the values for the option and verify expected behavior
        List<?> b = cl.getValues("-b");

        // The test should expect to combine the entered value and the default for the second argument
        assertEquals("[1, 1000]", b + "");
    }
}
