
import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormat;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DateTimeFormatterBugTest {

    @Test
    public void testParseIntoUsesGivenInstantYear() {
        // Create a formatter without a year in the pattern
        DateTimeFormatter formatter = DateTimeFormat.forPattern("MM-dd HH:mm");
        
        // Create a base DateTime with a specific year, e.g., 2023
        DateTime baseDateTime = new DateTime(2023, 1, 1, 0, 0);
        
        // Attempt to parse into the base DateTime
        long millis = formatter.parseMillis("02-28 12:00", baseDateTime.getMillis());
        
        // Create a DateTime object from the parsed milliseconds
        DateTime resultDateTime = new DateTime(millis);
        
        // Assert that the year is preserved from the base DateTime
        assertEquals(2023, resultDateTime.getYear());
        // Assert that the month, day, hour, and minute are parsed correctly
        assertEquals(2, resultDateTime.getMonthOfYear());
        assertEquals(28, resultDateTime.getDayOfMonth());
        assertEquals(12, resultDateTime.getHourOfDay());
        assertEquals(0, resultDateTime.getMinuteOfHour());
    }
}
