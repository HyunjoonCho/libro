
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
import com.fasterxml.jackson.core.util.Instantiatable;
import org.junit.Test;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class DefaultPrettyPrinterTest {

    public static class CustomPrettyPrinter extends DefaultPrettyPrinter {
        @Override
        public DefaultPrettyPrinter createInstance() {
            return new CustomPrettyPrinter();
        }
    }

    @Test
    public void testCreateInstanceWithSubclass() {
        CustomPrettyPrinter customPrettyPrinter = new CustomPrettyPrinter();
        DefaultPrettyPrinter newInstance = customPrettyPrinter.createInstance();
        
        // Verify that the new instance is of the correct subclass type
        assertTrue("Instance should be of type CustomPrettyPrinter", newInstance instanceof CustomPrettyPrinter);
        
        // Additionally, ensure it's not just the base class
        if (newInstance.getClass() == DefaultPrettyPrinter.class) {
            fail("createInstance() should not return an instance of DefaultPrettyPrinter when called on a subclass");
        }
    }
}
