
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.Jsoup;
import static org.junit.Assert.*;
import org.junit.Test;

public class ElementSiblingTest {

    @Test(expected = NullPointerException.class)
    public void testSiblingMethodsWithoutParent() {
        // Create an Element without adding it to a document or another element
        Element element = new Element("div");
        
        // Trying to get next Sibling when there is no parent, expecting a NullPointerException
        Element nextSibling = element.nextElementSibling();
    }

    @Test
    public void testPreventNullPointerExceptionForNextElementSibling() {
        // Create an Element without adding it to a document or another element
        Element element = new Element("div");

        try {
            // Check for NullPointerException
            Element nextSibling = element.nextElementSibling();
            assertNull(nextSibling);  // Expecting null, since there's no parent
        } catch (NullPointerException e) {
            fail("NullPointerException should not be thrown when the element has no parent.");
        }
    }

    @Test
    public void testPreventNullPointerExceptionForPreviousElementSibling() {
        // Create an Element without adding it to a document or another element
        Element element = new Element("div");

        try {
            // Check for NullPointerException
            Element previousSibling = element.previousElementSibling();
            assertNull(previousSibling);  // Expecting null, since there's no parent
        } catch (NullPointerException e) {
            fail("NullPointerException should not be thrown when the element has no parent.");
        }
    }

    @Test
    public void testPreventNullPointerExceptionForSiblingElements() {
        // Create an Element without adding it to a document or another element
        Element element = new Element("div");

        try {
            // Check for NullPointerException
            Elements siblings = element.siblingElements();
            assertNotNull(siblings);
            assertTrue(siblings.isEmpty());  // Expecting an empty list, since there's no parent
        } catch (NullPointerException e) {
            fail("NullPointerException should not be thrown when the element has no parent.");
        }
    }
}
