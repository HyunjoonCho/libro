
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.junit.Test;

import static org.junit.Assert.*;

public class CommandLineOptionTest {

    @Test
    public void testGetOptionValueWithLongOpt() {
        // Create option with long and short form
        Option debug = Option.builder("d")
                .longOpt("debug")
                .desc("turn on debugging")
                .build();

        // Add options to parser
        Options options = new Options();
        options.addOption(debug);

        // Simulate command line input
        String[] args = {"--debug"};

        CommandLineParser parser = new DefaultParser();
        try {
            CommandLine commandLine = parser.parse(options, args);

            // Test using long option name
            String debugValueLongOpt = commandLine.getOptionValue("debug");
            assertNotNull("Expected debug option value not to be null", debugValueLongOpt);

            // Test using short option name
            String debugValueShortOpt = commandLine.getOptionValue("d");
            assertNotNull("Expected debug option value not to be null", debugValueShortOpt);

        } catch (Exception e) {
            fail("Parsing failed: " + e.getMessage());
        }
    }
}
