
import org.junit.Test;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.tools.shell.Global;

import static org.junit.Assert.assertTrue;

public class JavaScriptTypeCheckTest {

    @Test
    public void testTypeCheckingError() {
        Context context = Context.enter();
        try {
            Global global = new Global(context);
            Scriptable scope = context.initStandardObjects(global);
            
            String script = ""
                + "/** @constructor */\n"
                + "var myclass = function() {\n"
                + "};\n"
                + "/** @param {boolean} success */\n"
                + "myclass.prototype.fn = function(success) {\n"
                + "};\n"
                + "myclass.prototype.test = function() {\n"
                + "    this.fn();\n"
                + "    this.fn = function() { };\n"
                + "};\n"
                + "try {\n"
                + "    var instance = new myclass();\n"
                + "    instance.test();\n"
                + "    print('No error reported');\n"
                + "} catch (e) {\n"
                + "    print('Error: ' + e);\n"
                + "    throw e;\n"
                + "}\n";

            context.evaluateString(scope, script, "TestScript", 1, null);

            // If we reach this point without exceptions, it indicates the absence of expected error
            assertTrue("Expected a type-checking error due to the method signature mismatch.", false);
        } catch (Exception e) {
            assertTrue("Type-checking error was correctly reported.", true);
        } finally {
            Context.exit();
        }
    }
}
