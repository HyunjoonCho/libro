
import static org.junit.Assert.assertEquals;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Captor;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class CaptorExampleTest {

    @Mock
    private List<String> mockedList;

    @InjectMocks
    private ListProcessor listProcessor;

    @Captor
    private ArgumentCaptor<String> captor;

    @Before
    public void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testCaptorVerify() {
        when(mockedList.add(anyString())).thenReturn(true);

        listProcessor.addToList("Test1");
        listProcessor.addToList("Test2");

        verify(mockedList, times(2)).add(captor.capture());

        List<String> capturedArgs = captor.getAllValues();
        assertEquals("Test1", capturedArgs.get(0));
        assertEquals("Test2", capturedArgs.get(1));
    }

    static class ListProcessor {
        private List<String> list;

        public ListProcessor(List<String> list) {
            this.list = list;
        }

        public void addToList(String item) {
            list.add(item);
        }
    }
}
