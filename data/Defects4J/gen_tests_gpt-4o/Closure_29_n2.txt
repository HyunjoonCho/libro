
import static org.junit.Assert.*;

import org.junit.Test;

public class ClosureCompilerBugTest {

    @Test
    public void testIsFunctionWithObject() {
        // This simulates the faulty compilation of the closure compiler
        IsFunctionChecker checker = new IsFunctionChecker();
        
        Object functionToCheck = (Runnable) () -> {};
        assertFalse(checker.isFunctionUsingObject(functionToCheck));
    }

    @Test
    public void testIsFunctionWithArray() {
        // This simulates the correctly functioning compilation workaround
        IsFunctionChecker checker = new IsFunctionChecker();
        
        Object functionToCheck = (Runnable) () -> {};
        assertTrue(checker.isFunctionUsingArray(functionToCheck));
    }

    class IsFunctionChecker {
        public boolean isFunctionUsingObject(Object functionToCheck) {
            Object getType = new Object();
            return functionToCheck != null &&
                   getType.toString().equals("[object Function]");
        }

        public boolean isFunctionUsingArray(Object functionToCheck) {
            Object[] getType = {};
            return functionToCheck != null &&
                   getType.toString().equals("[object Function]");
        }
    }
}
