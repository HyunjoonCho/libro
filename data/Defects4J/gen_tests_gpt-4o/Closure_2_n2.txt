
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import java.util.Collections;

import static org.junit.Assert.assertNotNull;

public class ClosureCompilerTest {

    @Test
    public void testMultipleExtendsInterfaceBug() {
        String code = "/**\n" +
                      " * @interface\n" +
                      " * @extends {unknown_1}\n" +
                      " * @extends {unknown_2}\n" +
                      " */\n" +
                      "function Foo() {}";

        Compiler compiler = new Compiler();

        CompilerOptions options = new CompilerOptions();
        options.setWarningLevel(CompilerOptions.Level.VERBOSE);

        // Using SIMPLE_OPTIMIZATIONS as described in the bug report
        options.setOptimizationLevel(CompilerOptions.OptimizationLevel.SIMPLE);

        // Compile the JavaScript code
        Result result = compiler.compile(
                Collections.emptyList(), 
                Collections.singletonList(SourceFile.fromCode("test.js", code)), 
                options);

        // As long as there is no crash, result should not be null
        assertNotNull(result);
    }
}
