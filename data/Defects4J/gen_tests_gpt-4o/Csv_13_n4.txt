
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVPrinter;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

import static org.junit.Assert.assertEquals;

public class CsvFormatTest {

    @Test
    public void testNullStringShouldNotBeEscaped() throws IOException {
        StringWriter writer = new StringWriter();
        // Assuming CsvFormat has a method to specify a null string representation as "\N"
        CSVFormat format = CSVFormat.DEFAULT
                .withNullString("\\N")
                .withEscape('\\'); // Escape character is set to '\'

        try (CSVPrinter printer = new CSVPrinter(writer, format)) {
            printer.printRecord("value1", null, "value3");
        }

        // Expected output should be "value1,\N,value3\n"
        // If the escape character is applied to nullString \N, it incorrectly becomes \\N
        String expectedOutput = "value1,\\N,value3\n";
        assertEquals(expectedOutput, writer.toString());
    }
}
