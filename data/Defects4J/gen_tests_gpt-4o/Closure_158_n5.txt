
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class JsCompilerTest {

    @Test
    public void testFlagPrecedence() {
        JsCompiler compiler = new JsCompiler();

        // Simulate setting the flags in various orders
        compiler.setFlag("jscomp_error");
        compiler.setFlag("jscomp_warning");
        compiler.setFlag("jscomp_off");

        // Compile or run the configuration
        compiler.compile();

        // Assert that the last flag set takes precedence (expected: "off")
        assertEquals("off", compiler.getEffectiveFlag());

        // Change order
        compiler.resetFlags();
        compiler.setFlag("jscomp_off");
        compiler.setFlag("jscomp_warning");
        compiler.setFlag("jscomp_error");

        compiler.compile();

        // Assert that the last flag set takes precedence (expected: "error")
        assertEquals("error", compiler.getEffectiveFlag());
    }
}

class JsCompiler {
    private String effectiveFlag;

    // Constructor
    public JsCompiler() {
        resetFlags();
    }

    public void setFlag(String flag) {
        this.effectiveFlag = flag;
    }

    public void resetFlags() {
        this.effectiveFlag = "";
    }

    public void compile() {
        // Simulated compilation
    }

    public String getEffectiveFlag() {
        return this.effectiveFlag;
    }
}
