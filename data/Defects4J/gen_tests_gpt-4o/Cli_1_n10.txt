
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.ParseException;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;

public class CommandLineTest {

    @Test
    public void testLongOptionNameRetrieval() throws ParseException {
        String debugOpt = "debug";  

        Option debug = Option.builder("d")
                .longOpt(debugOpt)
                .desc("turn on debugging")
                .build();

        Options options = new Options();
        options.addOption(debug);

        CommandLineParser parser = new DefaultParser();
        CommandLine cmd = parser.parse(options, new String[]{"--debug"});

        // Test using short option name retrieval
        assertEquals("true", cmd.getOptionValue("d", "true")); // Assuming default value "true" for the test case

        // Test using long option name retrieval
        assertEquals("true", cmd.getOptionValue(debugOpt, "true")); // This should ideally pass according to the user expectation

        // Check if either retrieval method returns null
        assertNull(cmd.getOptionValue("nonexistent")); // Test for a non-existent option
    }
}
