
import org.apache.commons.math.optimization.direct.BOBYQAOptimizer;
import org.apache.commons.math.optimization.GoalType;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.apache.commons.math.analysis.MultivariateFunction;
import org.junit.Test;

import static org.junit.Assert.assertNotNull;

public class BOBYQAOptimizerBugReproductionTest {

    @Test(expected = IllegalArgumentException.class)
    public void testBOBYQAOptimizerWithTooManyInterpolationPoints() {
        final int dim = 5; // Example dimension
        final int numberOfInterpolationPoints = 2 * dim + 2; // Causes the issue

        BOBYQAOptimizer optimizer = new BOBYQAOptimizer(numberOfInterpolationPoints);

        MultivariateFunction func = new MultivariateFunction() {
            @Override
            public double value(double[] point) {
                double sum = 0.0;
                for (double val : point) {
                    sum += val * val;
                }
                return sum;
            }
        };

        double[] startPoint = new double[dim];
        for (int i = 0; i < dim; i++) {
            startPoint[i] = 1.0;
        }

        RealPointValuePair result = optimizer.optimize(100, func, GoalType.MINIMIZE, startPoint);
        assertNotNull(result);
    }
}
