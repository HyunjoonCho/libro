
import org.junit.Test;
import static org.junit.Assert.*;

public class DangerousUseOfGlobalThisTest {

    /** @constructor */
    function Foo() {
        this._bar = null;
    }

    /** @this {Foo} */
    function writeMethodWithAnnotation() {
        this._bar = 123; // Expected: no warning.
    }

    /** @this {Foo} */
    function readMethodWithAnnotation() {
        return this._bar; // Expected: no warning.
    }

    function writeMethodWithoutAnnotation() {
        this._bar = 123; // Expected: warning.
    }

    function readMethodWithoutAnnotation() {
        return this._bar; // Expected: warning but not produced.
    }

    @Test
    public void testWarnings() {
        // Simulating that the compiler should give a warning 
        // for both unannotated functions
        try {
            writeMethodWithoutAnnotation();
            fail("Expected a warning for dangerous use of the global this object.");
        } catch (Exception e) {
            // expected behavior
        }

        try {
            readMethodWithoutAnnotation();
            fail("Expected a warning for dangerous use of the global this object.");
        } catch (Exception e) {
            // This should also have triggered a warning to match the expected behavior in the bug report.
        }
    }
}
