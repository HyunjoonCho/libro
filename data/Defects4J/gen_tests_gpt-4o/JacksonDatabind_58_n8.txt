public void testJsonIgnorePropertiesOnThrowable() {
    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.configure(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS, true);

    String json = "{\"message\":\"Test Exception\"}";

    try {
        objectMapper.readValue(json, MyException.class);
        fail("Expected IllegalArgumentException due to access on private property");
    } catch (IllegalArgumentException e) {
        assertTrue(e.getMessage().contains("Reflection is not allowed on private java.lang.Throwable"));
    } catch (Exception e) {
        fail("Expected IllegalArgumentException, but got: " + e.getClass().getName());
    }
}

@JsonIgnoreProperties("cause")
public static class MyException extends RuntimeException {
    public MyException(String message) {
        super(message);
    }
}