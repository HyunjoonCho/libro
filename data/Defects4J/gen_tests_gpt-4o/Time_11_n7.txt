
import org.joda.time.tz.DateTimeZoneBuilder;
import org.junit.Test;

public class DateTimeZoneBuilderTest {
    
    @Test
    public void testDateTimeZoneBuilder() throws Exception {
        // Create a DateTimeZone in the main thread
        getTestDateTimeZoneBuilder().toDateTimeZone("TestDTZ1", true);
        
        // Create a DateTimeZone in a separate thread to reproduce the issue
        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                getTestDateTimeZoneBuilder().toDateTimeZone("TestDTZ2", true);
            }
        });
        
        t.start();
        t.join();
    }

    private DateTimeZoneBuilder getTestDateTimeZoneBuilder() {
        return new DateTimeZoneBuilder()
            .addCutover(1601, 'w', 1, 1, 1, false, 7200000)
            .setStandardOffset(3600000)
            // Adding recurring savings with the same name, which is expected to create a warning in the first thread
            .addRecurringSavings("", 3600000, 1601, Integer.MAX_VALUE, 'w', 3, -1, 1, false, 7200000)
            .addRecurringSavings("", 0, 1601, Integer.MAX_VALUE, 'w', 10, -1, 1, false, 10800000);
    }
}
