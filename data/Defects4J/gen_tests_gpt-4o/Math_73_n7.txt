
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.exception.NoBracketingException;
import org.junit.Test;

import static org.junit.Assert.fail;

public class BrentSolverTest {

    @Test
    public void testBrentSolverInitialGuessWrongSign() {
        BrentSolver solver = new BrentSolver();
        UnivariateFunction function = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return x * x - 4; // has roots at -2 and 2
            }
        };

        double min = 1.0;    // f(1) is negative
        double max = 3.0;    // f(3) is positive
        double initial = 0.0; // f(0) is negative, has the same sign as f(1)

        try {
            solver.solve(100, function, min, max, initial);
            fail("Expected IllegalArgumentException due to same sign of function values at endpoints and initial guess.");
        } catch (NoBracketingException e) {
            // Expected exception, test passes
        }
    }
}
