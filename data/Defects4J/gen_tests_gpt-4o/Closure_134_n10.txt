script
/**
 * Interface A
 * @interface
 */
function A() {}

/**
 * @param {string} a
 */
A.prototype.foo = function(a) {};

/**
 * @constructor
 * @implements {A}
 */
function B() {}

/**
 * @inheritDoc
 */
B.prototype.foo = function(a) {
    // This should not cause an error if @inheritDoc works correctly with interface inheritance
    alert(a.substring(0)); 
};

// Test case
function testInheritDocWithInterface() {
    try {
        const b = new B();
        b.foo('testString');
        console.log('Test passed: Method executed without type errors');
    } catch (error) {
        console.error('Test failed: ', error.message);
    }
}

testInheritDocWithInterface();
