
import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.CompilationLevel;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

public class EnumTypingTest {

    @Test
    public void testEnumTyping() throws Exception {
        String jsCode = "/** @type {Object} */\n" +
                        "var NS = {};\n\n" +
                        "/** @enum {number} */\n" +
                        "NS.keys = { \n" +
                        "  a: 1, \n" +
                        "  b: 2, \n" +
                        "  c: 3\n" +
                        "};\n\n" +
                        "/** @enum */\n" +
                        "window['gKEYS'] = NS.keys;";

        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        CommandLineRunner runner = new CommandLineRunner(new String[]{
                "--compilation_level=ADVANCED_OPTIMIZATIONS",
                "--warning_level=VERBOSE",
                "--summary_detail_level=3"},
                options);

        runner.setPrintStream(new PrintStream(new ByteArrayOutputStream()));
        
        int result = runner.doRun();

        // Check if the expected output matches the actual. The absence of errors would indicate passing.
        if (result != 0) {
            fail("The enum was incorrectly typed.");
        }
    }
}
