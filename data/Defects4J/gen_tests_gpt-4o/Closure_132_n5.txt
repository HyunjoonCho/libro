
import static org.junit.Assert.assertEquals;

import org.junit.Test;

public class IfStatementTest {

    @Test
    public void testIfStatementBehavior() {
        // Setting up the test array
        int[][] es = new int[5][5];

        // Initialize the array so that es[3][3] == 1
        es[3][4] = 3;
        es[2][3] = 1;

        // Initial esi value
        int esi = 3;

        // Original if-else statement
        if (es[--esi][es[esi + 1]] == 1) {
            es[esi] = 0;
        } else {
            es[esi] = 1;
        }

        // Here, esi should now be 2 after the pre-decrement in the if statement
        int expectedResult = 0; // Because es[2][3] is 1 which should set es[2] to 0

        // Check if the original block and the transformed ternary return the same result
        assertEquals(expectedResult, es[esi]);

        // Reinitialize for ternary operation
        es[2] = new int[]{0, 0, 0, 1, 4}; // reset the modified index

        // Transformed ternary statement
        es[--esi] = (1 == es[esi][es[esi + 1]]) ? 0 : 1;

        // Assert that the ternary gives the same result as the original if-else
        assertEquals(expectedResult, es[esi]);
    }
}
