
import org.junit.Test;
import static org.junit.Assert.*;

public class NodeSelectorTest {

    @Test
    public void testTextNodeSelector() {
        // Set up a hypothetical document structure
        String xmlContent = "<root><element>Text Node 1</element><element>Text Node 2</element></root>";
        Document document = parseXml(xmlContent);

        // Initialize the NodeSelector with the document
        NodeSelector selector = new NodeSelector(document);

        // Attempt to select a text node following the first <element> using a text node selector
        List<Node> nodes = selector.select("element + :text");
        
        // Validate the selector function
        assertEquals(1, nodes.size());

        // Check if the selected node is the expected text node
        assertEquals("Text Node 2", nodes.get(0).getTextContent());
    }

    private Document parseXml(String xmlContent) {
        // Utility method to parse the XML and return a Document object
        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            return builder.parse(new ByteArrayInputStream(xmlContent.getBytes()));
        } catch (Exception e) {
            throw new RuntimeException("Error parsing XML", e);
        }
    }
}
