public void testShouldGetExtraInterfaces() {
    Bar bar = mock(Bar.class, withSettings().extraInterfaces(List.class, Observer.class));
    assertTrue(mockingDetails(bar).getExtraInterfaces().contains(List.class));
    assertTrue(mockingDetails(bar).getExtraInterfaces().contains(Observer.class));
}

public void testPureMockitoShouldNotDependJUnitByteBuddy() {
    try {
        ClassLoader classLoader = new URLClassLoader(new URL[0], getClass().getClassLoader());
        classLoader.loadClass("org.mockito.configuration.MockitoConfiguration");
        fail("Expected NoClassDefFoundError");
    } catch (NoClassDefFoundError e) {
        assertTrue(e.getMessage().contains("has some dependency to JUnit"));
    } catch (ClassNotFoundException e) {
        // Expected behavior
    }
}

public void testExcludingClassLoaderCannotLoadClassesWhenNoCorrectSourceUrlSet() {
    ClassLoader classLoader = ClassLoaders.excluding(ClassLoaders.getDefault(), "junit", "org.junit");
    try {
        classLoader.loadClass("junit.framework.Assert");
        fail("Class should not be found");
    } catch (ClassNotFoundException e) {
        assertEquals("classes with prefix : [junit, org.junit] are excluded", e.getMessage());
    }
}