public void testJsCompFlagPrecedence() {
    CompilerOptions options = new CompilerOptions();
    
    // Assume setOptions is a method that sets the options according to input flags
    // This sets: - warning, error, off (last one should take precedence)
    setOptions(options, "--jscomp_warning=checkTypes", "--jscomp_error=checkTypes", "--jscomp_off=checkTypes");
    assertTrue(options.isWarningOff(DiagnosticGroups.CHECK_TYPES));

    // This sets: - error, off, warning (last one should take precedence)
    setOptions(options, "--jscomp_error=checkTypes", "--jscomp_off=checkTypes", "--jscomp_warning=checkTypes");
    assertTrue(options.isWarningEnabled(DiagnosticGroups.CHECK_TYPES));
    
    // This sets: - off, warning, error (last one should take precedence)
    setOptions(options, "--jscomp_off=checkTypes", "--jscomp_warning=checkTypes", "--jscomp_error=checkTypes");
    assertTrue(options.isErrorEnabled(DiagnosticGroups.CHECK_TYPES));
}

private void setOptions(CompilerOptions options, String... args) {
    // This method is assumed to parse and set flags on the options parameter
    // according to the given arguments (mock-up for demonstration)
    
    for (String arg : args) {
        if (arg.startsWith("--jscomp_error=")) {
            options.setErrorLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.ERROR);
        }
        else if (arg.startsWith("--jscomp_warning=")) {
            options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.WARNING);
        }
        else if (arg.startsWith("--jscomp_off=")) {
            options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.OFF);
        }
    }
}