public void testConstructingInvalidPartials() {
    boolean exceptionThrownType1 = false;
    try {
        new Partial(new DateTimeFieldType[] { DateTimeFieldType.clockhourOfDay(), DateTimeFieldType.hourOfDay() }, new int[] { 1, 1 });
    } catch (IllegalArgumentException e) {
        exceptionThrownType1 = true;
    }
    assertTrue("Expected IllegalArgumentException for duplicate types", exceptionThrownType1);

    Partial p1 = new Partial(DateTimeFieldType.clockhourOfDay(), 1).with(DateTimeFieldType.hourOfDay(), 1);
    Partial p2 = new Partial(DateTimeFieldType.hourOfDay(), 1).with(DateTimeFieldType.clockhourOfDay(), 1);

    boolean exceptionThrownEqual = false;
    try {
        p1.isEqual(p2);
    } catch (IllegalArgumentException e) {
        exceptionThrownEqual = true;
    }
    assertTrue("Expected IllegalArgumentException for mismatching field types", exceptionThrownEqual);
}