
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class CompilerCrashTest {

    @Test
    public void testCompilerCrash() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // Source code simulating the issue
        String jsCode = "/** @constructor\n" +
                " * @param {...Object} params\n" +
                " */\n" +
                "var dojox = dojox || {};\n" +
                "dojox.gfx = dojox.gfx || {};\n" +
                "dojox.gfx.shape = dojox.gfx.shape || {};\n" +
                "dojox.gfx.shape.Shape = function(params) {};\n" +
                "dojox.gfx.shape.Shape = dojo.declare(\"dojox.gfx.shape.Shape\", null, /** @lends dojox.gfx.shape.Shape.prototype */ {});\n";

        // Create input source file for the compiler
        JSSourceFile input = JSSourceFile.fromCode("input.js", jsCode);

        // Run the compiler
        Result result = compiler.compile(JSSourceFile.fromCode("externs.js", ""), input, options);

        // Check if the test failed due to a compiler crash
        assertTrue("Expected the compiler to crash on given input", !result.success);
    }
}
