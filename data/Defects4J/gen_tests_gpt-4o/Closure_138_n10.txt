
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class ClosureCompilerDeterministicTest {

    @Test
    public void testJSC_DETERMINISTIC_TESTWarning() {
        // JavaScript code to be compiled
        String jsCode = "var t = null;" +
                        "window.test = function() {" +
                        "  if (t != null) {" +
                        "    t = null;" +
                        "  }" +
                        "  t = 1;" +
                        "};";
        
        // Initiate Closure Compiler and compile the given JavaScript code
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setLanguageIn(AbstractCompiler.LanguageMode.ECMASCRIPT5); // Set the ECMAScript version
        options.setWarningLevel(com.google.javascript.jscomp.DiagnosticGroups.CHECK_TYPES, com.google.javascript.jscomp.CheckLevel.WARNING);
        Result result = compiler.compile(
                SourceFile.fromCode("externs.js", ""), // Empty externs
                SourceFile.fromCode("test.js", jsCode),
                options
        );
        
        // Check if there are any warnings, specifically for JSC_DETERMINISTIC_TEST
        boolean foundDeterministicTestWarning = false;
        for (JSError warning : result.warnings) {
            if (warning.getType().key.equals("JSC_DETERMINISTIC_TEST")) {
                foundDeterministicTestWarning = true;
                break;
            }
        }
        
        // Assert that the warning for JSC_DETERMINISTIC_TEST exists
        assertTrue("The compiler should have emitted a JSC_DETERMINISTIC_TEST warning", foundDeterministicTestWarning);
    }
}
