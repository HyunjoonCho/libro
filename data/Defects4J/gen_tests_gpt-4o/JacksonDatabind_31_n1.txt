
import com.fasterxml.jackson.core.JsonStreamContext;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectWriter;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class JsonStreamContextTest {

    static class TestData {
        public String field1 = "value1";
        public String field2 = "value2";
    }

    @Test
    public void testJsonStreamContextDifference() {
        ObjectMapper mapper = new ObjectMapper();
        TestData data = new TestData();

        // Checking JsonStreamContext during normal write
        try {
            StringWriter writer = new StringWriter();
            JsonGenerator jsonGenerator = mapper.getFactory().createGenerator(writer);
            jsonGenerator.setCodec(mapper);
            jsonGenerator.writeStartObject();
            JsonStreamContext contextWrite = jsonGenerator.getOutputContext();
            jsonGenerator.writeStringField("field1", data.field1);
            jsonGenerator.writeStringField("field2", data.field2);
            jsonGenerator.writeEndObject();
            jsonGenerator.close();

            System.out.println("JsonStreamContext during write: " + contextWrite);

            // Checking JsonStreamContext during convert
            ObjectWriter objectWriter = mapper.writerFor(TestData.class);
            String jsonString = objectWriter.writeValueAsString(data);
            JsonStreamContext contextConvert = mapper.getFactory().createParser(jsonString).getCurrentLocation().getStreamReadContext();

            System.out.println("JsonStreamContext during convert: " + contextConvert);

            // Assert that context paths or positions might be different
            assertEquals(contextWrite.getEntryCount(), contextConvert.getEntryCount());
        } catch (IOException e) {
            fail("An error occurred while generating or converting JSON: " + e.getMessage());
        }
    }
}
