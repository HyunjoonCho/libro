
import static org.junit.Assert.assertEquals;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.DiagnosticGroups;
import org.junit.Test;

public class CompilerOptionsTest {

    @Test
    public void testFlagPrecedence() {
        CompilerOptions options = new CompilerOptions();

        // Set precedence with error, warning, and off
        options.setWarningLevel(DiagnosticGroups.DEPRECATED, CompilerOptions.HAS_ERROR);
        options.setWarningLevel(DiagnosticGroups.DEPRECATED, CompilerOptions.HAS_WARNING);
        options.setWarningLevel(DiagnosticGroups.DEPRECATED, CompilerOptions.HAS_OFF);

        // Expect the last option ("off") to have precedence
        assertEquals(CompilerOptions.HAS_OFF, options.getWarningLevel(DiagnosticGroups.DEPRECATED));

        // Change order, expecting last one set to take precedence
        options.setWarningLevel(DiagnosticGroups.DEPRECATED, CompilerOptions.HAS_WARNING);
        options.setWarningLevel(DiagnosticGroups.DEPRECATED, CompilerOptions.HAS_ERROR);

        // Expect the last option ("error") to have precedence now
        assertEquals(CompilerOptions.HAS_ERROR, options.getWarningLevel(DiagnosticGroups.DEPRECATED));
    }
}
