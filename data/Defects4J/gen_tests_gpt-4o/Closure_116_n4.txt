public void testAdvancedOptimizations() throws Exception {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

    String inputJs = "window['anchor'] = function (obj, modifiesProp) {" +
                     "  return (function (saved) {" +
                     "    return modifiesProp(obj) + saved;" +
                     "  })(obj['prop']);" +
                     "}";

    Node input = IR.root(IR.string(inputJs));

    // Simulate the externs for window object
    SourceFile extern = SourceFile.fromCode("externs.js", "window = {};");

    // Compile the input script
    compiler.initOptions(options);
    Result result = compiler.compile(ImmutableList.of(extern), ImmutableList.of(SourceFile.fromCode("test.js", inputJs)), options);

    // Get the compiled output
    String outputJs = compiler.toSource();

    // Expected output after ADVANCED_OPTIMIZATIONS
    String expectedOutputJs = "window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD};";

    // Check if the output matches the expected output
    assertEquals(expectedOutputJs, outputJs);
}