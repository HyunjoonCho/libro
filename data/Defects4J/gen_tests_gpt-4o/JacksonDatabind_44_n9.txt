
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class PolymorphicDeserializationTest {

    // Interface with polymorphic type info
    @JsonTypeInfo(
            use = JsonTypeInfo.Id.NAME,
            include = JsonTypeInfo.As.PROPERTY,
            property = "type",
            defaultImpl = SubType.class)
    @JsonSubTypes({
            @JsonSubTypes.Type(value = SubType.class, name = "sub")
    })
    public static abstract class BaseType {
        public String baseProperty;
    }

    public static class SubType extends BaseType {
        public String subProperty;
    }

    @Test
    public void testPolymorphicDeserializationWithDefaultImpl() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        
        // JSON to be deserialized
        String json = "{\"baseProperty\":\"base value\",\"subProperty\":\"sub value\"}";

        // Deserialize JSON to BaseType
        BaseType result = objectMapper.readValue(json, BaseType.class);

        // Verify that all properties are correctly deserialized
        assertEquals("base value", result.baseProperty);
        assertEquals("sub value", ((SubType) result).subProperty);
    }
}
