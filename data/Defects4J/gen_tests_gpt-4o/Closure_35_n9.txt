public void testAssignmentInConditionalWithRecordReturnType() {
    Object result1 = func(true, true);
    assertNotNull(result1);
    assertTrue(result1 instanceof Map);
    assertEquals(3, ((Map<?, ?>) result1).get("prop1") instanceof Map<?, ?> ? ((Map<?, ?>) ((Map<?, ?>) result1).get("prop1")).get("a") : 0);
    assertEquals("prop2", ((Map<?, ?>) result1).get("prop2"));

    Object result2 = func(true, false);
    assertNotNull(result2);
    assertTrue(result2 instanceof Map);
    assertEquals(3, ((Map<?, ?>) result2).get("prop1") instanceof Map<?, ?> ? ((Map<?, ?>) ((Map<?, ?>) result2).get("prop1")).get("a") : 0);
    assertEquals("prop3", ((Map<?, ?>) result2).get("prop3"));

    Object result3 = func(false, true);
    assertNotNull(result3);
    assertTrue(result3 instanceof Map);
    assertNull(((Map<?, ?>) result3).get("prop1"));
    assertEquals("prop2", ((Map<?, ?>) result3).get("prop2"));

    Object result4 = func(false, false);
    assertNotNull(result4);
    assertTrue(result4 instanceof Map);
    assertNull(((Map<?, ?>) result4).get("prop1"));
    assertEquals("prop3", ((Map<?, ?>) result4).get("prop3"));
}

private Object func(boolean a, boolean b) {
    Map<String, Object> results = null;
    if (a) {
        results = new HashMap<>();
        Map<String, Integer> prop1 = new HashMap<>();
        prop1.put("a", 3);
        results.put("prop1", prop1);
    }
    if (b) {
        results = results == null ? new HashMap<>() : results;
        results.put("prop2", "prop2");
    } else {
        results = results == null ? new HashMap<>() : results;
        results.put("prop3", "prop3");
    }
    return results;
}