
import com.google.javascript.jscomp.parsing.parser.FeatureSet;
import com.google.javascript.rhino.head.CompilerEnvirons;
import com.google.javascript.rhino.head.Parser;
import com.google.javascript.rhino.head.ast.AstRoot;
import org.junit.Test;

public class JSDocParserTest {

    @Test
    public void testErroneousJsDocParsing() {
        String jsCode = "/**\n" +
                        " * @return {@code foo} bar\n" +
                        " * baz.\n" +
                        " */\n" +
                        "var x;";

        CompilerEnvirons env = new CompilerEnvirons();
        env.setRecordingComments(true);
        env.setRecordingLocalJsDocComments(true);
        env.setLanguageVersion(Context.VERSION_ES6);
        env.setParseComments(true);

        Parser parser = new Parser(env, null);
        
        try {
            AstRoot ast = parser.parse(jsCode, null, 0);
            assertNotNull(ast.getComments());
        } catch (Exception e) {
            fail("Parsing should not throw an exception, but it did: " + e.getMessage());
        }
    }
}
