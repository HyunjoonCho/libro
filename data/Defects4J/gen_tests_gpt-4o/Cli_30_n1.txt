
import org.apache.commons.cli.*;

import java.util.Properties;

public class OptionGroupStateTest {

    public void testOptionGroupStateWithDefaults() {
        // Create OptionGroup with mutually exclusive options 'a' and 'b'
        OptionGroup optionGroup = new OptionGroup();
        optionGroup.addOption(Option.builder("a").desc("Option A").build());
        optionGroup.addOption(Option.builder("b").desc("Option B").build());

        // Create Options object and add the OptionGroup
        Options options = new Options();
        options.addOptionGroup(optionGroup);

        // Set default properties with option 'b'
        Properties defaultProps = new Properties();
        defaultProps.setProperty("b", "true");

        // Define command-line arguments with option 'a'
        String[] args = {"-a"};

        // Create a parser and parse the arguments with default properties
        CommandLineParser parser = new DefaultParser();
        try {
            CommandLine cmd = parser.parse(options, args, defaultProps);

            // Check and print the status of options 'a' and 'b'
            assertTrue(cmd.hasOption("a"), "Option 'a' should be present, but it is not.");
            assertFalse(cmd.hasOption("b"), "Option 'b' should not be present as 'a' is also specified.");

        } catch (ParseException e) {
            fail("Parsing failed: " + e.getMessage());
        }
    }

    // Helper method for assertions (to simulate a basic test framework)
    private void assertTrue(boolean condition, String message) {
        if (!condition) {
            throw new AssertionError(message);
        }
    }

    private void assertFalse(boolean condition, String message) {
        if (condition) {
            throw new AssertionError(message);
        }
    }

    private void fail(String message) {
        throw new AssertionError(message);
    }

    // Main method to run the test
    public static void main(String[] args) {
        OptionGroupStateTest test = new OptionGroupStateTest();
        test.testOptionGroupStateWithDefaults();
        System.out.println("Test completed.");
    }
}
