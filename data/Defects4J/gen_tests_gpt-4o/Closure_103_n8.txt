public void testUnreachableCodeError() {
    String jsCode = "function instanceOf(value, type) {" +
                    " try {" +
                    " if (value instanceof type) {" +
                    " return true;" +
                    " }" +
                    " } catch (exception) {" +
                    " if (exception instanceof TypeError) {" +
                    " throw exception;" +
                    " }" +
                    " return (type === Object);" +
                    " }" +
                    "}";
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    Result result = compiler.compile(
        SourceFile.fromCode("externs.js", ""),
        SourceFile.fromCode("test.js", jsCode),
        options
    );

    assertFalse(result.success);
    assertTrue(result.errors.length > 0);
    String errorMessage = result.errors[0].description;
    assertTrue(errorMessage.contains("unreachable code"));
}