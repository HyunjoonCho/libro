
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.JsonParser;
import org.junit.Test;
import static org.junit.Assert.*;

import java.io.IOException;

public class ObjectReaderTest {

    @Test
    public void testReadValuesWithOffsetAndLength() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        ObjectReader reader = mapper.readerFor(MyData.class);

        // Sample JSON array
        byte[] fullJsonArray = "[{\"name\":\"Item1\"},{\"name\":\"Item2\"},{\"name\":\"Item3\"}]".getBytes();
        
        // Let's say we want to only consider the second object here:
        int offset = 12; // Starting from the second object
        int length = 15; // Length covering only the second object

        JsonParser parser = mapper.getFactory().createParser(fullJsonArray, offset, length);
        MappingIterator<MyData> it = reader.readValues(parser);

        assertTrue(it.hasNext());
        MyData data = it.next();
        assertEquals("Item2", data.name);

        assertFalse(it.hasNext());
    }

    static class MyData {
        public String name;
    }
}
