public void testWrongTypeNameReportedOnMissingPropertyError() {
    Compiler compiler = new Compiler();
    
    String jsCode = ""
        + "/**\n"
        + " * @constructor\n"
        + " */\n"
        + "function C2() {}\n"
        + "\n"
        + "/**\n"
        + " * @constructor\n"
        + " */\n"
        + "function C3(c2) {\n"
        + "  /**\n"
        + "   * @type {C2}\n"
        + "   * @private\n"
        + "   */\n"
        + "  this.c2_;\n"
        + "  use(this.c2_.prop);\n"
        + "}\n";
    
    JSSourceFile extern = JSSourceFile.fromCode("externs.js", "");
    JSSourceFile input = JSSourceFile.fromCode("test.js", jsCode);
    
    compiler.init(List.of(extern), List.of(input), new CompilerOptions());
    compiler.check();
    
    JSError[] warnings = compiler.getWarnings();
    JSError[] errors = compiler.getErrors();
    
    String expectedError = "Property prop never defined on C2";

    boolean foundExpectedError = Arrays.stream(errors)
        .anyMatch(error -> error.description.contains(expectedError));
    
    assertTrue("Expected error message not found: " + expectedError, foundExpectedError);
}