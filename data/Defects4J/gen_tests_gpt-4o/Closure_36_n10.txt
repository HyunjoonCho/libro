
import com.google.javascript.jscomp.*;

public class TestGoogSingleton {

    public static void main(String[] args) {
        // Set up the compiler
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();

        // Set the compilation level to ADVANCED_OPTIMIZATIONS
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Use the closure library
        options.setUseClosureLibrary(true);

        // Set formatting options
        options.prettyPrint = true;
        options.printTree = true;

        // Source code simulating the bug scenario
        String jsCode = ""
            + "goog.provide('foo');\n"
            + "var foo = function() { this.values = []; };\n"
            + "goog.addSingletonGetter(foo);\n"
            + "foo.prototype.add = function(value) {this.values.push(value)};\n";

        // Prepare the input
        SourceFile input = SourceFile.fromCode("test.js", jsCode);

        // Compile the code
        Result result = compiler.compile(CommandLineRunner.getDefaultExterns(), ImmutableList.of(input), options);

        // Output the compiled code
        String compiledCode = compiler.toSource();

        // Check if the code was removed (which would mean a bug still exists)
        if (!compiledCode.trim().isEmpty()) {
            System.out.println("Test failed: Code was not fully removed.");
            System.out.println(compiledCode);
        } else {
            System.out.println("Test passed: Code was removed.");
        }
    }
}
