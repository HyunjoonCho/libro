
import org.junit.Test;

import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;
import com.google.javascript.rhino.Node;

import static org.junit.Assert.assertTrue;

public class ClosureCompilerTest {

    @Test
    public void testNullPointerWarning() {
        String jsCode =
                "/**\n" +
                " * @constructor\n" +
                " */\n" +
                "function MyClass() {\n" +
                "  this.value = 1;\n" +
                "}\n" +
                "\n" +
                "MyClass.prototype.show = function() {\n" +
                "  window.console.log(this.value);\n" +
                "}\n" +
                "\n" +
                "/**\n" +
                " * @type {MyClass}\n" +
                " */\n" +
                "var x = null;\n" +
                "x.show();\n";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // Enable type checking
        options.setCheckTypes(true);

        Node root = compiler.parseTestCode(jsCode);
        Result result = compiler.typeCheck(root);

        // Verify that a warning about the potential null pointer error is issued
        boolean foundWarning = false;
        for (JSError error : result.warnings) {
            if (error.getDescription().contains("may be null")) {
                foundWarning = true;
                break;
            }
        }

        assertTrue("Expected potential null pointer warning", foundWarning);
    }
}
