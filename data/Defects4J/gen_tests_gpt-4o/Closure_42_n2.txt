
import static org.junit.Assert.*;
import org.junit.Test;

public class JavaScriptCompressorTest {

    @Test
    public void testForEachKeywordPreserved() {
        String originalCode = 
            "contactcenter.screenpop.updatePopStatus = function(stamp, status) {" +
            "for each ( var curTiming in this.timeLog.timings ) {" +
            "if ( curTiming.callId == stamp ) {" +
            "curTiming.flag = status;" +
            "break;" +
            "}" +
            "}" +
            "};";

        String compressedCode = JavaScriptCompressor.compress(originalCode);

        // Ensure that the "for each" keyword is preserved in the compressed code
        assertTrue("The 'for each' keyword was not preserved", 
                   compressedCode.contains("for each ( var curTiming in this.timeLog.timings )"));
    }

    // Hypothetical JavaScript compression method inside the same test class or imported from a library
    public static class JavaScriptCompressor {
        public static String compress(String code) {
            // This is a dummy implementation of compression. In reality, this would modify the code.
            // For testing purposes, let's assume it produces the faulty output:
            return "contactcenter.screenpop.updatePopStatus=function(stamp,status){for(var curTiming in this.timeLog.timings)if(curTiming.callId==stamp){curTiming.flag=status;break}};";
        }
    }
}
