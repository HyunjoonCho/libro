
import com.google.javascript.jscomp.*;
import com.google.javascript.jscomp.Compiler;
import org.junit.Test;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertTrue;

public class ClosureCompilerUnreachableCodeTest {

    @Test
    public void testUnreachableCodeWarning() {
        // JavaScript code that should not trigger the unreachable code warning
        String jsCode = "function instanceOf(value, type) {\n" +
                        "  try {\n" +
                        "    if (value instanceof type) {\n" +
                        "      return true;\n" +
                        "    }\n" +
                        "  } catch (exception) {\n" +
                        "    if (exception instanceof TypeError) {\n" +
                        "      throw exception;\n" +
                        "    }\n" +
                        "    return (type === Object);\n" +
                        "  }\n" +
                        "}";

        // Create a new compiler
        Compiler compiler = new Compiler();

        // Set the compiler options
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Create a list of externs (required for the compiler to work properly)
        List<JSSourceFile> externs = CommandLineRunner.getDefaultExterns();

        // Create a source list containing the JavaScript source code
        List<SourceFile> inputs = new ArrayList<>();
        inputs.add(SourceFile.fromCode("test.js", jsCode));

        // Compile the JavaScript code
        compiler.compile(externs, inputs, options);

        // Check the warnings
        List<JSError> warnings = compiler.getWarnings();
        boolean unreachableCodeWarningFound = false;
        for (JSError warning : warnings) {
            if (warning.description.contains("unreachable code")) {
                unreachableCodeWarningFound = true;
                break;
            }
        }

        // Assert that the unreachable code warning was incorrectly issued
        assertTrue("Unreachable code warning was not expected", unreachableCodeWarningFound);
    }
}
