public void testPaxHeaderEntryWithTrailingSlash() throws Exception {
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
    TarArchiveOutputStream tarOutput = new TarArchiveOutputStream(byteArrayOutputStream);
    TarArchiveEntry paxEntry = new TarArchiveEntry("pax-entry/", TarConstants.LF_PAX_EXTENDED_HEADER_LC);
    tarOutput.putArchiveEntry(paxEntry);
    tarOutput.closeArchiveEntry();
    TarArchiveEntry validEntry = new TarArchiveEntry("test.txt");
    validEntry.setSize(4);
    tarOutput.putArchiveEntry(validEntry);
    tarOutput.write(new byte[] {'t', 'e', 's', 't'});
    tarOutput.closeArchiveEntry();
    tarOutput.finish();
    tarOutput.close();

    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());
    TarArchiveInputStream tarInput = new TarArchiveInputStream(byteArrayInputStream);
    TarArchiveEntry entry;
    boolean foundValidEntry = false;

    while ((entry = tarInput.getNextTarEntry()) != null) {
        if ("test.txt".equals(entry.getName())) {
            foundValidEntry = true;
            byte[] content = new byte[4];
            tarInput.read(content);
            assertArrayEquals(new byte[] {'t', 'e', 's', 't'}, content);
        }
    }
    tarInput.close();

    assertTrue("Valid entry not found or not read correctly", foundValidEntry);
}