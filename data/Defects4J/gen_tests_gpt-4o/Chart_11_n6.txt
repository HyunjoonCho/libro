
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.geom.GeneralPath;
import org.jfree.util.ShapeUtilities;
import org.junit.Test;

public class ShapeUtilitiesTest {

    @Test
    public void testDifferentPaths() {
        // Create two different GeneralPath instances with the same winding rule
        GeneralPath path1 = new GeneralPath();
        path1.moveTo(0, 0);
        path1.lineTo(1, 1);
        path1.closePath();

        GeneralPath path2 = new GeneralPath();
        path2.moveTo(0, 0);
        path2.lineTo(2, 2);
        path2.closePath();

        // The current implementation would incorrectly return true because the
        // same PathIterator is used in the buggy implementation
        assertFalse(ShapeUtilities.equal(path1, path2));
    }
    
    @Test
    public void testIdenticalPaths() {
        // Create two identical GeneralPath instances
        GeneralPath path1 = new GeneralPath();
        path1.moveTo(0, 0);
        path1.lineTo(1, 1);
        path1.closePath();

        GeneralPath path2 = new GeneralPath();
        path2.moveTo(0, 0);
        path2.lineTo(1, 1);
        path2.closePath();

        // The method should correctly return true for identical paths
        assertTrue(ShapeUtilities.equal(path1, path2));
    }
}
