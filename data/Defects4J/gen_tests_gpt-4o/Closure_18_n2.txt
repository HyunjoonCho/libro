public void testDependencySortingWithoutClosurePass() {
    CompilerOptions compilerOptions = new CompilerOptions();
    compilerOptions.setClosurePass(false);

    DependencyOptions dependencyOptions = new DependencyOptions();
    dependencyOptions.setDependencySorting(true);
    compilerOptions.setDependencyOptions(dependencyOptions);

    Compiler compiler = new Compiler();
    List<SourceFile> externs = ImmutableList.of();
    List<SourceFile> inputs = ImmutableList.of(
        SourceFile.fromCode("file1.js", "goog.provide('example'); goog.require('dependency');"),
        SourceFile.fromCode("file2.js", "goog.provide('dependency');")
    );

    Result result = compiler.compile(externs, inputs, compilerOptions);

    assertTrue(result.success);
    String compiledCode = compiler.toSource();

    // Expect dependency ('file2.js') to be first, followed by 'file1.js'
    assertTrue(compiledCode.indexOf("goog.provide('dependency');") < compiledCode.indexOf("goog.provide('example');"));
}