
import org.apache.commons.math.optimization.GoalType;
import org.apache.commons.math.optimization.LinearConstraint;
import org.apache.commons.math.optimization.linear.LinearObjectiveFunction;
import org.apache.commons.math.optimization.linear.Relationship;
import org.apache.commons.math.optimization.linear.SimplexSolver;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.junit.Test;

import java.util.ArrayList;
import java.util.Collection;

import static org.junit.Assert.assertTrue;

public class SimplexSolverTest {

    @Test
    public void testRestrictNonNegative() {
        // Objective function: 1 * x + 1 * y + 0
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1, 1}, 0);

        // Constraints: 1 * x + 0 * y = 1
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.EQ, 1));

        // Solve the problem using SimplexSolver
        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);

        // Extract the solution
        double x = solution.getPoint()[0];
        double y = solution.getPoint()[1];

        // Check that x is 1 as stated in the bug report
        assertTrue("x should be 1", x == 1);

        // Check that y should be non-negative but report states it's -1
        assertTrue("y should be non-negative", y >= 0);
    }
}
