public void testGetResultReturnsBestResult() {
    // Set up the optimizer with multiple starts
    MultiStartUnivariateRealOptimizer optimizer = new MultiStartUnivariateRealOptimizer(new SomeUnivariateRealOptimizer(), 3, new UniformRandomGenerator(new Well19937c()));

    // Define the function to optimize
    UnivariateFunction function = new UnivariateFunction() {
        public double value(double x) {
            return Math.pow(x - 3, 2); // Minimum at x = 3
        }
    };

    // Run the optimizer
    optimizer.optimize(100, function, GoalType.MINIMIZE, -10, 10);

    // Check that getResult returns the best result, corresponding to the minimum
    assertEquals(3.0, optimizer.getResult(), 1e-6); // Assuming 3.0 is the expected best result
}