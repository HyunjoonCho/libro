public void testJSC_USED_GLOBAL_THIS_Warning() {
    String code = ""
        + "var NS = {\n"
        + "  read: function() {\n"
        + "    return this.foo;\n"
        + "  },\n"
        + "  write: function() {\n"
        + "    this.foo = 123;\n"
        + "  }\n"
        + "};\n"
        + "NS.write2 = function() {\n"
        + "  this.foo = 123;\n"
        + "};";

    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    WarningLevel.VERBOSE.setOptionsForWarningLevel(options);

    compiler.initOptions(options);
    SourceFile extern = SourceFile.fromCode("externs.js", "");
    SourceFile input = SourceFile.fromCode("input.js", code);
    
    Result result = compiler.compile(extern, input, options);
    
    assertEquals(2, result.warnings.length);
    assertTrue(result.warnings[0].getType().equals(DiagnosticType.warning("JSC_USED_GLOBAL_THIS")));
    assertTrue(result.warnings[1].getType().equals(DiagnosticType.warning("JSC_USED_GLOBAL_THIS")));
}