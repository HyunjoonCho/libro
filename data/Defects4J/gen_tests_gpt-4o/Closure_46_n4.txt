
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ProxyObjectType;
import com.google.javascript.rhino.jstype.RecordType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;

public class ProxyObjectTypeTest {

    public void testClassCastExceptionDuringTypeCheck() {
        JSTypeRegistry registry = new JSTypeRegistry(null);

        // Creating a record type with a sample property
        RecordType recordType = new RecordType(registry, 
            Map.of("property", registry.getNativeType(JSTypeNative.STRING_TYPE)));
        
        // Creating a ProxyObjectType that references the RecordType
        ProxyObjectType proxyObjectType = new ProxyObjectType(registry, recordType);

        // This line should not throw a ClassCastException
        TestUtil.typeCheck(proxyObjectType);
    }
}

class TestUtil {

    public static void typeCheck(ProxyObjectType proxyObjectType) {
        // This assumes a hypothetical method 'typeCheck' which could
        // possibly be the source of the ClassCastException when handling the ProxyObjectType.
        
        // Simulation of type checking that previously raised ClassCastException
        if (proxyObjectType.toObjectType() instanceof RecordType) {
            System.out.println("Type check passed");
        } else {
            throw new IllegalArgumentException("Unexpected type during type check");
        }
    }
}
