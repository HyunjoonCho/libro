public void testFinishMethodSafety() {
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
    ArchiveOutputStream archiveOutputStream = new ZipArchiveOutputStream(byteArrayOutputStream);
    
    try {
        archiveOutputStream.putArchiveEntry(new ZipArchiveEntry("test.txt"));
        archiveOutputStream.write("Test Data".getBytes());
        archiveOutputStream.closeArchiveEntry();
        
        // Call finish() manually
        archiveOutputStream.finish();
        
        // Attempt to continue writing after finish() should signal a problem
        archiveOutputStream.putArchiveEntry(new ZipArchiveEntry("test2.txt"));
        archiveOutputStream.write("More Data".getBytes());
    } catch (IOException expected) {
        assertTrue(expected.getMessage().contains("Stream has already been finished"));
    } finally {
        try {
            archiveOutputStream.close();
        } catch (IOException ignore) {
            // Ignored
        }
    }
}