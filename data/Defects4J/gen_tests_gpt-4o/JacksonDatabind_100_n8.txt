public void testTreeTraversingParserBase64Variant() throws IOException {
    // Setup JSON and base64 variant
    String base64Data = "AQID"; // equivalent to byte array {1, 2, 3} using default base64 encoding
    Base64Variant nonDefaultVariant = new Base64Variant(Base64Variants.MODIFIED_FOR_URL, "01AB", false, '=', 64);
    
    // Construct JSON node and parser
    ObjectMapper mapper = new ObjectMapper();
    JsonNode node = mapper.readTree("\"" + base64Data + "\"");
    TreeTraversingParser parser = new TreeTraversingParser(node);
    
    // Attempt to retrieve binary data using a non-default variant
    parser.setCodec(mapper);
    byte[] binary = parser.getBinaryValue(nonDefaultVariant);
    
    // Check that the bytes match expected output with non-default base64 variant
    byte[] expectedBinary = nonDefaultVariant.decode(base64Data);
    assertArrayEquals(expectedBinary, binary);
}