
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
import org.apache.commons.compress.archivers.zip.ZipFile;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;

public class ZipArchiveEntryTest {

    @Test
    public void testZipArchiveEntryEquality() throws IOException {
        // Create a ZIP file in memory
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try (java.util.zip.ZipOutputStream zos = new java.util.zip.ZipOutputStream(baos)) {
            java.util.zip.ZipEntry entry = new java.util.zip.ZipEntry("test.txt");
            entry.setComment("test comment");
            zos.putNextEntry(entry);
            zos.write("Hello, World!".getBytes());
            zos.closeEntry();
        }

        byte[] zipBytes = baos.toByteArray();

        // Test with ZipArchiveInputStream
        try (InputStream inputStream = new ByteArrayInputStream(zipBytes);
             ZipArchiveInputStream zis = new ZipArchiveInputStream(inputStream)) {
            ZipArchiveEntry entryFromStream = zis.getNextZipEntry();
            File tempZipFile = File.createTempFile("test", ".zip");

            try (FileOutputStream fos = new FileOutputStream(tempZipFile)) {
                fos.write(zipBytes);
            }

            // Test with ZipFile
            try (ZipFile zipFile = new ZipFile(tempZipFile)) {
                Enumeration<ZipArchiveEntry> entries = zipFile.getEntries();
                while (entries.hasMoreElements()) {
                    ZipArchiveEntry entryFromFile = entries.nextElement();

                    // Compare the two ZipArchiveEntry objects
                    assertEquals(entryFromStream.getName(), entryFromFile.getName());
                    // Ensure that the entries are not equal due to comment field issue
                    assertFalse(entryFromStream.equals(entryFromFile));
                }
            } finally {
                tempZipFile.delete();
            }
        }
    }
}
