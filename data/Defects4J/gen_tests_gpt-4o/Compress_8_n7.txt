
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class TarArchiveEntryTest {

    @Test
    public void testParseTarHeaderSizeFieldWithTrailingSpace() {
        byte[] headerBuffer = new byte[512];

        // Mocked TAR header
        String name = "testfile.txt";
        long expectedSize = 12345L;

        // Place the filename in the buffer
        System.arraycopy(name.getBytes(), 0, headerBuffer, 0, name.length());

        // Convert the size to octal with trailing NUL then pad to 11 characters
        String sizeOctalWithNul = String.format("%1$011o", expectedSize) + "\0";
        System.arraycopy(sizeOctalWithNul.getBytes(), 0, headerBuffer, 124, sizeOctalWithNul.length());

        // Create a TarArchiveEntry to parse the header
        TarArchiveEntry entry = new TarArchiveEntry(headerBuffer);

        // Assert that the size is parsed correctly
        assertEquals("The size should be parsed correctly ignoring trailing space or NUL", expectedSize, entry.getSize());
    }
}
