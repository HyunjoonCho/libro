
import org.apache.commons.lang3.time.StopWatch;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class StopWatchTest {

    @Test
    public void testSuspendDoesNotActAsSplitWhenFollowedByStop() throws InterruptedException {
        StopWatch sw = new StopWatch();

        sw.start();
        Thread.sleep(1000); // Simulate elapsed time of 1 second
        sw.suspend();

        // Time 1 (ok)
        long time1 = sw.getTime();
        Thread.sleep(2000); // This time should not be counted

        // Time 1 (again, ok)
        assertEquals(time1, sw.getTime());

        sw.resume();
        Thread.sleep(3000); // Simulate elapsed time of 3 seconds
        sw.suspend();

        // Time 2 (ok)
        long time2 = sw.getTime();
        Thread.sleep(4000); // This time should not be counted

        // Time 2 (again, ok)
        assertEquals(time2, sw.getTime());

        Thread.sleep(5000); // This time should not be counted
        sw.stop();

        // Time 2 (should be, but is Time 3 => NOT ok)
        assertEquals("suspend followed by stop() should not count additional time.", time2, sw.getTime());
    }
}
