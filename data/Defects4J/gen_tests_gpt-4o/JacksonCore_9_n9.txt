
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertEquals;

public class JsonParserTest {

    @Test
    public void testFieldNameAsValueString() throws IOException {
        String json = "{\"name\":\"value\"}";
        JsonFactory jsonFactory = new JsonFactory();
        JsonParser parser = jsonFactory.createParser(json);

        // Parse to the first field name
        JsonToken token = parser.nextToken(); // START_OBJECT
        assertEquals(JsonToken.START_OBJECT, token);

        token = parser.nextToken(); // FIELD_NAME
        assertEquals(JsonToken.FIELD_NAME, token);

        // Reproduce the bug: expecting "name", but it returns null instead.
        String fieldName = parser.getValueAsString();
        assertEquals("name", fieldName); // Test should fail, as it returns null currently
    }
}
