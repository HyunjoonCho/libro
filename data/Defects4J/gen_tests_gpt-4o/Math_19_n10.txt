public void testCMAESOptimizerWithWideBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer();
    MultivariateFunction fitnessFunction = point -> {
        for (double value : point) {
            if (Double.isNaN(value)) {
                fail("Fitness function received NaN parameter");
            }
        }
        return 0;
    };

    double[] startPoint = {0, 0};
    double[] lowerBound = {-Double.MAX_VALUE, -Double.MAX_VALUE};
    double[] upperBound = {Double.MAX_VALUE, Double.MAX_VALUE};

    optimizer.optimize(
        new MaxEval(1000),
        new ObjectiveFunction(fitnessFunction),
        GoalType.MINIMIZE,
        new InitialGuess(startPoint),
        new SimpleBounds(lowerBound, upperBound)
    );
}