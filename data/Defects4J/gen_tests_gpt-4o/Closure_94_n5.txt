
import static org.junit.Assert.*;

import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

public class ClosureCompilerTest {

    @Test
    public void testDefineAnnotationWithLineBreaks() {
        String jsCode = "/** @define {string} */\n" +
                        "var CONSTANT = \"some very long string name that I want to wrap \" +\n" +
                        "\"and so break using a + since I don't want to \" +\n" +
                        "\"introduce a newline into the string.\";";

        // Setup the Closure Compiler
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Compile the JavaScript code
        JSSourceFile jsSource = JSSourceFile.fromCode("test.js", jsCode);
        Result result = compiler.compile(JSSourceFile.fromCode("externs.js", ""), jsSource, options);

        // Check for errors
        assertTrue("Expected compilation to fail due to define annotation line break", result.errors.length > 0);
        System.out.println("Compiler error: " + result.errors[0].description);

        // Optionally, check error message if you know what it should be
        String expectedErrorMessage = "Syntax error: Unexpected token '+'";
        assertEquals(expectedErrorMessage, result.errors[0].description);
    }
}
