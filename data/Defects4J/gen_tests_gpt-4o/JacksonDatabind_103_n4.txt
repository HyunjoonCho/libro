
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidFormatException;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class JsonMappingExceptionTest {

    static class TestData {
        public int value;
    }

    @Test
    public void testDoubleLocationInMessage() {
        ObjectMapper objectMapper = new ObjectMapper();

        // This JSON will cause a parsing failure (InvalidFormatException) due to "notANumber" not being an integer
        String invalidJson = "{\"value\": \"notANumber\"}";

        try {
            objectMapper.readValue(invalidJson, TestData.class);
        } catch (InvalidFormatException e) {
            String message = e.getMessage();
            // Check if location info is included twice in the message
            // This is a simple check for redundancy assuming the pattern " at [source]" is repeated
            int firstOccurrence = message.indexOf(" at [source]");
            int secondOccurrence = message.indexOf(" at [source]", firstOccurrence + 1);

            // Assert that the second occurrence is indeed found
            assertTrue("Location information is included twice in the message", secondOccurrence != -1);
        }
    }
}
