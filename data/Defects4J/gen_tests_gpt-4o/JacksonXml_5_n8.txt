
import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.MapperFeature;
import org.junit.Test;
import static org.junit.Assert.assertTrue;

@JacksonXmlRootElement(localName = "myname")
public class XMLTest {

    @Test
    public void testJacksonXmlRootElementIssue() throws Exception {
        final ObjectMapper xmlMapper = new XmlMapper();
        final ObjectMapper noAnnotationsXmlMapper = xmlMapper.copy()
                .configure(MapperFeature.USE_ANNOTATIONS, false)
                .configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);

        String resultWithAnnotationsDisabled = noAnnotationsXmlMapper.writeValueAsString(new XMLTest());
        String resultWithAnnotationsEnabled = xmlMapper.writeValueAsString(new XMLTest());

        System.out.println(resultWithAnnotationsDisabled);
        System.out.println(resultWithAnnotationsEnabled);

        // Assert that the localName "myname" is used for the root element when annotations are enabled
        assertTrue(resultWithAnnotationsEnabled.contains("<myname/>"));

        // Assert that the class name "XMLTest" is used when annotations are disabled
        assertTrue(resultWithAnnotationsDisabled.contains("<XMLTest/>"));
    }

    public static void main(String[] args) throws Exception {
        XMLTest test = new XMLTest();
        test.testJacksonXmlRootElementIssue();
    }
}
