
import org.junit.Test;
import static org.junit.Assert.*;

public class ValueMethodTest {

    // An example class with the value method
    static class ExampleClass {

        public String value(boolean b) {
            return b ? "true" : "false";
        }

        public String value(Number n) {
            return n == null ? "null" : n.toString();
        }

        // Adding a new overload for Boolean
        public String value(Boolean b) {
            return b == null ? "null" : b ? "true" : "false";
        }
    }

    @Test
    public void testBooleanValueWithNull() {
        ExampleClass example = new ExampleClass();
        
        // This should use the new Boolean overload and return "null" for a null Boolean
        assertEquals("null", example.value((Boolean) null));
    }

    @Test
    public void testBooleanValueWithTrue() {
        ExampleClass example = new ExampleClass();
        
        // This should return "true" for a non-null Boolean true
        assertEquals("true", example.value((Boolean) true));
    }

    @Test
    public void testBooleanValueWithFalse() {
        ExampleClass example = new ExampleClass();
        
        // This should return "false" for a non-null Boolean false
        assertEquals("false", example.value((Boolean) false));
    }
}
