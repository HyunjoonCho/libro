script
function testFunctionPropertyRetention() {
    var map = {};

    var addToMap = function(key, func) {
        map[key] = func;
    };

    var f1 = function() { return 'f1'; };
    f1.alwaysCall = true;
    var f2 = function() { return 'f2'; };

    addToMap('f1', f1);
    addToMap('f2', f2);

    var callFunctionByKey = function(key) {
        var f = map[key];
        if (f.alwaysCall) return f();
        return null;
    };

    var result = callFunctionByKey('f1');
    if (result !== 'f1') {
        throw new Error("Test failed: f1 was not called when it should have been.");
    } else {
        console.log("Test passed: f1 was successfully called with its property check.");
    }
}

// Execute the test in an environment where the original bug context was mentioned
testFunctionPropertyRetention();
