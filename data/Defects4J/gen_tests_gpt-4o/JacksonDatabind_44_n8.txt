public void testPolymorphicDefaultImplPropertyResolution() throws Exception {
    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.registerSubtypes(MySubType.class);
    objectMapper.setDefaultTyping(ObjectMapper.DefaultTyping.JAVA_LANG_OBJECT, JsonTypeInfo.As.PROPERTY);

    String json = "{\"type\":\"MySubType\", \"subProperty\":\"value\", \"baseProperty\":\"baseValue\"}";
    
    MyBaseType result = objectMapper.readValue(json, MyBaseType.class);

    assertNotNull(result);
    assertEquals("baseValue", result.getBaseProperty());
    assertTrue(result instanceof MySubType);
    MySubType subType = (MySubType) result;
    assertEquals("value", subType.getSubProperty());
}

static class MyBaseType {
    private String baseProperty;

    public String getBaseProperty() {
        return baseProperty;
    }

    public void setBaseProperty(String baseProperty) {
        this.baseProperty = baseProperty;
    }
}

@JsonTypeName("MySubType")
static class MySubType extends MyBaseType {
    private String subProperty;

    public String getSubProperty() {
        return subProperty;
    }

    public void setSubProperty(String subProperty) {
        this.subProperty = subProperty;
    }
}