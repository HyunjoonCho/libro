
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.*;

public class SubTypeValidatorTest {

    public static class Authentication {
        private List<GrantedAuthority> authorities = new ArrayList<>();

        public List<GrantedAuthority> getAuthorities() {
            return this.authorities;
        }

        public void setAuthorities(List<GrantedAuthority> authorities) {
            this.authorities = authorities;
        }
    }

    public interface GrantedAuthority {
        String getAuthority();
    }

    @Test
    public void validateSubTypeFailsWithNPE() {
        try {
            ObjectMapper mapper = new ObjectMapper();
            mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);

            String json = "{\"@class\":\"org.springframework.security.core.Authentication\"," +
                          "\"authorities\":[\"java.util.ArrayList\",[]]}";

            Authentication authentication = mapper.readValue(json, Authentication.class);
            fail("Expected NullPointerException was not thrown.");
        } catch (NullPointerException e) {
            // NPE is expected due to the bug, indicating the issue is reproduced
            System.out.println("NullPointerException caught as expected: " + e.getMessage());
        } catch (Exception e) {
            fail("Unexpected exception thrown: " + e.getMessage());
        }
    }
}
