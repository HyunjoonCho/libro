public void testLevenbergMarquardtOptimizerIgnoresConvergenceChecker() {
    ConvergenceChecker<PointVectorValuePair> customChecker = new SimpleVectorValueChecker(1e-10, 1e-10);
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(1000, customChecker);

    // Dummy model function
    MultivariateVectorFunction modelFunction = new MultivariateVectorFunction() {
        public double[] value(double[] variables) {
            return new double[]{variables[0] * 2.0, variables[1] * 3.0};
        }
    };

    // Dummy target and initial values
    double[] target = new double[]{2.0, 3.0};
    double[] initialGuess = new double[]{1.0, 1.0};

    // Perform optimization
    PointVectorValuePair result = optimizer.optimize(OptimizationData.builder()
                                            .model(modelFunction)
                                            .target(target)
                                            .start(initialGuess)
                                            .maxEval(1000)
                                            .target(target)
                                            .build());

    // Check if custom checker was respected
    assertTrue(customChecker.hasConverged(0, null, result));
}