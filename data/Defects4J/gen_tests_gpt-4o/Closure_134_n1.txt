script
// Example test suite to reproduce the bug

// Simulated environment

/** 
 * Interface 
 * @interface 
 */
function A() {}

/**
 * @param {string} a
 */
A.prototype.foo = function(a) {};

/**
 * @constructor
 * @implements {A}
 */
function B() {}

/**
 * @inheritDoc
 */
B.prototype.foo = function(a) {
  // This line should cause a Closure Compiler type-checking error,
  // which we are aiming to reproduce with this test case.
  alert(a.substring(0)); // ERROR - could not determine the type of this expression
};

// Test setup that mimics a coding environment where tests would be run
(function testInheritDocWithInterface() {
  try {
    // Instantiating B and calling foo to trigger the type check.
    var bInstance = new B();
    bInstance.foo("test"); // Should not cause an error with correct setup
    
    console.log("Test passed: No type error with valid string input."); 
  } catch (e) {
    console.error("Test failed: Type error occurred - " + e.message);
  }
})();
