public void testJsonDeserializeWithCustomMap() throws Exception {
    String json = "{ \"something\": [{ \"id\": \"123e4567-e89b-12d3-a456-426614174000\", \"property\": \"value\" }] }";
    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.registerModule(new SimpleModule().addAbstractTypeMapping(MyCustomIdInterface.class, Foo.class));

    TestPojo result = objectMapper.readValue(json, TestPojo.class);

    Map<UUID, Foo> something = result.getSomething();
    UUID expectedId = UUID.fromString("123e4567-e89b-12d3-a456-426614174000");
    assertNotNull(something);
    assertTrue(something.containsKey(expectedId));
    assertEquals("value", something.get(expectedId).getProperty());
}

private static class TestPojo {
    @JsonDeserialize(as = MyHashMap.class)
    private Map<UUID, Foo> something;

    public Map<UUID, Foo> getSomething() {
        return something;
    }

    public void setSomething(Map<UUID, Foo> incomingValue) {
        this.something = incomingValue;
    }
}

private static class MyHashMap<K, V extends MyCustomIdInterface> extends HashMap<K, V> {
}

private interface MyCustomIdInterface {
    UUID getId();
}

private static class Foo implements MyCustomIdInterface {
    private UUID id;
    private String property;

    @Override
    public UUID getId() {
        return id;
    }

    public String getProperty() {
        return property;
    }
}