
import org.apache.commons.cli.*;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class HelpFormatterTest {

    @Test
    public void testOptionOrderWithoutComparator() {
        // Set up the options and option group
        OptionGroup group = new OptionGroup();
        Option h = Option.builder("h").desc("Help").build();
        Option s = Option.builder("s").desc("Start").build();
        Option b = Option.builder("b").desc("Backup").build();
        Option t = Option.builder("t").desc("Terminate").build();
        group.addOption(h)
             .addOption(s)
             .addOption(b)
             .addOption(t);
        
        Options options = new Options();
        options.addOptionGroup(group);
        options.addOption(Option.builder("o").desc("Other").build());

        // Capture the output of HelpFormatter
        HelpFormatter formatter = new HelpFormatter();
        formatter.setOptionComparator(null);

        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        PrintStream ps = new PrintStream(outputStream);
        PrintStream oldOut = System.out;
        System.setOut(ps);

        // Print help
        formatter.printHelp("cmd", "", options, null);

        // Restore the original System.out
        System.out.flush();
        System.setOut(oldOut);

        // Convert captured output to string
        String output = outputStream.toString();

        // Assert that options are printed in the order they were added to OptionGroup
        int idxH = output.indexOf("-h");
        int idxS = output.indexOf("-s");
        int idxB = output.indexOf("-b");
        int idxT = output.indexOf("-t");
        int idxO = output.indexOf("-o");

        assertTrue("Expected option -h before -s", idxH < idxS);
        assertTrue("Expected option -s before -b", idxS < idxB);
        assertTrue("Expected option -b before -t", idxB < idxT);
        assertTrue("Expected option group before individual option -o", idxT < idxO);
    }
}
