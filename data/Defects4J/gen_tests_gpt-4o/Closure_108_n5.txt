public void testPreconditionCrashGoogScopeWithAliasedTypeDeclaration() {
    CompilerOptions options = new CompilerOptions();
    options.setClosurePass(true);
    
    String code = "var goog = {}; " +
                  "goog.scope; " +
                  "var ns = {}; " +
                  "ns.sub = {}; " +
                  "/** @constructor */ " +
                  "ns.sub.C = function() {}; " +
                  "goog.scope(function() { " +
                  "  var sub = ns.sub; " +
                  "  /** @type {sub.C} */ " +
                  "  var x = null; " +
                  "});";

    Compiler compiler = new Compiler();
    try {
        Node root = compiler.parseTestCode(code);
        assertFalse("Code should not contain errors", compiler.getErrorManager().hasErrors());
        ScopedAliases scopedAliases = new ScopedAliases(compiler);
        scopedAliases.process(null, root);
    } catch (IllegalStateException e) {
        fail("Did not expect an IllegalStateException to be thrown.");
    }
}