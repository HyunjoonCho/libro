
import static org.junit.Assert.*;

public class TrueFalseReplacementTest {

    // Mock external function for the purpose of this test
    private boolean external_ref() {
        return true;
    }

    private Object someFunction(final boolean any_expression) {
        final boolean[] fn1 = new boolean[1];
        final boolean[] fn2 = new boolean[1];

        if (any_expression) {
            fn2[0] = external_ref();
            fn1[0] = true;
        }

        return new Object() {
            boolean method1() {
                if (fn1[0]) fn1[0] = fn2[0];
                return true;
            }

            boolean method2() {
                return false;
            }
        };
    }

    @Test
    public void testTrueFalseReplacement() {
        // Use any_expression = true to trigger the external_ref function
        Object obj = someFunction(true);

        // Check that true is replaced correctly in method1
        boolean result1 = ((Boolean) obj.method1());
        assertEquals(true, result1);

        // Check that false is replaced correctly in method2
        boolean result2 = ((Boolean) obj.method2());
        assertEquals(false, result2);
    }
}
