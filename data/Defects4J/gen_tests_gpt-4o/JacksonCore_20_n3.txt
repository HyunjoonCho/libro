
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

import static org.junit.Assert.fail;

public class JsonGeneratorTest {

    @Test
    public void testWriteEmbeddedObjectWithByteArray() {
        JsonFactory jsonFactory = new JsonFactory();
        StringWriter writer = new StringWriter();

        try {
            JsonGenerator jsonGenerator = jsonFactory.createGenerator(writer);
            jsonGenerator.writeStartObject();
            byte[] byteArray = new byte[]{1, 2, 3, 4};

            // This should work, but currently throws UnsupportedOperationException
            try {
                jsonGenerator.writeFieldName("binaryData");
                jsonGenerator.writeEmbeddedObject(byteArray);
            } catch (UnsupportedOperationException e) {
                fail("JsonGenerator.writeEmbeddedObject() should support byte[] without throwing an exception.");
            }

            jsonGenerator.writeEndObject();
            jsonGenerator.close();

            // For future implementation verification, decode and check the content of writer if necessary

        } catch (IOException e) {
            e.printStackTrace();
            fail("Exception should not occur during JSON generation: " + e.getMessage());
        }
    }
}
