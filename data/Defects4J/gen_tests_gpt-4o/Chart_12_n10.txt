
import static org.junit.Assert.*;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetChangeListener;
import org.junit.Before;
import org.junit.Test;

public class MultiplePiePlotTest {

    private boolean listenerNotified;

    @Before
    public void setUp() {
        listenerNotified = false;
    }

    @Test
    public void testMultiplePiePlotDatasetListener() {
        // Create a dataset and a plot
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        MultiplePiePlot plot = new MultiplePiePlot(dataset);
        
        // Add a listener to the plot's dataset
        dataset.addChangeListener(new DatasetChangeListener() {
            @Override
            public void datasetChanged(DatasetChangeEvent event) {
                listenerNotified = true;
            }
        });
        
        // Modify the dataset and check if listener is notified
        dataset.addValue(1.0, "Row1", "Column1");
        assertTrue("Listener should be notified when the dataset is updated.", listenerNotified);
    }

    @Test
    public void testSetDatasetWiresListener() {
        // Create a plot without a dataset
        MultiplePiePlot plot = new MultiplePiePlot(null);
        
        // Create a dataset and set it to the plot
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        plot.setDataset(dataset);
        
        // Add a listener to the plot's dataset
        dataset.addChangeListener(new DatasetChangeListener() {
            @Override
            public void datasetChanged(DatasetChangeEvent event) {
                listenerNotified = true;
            }
        });
        
        // Modify the dataset and check if listener is notified
        dataset.addValue(2.0, "Row2", "Column2");
        assertTrue("Listener should be notified when the dataset is updated after using setDataset.", listenerNotified);
    }
}
