public void testHandleNullTypeIdForPolymorphicValues() {
    String json = "{\"value\":null,\"@type\":null}";
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, false);
    mapper.activateDefaultTyping(LaissezFaireSubTypeValidator.instance, ObjectMapper.DefaultTyping.JAVA_LANG_OBJECT, JsonTypeInfo.As.EXTERNAL_PROPERTY);

    try {
        BaseType result = mapper.readValue(json, BaseType.class);
        assertNull(result);
    } catch (JsonMappingException e) {
        fail("Deserialization should not fail when type id is null and no defaultImpl is set: " + e.getMessage());
    } catch (JsonProcessingException e) {
        fail("Encountered an unexpected processing exception: " + e.getMessage());
    }
}