
import org.junit.Test;
import static org.junit.Assert.*;
import org.mockito.internal.util.DefaultMockingDetails;
import java.util.List;
import java.util.Observer;
import static org.mockito.Mockito.*;

public class WindowsSpecificTest {

    @Test
    public void testDefaultMockingDetails_shouldGetExtraInterfaces() {
        Bar bar = mock(Bar.class, withSettings().extraInterfaces(List.class, Observer.class));
        DefaultMockingDetails details = new DefaultMockingDetails(bar);
        assertTrue(details.getExtraInterfaces().contains(List.class));
        assertTrue(details.getExtraInterfaces().contains(Observer.class));
    }

    @Test
    public void testNoJUnitDependencies_pureMockitoShouldNotDependJUnit() {
        String className = "org.mockito.internal.progress.TimesTest";
        try {
            Class.forName(className);
            fail("'" + className + "' should not have any dependency to JUnit");
        } catch (ClassNotFoundException e) {
            // Expected exception since it should not exist if JUnit dependency is not there
        } catch (NoClassDefFoundError e) {
            assertEquals("junit/framework/Assert", e.getMessage().replace('\\', '/'));
        }
    }

    // Mock classes used in the tests
    public interface Bar {
    }
}
