public void testEnumTyping() throws Exception {
    String jsCode =
        "/** \n" +
        " * @type {Object}\n" +
        " */\n" +
        "var NS = {};\n" +
        "\n" +
        "/**\n" +
        " * @enum {number}\n" +
        " */\n" +
        "NS.keys = { \n" +
        "a: 1, \n" +
        "b: 2, \n" +
        "c: 3\n" +
        "};\n" +
        "\n" +
        "/**\n" +
        " * @enum\n" +
        " */\n" +
        "window['gKEYS'] = NS.keys;";
    
    // Mock advanced level compilation with flags as described
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    WarningLevel.VERBOSE.setOptionsForWarningLevel(options);
    options.setSummaryDetailLevel(3);
    
    SourceFile extern = SourceFile.fromCode("externs", "");
    SourceFile input = SourceFile.fromCode("test", jsCode);
    compiler.compile(extern, input, options);
    
    // Check that the compiler does not count the enum as untyped
    assertEquals(1, compiler.getErrorManager().getTypedPercent());
}