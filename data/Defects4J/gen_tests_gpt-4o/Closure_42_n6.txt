
import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class JSCompressorTest {

    // A hypothetical method that compresses JavaScript code.
    private String compressJavaScript(String input) {
        // Simulate the compression process, replace this with the actual compression library call
        return input.replace("for each", "for"); // Example of incorrect compression behavior
    }

    @Test
    public void testForEachPreservation() {
        String beforeCompression = 
            "contactcenter.screenpop.updatePopStatus = function(stamp, status) {" +
            "for each ( var curTiming in this.timeLog.timings ) {" +
            "if ( curTiming.callId == stamp ) {" +
            "curTiming.flag = status;" +
            "break;" +
            "}" +
            "}" +
            "};";

        String afterCompression = compressJavaScript(beforeCompression);

        // The 'each' keyword should be preserved in the 'for each' loop
        assertTrue("The 'each' keyword should be preserved in the compressed output.", 
            afterCompression.contains("for each"));
    }
}
