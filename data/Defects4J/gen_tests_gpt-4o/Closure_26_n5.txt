
import org.junit.Test;
import static org.junit.Assert.*;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class ClosureCompilerTest {

    @Test
    public void testProcessCommonJSModules() {
        String[] command = new String[] {
            "java", "-jar", "path/to/build/compiler.jar",
            "--formatting=PRETTY_PRINT",
            "--jscomp_error=checkTypes",
            "--compilation_level=SIMPLE_OPTIMIZATIONS",
            "--transform_amd_modules",
            "--process_common_js_modules",
            "--js=echo.js",
            "--js=echo-main.js",
            "--common_js_entry_module=echo-main.js"
        };

        ProcessBuilder processBuilder = new ProcessBuilder(command);
        processBuilder.redirectErrorStream(true);

        try {
            Process process = processBuilder.start();
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line;
            StringBuilder output = new StringBuilder();
            
            while ((line = reader.readLine()) != null) {
                output.append(line).append("\n");
            }

            process.waitFor();

            // Check if the output contains the expected error
            String expectedError = "ERROR - Property module$exports never defined on module$echo_main";
            assertTrue("Expected error not found in compiler output", output.toString().contains(expectedError));
        
        } catch (IOException | InterruptedException e) {
            fail("Exception during the execution of the compiler: " + e.getMessage());
        }
    }
}
