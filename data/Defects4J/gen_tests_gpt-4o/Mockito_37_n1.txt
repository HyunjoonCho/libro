
import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.junit.MockitoJUnit;
import org.mockito.junit.MockitoRule;
import org.mockito.Mock;
import org.mockito.ArgumentCaptor;
import static org.mockito.Mockito.*;
import static org.junit.Assert.*;

// Import necessary JUnit and Mockito packages
import org.mockito.junit.MockitoJUnitRunner;

// Assume an external interface
interface Service {
    void performAction(String input);
}

@RunWith(MockitoJUnitRunner.class) // Use MockitoJUnitRunner so there's no need to pass the test instance to the rule
public class MockitoRuleTest {

    @Rule
    public MockitoRule mockitoRule = MockitoJUnit.rule(); // Using the Mockito rule without passing an instance

    @Mock
    private Service mockService;

    @Test
    public void testMockitoRuleWithoutInstance() {
        // Arrange
        ArgumentCaptor<String> argumentCaptor = ArgumentCaptor.forClass(String.class);
        
        // Act
        mockService.performAction("test");
        
        // Verify that the method was called with the correct argument
        verify(mockService).performAction(argumentCaptor.capture());
        assertEquals("test", argumentCaptor.getValue());
    }
}
