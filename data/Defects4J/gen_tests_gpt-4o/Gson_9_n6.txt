
import org.junit.Test;
import static org.junit.Assert.*;

public class ValueMethodTest {

    // Class containing the overloaded value methods
    public static class MyClass {
        public void value(boolean boolValue) {
            // Method that gets called causing NPE when Boolean is null
            if (boolValue) {
                System.out.println("Boolean is true");
            } else {
                System.out.println("Boolean is false");
            }
        }

        public void value(Number number) {
            // Dummy method to simulate correct behavior, e.g., Integer, Double, etc.
            System.out.println("Number: " + number);
        }

        // Suggest a method to handle Boolean to avoid NPE
        public void value(Boolean boolValue) {
            if (boolValue == null) {
                System.out.println("Boolean is null");
            } else {
                value(boolValue.booleanValue());
            }
        }
    }

    @Test
    public void testBooleanValueMethod() {
        MyClass myClass = new MyClass();
        
        // Intentionally passing a null Boolean to cause the issue
        Boolean nullBoolean = null;

        try {
            // Without a method overload for Boolean, this line would cause an NPE.
            myClass.value(nullBoolean);
        } catch (NullPointerException e) {
            fail("Method should handle null Boolean without throwing NPE");
        }
    }
}
