
import java.util.Calendar;
import java.util.TimeZone;
import org.apache.commons.lang3.time.FastDateFormat;
import org.junit.Test;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;

public class FastDateFormatTest {

    @Test
    public void testTimezoneFormatRespectsCalendarInstance() {
        // Create a calendar instance with a specific timezone
        Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("US/Eastern"));
        
        // Format the calendar using FastDateFormat
        String formattedDate = FastDateFormat.getInstance("h:mma z").format(calendar);

        // Check if the formatted string contains the Eastern timezone identifier
        assertTrue("Formatted date should contain 'EST' or 'EDT' for Eastern timezone", 
                   formattedDate.contains("EST") || formattedDate.contains("EDT"));

        // Create a calendar instance with a different timezone
        Calendar anotherCalendar = Calendar.getInstance(TimeZone.getTimeZone("US/Pacific"));
        
        // Format the calendar using FastDateFormat
        String anotherFormattedDate = FastDateFormat.getInstance("h:mma z").format(anotherCalendar);

        // Check if the formatted string contains the Pacific timezone identifier
        assertTrue("Formatted date should contain 'PST' or 'PDT' for Pacific timezone", 
                   anotherFormattedDate.contains("PST") || anotherFormattedDate.contains("PDT"));
        
        // Ensure that the timezone names are different to verify they are correctly formatted
        assertFalse("Formatted dates should have different timezone names for different calendar timezones",
                   formattedDate.contains(anotherFormattedDate.substring(anotherFormattedDate.lastIndexOf(' ') + 1)));
    }
}
