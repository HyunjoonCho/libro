
import org.junit.Test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.stream.Collectors;

import static org.junit.Assert.assertTrue;

public class DefineFlagTest {

    @Test
    public void testDefineFlagWithString() throws IOException, InterruptedException {
        // Command to be executed
        String[] command = {
            "java",
            "-jar",
            "compiler.jar",
            "--compilation_level", 
            "ADVANCED_OPTIMIZATIONS", 
            "--define='test.VERSION=1.0.0'", 
            "--js_output_file", 
            "test-min.js", 
            "--js", 
            "test.js"
        };
        
        // Initialize process builder
        ProcessBuilder processBuilder = new ProcessBuilder(command);
        Process process = processBuilder.start();
        
        // Read the std error and wait for the process to complete
        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getErrorStream()));
        String errorOutput = reader.lines().collect(Collectors.joining("\n"));
        process.waitFor();
        
        // Verify the expected output - it should mention the invalid define flag
        assertTrue(errorOutput.contains("java.lang.RuntimeException: --define flag syntax invalid: test.VERSION=1.0.0"));
    }
}
