
import org.junit.Test;
import org.apache.commons.math3.genetics.ListPopulation;
import org.apache.commons.math3.genetics.Chromosome;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import static org.junit.Assert.*;

public class ListPopulationTest {

    @Test(expected = UnsupportedOperationException.class)
    public void testListPopulationIteratorRemove() {
        // Create a list of mock Chromosomes
        List<Chromosome> chromosomeList = new ArrayList<>();
        Chromosome chr1 = new DummyChromosome();
        Chromosome chr2 = new DummyChromosome();

        chromosomeList.add(chr1);
        chromosomeList.add(chr2);

        // Create a ListPopulation with the list
        ListPopulation population = new ListPopulation(chromosomeList, 10);

        // Get the iterator from ListPopulation
        Iterator<Chromosome> iterator = population.iterator();

        // Attempt to remove an element using the iterator
        if (iterator.hasNext()) {
            iterator.next();
            iterator.remove(); // This should throw UnsupportedOperationException
        }

        fail("Expected UnsupportedOperationException not thrown");
    }

    private static class DummyChromosome implements Chromosome {
        @Override
        public double fitness() {
            return 0;
        }

        @Override
        public Chromosome newFixedLengthChromosome(List<?> chromosomeRepresentation) {
            return this;
        }
    }
}
