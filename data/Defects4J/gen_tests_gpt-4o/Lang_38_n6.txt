
import org.apache.commons.lang3.time.FastDateFormat;
import org.junit.Test;

import java.util.GregorianCalendar;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class CalendarTimeZoneBugTest {

    @Test
    public void testFormat_CalendarIsoMsZulu_Failing() {
        final String dateTime = "2009-10-16T16:42:16.000Z";
        // Calendar created with specific time zone
        GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone("GMT-8"));
        cal.clear();
        cal.set(2009, 9, 16, 8, 42, 16);

        // Formatting with a different time zone
        FastDateFormat format = FastDateFormat.getInstance("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", TimeZone.getTimeZone("GMT"));
        
        // This fails without the workaround
        assertEquals("dateTime", dateTime, format.format(cal));
    }

    @Test
    public void testFormat_CalendarIsoMsZulu_Passing() {
        final String dateTime = "2009-10-16T16:42:16.000Z";
        GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone("GMT-8"));
        cal.clear();
        cal.set(2009, 9, 16, 8, 42, 16);
        cal.getTime(); // Workaround: Also retrieves and updates internal fields

        FastDateFormat format = FastDateFormat.getInstance("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", TimeZone.getTimeZone("GMT"));
        
        // This passes
        assertEquals("dateTime", dateTime, format.format(cal));
    }
}
