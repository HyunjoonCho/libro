
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import org.apache.tika.Tika;
import org.junit.Test;

import static org.junit.Assert.*;

public class ZipFileParseTest {

    @Test(expected = ArrayIndexOutOfBoundsException.class) // Expecting the exception as described in the bug report
    public void testZeroSizedUxLocalEntry() throws IOException {
        // Create a dummy ZIP file with a zero-sized "ux" local entry
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try (ZipOutputStream zos = new ZipOutputStream(baos)) {
            ZipEntry entry = new ZipEntry("dummy.jpg");
            entry.setExtra(createZeroSizedUxEntry()); // Add a zero-sized "ux" extra field
            zos.putNextEntry(entry);
            zos.write(new byte[]{0}); // Dummy file content
            zos.closeEntry();
        }

        byte[] zipContent = baos.toByteArray();
        String zipFileName = "TR_01.ZIP";

        Tika tika = new Tika();
        
        // Act: Attempt to detect the content type of the zip file
        tika.detect(new ByteArrayInputStream(zipContent), zipFileName);
    }

    private byte[] createZeroSizedUxEntry() {
        // Ux extra field with 0 size
        return new byte[]{
            'U', 'T', 5, 0, // Some timestamp field
            7, -112, -108, 51, // Followed by arbitrary data
            'u', 'x', 0, 0 // Zero-sized 'ux' field representing UID/GID
        };
    }
}
