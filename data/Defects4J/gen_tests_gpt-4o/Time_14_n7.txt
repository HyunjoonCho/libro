
import org.joda.time.DateTimeConstants;
import org.joda.time.MonthDay;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.IllegalFieldValueException;
import org.junit.Test;

public class MonthDayLeapTest {

    @Test(expected = IllegalFieldValueException.class)
    public void testAddDaysToIsoLeapDate() {
        MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        isoLeap.plusDays(2);
    }

    @Test(expected = IllegalFieldValueException.class)
    public void testAddMonthsToIsoLeapDate() {
        MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        isoLeap.plusMonths(1);
    }

    @Test(expected = IllegalFieldValueException.class)
    public void testSubtractDayNegativeFromIsoLeapDate() {
        MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        isoLeap.minusDays(-1);
    }

    @Test
    public void testSubtractDaysFromIsoLeapDate() {
        MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        MonthDay result = isoLeap.minusDays(1).plusDays(2);
        // Expecting March 1st
        assertEquals(new MonthDay(DateTimeConstants.MARCH, 1, ISOChronology.getInstanceUTC()), result);
    }
    
    private void assertEquals(MonthDay expected, MonthDay actual) {
        if (!expected.equals(actual)) {
            throw new AssertionError("Expected: " + expected + " but was: " + actual);
        }
    }
}
