
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.util.concurrent.atomic.AtomicReference;

import static org.junit.Assert.assertEquals;

public class JavaTypeSignatureTest {

    @Test
    public void testGenericSignatureForAtomicReference() {
        // Create a JavaType for AtomicReference<String>
        JavaType type = TypeFactory.defaultInstance().constructParametricType(AtomicReference.class, String.class);
        
        // Retrieve the generic signature
        String genericSignature = type.getGenericSignature();
        
        // Expected generic signature (with correct closing '>')
        String expectedSignature = "()Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/String;>;";
        
        // Assert that the retrieved signature matches the expected one
        assertEquals(expectedSignature, genericSignature);
    }
}
