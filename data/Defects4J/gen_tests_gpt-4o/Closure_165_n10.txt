public void testIncorrectRecordTypePropertyError() {
    // Assume we have a method compileJs that simulates JavaScript compilation and checks for errors
    
    // Define the original code snippet which should properly error
    String jsCodeWithError = "/** @typedef {{name: string, id: number}} */\n" +
                             "var RecordType1;\n" +
                             "/**\n" +
                             "* @param {RecordType1} rec\n" +
                             "*/\n" +
                             "var func = function(rec) {\n" +
                             "  alert(rec.name2);\n" +
                             "};\n" +
                             "func({name: 'jim', id: 0});";

    // Define the code snippet which does not error when it should
    String jsCodeWithoutError = "/** @typedef {{name: string, id: number}} */\n" +
                                "var RecordType1;\n" +
                                "/** @typedef {{name2: string}} */\n" +
                                "var RecordType2;\n" +
                                "/**\n" +
                                "* @param {RecordType1} rec\n" +
                                "*/\n" +
                                "var func = function(rec) {\n" +
                                "  alert(rec.name2);\n" +
                                "};\n" +
                                "func({name: 'jim', id: 0});";

    // Run compilation simulation and verify that the latter code produces an error
    String errorMsg = "Property name2 never defined on rec";
    
    assertTrue(compileJs(jsCodeWithError).contains(errorMsg));
    assertFalse(compileJs(jsCodeWithoutError).contains(errorMsg));
}