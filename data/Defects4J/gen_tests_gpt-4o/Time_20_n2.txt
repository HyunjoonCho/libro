
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;
import org.junit.Test;

import java.util.Set;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class JodaDateTimeZoneTest {

    private static final DateTimeFormatter formatter = DateTimeFormat.forPattern("MM/dd/yyyy HH:mm:ss.SSS ZZZ");

    @Test
    public void testDateTimeFormatter() {
        Set<String> timeZones = DateTimeZone.getAvailableIDs();

        int numTimeZonesTested = 0;
        int numTimeZonesFailed = 0;
        int numTimeZonesException = 0;

        for (String timeZoneId : timeZones) {
            numTimeZonesTested++;
            DateTime dateTime = DateTime.now().withZone(DateTimeZone.forID(timeZoneId));
            String actualTimeZoneId = dateTime.getZone().getID();

            try {
                // Convert DateTime to string and back to DateTime
                DateTime convertedDateTime = formatter.parseDateTime(formatter.print(dateTime));

                // Check if the parsed DateTime has the expected time zone ID
                if (!dateTime.equals(convertedDateTime) || !timeZoneId.equals(actualTimeZoneId)) {
                    numTimeZonesFailed++;
                    System.out.println("Failure for time zone ID: " + timeZoneId +
                            ", constructed time zone: " + actualTimeZoneId);
                }
            } catch (IllegalArgumentException e) {
                numTimeZonesException++;
                System.out.println("Exception for time zone ID: " + timeZoneId);
            }
        }

        System.out.println("Number of Time Zones tested: " + numTimeZonesTested);
        System.out.println("Number failed: " + numTimeZonesFailed);
        System.out.println("Number exceptions: " + numTimeZonesException);

        if (numTimeZonesFailed > 0 || numTimeZonesException > 0) {
            fail("There were failures or exceptions in parsing time zones.");
        }
    }
}
