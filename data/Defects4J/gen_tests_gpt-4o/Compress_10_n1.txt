
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipFile;
import org.junit.Test;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

public class ZipFileUnicodeTest {

    @Test
    public void testUnicodeExtraFields() throws IOException {
        // Adjust the path to point to your zip file with Unicode extra fields
        File zipFile = new File("path/to/your/winzip_unicode.zip");
        try (ZipFile zf = new ZipFile(zipFile)) {
            Enumeration<ZipArchiveEntry> entries = zf.getEntries();

            while (entries.hasMoreElements()) {
                ZipArchiveEntry entry = entries.nextElement();

                // Attempt to retrieve the input stream for the entry
                InputStream is = zf.getInputStream(entry);

                // Assert that the input stream is not null, which indicates the entry is retrievable
                assertNotNull("InputStream should not be null for entry: " + entry.getName(), is);

                // Try to read at least one byte to ensure the stream is functioning
                assertTrue("Stream should return at least one byte", is.read() != -1);

                // Close the stream after check
                is.close();
            }
        }
    }
}
