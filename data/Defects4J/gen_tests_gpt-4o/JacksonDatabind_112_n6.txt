public void testStringCollectionDeserializerWithCustomCollection() throws Exception {
    ObjectMapper objectMapper = new ObjectMapper();
    
    String json = "{\"name\":\"TestObject\",\"customStrings\":[\"string1\",\"string2\"]}";
    
    TestObject result = objectMapper.readValue(json, TestObject.class);
    
    assertEquals("TestObject", result.getName());
    assertEquals(ImmutableCustomStringCollection.class, result.getCustomStrings().getClass());
    assertEquals(2, result.getCustomStrings().size());
    assertTrue(result.getCustomStrings().contains("string1"));
    assertTrue(result.getCustomStrings().contains("string2"));
}

static class TestObject {
    private String name;
    private ImmutableCustomStringCollection customStrings;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public ImmutableCustomStringCollection getCustomStrings() {
        return customStrings;
    }

    public void setCustomStrings(ImmutableCustomStringCollection customStrings) {
        this.customStrings = customStrings;
    }
}

static class ImmutableCustomStringCollection extends AbstractCollection<String> {
    private final List<String> strings;

    public ImmutableCustomStringCollection(List<String> strings) {
        this.strings = Collections.unmodifiableList(new ArrayList<>(strings));
    }

    @Override
    public Iterator<String> iterator() {
        return strings.iterator();
    }

    @Override
    public int size() {
        return strings.size();
    }
}