
import org.apache.commons.cli.*;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class ExistingFileValueTest {

    @Test
    public void testExistingFileValueOption() {
        // Create a temporary file to use for testing
        File tempFile = null;
        try {
            tempFile = File.createTempFile("test", ".txt");
            tempFile.deleteOnExit();

            // Set up the options with a FileInputStream type
            Options options = new Options();
            options.addOption(Option.builder("f").hasArg().type(FileInputStream.class).build());

            // Prepare the command line argument
            String[] args = new String[]{"-f", tempFile.getAbsolutePath()};

            // Parse the command line
            CommandLine cline = new DefaultParser().parse(options, args);

            // Attempt to get the parsed option value as a FileInputStream
            try (FileInputStream fileInputStream = (FileInputStream) cline.getParsedOptionValue("f")) {
                assertNotNull("FileInputStream should not be null", fileInputStream);
                assertTrue("File should exist", tempFile.exists());
            } catch (ClassCastException e) {
                fail("Parsed option value should be of type FileInputStream");
            }

        } catch (ParseException e) {
            fail("Parsing failed: " + e.getMessage());
        } catch (IOException e) {
            fail("IO exception: " + e.getMessage());
        } finally {
            if (tempFile != null) {
                tempFile.delete();
            }
        }
    }
}
