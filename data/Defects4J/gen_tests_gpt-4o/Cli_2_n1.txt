
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class PosixOptionParserTest {

    @Test
    public void testHyphenatedParameterValue() {
        // Define the options
        Options options = new Options();
        options.addOption(Option.builder("t")
                .hasArg()
                .desc("Test option")
                .build());

        // Create the parser
        CommandLineParser parser = new PosixParser();
        String[] args = {"-t", "-something"};

        try {
            // Parse the command line arguments
            CommandLine commandLine = parser.parse(options, args);

            // Check that '-t' option is present and its value is '-something'
            assertTrue("Option -t should be present", commandLine.hasOption("t"));
            assertEquals("The argument for -t should be '-something'", "-something", commandLine.getOptionValue("t"));

        } catch (ParseException e) {
            // If there's a parse exception, the test fails
            e.printStackTrace();
            assertTrue("ParseException was thrown", false);
        }
    }
}
