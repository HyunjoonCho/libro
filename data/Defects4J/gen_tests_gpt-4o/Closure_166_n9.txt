public void testAnonymousObjectTypeInferenceInconsistency() {
    // Initialize records to match the descriptions
    Map<String, Object> validRecord = new HashMap<>();
    validRecord.put("prop", "a");

    // Invoke both functions, expecting no errors
    func(validRecord);
    try {
        func2(validRecord);
        fail("Expected an error indicating a type mismatch, but none occurred.");
    } catch (Exception e) {
        assertTrue(e.getMessage().contains("actual parameter 1 of func2 does not match formal parameter"));
    }
}

// Placeholder methods to mimic the reported behavior
private void func(Map<String, Object> record) {
    System.out.println(record.get("prop"));
}

private void func2(Object record) {
    if (record instanceof String) {
        System.out.println((String) record);
    } else {
        Map<String, Object> recordMap = (Map<String, Object>) record;
        System.out.println(recordMap.get("prop"));
    }
}