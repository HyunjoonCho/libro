
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.junit.Test;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class RegulaFalsiSolverTest {

    @Test
    public void testBug() {
        UnivariateFunction f = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return Math.exp(x) - Math.pow(Math.PI, 3.0);
            }
        };

        UnivariateSolver solver = new RegulaFalsiSolver();
        try {
            double root = solver.solve(100, f, 1, 10);
            // If it reaches this point, the test should fail because it did not exceed the max evaluations
            fail("Expected an IllegalStateException due to maximal count exceeded.");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
            assertTrue(true); // The exception is expected, test passes
        }
    }
}
