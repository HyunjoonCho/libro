public void testGenericTypeDeserializationIssue() {
    String json = "{\"entity\": {\"type\": \"RuleformImpl\", \"value\": \"someValue\"}}";
    ObjectMapper objectMapper = new ObjectMapper();

    try {
        Something<RuleformImpl> something = objectMapper.readValue(json, new TypeReference<Something<RuleformImpl>>() {});
        assertNotNull(something.getEntity());
    } catch (Exception e) {
        fail("Deserialization of generic type failed: " + e.getMessage());
    }
}

static class Something<T extends Ruleform> {
    private T entity;

    public T getEntity() {
        return entity;
    }

    public void setEntity(T entity) {
        this.entity = entity;
    }
}

interface Ruleform {
}

static class RuleformImpl implements Ruleform {
    private String value;

    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }
}