
import static org.junit.Assert.*;

import java.io.*;

import org.junit.Test;

class Ruleform implements Serializable {
    // This class is a stub for demonstration purposes
    private String name;

    public Ruleform(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}

class Something implements Serializable {
    private Ruleform entity;

    public <T extends Ruleform> T getEntity() {
        return (T) entity;
    }

    public <T extends Ruleform> void setEntity(T entity) {
        this.entity = entity;
    }
}

public class SomethingTest {
    @Test
    public void testSerializationAndDeserialization() {
        Something original = new Something();
        original.setEntity(new Ruleform("TestEntity"));

        try {
            // Serialize the object
            ByteArrayOutputStream byteOut = new ByteArrayOutputStream();
            ObjectOutputStream out = new ObjectOutputStream(byteOut);
            out.writeObject(original);
            
            // Deserialize the object
            ByteArrayInputStream byteIn = new ByteArrayInputStream(byteOut.toByteArray());
            ObjectInputStream in = new ObjectInputStream(byteIn);
            Something deserialized = (Something) in.readObject();

            // Check if the entity has been correctly deserialized
            Ruleform deserializedEntity = deserialized.getEntity();
            assertNotNull(deserializedEntity);
            assertEquals("TestEntity", deserializedEntity.getName());
        } catch (IOException | ClassNotFoundException e) {
            fail("Serialization or deserialization failed: " + e.getMessage());
        }
    }
}
