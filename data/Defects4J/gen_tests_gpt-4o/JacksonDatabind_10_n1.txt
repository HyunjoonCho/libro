public void testJsonAnyGetterWithJsonSerialize() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    String json = mapper.writeValueAsString(new TestClass());

    assertTrue(json.contains("convertedKey"));
    assertTrue(json.contains("convertedValue"));
}

static class TestClass {
    private Map<String, String> parameters;

    public TestClass() {
        parameters = new HashMap<>();
        parameters.put("key", "value");
    }

    @JsonSerialize(converter = MyConverter.class)
    @JsonAnyGetter
    public Map<String, String> getParameters() {
        return parameters;
    }
}

static class MyConverter extends StdConverter<Map<String, String>, Map<String, String>> {
    @Override
    public Map<String, String> convert(Map<String, String> value) {
        Map<String, String> convertedMap = new HashMap<>();
        convertedMap.put("convertedKey", "convertedValue");
        return convertedMap;
    }
}