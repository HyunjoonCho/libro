
import org.apache.commons.math3.analysis.MultivariateFunction;
import org.apache.commons.math3.optim.nonlinear.scalar.GoalType;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer;
import org.apache.commons.math3.optim.PointValuePair;
import org.junit.Assert;
import org.junit.Test;

public class BOBYQAOptimizerBugTest {

    @Test(expected = IllegalArgumentException.class)
    public void testBOBYQAOptimizerWithTooManyInterpolationPoints() {
        final int dimension = 2; // Example dimension
        final MultivariateFunction function = new MultivariateFunction() {
            @Override
            public double value(double[] point) {
                // Simple quadratic function
                return Math.pow(point[0], 2) + Math.pow(point[1], 2);
            }
        };

        // Setting number of interpolation points to 2 * dim + 2, which triggers the bug.
        BOBYQAOptimizer optimizer = new BOBYQAOptimizer(2 * dimension + 2);

        double[] startPoint = {1.0, 1.0}; // Example start point
        
        PointValuePair optimum = optimizer.optimize(
            1000,                       // Max evaluations
            function,                   // Objective function
            GoalType.MINIMIZE,          // Goal: minimize the function
            startPoint                  // Initial guess
        );

        // Check result; we expect exception due to bug, if exception is not thrown, the test should fail
        Assert.fail("Expected IllegalArgumentException was not thrown");
    }
}
