
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertFalse;

public class JsonIncludeNonDefaultTest {

    @JsonInclude(JsonInclude.Include.NON_DEFAULT)
    static class TestClass {
        private String value = null;

        // Constructors, getters and setters
        public TestClass() { }

        public String getValue() {
            return value;
        }

        public void setValue(String value) {
            this.value = value;
        }
    }

    @Test
    public void testNonDefaultIncludeForStringNull() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        TestClass testObject = new TestClass();

        String jsonResult = mapper.writeValueAsString(testObject);

        // The JSON string should not contain the field "value" since its default is null,
        // and @JsonInclude(Include.NON_DEFAULT) should suppress it.
        assertFalse(jsonResult.contains("value"), "JSON result should not contain 'value' when it is null");
    }
}
