
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import java.util.Properties;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class PropertiesCoercionTest {

    private final ObjectMapper objectMapper = new ObjectMapper();

    @Test
    public void testPropertiesValueCoercion() throws Exception {
        // Create a JSON string where Property values are not Strings
        String json = "{ \"key1\": 100, \"key2\": true, \"key3\": \"stringValue\" }";

        // Deserialize JSON to Properties
        Properties properties = objectMapper.readValue(json, Properties.class);

        // Verify that all keys have String values instead of other types
        assertTrue(properties.get("key1") instanceof String);
        assertTrue(properties.get("key2") instanceof String);
        assertTrue(properties.get("key3") instanceof String);

        // Check if the values are expected as they are coerced to strings
        assertEquals("100", properties.getProperty("key1"));
        assertEquals("true", properties.getProperty("key2"));
        assertEquals("stringValue", properties.getProperty("key3"));
    }
}
