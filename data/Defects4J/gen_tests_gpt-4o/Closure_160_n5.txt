
import org.junit.Test;
import java.io.BufferedReader;
import java.io.InputStreamReader;

import static org.junit.Assert.assertTrue;

public class CompilerDiagnosticsTest {

    @Test
    public void testCheckVarsWarningNotTriggered() throws Exception {
        String warningLevelVerboseOutput = runCompilerWithFlags("--warning_level VERBOSE");
        String checkVarsOutput = runCompilerWithFlags("--jscomp_warning checkVars");
        String undefinedVarsOutput = runCompilerWithFlags("--jscomp_warning undefinedVars");

        // Expect verbose warning output to contain "variable foo is undefined"
        assertTrue(warningLevelVerboseOutput.contains("variable foo is undefined"));

        // Expect checkVars and undefinedVars output not to contain "variable foo is undefined"
        // This is the bug: these do not trigger a warning as expected based on the bug report.
        assertTrue("Expected checkVars not to trigger an undefined variable warning",
                   !checkVarsOutput.contains("variable foo is undefined"));
        assertTrue("Expected undefinedVars not to trigger an undefined variable warning",
                   !undefinedVarsOutput.contains("variable foo is undefined"));
    }

    private String runCompilerWithFlags(String flags) throws Exception {
        ProcessBuilder builder = new ProcessBuilder("java", "-jar", "compiler.jar", "--js", "test.js", flags);
        builder.redirectErrorStream(true);
        Process process = builder.start();
        StringBuilder output = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {
            String line;
            while ((line = reader.readLine()) != null) {
                output.append(line).append("\n");
            }
        }
        return output.toString();
    }
}
