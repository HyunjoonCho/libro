
import static org.junit.Assert.assertEquals;

import org.joda.time.DateTime;
import org.joda.time.DurationFieldType;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.junit.Test;

public class PeriodTypeTest {

    @Test(expected = UnsupportedOperationException.class)
    public void testPeriodWithoutYearThrowsException() {
        // Initialize start and end dates
        DateTime startDate = new DateTime(2020, 1, 1, 0, 0);
        DateTime endDate = new DateTime(2021, 1, 1, 0, 0);
        
        // Attempt to create a Period using a custom PeriodType without the 'year' field
        PeriodType customPeriodType = PeriodType.forFields(new DurationFieldType[] {
            DurationFieldType.months(),
            DurationFieldType.weeks()
        });
        
        Period period = new Period(startDate, endDate, customPeriodType);
        // Normalize the period using the same custom PeriodType
        period.normalizedStandard(customPeriodType);
        
        // This should not happen; expect an exception instead
        assertEquals(12, period.getMonths());
    }
}
