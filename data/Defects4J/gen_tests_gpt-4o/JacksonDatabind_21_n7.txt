
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class EnumSerializationTest {

    public enum TestEnum {
        @JsonProperty("value1")
        VALUE_ONE("value1");

        private final String valueInJson;

        TestEnum(String valueInJson) {
            this.valueInJson = valueInJson;
        }

        @JsonCreator
        public static TestEnum getEnumFromValue(String value) {
            for (TestEnum testEnum : values()) {
                if (testEnum.valueInJson.equals(value)) {
                    return testEnum;
                }
            }
            throw new IllegalArgumentException();
        }
    }

    @Test
    public void testEnumDeserialization() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        String json = "\"value1\"";

        // Deserialize from JSON
        TestEnum result = objectMapper.readValue(json, TestEnum.class);
        assertEquals(TestEnum.VALUE_ONE, result, "Deserialization of ENUM failed");
    }

    @Test
    public void testEnumSerialization() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        
        // Serialize to JSON
        String json = objectMapper.writeValueAsString(TestEnum.VALUE_ONE);
        assertEquals("\"value1\"", json, "Serialization of ENUM failed");
    }
}
