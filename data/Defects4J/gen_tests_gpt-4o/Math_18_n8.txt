public void testCMAESOptimizerBoundsFitting() {
    CMAESOptimizer optimizer = new CMAESOptimizer(
            10000, 
            0, 
            true, 
            0, 
            0, 
            RandomSource.create(),
            false,
            new SimpleBounds(new double[]{0.0, 0.0}, new double[]{10.0, 10.0})
    );

    MultivariateFunction function = point -> -Math.pow(point[0] - 5, 2) - Math.pow(point[1] - 5, 2);

    PointValuePair result = optimizer.optimize(
            new MaxEval(1000),
            new ObjectiveFunction(function),
            new InitialGuess(new double[]{5.0, 5.0}),
            GoalType.MAXIMIZE,
            new SimpleBounds(new double[]{0.0, 0.0}, new double[]{10.0, 10.0})
    );

    double[] point = result.getPoint();
    assertTrue("Near lower bound", Math.abs(point[0] - 0) < 1e-3 && Math.abs(point[1] - 0) < 1e-3);
    assertFalse("Near upper bound", Math.abs(point[0] - 10) < 1e-3 || Math.abs(point[1] - 10) < 1e-3);
}