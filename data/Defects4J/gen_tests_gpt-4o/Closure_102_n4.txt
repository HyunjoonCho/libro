
import static org.junit.Assert.assertEquals;
import com.google.javascript.jscomp.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.rhino.Node;
import org.junit.Test;

public class CompilerTest {

    @Test
    public void testShadowingArguments() {
        // Prepare the compiler and compiler options
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Source code with shadowing of 'arguments'
        String originalCode = "function name() { var arguments = Array.prototype.slice.call(arguments, 0); }";

        // Expected result: should not incorrectly transform the usage of 'arguments'
        String expectedCode = "function name(){var arguments=Array.prototype.slice.call(arguments,0);}";

        // Compile the code
        SourceFile input = SourceFile.fromCode("input.js", originalCode);
        compiler.compile(SourceFile.fromCode("externs.js", ""), input, options);

        // Get the compiled code
        Node root = compiler.getJsRoot();
        String outputCode = compiler.toSource();
        
        // Check if the compiled code is as expected
        assertEquals(expectedCode.replaceAll("[\\n\\r]", ""), outputCode.replaceAll("[\\n\\r]", ""));
    }
}
