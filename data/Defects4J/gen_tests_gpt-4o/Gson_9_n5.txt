
import static org.junit.Assert.*;
import org.junit.Test;

public class ValueMethodTest {

    // Assuming this is the class being tested with overloaded value methods
    public static class ExampleClass {
        public Object value(boolean bool) {
            // Original implementation that causes NullPointerException when null is passed
            // This is a simulated placeholder for demonstration
            return bool ? "True" : "False";
        }

        public Object value(Number num) {
            // Placeholder method for numbers
            return num != null ? num.toString() : "Null";
        }

        // Hypothetical fix this bug report suggests to add
        public Object value(Boolean bool) {
            // Fix implementation that safely handles null
            return bool != null ? value(bool.booleanValue()) : "Null";
        }
    }

    @Test
    public void testBooleanNullPointerException() {
        ExampleClass example = new ExampleClass();

        Boolean nullBoolean = null;
        try {
            // This should safely return "Null" instead of throwing an NPE
            Object result = example.value(nullBoolean);
            assertEquals("Null", result);
        } catch (NullPointerException e) {
            fail("Unexpected NullPointerException for null Boolean input.");
        }
    }
}
