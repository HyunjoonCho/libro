script
// Assuming goog.isArray is defined elsewhere in the codebase, as in the Closure Library
var goog = goog || {};
goog.isArray = function(value) {
    return Object.prototype.toString.call(value) === '[object Array]';
};

/**
 * @param {*} object
 * @return {*}
 */
var test = function(object) {
    if (goog.isArray(object)) {
        /** @type {Array} */ var x = object;
        return x;
    }
};

// Test function to trigger the error in advanced optimizations
function runTest() {
    var arr = [1, 2, 3];
    var result = test(arr);
    console.log(result);
}

// In a real scenario, the Closure Compiler would be used with ADVANCED_OPTIMIZATIONS
// to compile this code and the error would be triggered there.
runTest();
