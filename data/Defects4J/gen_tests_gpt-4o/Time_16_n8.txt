
import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormat;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DateTimeFormatterTest {

    @Test
    public void testParseIntoWithoutYear() {
        // Given a starting instant with a specific year
        DateTime startingInstant = new DateTime(2023, 3, 15, 0, 0);

        // Create a formatter without a year in the pattern
        DateTimeFormatter formatter = DateTimeFormat.forPattern("MM-dd HH:mm");

        // Parse into the starting instant, expecting it to keep the original year
        int parseYear = formatter.parseInto(startingInstant.toMutableDateTime(), "03-15 14:00", 0);

        DateTime parsedDate = startingInstant.withYear(parseYear);

        // Verify that the parsed date's year is the same as the starting instant's year
        assertEquals(2023, parsedDate.getYear());
        assertEquals(3, parsedDate.getMonthOfYear());
        assertEquals(15, parsedDate.getDayOfMonth());
        assertEquals(14, parsedDate.getHourOfDay());
        assertEquals(0, parsedDate.getMinuteOfHour());
    }
}
