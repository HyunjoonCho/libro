
import org.apache.commons.compress.compressors.CompressorException;
import org.apache.commons.compress.compressors.CompressorInputStream;
import org.apache.commons.compress.compressors.CompressorStreamFactory;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

import static org.junit.Assert.fail;

public class CompressorStreamFactoryTest {

    @Test
    public void testDeflateWithZlibHeader() {
        try {
            // Load the test file with deflate compression and zlib header
            try (InputStream in = new FileInputStream("path/to/bla.tar.deflatez")) {
                // Try to create a compressor input stream
                CompressorInputStream compressorInputStream = 
                        new CompressorStreamFactory().createCompressorInputStream(in);
                // If we reach this point, the file was incorrectly identified
                fail("Expected CompressorException due to unsupported stream signature.");
            }
        } catch (CompressorException e) {
            // Expected this exception due to missing support for zlib header streams
            System.out.println("Caught expected CompressorException: " + e.getMessage());
        } catch (IOException e) {
            fail("Unexpected IOException: " + e.getMessage());
        }
    }
}
