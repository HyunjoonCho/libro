script
function testBreakInFinally() {
  let caught = false;
  let succeeded = false;

  b: try {
    throw new Error("throw me");
  } finally {
    // Fake catcher
    succeeded = true;
    break b;
  }

  if (succeeded) {
    console.log("ok then...");
  }

  // Assert that the block finishes with the success state
  if (!succeeded) {
    console.error("Test failed: 'succeeded' was not set to true as expected.");
  } else {
    console.log("Test passed: The finally block's break behavior was correct.");
  }

  // Ensure the error was caught if it wasn't interrupted by the break
  try {
    throw new Error("should not reach here if break works");
  } catch (e) {
    caught = true;
  }

  if (caught) {
    console.log("Error correctly caught outside of the labeled block.");
  } else {
    console.error("Test failed: The error should have been caught, or incorrectly reached this point.");
  }
}

testBreakInFinally();
