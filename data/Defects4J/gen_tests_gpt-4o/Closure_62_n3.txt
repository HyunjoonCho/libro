
import static org.junit.Assert.assertTrue;
import org.junit.Before;
import org.junit.Test;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class CompilerErrorOutputTest {

    private static final String TEST_JS_FILENAME = "test.js";
    private static final String COMPILER_JAR = "compiler.jar"; // Update with the actual path to the compiler jar
    
    @Before
    public void setup() throws Exception {
        createTestFile("alert(1;");
    }
    
    @Test
    public void testErrorOutputWithMissingCaret() throws Exception {
        List<String> output = runCompiler();
        assertTrue("Error message should not contain the caret",
                output.stream().anyMatch(line -> line.contains("missing ) after argument list"))
                && output.stream().noneMatch(line -> line.trim().startsWith("^")));
    }
    
    @Test
    public void testErrorOutputWithCaret() throws Exception {
        createTestFile("alert(1;\n");
        List<String> output = runCompiler();
        assertTrue("Error message should contain the caret",
                output.stream().anyMatch(line -> line.trim().startsWith("^")));
    }
    
    private void createTestFile(String content) throws Exception {
        try (FileWriter writer = new FileWriter(new File(TEST_JS_FILENAME))) {
            writer.write(content);
        }
    }
    
    private List<String> runCompiler() throws Exception {
        List<String> output = new ArrayList<>();
        Process process = new ProcessBuilder("java", "-jar", COMPILER_JAR, "--js", TEST_JS_FILENAME).start();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {
            String line;
            while ((line = reader.readLine()) != null) {
                output.add(line);
            }
        }
        process.waitFor();
        return output;
    }
}
