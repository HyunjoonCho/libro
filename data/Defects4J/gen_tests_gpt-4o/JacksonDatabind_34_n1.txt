
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.module.jsonSchema.factories.SchemaFactoryWrapper;
import com.fasterxml.jackson.module.jsonSchema.JsonSchema;
import org.junit.Test;
import java.math.BigDecimal;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class BigDecimalSchemaTest {

    public static class TestClass {
        public BigDecimal value;
    }

    @Test
    public void testBigDecimalSchemaType() {
        ObjectMapper objectMapper = new ObjectMapper();
        SchemaFactoryWrapper visitor = new SchemaFactoryWrapper();
        
        try {
            objectMapper.acceptJsonFormatVisitor(TestClass.class, visitor);
            JsonSchema schema = visitor.finalSchema();
            String schemaAsString = schema.toString();
            
            // Check if schema indicates that the type of `value` field is `number` (BigDecimal)
            assertTrue(schemaAsString.contains("\"value\":{\"type\":\"number\"}"));
        } catch (Exception e) {
            fail("Threw exception: " + e.getMessage());
        }
    }
}
