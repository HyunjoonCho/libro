
import org.apache.commons.lang3.time.FastDateParser;
import org.junit.Test;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

import static org.junit.Assert.*;

public class DateParserTest {

    @Test
    public void testWhiteSpaceHandling() {
        String pattern = "yyyy-MM-dd";
        String inputWithSingleSpace = "2023-10-15";
        String inputWithExtraSpaces = "2023-10- 15"; // Note the extra spaces

        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern, Locale.US);
        FastDateParser fastDateParser = new FastDateParser(pattern, Locale.US);

        try {
            // Parse with SimpleDateFormat
            Date expectedDate = simpleDateFormat.parse(inputWithSingleSpace);

            // This should fail for inputWithExtraSpaces because SimpleDateFormat does not handle extra spaces
            try {
                simpleDateFormat.parse(inputWithExtraSpaces);
                fail("Expected SimpleDateFormat to throw ParseException for extra spaces");
            } catch (ParseException e) {
                // Expected exception
            }

            // Parse with FastDateParser
            Date parsedDateWithFastDateParser = fastDateParser.parse(inputWithExtraSpaces);

            // FastDateParser should incorrectly parse the date with extra spaces, revealing the bug
            assertEquals("FastDateParser should handle input with single space correctly", expectedDate, fastDateParser.parse(inputWithSingleSpace));
            assertEquals("FastDateParser should not parse input with extra spaces", expectedDate, parsedDateWithFastDateParser);
        } catch (ParseException e) {
            fail("Unexpected ParseException occurred: " + e.getMessage());
        }
    }
}
