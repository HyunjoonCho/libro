
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;

import java.io.IOException;
import java.io.StringReader;

import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class CSVFormatTest {

    @Test
    public void testExcelFormatWithEmptyHeaderNames() throws IOException {
        String csvData = "A,B,C,,\na,b,c,d,e\n";
        
        CSVParser parser = CSVParser.parse(
                new StringReader(csvData),
                CSVFormat.EXCEL.withHeader()
        );

        for (CSVRecord record : parser) {
            assertEquals("a", record.get("A"));
            assertEquals("b", record.get("B"));
            assertEquals("c", record.get("C"));
            // Attempting to access a column with empty header should throw an exception
            // This part of the test verifies that these columns are effectively ignored
            try {
                record.get("");
                // If no exception is thrown, fail the test
                throw new AssertionError("Expected exception for empty header access was not thrown.");
            } catch (IllegalArgumentException expected) {
                // Expected exception
            }
        }
    }
}
