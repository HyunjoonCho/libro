public void testDefaultMockingDetailsTestShouldGetExtraInterfaces() {
    // Assuming that 'Bar' is a valid class in the test project
    Bar bar = mock(Bar.class, withSettings().extraInterfaces(List.class, Observer.class));
    MockingDetails mockingDetails = mock(Bar.class);
    assertTrue(mockingDetails.getExtraInterfaces().contains(List.class));
    assertTrue(mockingDetails.getExtraInterfaces().contains(Observer.class));
}

public void testNoJUnitDependenciesTest() {
    try {
        Class.forName("org.mockito.configuration.MockitoConfiguration");
        fail("Expected NoClassDefFoundError");
    } catch (NoClassDefFoundError e) {
        assertTrue(e.getMessage().contains("org/mockito/configuration/MockitoConfiguration"));
    }
    
    try {
        Class.forName("junit.framework.Assert");
        fail("Expected ClassNotFoundException");
    } catch (ClassNotFoundException e) {
        assertTrue(e.getMessage().contains("classes with prefix : [junit, org.junit] are excluded"));
    }
}