@Test
public void testShapeUtilitiesEqual() {
    GeneralPath path1 = new GeneralPath();
    path1.moveTo(0.0, 0.0);
    path1.lineTo(1.0, 1.0);

    GeneralPath path2 = new GeneralPath();
    path2.moveTo(0.0, 0.0);
    path2.lineTo(2.0, 2.0);

    // Even though the paths are different, due to the bug, this might incorrectly return true.
    boolean isEqual = ShapeUtilities.equal(path1, path2);

    // The expectation is that isEqual should be false since the paths define different shapes,
    // but due to the bug report, it incorrectly returns true.
    assertFalse(isEqual, "ShapeUtilities.equal should return false for different shapes.");
}