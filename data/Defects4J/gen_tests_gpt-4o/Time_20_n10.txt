public void testDateTimeWithSpecificTimeZones() {
    DateTimeFormatter formatter = DateTimeFormat.forPattern("MM/dd/yyyy HH:mm:ss.SSS ZZZ");
    Set<String> timeZones = DateTimeZone.getAvailableIDs();

    for (String timeZone : timeZones) {
        DateTime dateTime = DateTime.now().withZone(DateTimeZone.forID(timeZone));
        DateTime convertedDateTime = null;
        boolean exceptionThrown = false;

        try {
            String formattedDateTime = formatter.print(dateTime);
            convertedDateTime = formatter.parseDateTime(formattedDateTime);
        } catch (IllegalArgumentException e) {
            exceptionThrown = true;
        }

        if (exceptionThrown) {
            System.out.println("Formatter threw exception for time zone id: " + timeZone);
            fail("Exception thrown for time zone: " + timeZone);
        } else {
            String originalZoneId = dateTime.getZone().getID();
            String convertedZoneId = convertedDateTime.getZone().getID();

            if (!originalZoneId.equals(convertedZoneId)) {
                System.out.println("Formatter failed for time zone ID: " + originalZoneId + " converted it to: " + convertedZoneId);
                fail("Time zone ID changed from " + originalZoneId + " to " + convertedZoneId);
            }
        }
    }
}