
import static org.junit.Assert.*;

import java.util.Arrays;
import org.junit.Test;

public class ArrayIndexOutOfBoundsExceptionTest {

    @Test(expected = ArrayIndexOutOfBoundsException.class)
    public void testArrayIndexOutOfBoundsException() {
        // Example array with 3 elements
        int[] array = new int[]{1, 2, 3};
        
        // Accessing an invalid index (such as 3) will throw ArrayIndexOutOfBoundsException
        int value = array[3]; // This should trigger the exception
    }
    
    // Additional test to ensure the fix is correct
    @Test
    public void testSafeArrayAccess() {
        int[] array = new int[]{1, 2, 3};
        
        try {
            int value = accessArraySafely(array, 2); // Valid index
            assertEquals(3, value);
        } catch (ArrayIndexOutOfBoundsException e) {
            fail("Exception should not have been thrown for a valid index.");
        }
        
        try {
            int value = accessArraySafely(array, 3); // Invalid index
            fail("Exception should have been thrown for an invalid index.");
        } catch (ArrayIndexOutOfBoundsException e) {
            // Expected exception
        }
    }

    private int accessArraySafely(int[] array, int index) {
        if (index >= array.length || index < 0) {
            throw new ArrayIndexOutOfBoundsException("Index out of bounds: " + index);
        }
        return array[index];
    }
}
