
import org.apache.commons.lang3.time.FastDateFormat;
import org.junit.Test;
import java.util.Date;
import java.util.Locale;
import static org.junit.Assert.assertEquals;

public class FastDateFormatLocalizationTest {

    @Test
    public void testLocaleChangeAffectsFastDateFormat() {
        // Set the default locale to US
        Locale defaultLocale = Locale.getDefault();
        try {
            Locale.setDefault(Locale.US);
            
            // Get an instance of FastDateFormat using default locale
            FastDateFormat dateFormat1 = FastDateFormat.getDateInstance(FastDateFormat.SHORT);

            // Format a sample date
            Date sampleDate = new Date(0); // Epoch time 0
            String formattedDateUS = dateFormat1.format(sampleDate);

            // Change the default locale to France
            Locale.setDefault(Locale.FRANCE);

            // Get another instance of FastDateFormat using new default locale
            FastDateFormat dateFormat2 = FastDateFormat.getDateInstance(FastDateFormat.SHORT);

            // Format the sample date again
            String formattedDateFR = dateFormat2.format(sampleDate);

            // Check if both formatted dates are different, they should be if locale change was respected
            assertEquals("FastDateFormat should not use cached default locale internally ",
                formattedDateFR, formattedDateUS);
        } finally {
            // Restore the default locale to prevent side effects for other tests
            Locale.setDefault(defaultLocale);
        }
    }
}
