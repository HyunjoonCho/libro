
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;
import com.fasterxml.jackson.annotation.JsonTypeInfo.As;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonSubTypes.Type;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

// Base class
@JsonTypeInfo(use = Id.NAME, include = As.PROPERTY, property = "type")
@JsonSubTypes({
    @Type(value = JsonMapSchema.class, name = "mapSchema")
})
abstract class JsonSchema {
    public String name;
}

// Subclass that extends base class
class JsonMapSchema extends JsonSchema {
    // Additional fields could be here
}

public class JsonDeserializationTest {

    @Test
    public void testInheritedFieldDeserialization() {
        String json = "{"
                + "\"type\": \"mapSchema\","
                + "\"name\": \"FoodMart\","
                + "\"tables\": []"
                + "}";

        ObjectMapper objectMapper = new ObjectMapper();
        try {
            JsonMapSchema schema = objectMapper.readValue(json, JsonSchema.class);
            assertEquals("FoodMart", schema.name);
        } catch (UnrecognizedPropertyException e) {
            fail("Unrecognized field 'name' when deserializing JsonMapSchema: " + e.getMessage());
        } catch (Exception e) {
            fail("Unexpected exception: " + e.getMessage());
        }
    }
}
