
import org.apache.commons.lang3.math.NumberUtils;
import org.junit.Test;
import static org.junit.Assert.*;

public class NumberUtilsTest {

    @Test
    public void testCreateNumberWithLargeDecimalPrecision() {
        String largeDecimalString = "123456789.987654321";
        
        Number parsedNumber = NumberUtils.createNumber(largeDecimalString);
        
        // We expect it not to be a Float due to precision loss.
        assertFalse(parsedNumber instanceof Float);
        
        // Check if it's a Double or BigDecimal to accommodate the precision of the input.
        assertTrue(parsedNumber instanceof Double || parsedNumber instanceof java.math.BigDecimal);
        
        // Verify the exact value by parsing the string with BigDecimal and comparing.
        assertEquals(new java.math.BigDecimal(largeDecimalString), new java.math.BigDecimal(parsedNumber.toString()));
    }
}
