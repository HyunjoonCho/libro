public void testCorrelatedRandomVectorGeneratorWithZeroRowInCovarianceMatrix() {
    double[][] matrixData1 = {
        {0.0, 0.0, 0.0, 0.0, 0.0},
        {0.0, 0.013445532, 0.01039469, 0.009881156, 0.010499559},
        {0.0, 0.01039469, 0.023006616, 0.008196856, 0.010732709},
        {0.0, 0.009881156, 0.008196856, 0.019023866, 0.009210099},
        {0.0, 0.010499559, 0.010732709, 0.009210099, 0.019107243}
    };

    double[][] matrixData2 = {
        {0.013445532, 0.01039469, 0.0, 0.009881156, 0.010499559},
        {0.01039469, 0.023006616, 0.0, 0.008196856, 0.010732709},
        {0.0, 0.0, 0.0, 0.0, 0.0},
        {0.009881156, 0.008196856, 0.0, 0.019023866, 0.009210099},
        {0.010499559, 0.010732709, 0.0, 0.009210099, 0.019107243}
    };

    double[][] matrixData3 = {
        {0.013445532, 0.01039469, 0.009881156, 0.010499559},
        {0.01039469, 0.023006616, 0.008196856, 0.010732709},
        {0.009881156, 0.008196856, 0.019023866, 0.009210099},
        {0.010499559, 0.010732709, 0.009210099, 0.019107243}
    };

    testMatrix(matrixData1, 5);
    testMatrix(matrixData2, 3); // Fails due to the zero row
    testMatrix(matrixData3, 4);
}

private void testMatrix(double[][] data, int expectedRank) {
    RealMatrix covarianceMatrix = new Array2DRowRealMatrix(data);
    NormalDistribution normal = new NormalDistribution();
    CorrelatedRandomVectorGenerator generator =
            new CorrelatedRandomVectorGenerator(new double[data.length], covarianceMatrix, 1.0e-12, normal);

    assertEquals("Incorrect rank for generated root matrix",
                 expectedRank, generator.getRank());
}