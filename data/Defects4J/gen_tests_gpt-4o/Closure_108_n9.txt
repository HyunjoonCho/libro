
import static org.junit.Assert.assertThrows;

import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerInput;
import com.google.javascript.jscomp.compiler.parser.InputAstParser;
import org.junit.Test;

public class AliasTest {

    @Test
    public void testPreconditionCrashWithAliasedTypeDeclaration() {
        // JavaScript code that triggers the issue
        String jsCode = 
              "var goog = {};\n" +
              "goog.scope;\n" +
              "\n" +
              "var ns = {};\n" +
              "ns.sub = {};\n" +
              "/** @constructor */\n" +
              "ns.sub.C = function() {};\n" +
              "\n" +
              "goog.scope(function() {\n" +
              "  var sub = ns.sub;\n" +
              "  /** @type {sub.C} */\n" +
              "  var x = null;\n" +
              "});";

        // Initialize a compiler instance
        Compiler compiler = new Compiler();

        CompilerInput input = new CompilerInput(
            InputAstParser.parse(jsCode, jsCodeName)
        );

        // Expecting the process to throw an IllegalStateException
        assertThrows(IllegalStateException.class, () -> {
            compiler.process(input); // Simulating the code processing
        });
    }
}
