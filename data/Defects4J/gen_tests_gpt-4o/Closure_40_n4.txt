
import com.google.javascript.jscomp.*;

public class CompilerCrashTest {

    public void testSmartNameRemovalCompilerCrash() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        String jsCode = ""
            + "var goog = {};\n"
            + "goog.inherits = function(x, y) {};\n"
            + "var ns = {};\n"
            + "/** @constructor */ ns.PageSelectionModel = function(){};\n"
            + "/** @constructor */ ns.PageSelectionModel.FooEvent = function() {};\n"
            + "/** @constructor */ ns.PageSelectionModel.SelectEvent = function() {};\n"
            + "goog.inherits(ns.PageSelectionModel.ChangeEvent, ns.PageSelectionModel.FooEvent);\n";

        SourceFile extern = SourceFile.fromCode("externs.js", "");
        SourceFile input = SourceFile.fromCode("input.js", jsCode);

        // Compile the source code
        compiler.compile(extern, input, options);

        // Check if the compiler has encountered errors
        if (compiler.getWarningManager().getErrorCount() > 0) {
            for (JSError error : compiler.getErrors()) {
                System.out.println("Error: " + error);
            }
            fail("The compiler crashed due to an error.");
        }
    }

    private void fail(String message) {
        throw new AssertionError(message);
    }

    public static void main(String[] args) {
        CompilerCrashTest test = new CompilerCrashTest();
        test.testSmartNameRemovalCompilerCrash();
    }
}
