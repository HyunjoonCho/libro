
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.util.TokenBuffer;
import org.junit.Test;

import java.io.IOException;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;

public class JsonStreamContextDifferenceTest {

    @Test
    public void testJsonStreamContextDifference() throws IOException {
        ObjectMapper objectMapper = new ObjectMapper();

        Map<String, Object> sampleData = Map.of("key1", "value1", "key2", Map.of("nestedKey", "nestedValue"));

        // Simulate writing JSON to a string
        TokenBuffer writeTokenBuffer = new TokenBuffer(objectMapper, false);
        objectMapper.writeValue(writeTokenBuffer, sampleData);
        String writeJson = writeTokenBuffer.asParser().readValueAsTree().toString();

        // Simulate converting between objects
        TokenBuffer convertTokenBuffer = new TokenBuffer(objectMapper, false);
        Map<String, Object> convertedData = objectMapper.convertValue(sampleData, Map.class);

        objectMapper.writeValue(convertTokenBuffer, convertedData);
        String convertJson = convertTokenBuffer.asParser().readValueAsTree().toString();

        // Now compare the json outputs
        assertEquals(writeJson, convertJson);

        // Check if token buffer's tokens are different in both scenarios
        assertNotEquals(writeTokenBuffer.toString(), convertTokenBuffer.toString());
    }
}
