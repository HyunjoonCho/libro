
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.CategoryDataset;
import org.junit.Test;

import static org.junit.Assert.*;

public class MultiplePiePlotTest {

    @Test
    public void testDatasetListenerAttachedInConstructor() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        MultiplePiePlot plot = new MultiplePiePlot(dataset);

        // Define a flag to track changes
        final boolean[] changeDetected = {false};

        // Add a listener to the dataset to update the flag if a change is detected
        dataset.addChangeListener(event -> changeDetected[0] = true);

        // Modify the dataset
        dataset.addValue(1.0, "Row1", "Column1");

        // Assert that a change was detected
        assertTrue("Listener should detect changes to the dataset", changeDetected[0]);
    }

    @Test
    public void testDatasetListenerAttachedInSetDataset() {
        MultiplePiePlot plot = new MultiplePiePlot(null);
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        plot.setDataset(dataset);

        // Define a flag to track changes
        final boolean[] changeDetected = {false};

        // Add a listener to the dataset to update the flag if a change is detected
        dataset.addChangeListener(event -> changeDetected[0] = true);

        // Modify the dataset
        dataset.addValue(1.0, "Row1", "Column1");

        // Assert that a change was detected
        assertTrue("Listener should detect changes to the dataset", changeDetected[0]);
    }
}
