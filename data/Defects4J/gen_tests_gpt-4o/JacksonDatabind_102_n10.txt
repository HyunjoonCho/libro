
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectWriter;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.ser.std.SqlDateSerializer;
import org.junit.Test;

import java.sql.Date;
import java.text.SimpleDateFormat;

import static org.junit.Assert.assertEquals;

public class SqlDateFormatTest {

    @Test
    public void testCustomSqlDateFormat() throws Exception {
        // Create ObjectMapper and configure custom date format for java.sql.Date
        final ObjectMapper mapper = new ObjectMapper();
        mapper.configOverride(java.sql.Date.class).setFormat(JsonFormat.Value.forPattern("yyyy-MM-dd"));

        // Serialize a sample java.sql.Date
        java.sql.Date sqlDate = Date.valueOf("2023-10-10");
        String expectedDateAsString = "\"2023-10-10\"";

        ObjectWriter writer = mapper.writer();
        String result = writer.writeValueAsString(sqlDate);

        // Assert whether the output matches the expected string format
        assertEquals(expectedDateAsString, result);
    }

    @Test
    public void testCustomSqlDateFormatWithSimpleModule() throws Exception {
        // Create ObjectMapper and use SimpleModule to register a custom SqlDateSerializer
        final ObjectMapper mapper = new ObjectMapper().disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);
        mapper.registerModule(new SimpleModule() {
            {
                addSerializer(
                        java.sql.Date.class,
                        new SqlDateSerializer().withFormat(false, new SimpleDateFormat("yyyy-MM-dd"))
                );
            }
        });

        // Serialize a sample java.sql.Date
        java.sql.Date sqlDate = Date.valueOf("2023-10-10");
        String expectedDateAsString = "\"2023-10-10\"";

        ObjectWriter writer = mapper.writer();
        String result = writer.writeValueAsString(sqlDate);

        // Assert whether the output matches the expected string format
        assertEquals(expectedDateAsString, result);
    }
}
