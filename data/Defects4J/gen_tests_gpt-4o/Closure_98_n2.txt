public void testBadVariableInliningInClosure() throws InterruptedException {
    // Use JavaScript Nashorn engine to simulate the JavaScript execution
    ScriptEngineManager manager = new ScriptEngineManager();
    ScriptEngine engine = manager.getEngineByName("nashorn");

    String script = ""
        + "function foo() {"
        + " var arr = [1, 2, 3, 4, 5];"
        + " for (var i = 0, l = arr.length; i < l; i++) {"
        + " var j = arr[i];"
        + " (function() {"
        + " var k = j;"
        + " setTimeout(function() { console.log(k); }, 0);"
        + " })();"
        + " }"
        + "}"
        + "foo();";

    // Define a custom output stream to capture console output
    ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    PrintStream originalOut = System.out;
    System.setOut(new PrintStream(outContent));

    // Execute the script
    try {
        engine.eval(script);
    } catch (ScriptException e) {
        throw new RuntimeException("Script execution failed", e);
    }

    // Restore the original System.out
    System.setOut(originalOut);

    // Allow time for setTimeout to execute (simulation)
    Thread.sleep(100);

    // Verify if the expected output matches the captured output
    String expectedOutput = "1\n2\n3\n4\n5\n";
    assertEquals(expectedOutput, outContent.toString().replace("\r", ""));
}