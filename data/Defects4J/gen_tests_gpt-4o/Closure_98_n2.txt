
import org.junit.Test;
import static org.junit.Assert.*;

public class ClosureCompilerInliningTest {

    @Test
    public void testVariableInliningInClosure() {
        final StringBuilder sb = new StringBuilder();

        // Redefine 'console.log' to capture the output in 'sb'
        System.setOut(new java.io.PrintStream(new java.io.OutputStream() {
            @Override
            public void write(int b) {
                sb.append((char) b);
            }
        }));

        // Run the function 'foo'
        foo();

        // Restore the original 'System.out'
        System.setOut(new java.io.PrintStream(new java.io.FileOutputStream(java.io.FileDescriptor.out)));

        // Expected output: each number 1 through 5 should be logged separately
        assertEquals("12345", sb.toString().replaceAll("[\\r\\n]+", ""));
    }

    // Original function 'foo'
    public void foo() {
        var arr = new int[]{1, 2, 3, 4, 5};
        for (var i = 0, l = arr.length; i < l; i++) {
            var j = arr[i];
            (function(j) {
                var k = j;
                setTimeout(new Runnable() {
                    @Override
                    public void run() {
                        System.out.println(k);
                    }
                }, 0);
            })(j);
        }
    }

    // Mock 'setTimeout' for testing purposes
    public static void setTimeout(Runnable runnable, int delay) {
        runnable.run();
    }
}
