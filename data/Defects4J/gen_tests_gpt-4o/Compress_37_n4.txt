
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;

public class TarArchiveInputStreamTest {

    @Test(expected = NegativeArraySizeException.class)
    public void testPaxHeadersWithEmptyLine() throws IOException {
        // This header simulates the scenario with an empty line at the end
        String paxHeaders = "25 path=example/path/to/file\n" + 
                            "8 uid=1000\n" +
                            "\n"; // Empty line at the end

        // Create a ByteArrayInputStream from the simulated PAX headers
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(paxHeaders.getBytes());

        // Create a TarArchiveInputStream with the crafted PAX headers
        try (TarArchiveInputStream tarInput = new TarArchiveInputStream(byteArrayInputStream)) {
            // Attempt to parse PAX headers, expecting a NegativeArraySizeException
            tarInput.getNextTarEntry();
        }
    }
}
