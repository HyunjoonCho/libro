
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class HtmlParsingTest {

    @Test
    public void testScriptTagParsingWithInnerTags() {
        String html = "<HTML>\n" +
                      "<body>\n" +
                      " <div class=vsc sig=Uga>\n" +
                      "  <div class=before></div>\n" +
                      "  <script type=\"text/javascript\">\n" +
                      "   header = jQuery('#header\\_features');\n" +
                      "   if(header.length){\n" +
                      "    header\n" +
                      "     .prepend('<a class=\"prevPage browse left \" />')\n" +
                      "     .append('<a class=\"nextPage browse right\" />');\n" +
                      "\n" +
                      "    items\n" +
                      "     .wrapAll('<div class=\"scrollable\"/>')\n" +
                      "     .wrapAll('<ul class=\"items\"/>')\n" +
                      "     .wrap('<li/>');\n" +
                      "   }\n" +
                      "   </script>\n" +
                      "   <div class=after></div>\n" +
                      " </div>\n" +
                      "</body>\n" +
                      "</HTML>";

        Document document = Jsoup.parse(html);
        Elements scripts = document.select("script");

        // Check if there's at least one script element 
        assertTrue("Script tag should be present", scripts.size() > 0);

        // Ensure that the script content is not converted to elements inside the script tag improperly
        Element script = scripts.first();
        String scriptContent = script.data();

        // Verify the presence of script example content in its raw form
        assertTrue("Script content should not be altered/interpreted as HTML tags",
                   scriptContent.contains("'<a class=\"prevPage browse left \" />'") &&
                   scriptContent.contains("'.wrapAll('<ul class=\"items\"/>')'"));
    }
}
