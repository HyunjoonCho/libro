
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;

public class ClosureCompilerTest {

    @Test
    public void testDefineAnnotationWithLineSplitting() {
        String jsCode = "/** @define {string} */\n" +
                        "var CONSTANT = \"some very long string name that I want to wrap \" +\n" +
                        " \"and so break using a + since I don't want to \" +\n" +
                        " \"introduce a newline into the string.\"";

        CompilerOptions options = new CompilerOptions();
        // Enable closure compiler options as needed

        Compiler compiler = new Compiler();
        SourceFile input = SourceFile.fromCode("test.js", jsCode);
        Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), input, options);

        // Check if the compilation result has errors
        assertEquals(0, result.errors.length);
    }

}
