public void testAnonymousObjectTypeInference() {
    try {
        Class<?>[] parameterTypes = new Class<?>[]{String.class, Integer.class};
        java.lang.reflect.Constructor<?> constructor = callz.class.getConstructor(parameterTypes);
        Object[] constructorArgs = new Object[]{"hi", null};
        Object obj = constructor.newInstance(constructorArgs);
        fail("Expected IllegalArgumentException for missing 'prop2' parameter.");
    } catch (NoSuchMethodException | InstantiationException | IllegalAccessException ex) {
        fail("Unexpected exception: " + ex.getMessage());
    } catch (java.lang.reflect.InvocationTargetException ex) {
        Throwable cause = ex.getCause();
        assertTrue(cause instanceof IllegalArgumentException);
        assertEquals("Required argument 'prop2' is missing", cause.getMessage());
    }
}