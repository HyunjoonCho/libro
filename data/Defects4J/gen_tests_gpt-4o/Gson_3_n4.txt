
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import org.junit.Test;

import java.util.concurrent.ConcurrentNavigableMap;
import java.util.concurrent.ConcurrentSkipListMap;

import static org.junit.Assert.*;

public class GsonConcurrentNavigableMapTest {

    static class MyPojo {
        private ConcurrentNavigableMap<String, String> mapField;

        public MyPojo(ConcurrentNavigableMap<String, String> mapField) {
            this.mapField = mapField;
        }

        public ConcurrentNavigableMap<String, String> getMapField() {
            return mapField;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;
            MyPojo myPojo = (MyPojo) o;
            return mapField.equals(myPojo.mapField);
        }
    }

    @Test
    public void testConcurrentNavigableMapSerialization() {
        // Create a POJO with a ConcurrentNavigableMap field
        ConcurrentNavigableMap<String, String> originalMap = new ConcurrentSkipListMap<>();
        originalMap.put("key1", "value1");
        originalMap.put("key2", "value2");
        
        MyPojo originalPojo = new MyPojo(originalMap);

        // Serialize the POJO to a JSON string
        Gson gson = new GsonBuilder().create();
        String json = gson.toJson(originalPojo);

        // Deserialize the JSON string back to a POJO
        MyPojo deserializedPojo = gson.fromJson(json, MyPojo.class);

        // Verify that the deserialized POJO matches the original POJO
        assertEquals(originalPojo, deserializedPojo);
    }
}
