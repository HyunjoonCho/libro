
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.junit.Test;

import static org.junit.Assert.assertNull;

public class SiblingElementTest {

    @Test
    public void testSiblingMethodsWithoutParent() {
        // Create an element with no parent
        Node node = new Element("div");
        
        // Cast Node to Element, assuming siblingElements is a method in Element type
        Element element = (Element) node;

        // Test nextSibling
        try {
            assertNull("Next sibling should be null for an element without a parent.", element.nextSibling());
        } catch (NullPointerException e) {
            throw new AssertionError("nextSibling threw NullPointerException for an element without a parent.");
        }

        // Test previousSibling
        try {
            assertNull("Previous sibling should be null for an element without a parent.", element.previousSibling());
        } catch (NullPointerException e) {
            throw new AssertionError("previousSibling threw NullPointerException for an element without a parent.");
        }

        // Test siblingElements
        try {
            assertTrue("Sibling elements should be empty for an element without a parent.", element.siblingElements().isEmpty());
        } catch (NullPointerException e) {
            throw new AssertionError("siblingElements threw NullPointerException for an element without a parent.");
        }
    }
}
