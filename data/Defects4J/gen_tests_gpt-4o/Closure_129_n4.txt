script
// Import required modules for testing Closure Compiler
const path = require('path');
const fs = require('fs');
const { compile } = require('google-closure-compiler-js');

// Test case to reproduce the bug #107
function testCastingFunctionBeforeCalling() {
    const sourceCode = `
        console.log(/** @type {function(!string):!string} */ 
          ((new window.ActiveXObject('ShockwaveFlash.ShockwaveFlash'))['GetVariable'])('$version'));
    `;

    // Compile code with ADVANCED_OPTIMIZATIONS
    const compilerFlags = {
        languageIn: 'ECMASCRIPT5',
        languageOut: 'ECMASCRIPT5',
        compilationLevel: 'ADVANCED',
        jsCode: [{ src: sourceCode }]
    };

    const output = compile(compilerFlags);

    // Normal output expected (without the additional (0, ...))
    const expectedOutput = `'use strict';console.log((new window.ActiveXObject("ShockwaveFlash.ShockwaveFlash")).GetVariable("$version"));`;

    // Debugging output to log compiled code
    console.log('Compiled Output:', output.compiledCode);

    // Check if the expected and actual compilation outputs match
    if (output.compiledCode !== expectedOutput) {
        throw new Error('Test failed: Function casting bug is present.');
    } else {
        console.log('Test passed: No incorrect casting and function wrapping.');
    }
}

// Simulate running the test case
try {
    testCastingFunctionBeforeCalling();
} catch (error) {
    console.error(error.message);
}
