public void testCustomSerializerNotUsedWithJsonValue() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(CustomClass.class, new CustomClassSerializer());
    mapper.registerModule(module);
    
    String result = mapper.writeValueAsString(new CustomClass(10));
    
    assertEquals("\"custom-10\"", result);
}

@JsonSerialize(using = CustomClassSerializer.class)
public static class CustomClass {
    private final int value;

    public CustomClass(int value) {
        this.value = value;
    }

    @JsonValue
    public int getValue() {
        return value;
    }
}

public static class CustomClassSerializer extends JsonSerializer<CustomClass> {
    @Override
    public void serialize(CustomClass value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        gen.writeString("custom-" + value.getValue());
    }
}