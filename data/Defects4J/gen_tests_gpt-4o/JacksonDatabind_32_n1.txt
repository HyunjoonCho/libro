
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.fail;

public class DeserializationBugTest {

    static class SomeObjectThatCanBeAggregated {
        @JsonCreator
        public SomeObjectThatCanBeAggregated(Object obj) {
            System.out.println(obj + " //" + obj.getClass());
        }
    }

    @Test
    public void testDeserializationFromEmptyObject() {
        ObjectMapper mapper = new ObjectMapper();

        try {
            mapper.readValue("[]", SomeObjectThatCanBeAggregated.class);
            mapper.readValue("[{}]", SomeObjectThatCanBeAggregated.class);
            mapper.readValue("{\"key\":null}", SomeObjectThatCanBeAggregated.class);

            // This is where the exception is expected to occur
            mapper.readValue("{}", SomeObjectThatCanBeAggregated.class);
            fail("Expected a JsonMappingException to be thrown");
        } catch (JsonMappingException e) {
            // This exception is expected due to the issue in deserializing "{}"
            System.out.println("Exception caught as expected: " + e.getMessage());
        } catch (IOException e) {
            // Other IOExceptions are not expected
            fail("Unexpected IOException: " + e.getMessage());
        }
    }
}
