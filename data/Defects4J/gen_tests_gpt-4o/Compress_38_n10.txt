public void testPaxHeaderWithTrailingSlash() throws IOException {
    // Create a byte array representing a TAR file containing a PAX header with a trailing slash
    byte[] tarData = {
        /* Tar header indicating PAX extended header: */
        'e', 'x', 't', 'e', 'n', 'd', 'e', 'd', '/', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
        ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
        ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
        ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
        ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
        ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'x', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
        ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
        ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
        ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
        ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' // fill the rest with spaces
    };

    try (ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(tarData);
         TarArchiveInputStream tarArchiveInputStream = new TarArchiveInputStream(byteArrayInputStream)) {
        
        TarArchiveEntry entry = (TarArchiveEntry) tarArchiveInputStream.getNextEntry();
        assertNotNull("PAX header entry should not be null", entry);
        assertTrue("Entry should be a PAX header", entry.isPaxHeader());
        assertFalse("Entry should not be considered a directory", entry.isDirectory());
    } catch (Exception e) {
        fail("Test encountered an unexpected exception: " + e.getMessage());
    }
}