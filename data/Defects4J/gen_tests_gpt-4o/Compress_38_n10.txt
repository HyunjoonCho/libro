
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;

import static org.junit.Assert.assertFalse;

public class TarArchiveEntryTest {

    @Test
    public void testPaxHeaderEntryNameEndingWithSlash() throws IOException {
        // Create a tar entry with a PAX header and name ending with "/"
        String paxHeaderName = "paxheader/";
        TarArchiveEntry paxHeaderEntry = new TarArchiveEntry(paxHeaderName, TarArchiveEntry.LF_PAX_EXTENDED_HEADER_LC);

        // Create a buffer to simulate a tar file input stream
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        try (OutputStream out = byteArrayOutputStream) {
            paxHeaderEntry.writeEntryHeader(out);
        }

        byte[] tarContent = byteArrayOutputStream.toByteArray();
        try (ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(tarContent);
             TarArchiveInputStream tarInputStream = new TarArchiveInputStream(byteArrayInputStream)) {

            TarArchiveEntry entry = tarInputStream.getNextTarEntry();
            if (entry != null && entry.isPaxHeader()) {
                // Verify the issue: The entry should not be considered a directory
                // as it is a PAX header despite ending with "/"
                assertFalse("PAX header should not be a directory", entry.isDirectory());
            }
        }
    }
}
