
import static org.junit.Assert.assertThrows;

import com.google.javascript.jscomp.CommandLineRunner;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

public class ClosureCompilerTest {
    
    @Test
    public void testStackOverflowError() {
        // Replace this string with the content of AdMedia.eam.js that caused the StackOverflowError
        String problematicJsCode = "var a = function() { var b = function() { /* ... recursive code ... */ }; b(); }; a();";
        
        // Set up the Compiler with the problematic JS code.
        String[] args = new String[]{
            "--js", "/path/to/AdMedia.eam.js",  // Change this to the path where you save AdMedia.eam.js
            "--js_output_file", "/path/to/AdMedia.eam.min.js" // Change this to desired output path
        };
        
        // Create a new CommandLineRunner instance
        CommandLineRunner runner = new CommandLineRunner(args);
        
        // Capture the System.err output to detect the StackOverflowError
        ByteArrayOutputStream errContent = new ByteArrayOutputStream();
        PrintStream originalErr = System.err;
        System.setErr(new PrintStream(errContent));

        try {
            Exception exception = assertThrows(RuntimeException.class, () -> {
                // This should cause StackOverflowError
                runner.run();
            });

            // Ensure that the exception or its cause is a StackOverflowError
            assert exception.getCause() instanceof StackOverflowError;
        } finally {
            System.setErr(originalErr);
        }
    }
}
