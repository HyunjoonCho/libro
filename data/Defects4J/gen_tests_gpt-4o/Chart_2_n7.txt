
import static org.junit.Assert.assertEquals;

import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DatasetUtilities;
import org.junit.Test;

public class DatasetUtilitiesTest {

    @Test
    public void testIterateRangeBounds() {
        // Create a sample dataset
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.addValue(1.0, "Row1", "Column1");
        dataset.addValue(3.0, "Row1", "Column2");
        dataset.addValue(5.0, "Row1", "Column3");

        // Adding a negative case if relevant
        dataset.addValue(-2.0, "Row1", "Column4");
        
        // Calculate the range bounds
        Range range = DatasetUtilities.iterateRangeBounds(dataset);

        // This expects the calculation to handle negative and positive values correctly
        // Depending on the bug specifics, the expected result might need adjustment
        assertEquals("Unexpected lower bound of range", -2.0, range.getLowerBound(), 0.0000001);
        assertEquals("Unexpected upper bound of range", 5.0, range.getUpperBound(), 0.0000001);
    }
}
