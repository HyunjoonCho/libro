
import org.apache.commons.math3.stat.inference.ChiSquareTest;
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class ChiSquareTestBugReproduction {

    @Test
    public void testChiSquareRescaleExpectedValues() {
        ChiSquareTest testStatistic = new ChiSquareTest();
        
        long[] observed = { 500, 623, 72, 70, 31 };
        double[] expected = { 485, 541, 82, 61, 37 };
        
        // Calculate the sum of observed values
        long sumObserved = 0;
        for (long value : observed) {
            sumObserved += value;
        }
        
        // Calculate the sum of expected values
        double sumExpected = 0;
        for (double value : expected) {
            sumExpected += value;
        }
        
        // Scale the expected values so they sum up to the sum of observed values
        double scale = (double) sumObserved / sumExpected;
        double[] rescaledExpected = new double[expected.length];
        for (int i = 0; i < expected.length; i++) {
            rescaledExpected[i] = expected[i] * scale;
        }
        
        // Perform the chi-square test
        double chiSquareValue = testStatistic.chiSquare(rescaledExpected, observed);
        assertEquals("chi-square test statistic", 9.0233, chiSquareValue, 1E-4);
        
        double pValue = testStatistic.chiSquareTest(rescaledExpected, observed);
        assertEquals("chi-square p-value", 0.06052, pValue, 1E-5);
    }
}
