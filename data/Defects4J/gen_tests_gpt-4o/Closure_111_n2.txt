script
/**
 * Test case to reproduce the issue with goog.isArray not providing proper type hinting for Closure Compiler.
 */
public void testGoogIsArrayNotHintingCompiler() {
    // This function uses goog.isArray to type check the object
    // The issue is that the compiler does not understand that object is an array after this check
    String jsSource = "/**\n" +
            " * @param {*} object\n" +
            " * @return {*}\n" +
            " */\n" +
            "var test = function(object) {\n" +
            "  if (goog.isArray(object)) {\n" +
            "    /** @type {Array} */ var x = object;\n" +
            "    return x;\n" +
            "  }\n" +
            "};";

    // Compile the JavaScript source using Closure Compiler with the ADVANCED_OPTIMIZATIONS flag
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    
    // Parse and compile the source
    SourceFile extern = SourceFile.fromCode("externs.js", "");
    SourceFile input = SourceFile.fromCode("input.js", jsSource);
    Result result = compiler.compile(extern, input, options);
    
    // Assert that the compilation should fail due to type mismatch
    assertTrue(result.errors.length > 0);
    assertTrue(result.errors[0].description.contains("initializing variable\nfound : *\nrequired: (Array|null)"));
}
