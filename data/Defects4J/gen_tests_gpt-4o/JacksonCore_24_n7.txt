
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectMapper;
import com.fasterxml.jackson.core.exc.InputCoercionException;
import org.junit.Test;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class InputCoercionExceptionTest {

    @Test(expected = InputCoercionException.class)
    public void testInputCoercionException() {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"value\": 2147483648}"; // One more than Integer.MAX_VALUE

        try {
            MyObject result = mapper.readValue(json, MyObject.class);
            fail("Expected an InputCoercionException to be thrown");
        } catch (JsonProcessingException e) {
            if (e instanceof InputCoercionException) {
                // Verify that the exception is thrown as expected
                System.out.println("Caught expected InputCoercionException: " + e.getMessage());
                throw (InputCoercionException) e;
            } else {
                fail("Expected an InputCoercionException, but got: " + e.getClass().getName());
            }
        }
    }

    // Simple class to deserialize JSON into for testing
    public static class MyObject {
        public int value;

        // constructor, getters, and setters can be added as needed
    }
}
