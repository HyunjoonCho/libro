script
// This would somewhat simulate a JavaScript "test" or observation

/**
 * Simulate analysis for parameter inference without constructor
 * @return {boolean}
 */
function testWithoutConstructor() {
    /**
     * @param {{prop1: string, prop2: (number|undefined)}} parry
     */
    function callz(parry) {
      if (parry.prop2 && parry.prop2 < 5) console.log('alright!');
      console.log(parry.prop1);
    }

    try {
        callz({prop1: 'hi'});
        return true; // Passes because it's expected to accept the input
    } catch (e) {
        return false;
    }
}

/**
 * Simulate analysis for parameter inference with constructor
 * @return {boolean}
 */
function testWithConstructor() {
    /**
     * @param {{prop1: string, prop2: (number|undefined)}} parry
     * @constructor
     */
    function callz(parry) {
      if (parry.prop2 && parry.prop2 < 5) console.log('alright!');
      console.log(parry.prop1);
    }

    try {
        new callz({prop1: 'hi'});
        return false; // Fails because it's expected to reject the input as per the bug
    } catch (e) {
        return true; // Correct rejection
    }
}

// Simulate test assertions
console.assert(testWithoutConstructor(), 'Test without constructor should pass');
console.assert(testWithConstructor(), 'Test with constructor should fail according to the bug report');
