
import org.apache.commons.math3.stat.inference.MannWhitneyUTest;
import org.junit.Test;

import static org.junit.Assert.assertFalse;

public class MannWhitneyUTestBugReproduction {

    @Test
    public void testMannWhitneyUWithLargeDataSets() {
        double[] largeDataSet1 = new double[1500];
        double[] largeDataSet2 = new double[1500];

        // Populate datasets to have a controlled large data example
        for (int i = 0; i < 1500; i++) {
            largeDataSet1[i] = Math.random() * 1000;
            largeDataSet2[i] = Math.random() * 1000 + 500; // Introduce a shift
        }

        MannWhitneyUTest mannWhitneyUTest = new MannWhitneyUTest();
        double pValue = mannWhitneyUTest.mannWhitneyUTest(largeDataSet1, largeDataSet2);

        // Assert that p-value is a valid number and not NaN or infinite
        // This does not assert the correctness of any particular p-value, just flags overflow issue
        assertFalse("P-value should not be NaN", Double.isNaN(pValue));
        assertFalse("P-value should not be infinite", Double.isInfinite(pValue));

        // Optionally: Add other checks about p-value based on expected distributions
    }
}
