
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class PosixParserTest {

    @Test
    public void testPosixParserIgnoresUnrecognizedTokensStartingWithDash() {
        Options options = new Options();
        options.addOption("a", false, "option a");

        String[] args = new String[] { "-z", "-a", "foo" };

        DefaultParser parser = new DefaultParser();

        try {
            CommandLine cmd = parser.parse(options, args, true);

            assertTrue("Option 'a' is not present", cmd.hasOption("a"));
            assertArrayEquals("Non-option arguments do not match expected", new String[] {"foo"}, cmd.getArgs());
        } catch (ParseException e) {
            fail("Parsing failed: " + e.getMessage());
        }
    }
}
