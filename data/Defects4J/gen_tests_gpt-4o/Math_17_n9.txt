
import org.apache.commons.math3.dfp.Dfp;
import org.apache.commons.math3.dfp.DfpField;
import org.junit.Test;
import static org.junit.Assert.*;

public class DfpTest {

    @Test
    public void testMultiplyWithLargeInteger() {
        DfpField field = new DfpField(10);
        Dfp dfp = field.newDfp(1234);

        try {
            // Attempt to multiply with a large integer, outside the allowed range
            Dfp result = dfp.multiply(10000);
            fail("Expected an exception due to invalid multiply operation with large integer n=10000");
        } catch (Exception e) {
            // Expected path: an exception should be thrown
            assertTrue("Exception message should indicate value limitation", 
                       e.getMessage().contains("value limitation")); // Adjust as the actual exception message
        }
    }
}
