
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class PrimitiveWrapperRefinementTest {

    static class BaseClass {
        public int value;
    }

    // Refinement class using Integer instead of int
    static class RefinementClass extends BaseClass {
        public Integer value;
    }

    @Test
    public void testPrimitiveWrapperRefinement() throws Exception {
        ObjectMapper mapper = new ObjectMapper();

        // Base case: using the base class
        BaseClass baseObj = new BaseClass();
        baseObj.value = 10;
        String baseJson = mapper.writeValueAsString(baseObj);
        BaseClass deserializedBaseObj = mapper.readValue(baseJson, BaseClass.class);
        assertEquals(10, deserializedBaseObj.value);

        // Refinement case: using the refined class
        RefinementClass refinedObj = new RefinementClass();
        refinedObj.value = 20;
        String refinedJson = mapper.writeValueAsString(refinedObj);
        RefinementClass deserializedRefinedObj = mapper.readValue(refinedJson, RefinementClass.class);
        assertEquals(Integer.valueOf(20), deserializedRefinedObj.value);
    }
}
