
import com.google.gson.stream.JsonWriter;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

import static org.junit.Assert.fail;

public class JsonWriterTest {

    @Test
    public void testWriteDoubleValueInLenientMode() {
        StringWriter stringWriter = new StringWriter();
        JsonWriter jsonWriter = new JsonWriter(stringWriter);

        // Enable lenient mode
        jsonWriter.setLenient(true);

        try {
            // Attempt to write NaN directly as a double
            jsonWriter.beginArray();
            jsonWriter.value(Double.NaN);
            jsonWriter.endArray();
            fail("Expected IllegalArgumentException for NaN in lenient mode");
        } catch (IllegalArgumentException e) {
            // Test passes because the expected exception is thrown
        } catch (IOException e) {
            fail("Unexpected IOException: " + e.getMessage());
        }

        try {
            // Attempt to write positive Infinity directly as a double
            jsonWriter.beginArray();
            jsonWriter.value(Double.POSITIVE_INFINITY);
            jsonWriter.endArray();
            fail("Expected IllegalArgumentException for Infinity in lenient mode");
        } catch (IllegalArgumentException e) {
            // Test passes because the expected exception is thrown
        } catch (IOException e) {
            fail("Unexpected IOException: " + e.getMessage());
        }
    }
}
