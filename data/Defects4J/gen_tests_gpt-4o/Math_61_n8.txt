
import org.apache.commons.math3.distribution.NormalDistribution;
import org.apache.commons.math3.distribution.PoissonDistribution;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class PoissonDistributionImplTest {

    class MyPoissonDistributionImpl extends PoissonDistribution {
        private boolean normalSetCalled = false;
        private boolean meanSetCalled = false;

        public MyPoissonDistributionImpl(double p, NormalDistribution z) {
            super(p, z);
        }

        @Override
        public void setNormal(NormalDistribution z) {
            normalSetCalled = true;
            super.setNormal(z);
        }

        @Override
        public void setMean(double p) {
            meanSetCalled = true;
            super.setMean(p);
        }

        public boolean isNormalSetCalled() {
            return normalSetCalled;
        }

        public boolean isMeanSetCalled() {
            return meanSetCalled;
        }
    }

    @Test
    public void testConstructorBehavior() {
        NormalDistribution normalDist = new NormalDistribution();
        MyPoissonDistributionImpl myPoisson = new MyPoissonDistributionImpl(2.0, normalDist);

        // Assert that the setNormal and setMean were called, demonstrating the dangerous constructor behavior
        assertEquals(true, myPoisson.isNormalSetCalled());
        assertEquals(true, myPoisson.isMeanSetCalled());
    }
}
