
import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.genetics.ElitisticListPopulation;
import org.apache.commons.math3.genetics.Chromosome;
import java.util.ArrayList;
import java.util.List;

public class ElitisticListPopulationTest {

    @Test(expected = IllegalArgumentException.class)
    public void testElitismRateConstructorNegative() {
        List<Chromosome> chromosomes = new ArrayList<>();
        // Adding check for negative elitismRate
        new ElitisticListPopulation(chromosomes, 10, -0.1);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testElitismRateConstructorAboveOne() {
        List<Chromosome> chromosomes = new ArrayList<>();
        // Adding check for elitismRate greater than one
        new ElitisticListPopulation(chromosomes, 10, 1.1);
    }

    @Test
    public void testElitismRateConstructorValid() {
        List<Chromosome> chromosomes = new ArrayList<>();
        try {
            new ElitisticListPopulation(chromosomes, 10, 0.5);
        } catch (IllegalArgumentException e) {
            fail("Elitism rate within valid range should not fail");
        }
    }
}
