
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

// Classes to reproduce the issue
public class Person {
    @JsonUnwrapped(prefix = "businessAddress.")
    public Address businessAddress;
}

public class Address {
    public String street;
    public String addon;
    public String zip = "";
    public String town;
    public String country;
}

public class CaseInsensitivePropertiesTest {
    
    @Test
    public void testJsonUnwrappedWithCaseInsensitiveProperties() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES);

        String json = "{ \"businessAddress.street\": \"123 Main St\", "
                    + "\"businessAddress.town\": \"Anytown\" }";

        Person person = mapper.readValue(json, Person.class);
        
        // Assert that deserialization works without exceptions
        assertNotNull(person.businessAddress);
        assertEquals("123 Main St", person.businessAddress.street);
        assertEquals("Anytown", person.businessAddress.town);
    }
    
    private void assertNotNull(Object obj) {
        if (obj == null) {
            throw new AssertionError("Object is null");
        }
    }

    private void assertEquals(String expected, String actual) {
        if (!expected.equals(actual)) {
            throw new AssertionError("Expected " + expected + " but got " + actual);
        }
    }
}
