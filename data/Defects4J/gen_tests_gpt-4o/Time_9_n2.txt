
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.ISODateTimeFormat;
import org.junit.Test;

public class DateTimeZoneOffsetTest {

    @Test
    public void testMaxOffsetParsing() {
        // Create a DateTimeFormatter that includes timezone offset
        DateTimeFormatter fmt = ISODateTimeFormat.dateTimeParser();
        
        // Test input with the maximum valid offset
        String validMaxOffset = "2023-09-15T15:30:00+23:59";
        
        try {
            DateTimeZone zone = fmt.withOffsetParsed().parseDateTime(validMaxOffset).getZone();
            assertEquals("+23:59", zone.getID());
        } catch (IllegalArgumentException e) {
            fail("Parsing failed for the maximum valid offset: " + e.getMessage());
        }
        
        // Test input that exceeds the maximum allowed offset
        String invalidMaxOffset = "2023-09-15T15:30:00+24:00";
        
        try {
            fmt.withOffsetParsed().parseDateTime(invalidMaxOffset);
            fail("Expected an IllegalArgumentException for offset exceeding +23:59");
        } catch (IllegalArgumentException e) {
            // Expected behavior, so test passes
        }
    }

    @Test
    public void testMinOffsetParsing() {
        // Test with the minimum valid offset
        String validMinOffset = "2023-09-15T15:30:00-23:59";
        
        try {
            DateTimeZone zone = ISODateTimeFormat.dateTimeParser()
                    .withOffsetParsed().parseDateTime(validMinOffset).getZone();
            assertEquals("-23:59", zone.getID());
        } catch (IllegalArgumentException e) {
            fail("Parsing failed for the minimum valid offset: " + e.getMessage());
        }

        // Test input that exceeds the minimum allowed offset
        String invalidMinOffset = "2023-09-15T15:30:00-24:00";
        
        try {
            ISODateTimeFormat.dateTimeParser().withOffsetParsed().parseDateTime(invalidMinOffset);
            fail("Expected an IllegalArgumentException for offset exceeding -23:59");
        } catch (IllegalArgumentException e) {
            // Expected behavior, so test passes
        }
    }
}
