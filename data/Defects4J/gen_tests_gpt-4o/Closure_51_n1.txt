
import static org.junit.Assert.*;
import org.junit.Test;

public class NumberParserTest {

    static class NumberParser {
        // This is a mock to simulate the hypothetical behavior outlined in the bug report.
        public static double parse(String input, boolean whitespaceMode) {
            // Simulated behavior: parse normally, ignoring whitespace if mode is enabled
            try {
                if (whitespaceMode) {
                    input = input.trim();
                }
                return Double.parseDouble(input);
            } catch (NumberFormatException e) {
                throw new IllegalArgumentException("Invalid number format");
            }
        }
    }

    @Test
    public void testNegativeZeroParsingInWhitespaceMode() {
        double result = NumberParser.parse("-0.0", true); // Assuming whitespace mode is true
        assertTrue("-0.0 should maintain sign as -0.0", Double.compare(result, -0.0) == 0);
        assertFalse("Resulting double should not be positive zero", Double.compare(result, 0.0) == 0);
    }
}
