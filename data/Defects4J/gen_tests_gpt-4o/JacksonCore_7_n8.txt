
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

import static org.junit.Assert.fail;

public class JsonGeneratorTest {

    @Test
    public void testWriteStringWhenFieldNameExpected() {
        JsonFactory jsonFactory = new JsonFactory();
        StringWriter writer = new StringWriter();

        try (JsonGenerator jsonGenerator = jsonFactory.createGenerator(writer)) {
            jsonGenerator.writeStartObject();
            // Intentionally calling writeString without a field name
            jsonGenerator.writeString("testValue");

            fail("Expected IllegalStateException since writeFieldName() was expected before writeString()");
        } catch (IllegalStateException e) {
            // Expected exception was thrown, test passes
        } catch (IOException e) {
            fail("IOException should not have been thrown");
        }
    }
}
