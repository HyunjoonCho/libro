script
// File: inloop-externs.js
/** @externs */
var ns = {};

// File: inloop.js
/**
 * @typedef {{subthing: {prop: number}}}
 */
ns.Thing;

/**
 * @param {ns.Thing} thing
 * @constructor
 */
ns.MyClass = function(thing) {
    /** @type {ns.Thing} */ this.thing_ = thing;
};

ns.MyClass.prototype.doIt = function() {
    var subthing = this.thing_.subthing;
    // The line below will generate an error because `noprop` does not exist
    // window.console.log(subthing.noprop);

    // However, this block inside the `for` loop does not error out
    for (var i = 0; i < subthing.noprop; i++) { // Expecting a type error here
        window.console.log(i);
    }
};

var thing = /** @type {ns.Thing} */ ({subthing: {prop: 3}});

// Directly accessing `noprop` generates an error
// var subthing = thing.subthing;
// for (var i = 0; i < subthing.noprop; i++) {
//     window.console.log(i);
// }

var myClassInstance = new ns.MyClass(thing);
myClassInstance.doIt();
