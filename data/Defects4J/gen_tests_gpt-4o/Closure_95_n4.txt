public void testGlowSymbolCompression() {
    String originalJsCode = 
        "Glow = {};\n" +
        "/** @public */ Glow.versions = [1, 2, 3];\n" +
        "Glow.showVersions = function() { alert(Glow.versions); }\n" +
        "// exports\n" +
        "window['Glow'] = Glow;\n" +
        "Glow['versions'] = Glow.versions;\n" +
        "Glow['showVersions'] = Glow.showVersions;";
    
    JavaScriptCompiler compiler = new JavaScriptCompiler();
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

    Result result = compiler.compile(SourceFile.fromCode("externs.js", ""),
                                     SourceFile.fromCode("test.js", originalJsCode),
                                     options);
    
    String compiledJsCode = compiler.toSource();

    assertFalse("The compiled code should not compress 'versions' property.",
                compiledJsCode.contains("Glow.a"));
    assertTrue("The compiled code should retain 'Glow.versions'.",
                compiledJsCode.contains("Glow.versions"));
    assertTrue("The compiled code should retain 'Glow.showVersions'.",
                compiledJsCode.contains("Glow.showVersions"));
}