
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;
import org.junit.Test;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.FileOutputStream;
import java.nio.file.Files;
import java.nio.file.Paths;

import static org.junit.Assert.fail;

public class TarArchiveTest {

    @Test
    public void testCorruptedBzip2() {
        String archivePath = "path/to/corrupted/test.tar.bz2";

        try (InputStream fileStream = new FileInputStream(archivePath);
             InputStream bzip2Stream = new BZip2CompressorInputStream(fileStream, true);
             TarArchiveInputStream tarStream = new TarArchiveInputStream(bzip2Stream)) {

            ArchiveEntry entry;
            while ((entry = tarStream.getNextEntry()) != null) {
                System.out.println("Extracting: " + entry.getName());
                String outputPath = "/tmp/" + entry.getName();
                try (OutputStream out = new FileOutputStream(outputPath)) {
                    byte[] buffer = new byte[1024];
                    int bytesRead;
                    while ((bytesRead = tarStream.read(buffer)) != -1) {
                        out.write(buffer, 0, bytesRead);
                    }
                }
            }

            fail("Expected an IOException due to corrupted tar file, but no exception was thrown.");

        } catch (IOException e) {
            // Expected exception due to corrupted tar file
            System.out.println("IOException was thrown as expected: " + e.getMessage());
        }
    }
}
