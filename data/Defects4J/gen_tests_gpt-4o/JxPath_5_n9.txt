
import static org.junit.Assert.fail;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathException;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.VariablePointer;
import org.junit.Test;

public class JXPathBugReproductionTest {

    @Test
    public void testUnionOfVariableAndNode() {
        try {
            // Setup the context and object model
            TestObject testObject = new TestObject();
            JXPathContext context = JXPathContext.newContext(testObject);

            // Define a variable in the context
            context.getVariables().declareVariable("var", new VariablePointer(context, null, null));

            // Execute the XPath query that causes the exception
            context.selectNodes("$var | /MAIN/A");

            // If no exception occurred, the test would fail (as we expect one to happen)
            fail("Expected a JXPathException due to comparing pointers from different trees.");
        } catch (JXPathException e) {
            // Handle expected exception.
            System.out.println("Caught expected JXPathException: " + e.getMessage());
        }
    }

    public static class TestObject {
        public Main MAIN = new Main();
    }

    public static class Main {
        public A[] A = new A[]{new A("Value1"), new A("Value2")};
    }

    public static class A {
        public String value;

        public A(String value) {
            this.value = value;
        }
    }
}
