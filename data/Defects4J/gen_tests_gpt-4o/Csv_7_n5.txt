
import static org.junit.Assert.*;
import java.io.*;
import org.apache.commons.csv.*;
import org.junit.Test;

public class CSVParserTest {

    @Test
    public void testDuplicateHeaderNames() throws IOException {
        String csvData = 
            "Col1,Col2,Col2,Col3,Col4\n" +
            "1,2,3,4,5\n" +
            "4,5,6,7,8\n";
        
        CSVFormat format = CSVFormat.RFC4180.withDelimiter(',')
                                            .withQuote('"')
                                            .withQuoteMode(QuoteMode.MINIMAL)
                                            .withIgnoreSurroundingSpaces()
                                            .withHeader()
                                            .withSkipHeaderRecord();

        try (Reader reader = new StringReader(csvData);
             CSVParser parser = new CSVParser(reader, format)) {

            // Get the header map
            Map<String, Integer> headerMap = parser.getHeaderMap();

            // Check the header map size, which should indicate a problem due to duplicate headers
            assertEquals("Header map should contain all columns, but duplicates result in incorrect size",
                         4, headerMap.size());

            // Optional: assert specific values or catch potential issues
            assertTrue("Header should contain 'Col1'", headerMap.containsKey("Col1"));
            assertTrue("Header should contain 'Col2'", headerMap.containsKey("Col2"));
            assertTrue("Header should contain 'Col3'", headerMap.containsKey("Col3"));
            assertTrue("Header should contain 'Col4'", headerMap.containsKey("Col4"));
        }
    }
}
