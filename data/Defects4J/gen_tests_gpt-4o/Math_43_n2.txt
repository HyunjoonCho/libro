
import org.apache.commons.math3.stat.descriptive.SummaryStatistics;
import org.apache.commons.math3.stat.descriptive.moment.Variance;
import org.junit.Test;
import static org.junit.Assert.*;

public class StatisticsTest {

    @Test
    public void testSetVarianceImplProducesNaNStandardDeviation() {
        int[] scores = {1, 2, 3, 4};
        SummaryStatistics stats = new SummaryStatistics();
        stats.setVarianceImpl(new Variance(false)); // Use "population variance"
        for (int i : scores) {
            stats.addValue(i);
        }
        double sd = stats.getStandardDeviation();
        
        // The expected behavior would be to have a valid standard deviation, 
        // but here it will produce NaN due to the bug.
        assertNotEquals(Double.NaN, sd, 0.0);
        
        // Using workaround to calculate standard deviation
        double expectedSd = Math.sqrt(stats.getSecondMoment() / stats.getN());
        
        // Ensure workaround gives correct result
        assertEquals(expectedSd, sd, 1e-10);
    }
}
