public void testFailingOnWindowsShouldGetExtraInterfaces() {
    Bar bar = mock(Bar.class, withSettings().extraInterfaces(List.class, Observer.class));
    DefaultMockingDetails details = new DefaultMockingDetails(bar);
    assertTrue(details.getExtraInterfaces().contains(List.class));
    assertTrue(details.getExtraInterfaces().contains(Observer.class));
}

public void testPureMockitoShouldNotDependJUnitByteBuddy() {
    try {
        Class.forName("org.mockito.configuration.MockitoConfiguration");
        fail("Expected NoClassDefFoundError or NoClassDefFoundError due to dependency on JUnit");
    } catch (NoClassDefFoundError | ClassNotFoundException e) {
        assertTrue(e.getMessage().contains("org.mockito.configuration.MockitoConfiguration"));
    }
}

public void testExcludingClassLoaderCannotLoadClassesWhenNoCorrectSouceUrlSet() {
    URL[] urls = new URL[]{};
    ClassLoader parent = ClassLoadersTest.class.getClassLoader();
    ClassLoader excludingLoader = new ClassLoaders.LocalExcludingURLClassLoader(parent, urls);
    
    try {
        excludingLoader.loadClass("org.mockito.internal.progress.TimesTest");
        fail("Should have thrown a NoClassDefFoundError");
    } catch (ClassNotFoundException e) {
        assertTrue(e.getMessage().contains("TimesTest"));
    }
}