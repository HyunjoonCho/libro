
import org.junit.Test;
import org.mockito.Mockito;
import org.mockito.invocation.Invocation;
import org.mockito.verification.VerificationMode;

import static org.mockito.Mockito.*;

public class CustomVerificationModeTest {

    class FirstInvocationVerificationMode implements VerificationMode {
        @Override
        public void verify(Invocation invocation, org.mockito.invocation.Invocation... invocations) {
            if (!invocations[0].equals(invocation)) {
                throw new AssertionError("The invocation is not the first one.");
            }
        }

        @Override
        public boolean equals(Object obj) {
            return obj instanceof FirstInvocationVerificationMode;
        }

        @Override
        public int hashCode() {
            return 1;
        }
    }

    @Test
    public void testCustomVerificationMode() {
        MyMock myMock = mock(MyMock.class);

        myMock.someMethod();

        try {
            verify(myMock, new FirstInvocationVerificationMode()).someMethod();
        } catch (AssertionError e) {
            // If there's a failure due to the broken equality, this will catch and print a message.
            System.out.println("Custom verification mode failed due to DelegatingMethod.equals() issue.");
            System.out.println(e.getMessage());
        }
    }

    interface MyMock {
        void someMethod();
    }
}
