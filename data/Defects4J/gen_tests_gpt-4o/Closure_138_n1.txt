
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import java.util.Collections;

import static org.junit.Assert.assertTrue;

public class ClosureCompilerTest {

    @Test
    public void testJSCDeterministicTestWarning() {
        String code = "var t = null;\n" +
                      "\n" +
                      "window.test = function() {\n" +
                      "  if (t != null) {\n" +
                      "    t = null;\n" +
                      "  }\n" +
                      "  t = 1;\n" +
                      "};";

        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        CommandLineRunner runner = new CommandLineRunner(new String[]{});
        runner.getCompilerOptions().setCodingConvention(options.getCodingConvention());

        // Compile the code
        Result result = runner.getCompiler().compile(
                Collections.emptyList(),
                Collections.singletonList(SourceFile.fromCode("test.js", code)),
                options);

        // Check for warnings
        assertTrue("Expected no warnings, but found: " + result.warnings, result.warnings.length == 0);
    }
}
