
import com.google.gson.Gson;
import com.google.gson.JsonParseException;
import com.google.gson.annotations.JsonAdapter;
import org.junit.Test;
import static org.junit.Assert.*;

public class VehicleTypeHierarchyTest {

    @JsonAdapter(VehicleAdapter.class)
    abstract class Vehicle {
        abstract String getType();
    }

    class Car extends Vehicle {
        @Override
        String getType() {
            return "Car";
        }
    }

    class Truck extends Vehicle {
        @Override
        String getType() {
            return "Truck";
        }
    }

    // Assume VehicleAdapter is an implementation that handles deserialization
    static class VehicleAdapter {
        // The actual implementation of the adapter is not shown 
        // as it's not provided in the bug report.
    }

    @Test
    public void testVehicleHierarchyDeserialization() {
        Gson gson = new Gson();

        // A JSON string that represents a 'Truck'
        String truckJson = "{\"type\":\"Truck\"}";

        try {
            // Attempt to deserialize into a Car
            Car car = gson.fromJson(truckJson, Car.class);
            fail("Expected JsonParseException when deserializing a Truck JSON into a Car object.");
        } catch (JsonParseException e) {
            // We expect this exception because the JSON represents a Truck, not a Car.
            assertEquals("Expected a car but got a truck", e.getMessage());
        }
    }
}
