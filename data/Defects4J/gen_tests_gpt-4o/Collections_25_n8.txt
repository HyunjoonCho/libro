
import org.apache.commons.collections4.IteratorUtils;
import org.junit.Test;
import java.util.Arrays;
import java.util.Iterator;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class IteratorUtilsTest {

    @Test(expected = ClassCastException.class)
    public void testCollatedIteratorWithNaturalOrdering() {
        Iterator<Integer> iterator1 = Arrays.asList(2, 4, 6).iterator();
        Iterator<Integer> iterator2 = Arrays.asList(1, 3, 5).iterator();

        // Attempt to use collatedIterator with a null comparator
        Iterator<Integer> collatedIterator = IteratorUtils.collatedIterator(null, iterator1, iterator2);

        // Check if the resulting iterator throws an exception or misbehaves
        assertTrue(collatedIterator.hasNext());
        assertEquals(Integer.valueOf(1), collatedIterator.next()); // Expecting natural order to be used
        assertEquals(Integer.valueOf(2), collatedIterator.next());
        assertEquals(Integer.valueOf(3), collatedIterator.next());
        assertEquals(Integer.valueOf(4), collatedIterator.next());
        assertEquals(Integer.valueOf(5), collatedIterator.next());
        assertEquals(Integer.valueOf(6), collatedIterator.next());
    }
}
