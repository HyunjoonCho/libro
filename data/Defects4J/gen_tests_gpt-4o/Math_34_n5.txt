
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;
import java.util.NoSuchElementException;

public class ListPopulationTest {
    
    private class Chromosome {
        // Dummy Chromosome class for testing
    }
    
    private class ListPopulation {
        private List<Chromosome> chromosomes;

        public ListPopulation() {
            this.chromosomes = new ArrayList<>();
        }

        public void addChromosome(Chromosome chromosome) {
            chromosomes.add(chromosome);
        }

        public Iterator<Chromosome> iterator() {
            // This should be wrapped in an unmodifiable list iterator
            return chromosomes.iterator();
        }
    }

    @Test
    public void testListPopulationIteratorAllowsModification() {
        ListPopulation population = new ListPopulation();
        Chromosome chromosome1 = new Chromosome();
        Chromosome chromosome2 = new Chromosome();
        
        population.addChromosome(chromosome1);
        population.addChromosome(chromosome2);

        Iterator<Chromosome> iterator = population.iterator();

        // Check if modification through the iterator is possible
        assertTrue(iterator.hasNext());
        iterator.next();
        iterator.remove();  // This should not be allowed if properly wrapped
        
        // Verify the list has actually been modified
        try {
            iterator.next();  // Should throw since we removed the last item
            fail("Iterator allowed modification, and list was modifiable");
        } catch (NoSuchElementException e) {
            // Expected, as the list should have no more elements
        }
    }
}
