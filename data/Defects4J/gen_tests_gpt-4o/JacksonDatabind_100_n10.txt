
import com.fasterxml.jackson.core.Base64Variant;
import com.fasterxml.jackson.core.Base64Variants;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.TreeTraversingParser;
import org.junit.Test;
import static org.junit.Assert.*;

public class TreeTraversingParserTest {

    @Test
    public void testBase64VariantIgnored() throws Exception {
        String base64Data = "SGVsbG9Xb3JsZA=="; // "HelloWorld" in Base64 with default variant
        // Using a non-standard variant for the purpose of the test
        Base64Variant testVariant = new Base64Variant(Base64Variants.MIME, "TestVariant", true, '=', 76);

        ObjectMapper mapper = new ObjectMapper();
        JsonNode node = mapper.readTree("\"" + base64Data + "\"");
        TreeTraversingParser parser = new TreeTraversingParser(node, mapper);

        byte[] expectedOutput = Base64Variants.MIME.decode(base64Data);
        
        // This should respect the Base64Variant passed, but without a fix it does not.
        byte[] actualOutput = parser.getBinaryValue(testVariant);

        assertArrayEquals("Binary data should match expected output using the base64 variant", expectedOutput, actualOutput);
    }
}
