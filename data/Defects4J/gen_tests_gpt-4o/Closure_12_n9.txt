public void testTryCatchBlockCompilation() {
    String uncompiledOutput = executeUncompiledCode();
    String compiledOutput = executeCompiledCode();
    assertEquals("1212", uncompiledOutput);
    assertEquals("1212", compiledOutput);
}

private String executeUncompiledCode() {
    StringBuilder output = new StringBuilder();
    ScriptEngine engine = new ScriptEngineManager().getEngineByName("JavaScript");
    try {
        engine.eval(new StringReader(
            "function a() {" +
            " var x = '1';" +
            " try {" +
            " x += somefunction();" +
            " } catch(e) {" +
            " }" +
            " x += '2';" +
            " try {" +
            " x += somefunction();" +
            " } catch(e) {" +
            " }" +
            " return x;" +
            "}" +
            "function somefunction() {" +
            " throw 'error';" +
            "}" +
            "output.append(a());" +
            "output.append(a());"
        ));
    } catch (ScriptException e) {
        e.printStackTrace();
    }
    return output.toString();
}

private String executeCompiledCode() {
    StringBuilder output = new StringBuilder();
    ScriptEngine engine = new ScriptEngineManager().getEngineByName("JavaScript");
    try {
        engine.eval(new StringReader(
            "function b() {" +
            " var a;" +
            " try {" +
            " a = '1' + somefunction();" +
            " } catch(c) {" +
            " }" +
            " try {" +
            " a = a + '2' + somefunction();" +
            " } catch(d) {" +
            " }" +
            " return a;" +
            "}" +
            "function somefunction() {" +
            " throw 'error';" +
            "}" +
            "output.append(b());" +
            "output.append(b());"
        ));
    } catch (ScriptException e) {
        e.printStackTrace();
    }
    return output.toString();
}