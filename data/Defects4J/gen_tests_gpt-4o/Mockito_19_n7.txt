
import static org.mockito.Mockito.mock;
import static org.mockito.MockitoAnnotations.initMocks;

import android.widget.TextView;

import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;

import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertNull;

public class InjectMocksTest {

    // Class containing the fields to be injected with mocks
    static class MyActivity {
        TextView txtGateView;
        TextView txtNextStep;

        // Default constructor
        public MyActivity() {
            this.txtGateView = new TextView(null);
            this.txtNextStep = new TextView(null);
        }
    }

    @Mock
    TextView mockTextView;

    @InjectMocks
    MyActivity myActivity;

    @Before
    public void setUp() {
        initMocks(this);
    }

    @Test
    public void testInjectMocks() {
        // Assert that txtNextStep mock was injected
        assertSame(mockTextView, myActivity.txtNextStep);

        // Check if txtGateView remains uninjected (null after mock injection)
        assertNull(myActivity.txtGateView);

        // Uncomment the below to catch the issue with @InjectMocks failing
        //assertNotNull("txtGateView should be non-null before injection", myActivity.txtGateView)
        //assertNull("txtGateView should not be affected by injection", myActivity.txtGateView);
    }
}
