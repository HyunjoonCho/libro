
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

import static org.junit.Assert.assertEquals;

public class Utf8JsonGeneratorTest {

    @Test
    public void testToggleQuoteFieldNames() throws IOException {
        JsonFactory jsonFactory = new JsonFactory();
        ObjectMapper mapper = new ObjectMapper(jsonFactory);

        // Ensure we start with the default: QUOTE_FIELD_NAMES is enabled
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        try (JsonGenerator generator = jsonFactory.createGenerator(outputStream)) {
            generator.writeStartObject();
            generator.writeFieldName("testField");
            generator.writeString("value");
            generator.writeEndObject();
        }
        
        String jsonWithQuotes = outputStream.toString("UTF-8");
        assertEquals("{\"testField\":\"value\"}", jsonWithQuotes);

        // Now disable QUOTE_FIELD_NAMES
        outputStream.reset();
        mapper.configure(JsonGenerator.Feature.QUOTE_FIELD_NAMES, false);
        try (JsonGenerator generator = jsonFactory.createGenerator(outputStream)) {
            generator.writeStartObject();
            generator.writeFieldName("testField");
            generator.writeString("value");
            generator.writeEndObject();
        }
        
        String jsonWithoutQuotes = outputStream.toString("UTF-8");
        assertEquals("{testField:\"value\"}", jsonWithoutQuotes);

        // Re-enable QUOTE_FIELD_NAMES
        outputStream.reset();
        mapper.configure(JsonGenerator.Feature.QUOTE_FIELD_NAMES, true);
        try (JsonGenerator generator = jsonFactory.createGenerator(outputStream)) {
            generator.writeStartObject();
            generator.writeFieldName("testField");
            generator.writeString("value");
            generator.writeEndObject();
        }

        String jsonWithQuotesAgain = outputStream.toString("UTF-8");
        assertEquals("{\"testField\":\"value\"}", jsonWithQuotesAgain);
    }
}
