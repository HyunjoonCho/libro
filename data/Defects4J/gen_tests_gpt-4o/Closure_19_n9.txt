
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.DiagnosticGroups;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

public class RefineThisTypeTest {

    @Test(expected = IllegalArgumentException.class)
    public void testRefineThisTypeCausesException() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();

        // Enable advanced optimizations which might trigger the bug
        options.setCheckTypes(true);
        options.setClosurePass(true);
        options.setLanguageIn(CompilerOptions.LanguageMode.ECMASCRIPT5);

        // Suppress warnings related to the diagnostic group
        options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CompilerOptions.WarningLevel.OFF);

        // JavaScript code that attempts to refine the type of 'this' using goog.isFunction
        String jsCode = "goog.isFunction(this);";

        // Single source file to be compiled
        List<SourceFile> externs = new ArrayList<>();
        List<SourceFile> inputs = new ArrayList<>();
        inputs.add(SourceFile.fromCode("input.js", jsCode));

        // Process the compilation, expecting an IllegalArgumentException
        compiler.compile(externs, inputs, options);
    }
}
