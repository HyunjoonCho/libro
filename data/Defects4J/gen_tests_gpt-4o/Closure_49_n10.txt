
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Function;
import org.mozilla.javascript.Scriptable;

public class ClosureCompilerTest {

    @Test
    public void testFunctionVariableNameConflict() {
        // Setup the JS runtime environment
        Context context = Context.enter();
        try {
            Scriptable scope = context.initStandardObjects();

            // Define the JavaScript function with the conflict
            String script = "var foo = function bar() { var bar; return bar; }; foo();";

            // Evaluate the script
            Object result = context.evaluateString(scope, script, "testScript", 1, null);

            // Check that the result is undefined (JavaScript's 'undefined' is mapped to null in Java)
            assertEquals(Context.getUndefinedValue(), result);
        } finally {
            Context.exit();
        }
    }
}
