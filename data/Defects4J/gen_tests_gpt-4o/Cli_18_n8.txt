
import org.apache.commons.cli.*;
import org.junit.Test;
import static org.junit.Assert.*;

public class PosixParserTest {

    @Test
    public void testUnrecognizedTokenIgnoredWithStopAtNonOptionEnabled() {
        // Define the option 'a'
        Options options = new Options();
        options.addOption("a", false, "option a");

        // Prepare a PosixParser and enable stopAtNonOption
        CommandLineParser parser = new PosixParser();
        String[] args = new String[] {"-z", "-a", "foo"};

        try {
            // Parse the arguments
            CommandLine cmd = parser.parse(options, args, true);

            // Check that 'a' is recognized
            assertTrue(cmd.hasOption("a"));
            
            // Check that 'foo' is recognized as a remaining argument
            String[] remainingArgs = cmd.getArgs();
            assertEquals(1, remainingArgs.length);
            assertEquals("foo", remainingArgs[0]);

            // Verify that '-z' was simply ignored and not present anywhere
            assertFalse(cmd.hasOption("z")); // '-z' should not be recognized
            assertEquals(1, remainingArgs.length); // Still one remaining argument

        } catch (ParseException ex) {
            fail("Parsing failed: " + ex.getMessage());
        }
    }
}
