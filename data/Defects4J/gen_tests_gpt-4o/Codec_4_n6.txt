
import org.apache.commons.codec.binary.Base64;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Base64Test {

    @Test
    public void testEncodeNoChunking() throws Exception {
        Base64 base64Instance = new Base64();

        String input = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
        byte[] inputBytes = input.getBytes("UTF-8");

        byte[] result = base64Instance.encode(inputBytes);
        String resultString = new String(result, "UTF-8");

        // Ensure no CRLF is appended or lines are chunked
        assertEquals("YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ==", resultString);
    }

    @Test
    public void testEncodeWithChunks() throws Exception {
        Base64 base64Instance = new Base64();

        String input = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
        byte[] inputBytes = input.getBytes("UTF-8");

        byte[] result = base64Instance.encode(inputBytes);
        String resultString = new String(result, "UTF-8");

        // Expected to have chunking with CRLF
        String expectedString = "YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFh\r\n" + 
                                "YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ==\r\n";

        assertEquals(expectedString, resultString);
    }
}
