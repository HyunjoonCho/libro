public void testCustomCollectionDeserialization() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    String json = "{\"strings\": [\"one\", \"two\", \"three\"]}";

    // Assuming CustomCollectionContainer is a class with a field:
    // private CustomStringCollection strings;
    CustomCollectionContainer result = mapper.readValue(json, CustomCollectionContainer.class);

    // Verify that the deserialization is successful
    assertNotNull(result);
    assertNotNull(result.getStrings());
    assertEquals(3, result.getStrings().size());
}

private static class CustomCollectionContainer {
    private CustomStringCollection strings;

    public CustomStringCollection getStrings() {
        return strings;
    }
}

private static class CustomStringCollection extends AbstractCollection<String> {
    private final List<String> list;

    public CustomStringCollection(List<String> list) {
        this.list = Collections.unmodifiableList(list);
    }

    @Override
    public Iterator<String> iterator() {
        return list.iterator();
    }

    @Override
    public int size() {
        return list.size();
    }
}