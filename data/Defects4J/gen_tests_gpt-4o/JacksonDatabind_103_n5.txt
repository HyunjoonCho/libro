
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidFormatException;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class JsonMappingExceptionTest {

    private static class TestData {
        public int value;
    }

    @Test
    public void testDuplicateLocationInformation() {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"value\": \"not_a_number\"}";

        try {
            mapper.readValue(json, TestData.class);
        } catch (InvalidFormatException e) {
            String message = e.getMessage();

            // Check if the message contains "at [source]" twice
            String searchString = "at [source]";
            int firstIndex = message.indexOf(searchString);
            int secondIndex = message.indexOf(searchString, firstIndex + 1);

            assertTrue("Message should contain 'at [source]' twice", firstIndex != -1 && secondIndex != -1);
        } catch (Exception e) {
            // If any other exception is caught, fail the test
            assertTrue("Unexpected exception was caught", false);
        }
    }
}
