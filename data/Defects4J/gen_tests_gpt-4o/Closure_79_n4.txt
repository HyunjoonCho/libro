public void testExternPrototypeCompilation() {
    try {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        List<SourceFile> externs = Collections.singletonList(SourceFile.fromCode("externs", "prototype.js"));
        List<SourceFile> inputs = Collections.singletonList(SourceFile.fromCode("input", "bootloader.js"));

        compiler.compile(externs, inputs, options);
        fail("Expected RuntimeException to be thrown.");
    } catch (RuntimeException e) {
        String expectedMessage = "INTERNAL COMPILER ERROR.";
        assertTrue(e.getMessage().contains(expectedMessage));
    }
}