
import org.junit.Test;
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class ClosureCompilerCrashTest {

    @Test
    public void testCompilerCrash() {
        try {
            // The URL of the script to be compiled
            String scriptUrl = "https://raw.github.com/scottschiller/SoundManager2/master/script/soundmanager2-nodebug.js";

            // Command to run the Closure Compiler
            String command = String.format("java -jar path/to/closure-compiler-v20110811.jar --compilation_level SIMPLE_OPTIMIZATIONS --js %s", scriptUrl);

            // Execute the Closure Compiler process
            Process process = Runtime.getRuntime().exec(command);

            // Capture the output and error streams
            BufferedReader stdError = new BufferedReader(new InputStreamReader(process.getErrorStream()));
            
            String s;
            boolean errorFound = false;
            while ((s = stdError.readLine()) != null) {
                if (s.contains("index(1) must be less than size(1)")) {
                    errorFound = true;
                    break;
                }
            }
            
            // Assert that the error was encountered
            assertTrue("Expected error message was not found", errorFound);

            process.waitFor();
        } catch (Exception e) {
            fail("Test setup encountered an unexpected exception: " + e.getMessage());
        }
    }
}
