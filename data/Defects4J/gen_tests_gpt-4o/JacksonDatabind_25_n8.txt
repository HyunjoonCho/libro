
import static org.junit.Assert.*;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

public class JacksonTest {

    @JsonPropertyOrder({"someBytes"})
    static class Foo {
        @JsonProperty
        @JsonDeserialize(as = byte[].class)
        Object someBytes;

        public Object getSomeBytes() {
            return someBytes;
        }

        public void setSomeBytes(Object someBytes) {
            this.someBytes = someBytes;
        }
    }

    @Test
    public void testFooFromMap() {
        Map<String, Object> map = new HashMap<>();
        map.put("someBytes", "HelloWorld".getBytes());

        ObjectMapper mapper = new ObjectMapper();
        try {
            Foo foo = mapper.convertValue(map, Foo.class);
            assertNotNull(foo);
            assertTrue(foo.getSomeBytes() instanceof byte[]);
        } catch (IllegalArgumentException e) {
            // Expected error based on the bug report
            fail("Deserialization failed due to an IllegalArgumentException: " + e.getMessage());
        }
    }
}
