
import static org.junit.Assert.assertEquals;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

public class PosixParserTest {

    @Test
    public void testUnrecognizedTokensWithStopAtNonOption() throws ParseException {
        // Given
        String[] args = {"-z", "-a", "foo"};
        Options options = new Options();
        options.addOption("a", false, "option a");
        
        CommandLineParser parser = new PosixParser();
        
        // When
        CommandLine cmd = parser.parse(options, args, true);
        
        // Then
        // We expect "-z" to stop processing because it is not a recognized token
        String[] remainingArgs = cmd.getArgs();
        assertEquals(2, remainingArgs.length);
        assertEquals("-z", remainingArgs[0]);
        assertEquals("-a", remainingArgs[1]);
        // "-a" should not be recognized as an option because processing stops at non-option
        assertEquals(false, cmd.hasOption("a"));
    }
}
