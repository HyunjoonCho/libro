
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import java.util.Collections;

import static org.junit.Assert.assertTrue;

public class ClosureCompilerTest {

    @Test
    public void testJscDeterministicTestWarning() {
        // JavaScript code to be compiled
        String code = "var t = null;\n" +
                      "window.test = function()\n" +
                      "{\n" +
                      "    if (t != null) {\n" +
                      "        t = null;\n" +
                      "    }\n" +
                      "    t = 1;\n" +
                      "};";

        // Setup compiler options for ADVANCED_OPTIMIZATIONS
        CompilerOptions options = new CompilerOptions();
        CommandLineRunner runner = new CommandLineRunner(new String[] {
            "--compilation_level", "ADVANCED_OPTIMIZATIONS"
        });
        runner.setOptionsForCompiling(options);

        // Create a new compiler instance
        Compiler compiler = new Compiler();

        // Compile the code
        Result result = compiler.compile(Collections.emptyList(),
                Collections.singletonList(SourceFile.fromCode("input.js", code)),
                options);

        // Check for the specific warning
        assertTrue(
                "Expected 'JSC_DETERMINISTIC_TEST' warning, but it was not present.",
                result.warnings.stream().anyMatch(
                        warning -> "JSC_DETERMINISTIC_TEST".equals(warning.getType().key)));
    }
}
