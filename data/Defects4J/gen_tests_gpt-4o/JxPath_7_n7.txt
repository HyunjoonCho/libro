
import org.junit.Test;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathException;
import org.xml.sax.InputSource;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.StringReader;
import org.w3c.dom.Document;

import static org.junit.Assert.assertFalse;

public class XPathBinaryOperatorTest {

    @Test
    public void testBinaryOperatorWithEmptyNodeSet() throws Exception {
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        Document document = factory.newDocumentBuilder().parse(
                new InputSource(new StringReader("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n" + "<doc/>")));

        JXPathContext pathContext = JXPathContext.newContext(document);

        // Attempt comparing a number with a non-existing node-set
        Boolean result = (Boolean) pathContext.getValue("2.0 > child1", Boolean.class);

        // According to XPath specifications, if the node-set is empty, the result should be false.
        assertFalse("The comparison should result in false when node-set is empty.", result.booleanValue());
    }
}
