public void testDependencySortingWithoutClosurePass() {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setClosurePass(false);

    DependencyOptions dependencyOptions = new DependencyOptions();
    dependencyOptions.setDependencySorting(true);
    options.setDependencyOptions(dependencyOptions);

    SourceFile input1 = SourceFile.fromCode("input1", "goog.provide('example'); goog.require('dependency');");
    SourceFile input2 = SourceFile.fromCode("input2", "goog.provide('dependency');");

    compiler.initOptions(options);
    Result result = compiler.compile(ImmutableList.of(), ImmutableList.of(input1, input2), options);

    assertTrue("Expected compilation to be successful", result.success);
    String output = compiler.toSource();

    // Verify the order of concatenation respects dependency. We expect input2 content printed before input1.
    assertTrue(output.indexOf("goog.provide('dependency');") < output.indexOf("goog.provide('example');"));
}