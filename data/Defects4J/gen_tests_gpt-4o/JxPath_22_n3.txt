
import static org.junit.Assert.assertEquals;

import java.io.StringReader;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.Test;
import org.w3c.dom.Document;
import org.xml.sax.InputSource;

public class XPathNamespaceTest {

    @Test(timeout = 1000) // Set a timeout to prevent infinite loop
    public void testNamespaceHandlingInXPath() throws Exception {
        String xmlContent = "<foo xmlns:b=\"bla\" xmlns=\"test111\">"
                          + "  <b:bar>a</b:bar>"
                          + "  <test xmlns=\"\"></test>"
                          + "</foo>";

        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
        dbFactory.setNamespaceAware(true);
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
        Document doc = dBuilder.parse(new InputSource(new StringReader(xmlContent)));

        JXPathContext context = JXPathContext.newContext(doc);
        Pointer pointer = context.getPointer("/foo/test");

        // The bug causes this to produce an incorrect path or enter an infinite loop.
        // We set the timeout to catch the infinite loop without hanging indefinitely.

        String path = ((DOMNodePointer) pointer).asPath();

        // Despite the bug, this is what the correct path should look like.
        assertEquals("/foo/test[1]", path);
    }
}
