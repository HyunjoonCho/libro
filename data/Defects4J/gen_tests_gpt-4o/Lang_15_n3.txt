
import org.junit.Assert;
import org.junit.Test;
import org.apache.commons.lang3.reflect.TypeUtils;

import java.lang.reflect.Type;
import java.lang.reflect.TypeVariable;
import java.util.Map;

public class TypeUtilsTest {

    // Define the This interface
    public interface This<K, V> {
    }

    // Define the Other class implementing This
    public class Other<T> implements This<String, T> {
    }

    @Test
    public void testGetTypeArguments() {
        // Retrieve the map of Type Variables and their assignments
        Map<TypeVariable<?>, Type> typeVarAssigns = TypeUtils.getTypeArguments(Other.class, This.class);

        // Assert that there are two type variable assignments
        Assert.assertEquals(2, typeVarAssigns.size());

        // Assert the expected type assignments
        Assert.assertEquals(String.class, typeVarAssigns.get(This.class.getTypeParameters()[0]));
        Assert.assertEquals(Other.class.getTypeParameters()[0], typeVarAssigns.get(This.class.getTypeParameters()[1]));
    }
}
