
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class MathUtilsTest {

    @Test
    public void testFactorial() {
        for (int i = 1; i <= 20; i++) {
            if (i == 17) {
                assertEquals(355687428096000L, MathUtils.factorial(i));
            } else if (i == 18) {
                assertEquals(6402373705728000L, MathUtils.factorial(i));
            } else if (i == 19) {
                assertEquals(121645100408832000L, MathUtils.factorial(i));
            } else {
                // Add other assertions as needed for additional factorial values
            }
        }
    }
}

class MathUtils {

    public static long factorial(int n) {
        if (n < 0 || n > 20) {
            throw new IllegalArgumentException("Valid input is 0 <= n <= 20");
        }
        long result = 1;
        for (int i = 2; i <= n; i++) {
            result *= i;
        }
        return result;
    }
}
