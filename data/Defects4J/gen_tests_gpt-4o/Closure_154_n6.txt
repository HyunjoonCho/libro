script
// Define the interface I
/**
 * @interface
 */
function I() {}

/** @type {string} */
I.prototype.foobar;

// Define the constructor C implementing I
/**
 * @constructor
 * @implements {I}
 */
function C() {
  // No warning generated here, but should be because foobar is expected to be a string.
  this.foobar = 2;
}

/** @type {I} */
var test = new C();

// The alert should expose the issue of `foobar` being assigned a number instead of a string.
alert(test.foobar);

// Test case to ensure that foobar is of type string
function testInterfaceImplementation() {
  /** @type {C} */
  var instance = new C();
  if (typeof instance.foobar !== 'string') {
    throw new Error('Test failed: foobar should be a string.');
  }
}

// Running the test
try {
  testInterfaceImplementation();
  console.log("Test passed.");
} catch (e) {
  console.error(e.message);
}
