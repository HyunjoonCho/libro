
import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.genetics.Chromosome;
import org.apache.commons.math3.genetics.ListPopulation;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class ListPopulationTest {

    @Test(expected = UnsupportedOperationException.class)
    public void testIteratorRemoveChromosome() {
        // Create some chromosomes for testing.
        Chromosome chromosome1 = new DummyChromosome();
        Chromosome chromosome2 = new DummyChromosome();
        
        // Add chromosomes to a list.
        List<Chromosome> chromosomeList = new ArrayList<>();
        chromosomeList.add(chromosome1);
        chromosomeList.add(chromosome2);
        
        // Create a ListPopulation with these chromosomes.
        ListPopulation population = new ListPopulation(chromosomeList, 10);
        
        // Get the iterator from the population.
        Iterator<Chromosome> iterator = population.iterator();
        
        // Call next to move the iterator forward.
        iterator.next();
        
        // Attempt to remove the chromosome via the iterator.
        // This should throw an UnsupportedOperationException if the list is unmodifiable.
        iterator.remove();
    }
    
    // Dummy Chromosome class for the test
    static class DummyChromosome extends Chromosome {
        @Override
        protected double fitness() {
            return 0;
        }
    }
}
