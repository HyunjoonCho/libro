
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

// Assuming these classes are from a command-line parsing library
import org.some.library.DefaultOptionBuilder;
import org.some.library.ArgumentBuilder;
import org.some.library.GroupBuilder;
import org.some.library.DefaultOption;
import org.some.library.Group;
import org.some.library.Parser;
import org.some.library.CommandLine;

import java.util.List;

public class CommandLineParserTest {

    @Test
    public void testSingleOptionSingleArgument() throws Exception {

        String defaultValue1 = "100";
        String defaultValue2 = "1000";

        DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
        ArgumentBuilder abuilder = new ArgumentBuilder();
        GroupBuilder gbuilder = new GroupBuilder();

        DefaultOption bOption = obuilder.withShortName("b")
                .withLongName("b")
                .withArgument(abuilder.withName("b")
                        .withMinimum(0)
                        .withMaximum(2)
                        .withDefault(defaultValue1)
                        .withDefault(defaultValue2)
                        .create())
                .create();

        Group options = gbuilder
                .withName("options")
                .withOption(bOption)
                .create();

        Parser parser = new Parser();
        parser.setHelpTrigger("--help");
        parser.setGroup(options);

        String enteredValue1 = "1";
        String[] args = new String[]{"-b", enteredValue1};

        CommandLine cl = parser.parse(args);
        
        assertNotNull(cl);

        List b = cl.getValues("-b");
        // This assertion checks if the second default value is used when only one argument is passed
        assertEquals("[" + enteredValue1 + ", " + defaultValue2 + "]", b.toString());
    }
}
