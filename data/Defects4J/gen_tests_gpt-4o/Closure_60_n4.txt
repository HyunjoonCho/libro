
import static org.junit.Assert.fail;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class SideEffectTest {

    private final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
    private final PrintStream originalOut = System.out;

    @Before
    public void setUp() {
        // Set System.out to capture the output
        System.setOut(new PrintStream(outputStream));
    }

    @After
    public void tearDown() {
        // Reset System.out to its original state
        System.setOut(originalOut);
    }

    public void function() {
        System.out.print("side effect");
    }

    @Test
    public void testFunctionCallHasSideEffects() {
        try {
            // This line is meant to test if the function is correctly flagged as having side effects
            function(); // This should produce a side effect as it prints to the console
        } catch (Exception e) {
            fail("The function should execute without exception.");
        }

        // Check if the print statement within the function was executed
        String output = outputStream.toString();
        if (!output.contains("side effect")) {
            fail("The function is incorrectly identified as having no side effects.");
        }
    }
}
