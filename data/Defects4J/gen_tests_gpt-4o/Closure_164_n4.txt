script
// Add the @type annotations to utilize type-checking

/** 
 * @param {function(string, number): boolean} param 
 */
function func(param) {
    // This dummy implementation is just to prevent runtime errors.
    // The real focus is type checking at compile-time.
    return param("test", 42);
}

/** 
 * @type {function(string, number, boolean): boolean} 
 */
function paramFunc1(s, n, b) {
    return true; // Dummy implementation
}

/** 
 * @type {function(string): boolean} 
 */
function paramFunc2(s) {
    return true; // Dummy implementation
}

// The Closure Compiler should flag this call with a warning/error
// because paramFunc1 takes more arguments than func expects.
func(paramFunc1);

// The Closure Compiler should flag this call with a warning/error
// because paramFunc2 takes fewer arguments than func expects.
func(paramFunc2);
