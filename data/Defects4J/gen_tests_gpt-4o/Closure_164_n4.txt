script
public void testFunctionAssignment() {
    Object paramFunc1 = new Object() {
        boolean apply(String s, Number n, Boolean b) { return true; }
    };

    Object paramFunc2 = new Object() {
        boolean apply(String s) { return true; }
    };

    assertThrows(ClassCastException.class, () -> func(paramFunc2));

    // Note this is a Java test method that tries to mimic the described JavaScript scenario
    // Since Java is strongly typed and does not allow the same degree of type mismatch during runtime,
    // this test indirectly verifies logical failures if reflection or dynamic invocation is used.
}

private void func(Object param) {
    // In Java, you would typically check interfaces rather than types in comments
    if (!(param instanceof Object)) {
        throw new ClassCastException("Incompatible function signature");
    }
}