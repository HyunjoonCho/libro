
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;
import static org.junit.Assert.assertNotNull;

public class NamespacedAttributeTest {

    @Test
    public void testSelectNamespacedAttributeWithWildcard() throws Exception {
        // Create an XML document with a namespaced attribute
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.newDocument();
        
        Element xml = doc.createElement("xml");
        xml.setAttributeNS("foo", "x:pop", "a");
        doc.appendChild(xml);
        
        // Create an XPath expression to select attributes using *
        XPathFactory xPathFactory = XPathFactory.newInstance();
        XPath xPath = xPathFactory.newXPath();
        
        // Attempt to select the namespaced attribute using wildcard *
        XPathExpression expr = xPath.compile("xml/@*");
        Object result = expr.evaluate(doc, XPathConstants.NODESET);
        
        // Check if the selection returned any node (it should not be null)
        assertNotNull("The wildcard attribute selection should not return null.", result);
    }
}
