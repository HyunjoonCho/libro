js
/** 
 * @param {Function} baseClass The base class to extend
 * @param {Object} props The properties to add to the class prototype
 * @return {Function} The new class
 */
function makeClass(baseClass, props) {
    function NewClass() {
        baseClass.apply(this, arguments);
    }
    NewClass.prototype = Object.create(baseClass.prototype);
    NewClass.prototype.constructor = NewClass;
    
    /** @lends NewClass.prototype */
    for (var prop in props) {
        if (props.hasOwnProperty(prop)) {
            NewClass.prototype[prop] = props[prop];
        }
    }
    
    return NewClass;
}

// Compile this code with Google Closure Compiler in advanced mode with --jscomp_error=checkTypes
var Person = makeClass(Object, {
    getName: function() {
        return this.name;
    }
});

var john = new Person();
john.name = 'John Doe';
console.log(john.getName()); // Expected output: 'John Doe'
