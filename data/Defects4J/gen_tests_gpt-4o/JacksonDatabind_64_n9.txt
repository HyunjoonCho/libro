
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class JsonIncludeNonDefaultTest {

    @JsonInclude(JsonInclude.Include.NON_DEFAULT)
    private static class TestClass {
        public String name = null;
        public int age = 25;

        // Default constructor
        public TestClass() {
        }

        public TestClass(String name, int age) {
            this.name = name;
            this.age = age;
        }
    }

    @Test
    public void testJsonIncludeNonDefault() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.configure(SerializationFeature.INDENT_OUTPUT, true);

        TestClass testObject = new TestClass(null, 25);
        
        String jsonString = objectMapper.writeValueAsString(testObject);

        // Expected to only include age, not name, as name is null which is default
        String expectedJson = "{\n  \"age\" : 25\n}";

        assertEquals(expectedJson, jsonString);
    }
}
