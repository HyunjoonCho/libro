
import org.apache.logging.log4j.core.LogEvent;
import org.apache.logging.log4j.core.parser.JsonLogEventParser;
import org.apache.logging.log4j.core.parser.LogEventParser;
import org.apache.logging.log4j.core.parser.ParseException;
import org.junit.Test;

import java.nio.charset.StandardCharsets;

public class Log4jDeserializationRegressionTest {

    private static final String inputString = "{\n" +
            "  \"timeMillis\" : 1493121664118,\n" +
            "  \"thread\" : \"main\",\n" +
            "  \"threadId\" : 1,\n" +
            "  \"threadPriority\" : 5,\n" +
            "  \"level\" : \"INFO\",\n" +
            "  \"loggerName\" : \"HelloWorld\",\n" +
            "  \"marker\" : {\n" +
            "    \"name\" : \"child\",\n" +
            "    \"parents\" : [ {\n" +
            "      \"name\" : \"parent\",\n" +
            "      \"parents\" : [ {\n" +
            "        \"name\" : \"grandparent\"\n" +
            "      } ]\n" +
            "    } ]\n" +
            "  },\n" +
            "  \"message\" : \"Hello, world!\",\n" +
            "  \"thrown\" : {\n" +
            "    \"commonElementCount\" : 0,\n" +
            "    \"message\" : \"error message\",\n" +
            "    \"name\" : \"java.lang.RuntimeException\",\n" +
            "    \"extendedStackTrace\" : [ {\n" +
            "      \"class\" : \"logtest.Main\",\n" +
            "      \"method\" : \"main\",\n" +
            "      \"file\" : \"Main.java\",\n" +
            "      \"line\" : 29,\n" +
            "      \"exact\" : true,\n" +
            "      \"location\" : \"classes/\",\n" +
            "      \"version\" : \"?\"\n" +
            "    } ]\n" +
            "  },\n" +
            "  \"contextStack\" : [ \"one\", \"two\" ],\n" +
            "  \"loggerFqcn\" : \"org.apache.logging.log4j.spi.AbstractLogger\",\n" +
            "  \"endOfBatch\" : false,\n" +
            "  \"contextMap\" : {\n" +
            "    \"bar\" : \"BAR\",\n" +
            "    \"foo\" : \"FOO\"\n" +
            "  },\n" +
            "  \"source\" : {\n" +
            "    \"class\" : \"logtest.Main\",\n" +
            "    \"method\" : \"main\",\n" +
            "    \"file\" : \"Main.java\",\n" +
            "    \"line\" : 29\n" +
            "  }\n" +
            "}";

    @Test(expected = ParseException.class)
    public void testDeserializationRegression() throws ParseException {
        LogEventParser parser = new JsonLogEventParser();
        // Attempt to parse the input string, expecting a ParseException
        LogEvent logEvent = parser.parseFrom(inputString.getBytes(StandardCharsets.UTF_8));
        assertNotNull("The parsed log event should not be null", logEvent);
    }
}
