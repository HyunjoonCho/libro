
import org.apache.commons.codec.binary.Base64InputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;

public class Base64InputStreamTest {

    @Test(expected = ArrayIndexOutOfBoundsException.class)
    public void testBase64InputStreamArrayIndexOutOfBounds() {
        // Generate a large input byte array that will cause the Base64InputStream to iterate over it many times
        byte[] input = new byte[32768]; // Adjust size if needed to hit the bug

        // Fill the input with any data, for example, repeating pattern
        for (int i = 0; i < input.length; i++) {
            input[i] = (byte)(i % 128); // Use a simple repeating pattern
        }

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(input);
        Base64InputStream base64InputStream = new Base64InputStream(byteArrayInputStream, true, 0, null);

        int n = 0;
        try {
            // Read bytes from Base64InputStream to trigger the error
            while (base64InputStream.read() != -1) {
                n++;
            }
        } catch (IOException e) {
            System.out.println("Number of successful reads: " + n);
            e.printStackTrace();
        }
    }
}
