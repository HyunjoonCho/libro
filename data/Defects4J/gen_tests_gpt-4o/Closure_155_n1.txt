public void testOverzealousArgumentsOptimisation() {
    // Define a JavaScript engine
    ScriptEngine engine = new ScriptEngineManager().getEngineByName("nashorn");

    // Define the original and optimized scripts
    String originalScript = "function d3_call(callback) {" +
                            "   var f = callback;" +
                            "   arguments[0] = this;" +
                            "   return f.apply(this, arguments);" +
                            "}" +
                            "var result;" +
                            "var callback = function(a) { result = a; };" +
                            "var obj = {};" +
                            "d3_call.call(obj, callback);" +
                            "result === obj;";
    
    String optimizedScript = "function d3_call(a){" +
                             "   arguments[0]=this;" +
                             "   return a.apply(this,arguments);" +
                             "};" +
                             "var result;" +
                             "var callback = function(a) { result = a; };" +
                             "var obj = {};" +
                             "d3_call.call(obj, callback);" +
                             "result === obj;";
    
    try {
        // Evaluate original script
        Boolean originalResult = (Boolean) engine.eval(originalScript);
        assertTrue("Original script should return true", originalResult);

        // Evaluate optimized script
        Boolean optimizedResult = (Boolean) engine.eval(optimizedScript);
        assertFalse("Optimized script should return false", optimizedResult);

    } catch (ScriptException e) {
        fail("Script execution failed: " + e.getMessage());
    }
}