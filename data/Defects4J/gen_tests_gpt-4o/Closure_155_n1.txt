script
function d3_call(callback) {
  var f = callback;
  arguments[0] = this;
  f.apply(this, arguments);
  return this;
}

function d3_call_optimized(a) {
  arguments[0] = this;
  a.apply(this, arguments);
  return this;
}

describe('d3_call function', function() {
  it('should retain the original function argument', function() {
    var context = { value: 42 };
    var calledWith = null;

    function testCallback() {
      calledWith = Array.from(arguments);
    }

    // Using the original unoptimized function
    d3_call.call(context, testCallback, "arg1");

    // calledWith should have 'this' context as the first argument and "arg1" as the second
    expect(calledWith).toEqual([context, "arg1"]);

    // Reset calledWith for next test
    calledWith = null;

    // Using the optimized function which has the bug
    d3_call_optimized.call(context, testCallback, "arg1");

    // calledWith is incorrectly modified by the optimization
    // Should fail due to incorrect optimization
    expect(calledWith).toEqual([context, "arg1"]);
  });
});
