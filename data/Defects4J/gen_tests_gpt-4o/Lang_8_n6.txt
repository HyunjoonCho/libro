
import org.apache.commons.lang3.time.FastDateFormat;
import org.junit.Test;

import java.util.Calendar;
import java.util.TimeZone;

import static org.junit.Assert.assertTrue;

public class FastDateFormatTimeZoneTest {

    @Test
    public void testTimeZoneRespectWithCalendar() {
        // Set up a calendar in a specific timezone
        Calendar calendarEastern = Calendar.getInstance(TimeZone.getTimeZone("US/Eastern"));
        
        // Use FastDateFormat to format the calendar's time
        // Expect the time zone to be respected (should show EST/EDT instead of the system default)
        String formattedEastern = FastDateFormat.getInstance("h:mma z").format(calendarEastern);
        
        // Check if the formatted string contains the Eastern timezone name (e.g., EST or EDT)
        assertTrue("Expected timezone EST or EDT, but got: " + formattedEastern, 
                   formattedEastern.endsWith("EST") || formattedEastern.endsWith("EDT"));
        
        // Set up another calendar in a different timezone
        Calendar calendarPacific = Calendar.getInstance(TimeZone.getTimeZone("US/Pacific"));
        
        // Use FastDateFormat to format the calendar's time
        String formattedPacific = FastDateFormat.getInstance("h:mma z").format(calendarPacific);
        
        // Check if the formatted string contains the Pacific timezone name (e.g., PST or PDT)
        assertTrue("Expected timezone PST or PDT, but got: " + formattedPacific, 
                   formattedPacific.endsWith("PST") || formattedPacific.endsWith("PDT"));
    }
}
