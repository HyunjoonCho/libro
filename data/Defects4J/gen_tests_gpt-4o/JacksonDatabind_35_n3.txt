
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.annotation.JsonTypeInfo.As;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.DeserializationFeature;

import org.junit.Test;
import static org.junit.Assert.*;

public class JacksonObjectAndTypeIdTest {

    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = As.WRAPPER_OBJECT)
    @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
    static class Wrapper {
        public int id;
        public String name;

        public Wrapper() {
        }

        public Wrapper(int id, String name) {
            this.id = id;
            this.name = name;
        }
    }

    @Test
    public void testObjectAndTypeIdWithWrapper() throws Exception {
        Wrapper initialWrapper = new Wrapper(1, "test");

        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.enable(SerializationFeature.INDENT_OUTPUT);
        objectMapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);

        // Serialize the object
        String json = objectMapper.writeValueAsString(initialWrapper);

        // Deserialize the object
        Wrapper parsedWrapper = objectMapper.readValue(json, Wrapper.class);

        // Check that object is correctly serialized and deserialized
        assertEquals(initialWrapper.id, parsedWrapper.id);
        assertEquals(initialWrapper.name, parsedWrapper.name);
    }
}
