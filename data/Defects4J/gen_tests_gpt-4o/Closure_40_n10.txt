
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

import static org.junit.Assert.assertFalse;

public class SmartNameRemovalTest {

    @Test
    public void testSmartNameRemovalCompilerCrash() {
        String code = "var goog = {};\n" +
                      "goog.inherits = function(x, y) {};\n" +
                      "var ns = {};\n" +
                      "/** @constructor */ ns.PageSelectionModel = function(){};\n" +
                      "/** @constructor */ \n" +
                      "ns.PageSelectionModel.FooEvent = function() {};\n" +
                      "/** @constructor */ \n" +
                      "ns.PageSelectionModel.SelectEvent = function() {};\n" +
                      "goog.inherits(ns.PageSelectionModel.ChangeEvent, ns.PageSelectionModel.FooEvent);";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setLanguageIn(CompilerOptions.LanguageMode.ECMASCRIPT_NEXT);
        options.setLanguageOut(CompilerOptions.LanguageMode.ECMASCRIPT5);
        options.setClosurePass(true);
        options.setProcessCommonJSModules(true);
        options.setRemoveUnusedVariables(CompilerOptions.Reach.LOCAL_ONLY);
        options.setVariableRenaming(CompilerOptions.VariableRenaming.ALL);

        Result result = compiler.compile(CompilerOptions.nullCompilerOptions(), 
                                         CompilerOptions.externsForTesting(Arrays.asList("var goog;")), 
                                         Arrays.asList(SourceFile.fromCode("input.js", code)), options);

        // Assert that the compiler didn't crash (result should be successful)
        assertFalse("Compiler should not crash", result.errors.length > 0);
    }
}
