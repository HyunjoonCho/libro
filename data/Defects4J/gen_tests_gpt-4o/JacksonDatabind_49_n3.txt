
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class JsonIdentityInfoTest {

    public static class Foo {

        @JsonIdentityReference(alwaysAsId = true)
        public Bar bar1;

        @JsonIdentityReference
        public Bar bar2;
    }

    @JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class)
    public static class Bar {
    }

    @Test
    public void testJsonIdentityInfoSerialization() throws Exception {
        ObjectMapper mapper = new ObjectMapper();

        // Create structure to serialize
        Foo mo = new Foo();
        mo.bar1 = new Bar();
        mo.bar2 = mo.bar1;

        // Serialize it
        String jsonOutput = mapper.writeValueAsString(mo);
        
        // Expected output where both bar1 and bar2 reference the same Bar object id
        String expectedOutput = "{\"bar1\":1,\"bar2\":1}";

        // Assert the output matches the expected string
        assertEquals(expectedOutput, jsonOutput);
    }
}
