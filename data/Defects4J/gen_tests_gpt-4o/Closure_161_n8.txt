
import com.google.javascript.jscomp.*;

public class PeepholeConstantsFoldingTest extends CompilerTestCase {
    
    @Override
    protected CompilerPass getProcessor(Compiler compiler) {
        return new PeepholeOptimizationsPass(compiler, new PeepholeRemoveDeadCode(), new PeepholeFoldConstants());
    }

    @Override
    protected int getNumRepetitions() {
        return 1; // Run once for test
    }
    
    public void testArrayIndexOptimization() {
        String input = 
            ""
            + "var Mdt=[];\n"
            + "Mdt[11] = ['22','19','19','16','21','18','16','20','17','17','21','17'];";

        // There should be no error regarding index out of bounds 
        // Ensure no advanced optimization erroneously triggers an error
        testSame(input);
    }
    
    public static void main(String[] args) {
        PeepholeConstantsFoldingTest test = new PeepholeConstantsFoldingTest();
        test.setUp();
        test.testArrayIndexOptimization();
        test.tearDown();
    }
}
