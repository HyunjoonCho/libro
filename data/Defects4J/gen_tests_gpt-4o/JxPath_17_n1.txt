
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import static org.junit.Assert.*;

public class NamespacedAttributeTest {

    @Test
    public void testNamespacedAttributeSelectionWithWildcard() throws Exception {
        String xmlInput = "<xml xmlns:x='foo' x:pop='a'/>";

        // Parse the XML input
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document document = builder.parse(new java.io.ByteArrayInputStream(xmlInput.getBytes("UTF-8")));

        // Set up XPath
        XPathFactory xPathFactory = XPathFactory.newInstance();
        XPath xpath = xPathFactory.newXPath();

        // XPath expression
        String expression = "/xml/@*";

        // Evaluate XPath expression
        XPathExpression xPathExpression = xpath.compile(expression);
        Node attributeNode = (Node)xPathExpression.evaluate(document, XPathConstants.NODE);

        // Validate the result
        assertNotNull("The attribute should be selected by the wildcard", attributeNode);
        assertEquals("x:pop", attributeNode.getNodeName());
        assertEquals("a", attributeNode.getNodeValue());
    }
}
