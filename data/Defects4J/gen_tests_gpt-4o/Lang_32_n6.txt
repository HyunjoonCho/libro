
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;

public class ToStringStyleMemoryLeakTest {

    public static class DummyClass {
        private int id;
        private String name;

        public DummyClass(int id, String name) {
            this.id = id;
            this.name = name;
        }

        @Override
        public String toString() {
            // Using ToStringBuilder can trigger the initialization of ThreadLocal in ToStringStyle
            return new ToStringBuilder(this, ToStringStyle.DEFAULT_STYLE)
                    .append("id", id)
                    .append("name", name)
                    .toString();
        }
    }

    public static void main(String[] args) throws InterruptedException {
        // Simulate the application loading and unloading
        for (int i = 0; i < 1000; i++) {
            simulateWebAppReload();
            // After each reload, a profiling tool would show that ThreadLocals are not being cleaned up
        }
    }

    private static void simulateWebAppReload() {
        DummyClass obj = new DummyClass(1, "Test");
        obj.toString(); // Trigger the use of ToStringBuilder and initialization of ThreadLocal
        // Normally, in a real application reload, you might need to handle class unloading
    }
}
