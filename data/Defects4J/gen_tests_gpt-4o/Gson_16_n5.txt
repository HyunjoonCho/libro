
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import org.junit.Test;

public class GsonTypeVariableRecursionTest {

    private static class TestType<T> {
        TestType<? super T> superType;
    }

    @Test(expected = StackOverflowError.class)
    public void testTypeVariableRecursionCausesStackOverflowError() {
        // Create an instance of Gson
        Gson gson = new Gson();

        // Attempt to get the adapter for TestType<? super X> where X would be some unknown type
        // This should cause a StackOverflowError due to recursive type variable resolution
        gson.getAdapter(TypeToken.get(new TestType<Object>(){}.getClass()));
    }
}
