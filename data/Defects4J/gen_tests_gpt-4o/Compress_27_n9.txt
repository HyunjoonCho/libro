
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;

import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;
import org.junit.Test;
import static org.junit.Assert.*;

public class TarGzTest {

    @Test
    public void testExtractNoFileOwner() {
        TarArchiveInputStream tarInputStream = null;

        try {
            // Download the file from the provided URL to a local path
            String fileUrl = "http://heli0s.darktech.org/redis/2.8.3_1/redis-dist-2.8.3_1-linux.tar.gz";
            File tarGzFile = downloadFile(fileUrl);

            tarInputStream = new TarArchiveInputStream(
                new GzipCompressorInputStream(
                    new FileInputStream(tarGzFile)
                )
            );

            TarArchiveEntry entry;
            while ((entry = tarInputStream.getNextTarEntry()) != null) {
                System.out.println("Entry Name: " + entry.getName());
                System.out.println("User/Group: " + entry.getUserName() + "/" + entry.getGroupName());
                
                // Check if any entry has null or empty user/group name
                assertNotNull("User name should not be null", entry.getUserName());
                assertNotNull("Group name should not be null", entry.getGroupName());
            }

        } catch (FileNotFoundException e) {
            fail("File not found: " + e.getMessage());
        } catch (IOException e) {
            fail("Exception during tar extraction: " + e.getMessage());
        } finally {
            if (tarInputStream != null) {
                try {
                    tarInputStream.close();
                } catch (IOException e) {
                    System.err.println("Error closing tarInputStream: " + e.getMessage());
                }
            }
        }
    }

    private File downloadFile(String urlStr) throws IOException {
        URL url = new URL(urlStr);
        File tempFile = File.createTempFile("redis-dist", ".tar.gz");
        try (FileInputStream in = (FileInputStream) url.openStream();
             FileOutputStream out = new FileOutputStream(tempFile)) {
            byte[] buffer = new byte[1024];
            int bytesRead;
            while ((bytesRead = in.read(buffer)) != -1) {
                out.write(buffer, 0, bytesRead);
            }
        }
        return tempFile;
    }
}
