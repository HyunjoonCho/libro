
import org.apache.commons.math3.genetics.ElitisticListPopulation;
import org.apache.commons.math3.genetics.Chromosome;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

public class ElitisticListPopulationTest {

    @Test(expected = IllegalArgumentException.class)
    public void testElitismRateTooLowInConstructor() {
        List<Chromosome> chromosomes = new ArrayList<>();
        // Attempt to create a population with an invalid elitism rate (-0.1)
        new ElitisticListPopulation(chromosomes, 10, -0.1);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testElitismRateTooHighInConstructor() {
        List<Chromosome> chromosomes = new ArrayList<>();
        // Attempt to create a population with an invalid elitism rate (1.1)
        new ElitisticListPopulation(chromosomes, 10, 1.1);
    }

    // This test ensures that the constructor does not throw an exception for valid values
    @Test
    public void testElitismRateValidInConstructor() {
        List<Chromosome> chromosomes = new ArrayList<>();
        // Create a population with a valid elitism rate (0.5)
        ElitisticListPopulation population = new ElitisticListPopulation(chromosomes, 10, 0.5);
    }
}
