public void testSimplexSolver() {
    LinearObjectiveFunction objectiveFunction = new LinearObjectiveFunction(new double[]{7, 3, 0, 0}, 0);

    Collection<LinearConstraint> constraints = new ArrayList<>();
    constraints.add(new LinearConstraint(new double[]{1, 0, 0, 0}, Relationship.LEQ, 1));
    constraints.add(new LinearConstraint(new double[]{0, 1, 0, 0}, Relationship.LEQ, 1));
    constraints.add(new LinearConstraint(new double[]{3, 0, -5, 0}, Relationship.LEQ, 0));
    constraints.add(new LinearConstraint(new double[]{2, 0, 0, -5}, Relationship.LEQ, 0));
    constraints.add(new LinearConstraint(new double[]{0, 2, -5, 0}, Relationship.LEQ, 0));
    constraints.add(new LinearConstraint(new double[]{0, 3, 0, -5}, Relationship.LEQ, 0));
    constraints.add(new LinearConstraint(new double[]{3, 2, 0, 0}, Relationship.LEQ, 5));
    constraints.add(new LinearConstraint(new double[]{2, 3, 0, 0}, Relationship.LEQ, 5));

    SimplexSolver solver = new SimplexSolver();
    RealPointValuePair result = solver.optimize(objectiveFunction, constraints, GoalType.MAXIMIZE, true);

    assertEquals(1.0, result.getPoint()[0], 1e-6);  // a = 1
    assertEquals(1.0, result.getPoint()[1], 1e-6);  // b = 1
    assertEquals(10.0, result.getValue(), 1e-6);    // Value = 10
}