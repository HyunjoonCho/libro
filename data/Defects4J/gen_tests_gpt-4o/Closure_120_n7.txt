public void testOverzealousOptimization() {
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

    String originalCode = "var uid;"
        + "function reset() {"
        + "  uid = Math.random();"
        + "}"
        + "function doStuff() {"
        + "  reset();"
        + "  var _uid = uid;"
        + "  if (uid < 0.5) {"
        + "    doStuff();"
        + "  }"
        + "  if (_uid !== uid) {"
        + "    throw 'reset() was called';"
        + "  }"
        + "}"
        + "doStuff();";

    Compiler compiler = new Compiler();
    compiler.compile(SourceFile.fromCode("externs.js", ""), 
                     SourceFile.fromCode("input.js", originalCode), 
                     options);

    String optimizedCode = compiler.toSource();

    boolean uidVarExists = optimizedCode.contains("var _uid");
    boolean resetConditionExists = optimizedCode.contains("!==");

    assertFalse("Optimization should not remove '_uid' variable", !uidVarExists);
    assertFalse("Optimization should not simplify the comparison incorrectly", !resetConditionExists);
}