
import java.io.BufferedReader;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;

public class ExtendedBufferReaderTest {

    public static void main(String[] args) {
        try {
            testExtendedBufferReaderLineCount();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void testExtendedBufferReaderLineCount() throws IOException {
        String input = "Line 1\nLine 2\rLine 3\r\nLine 4";
        StringReader stringReader = new StringReader(input);
        ExtendedBufferReader reader = new ExtendedBufferReader(stringReader);

        int expectedLineCount = 4;  // Four lines expected from input
        int actualLineCount = 0;

        while (reader.readLine() != null) {
            actualLineCount++;
        }

        if (expectedLineCount != actualLineCount) {
            throw new AssertionError("Expected line count: " + expectedLineCount + ", but got: " + actualLineCount);
        } else {
            System.out.println("Test passed: Correct number of lines counted.");
        }
    }
}

class ExtendedBufferReader extends BufferedReader {

    private int lineCount = 0;
    private boolean lastCharWasCR = false;

    public ExtendedBufferReader(Reader in) {
        super(in);
    }

    @Override
    public String readLine() throws IOException {
        String line = super.readLine();
        if (line != null) {
            lineCount++;
        }
        return line;
    }

    @Override
    public int read() throws IOException {
        int ch = super.read();
        if (ch == '\n' && !lastCharWasCR) {
            lineCount++;
        }
        if (ch == '\r') {
            lineCount++;
            lastCharWasCR = true;
        } else {
            lastCharWasCR = false;
        }
        return ch;
    }

    public int getLineCount() {
        return lineCount;
    }
}
