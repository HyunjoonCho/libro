public void testBracketingNthOrderBrentSolverStuckUpdatingBoundary() {
    UnivariateFunction function = new UnivariateFunction() {
        @Override
        public double value(double x) {
            if (x == 12500.0) {
                return 3.7e-16;
            } else if (x == 12500.03) {
                return -7.0e-5;
            } else {
                return Double.NaN; // Example to simplify since exact function details aren't given
            }
        }
    };

    BracketingNthOrderBrentSolver solver = new BracketingNthOrderBrentSolver(1e-10, 1e-14, 5);
    try {
        // Trigger the state where it repeatedly tries to update the same boundary
        solver.solve(100, function, 12500.0, 12500.03);
        fail("Expected MaxCountExceededException to be thrown");
    } catch (MaxCountExceededException ex) {
        // Test passes because it demonstrates the solver gets stuck
    }
}