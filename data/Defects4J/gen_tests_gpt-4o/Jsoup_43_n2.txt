
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.junit.Test;
import static org.junit.Assert.*;

public class ElementSiblingIndexTest {

    @Test
    public void testElementSiblingIndexBehavior() {
        String html = "<table>" +
                      "  <tr><td>Cell1</td><td>Cell2</td></tr>" +
                      "  <tr><td>Cell3</td><td>Cell4</td></tr>" +
                      "  <tr><td>Cell1</td><td>Cell2</td></tr>" + // Duplicate row
                      "  <tr><td>Cell5</td><td>Cell6</td></tr>" +
                      "  <tr><td>Cell1</td><td>Cell2</td></tr>" + // Duplicate row
                      "</table>";

        Document document = Jsoup.parse(html);
        Element table = document.select("table").first();

        Element firstDuplicateRow = table.select("tr").get(0); // First occurrence of duplicated <tr>
        Element secondDuplicateRow = table.select("tr").get(2); // Second occurrence of duplicated <tr>
        Element thirdDuplicateRow = table.select("tr").get(4);  // Third occurrence of duplicated <tr>

        int firstIndex = firstDuplicateRow.elementSiblingIndex();
        int secondIndex = secondDuplicateRow.elementSiblingIndex();
        int thirdIndex = thirdDuplicateRow.elementSiblingIndex();

        // Validate unexpected behavior
        assertEquals(firstIndex, secondIndex); // This is unexpected based on documentation
        assertEquals(firstIndex, thirdIndex);  // This is unexpected based on documentation

        // Correct according to actual behavior
        assertEquals(firstDuplicateRow, table.child(firstIndex));
        assertEquals(secondDuplicateRow, table.child(secondIndex));
        assertEquals(thirdDuplicateRow, table.child(thirdIndex));
    }
}
