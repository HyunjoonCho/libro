
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolver;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class BrentSolverTest {

    @Test
    public void testSolverWithBracketEndpointAsRoot() {
        UnivariateRealFunction function = new UnivariateRealFunction() {
            @Override
            public double value(double x) {
                return x * x - 4; // Roots are at x=-2 and x=2
            }
        };

        UnivariateRealSolver solver = new BrentSolver();
        
        // Test with bracket endpoints [2, 3], where 2 is a root
        double result = solver.solve(100, function, 2, 3);

        // Expect the solver to return the root, which is 2
        assertEquals(2.0, result, 1e-6);

        // Test with bracket endpoints [-3, -2], where -2 is a root
        result = solver.solve(100, function, -3, -2);

        // Expect the solver to return the root, which is -2
        assertEquals(-2.0, result, 1e-6);
    }
}
