
import static org.junit.Assert.*;
import org.junit.Test;

public class ClosureCompilerTest {

    // Mock function to simulate behavior of JavaScript function
    private boolean closureCompilerTest(String someNodeId) {
        String nodeId;
        if ((nodeId = someNodeId) != null && (nodeId = String.valueOf(Integer.parseInt(nodeId.substring(1)))) != null) {
            return Integer.parseInt(nodeId) > 0;
        }
        return false;
    }

    @Test
    public void testClosureCompilerFunction() {
        // Test case 1: Valid nodeId with a positive integer value
        assertTrue(closureCompilerTest("x123"));

        // Test case 2: nodeId with non-numeric value
        assertFalse(closureCompilerTest("xabc"));

        // Test case 3: nodeId with negative integer value
        assertFalse(closureCompilerTest("x-123"));

        // Test case 4: nodeId with zero value
        assertFalse(closureCompilerTest("x0"));

        // Test case 5: nodeId is null
        assertFalse(closureCompilerTest(null));
    }
}
