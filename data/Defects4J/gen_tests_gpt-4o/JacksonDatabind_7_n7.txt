
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.util.TokenBuffer;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class TokenBufferDeserializationTest {

    public static class Value {

        @JsonCreator
        public static Value from(TokenBuffer buffer) throws Exception {
            try (JsonParser parser = buffer.asParser()) {
                JsonToken firstToken = parser.nextToken();
                assertEquals(JsonToken.START_OBJECT, firstToken);

                JsonToken token = parser.nextToken();
                assertEquals(JsonToken.FIELD_NAME, token);

                return new Value();
            }
        }
    }

    @Test
    public void testDeserializationWithTokenBuffer() throws Exception {
        String json = "{ \"a\":1, \"b\":null }";
        ObjectMapper mapper = new ObjectMapper();

        Value value = mapper.readValue(json, Value.class);
        
        // Validate the deserialization process to ensure it's correct
        assertTrue(value != null);
    }
}
