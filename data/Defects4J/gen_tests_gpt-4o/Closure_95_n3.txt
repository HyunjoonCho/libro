
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class GlowLibraryTest {

    @Test
    public void testPublicAnnotationsPreventCompression() {
        // Simulating the internal structure of Glow
        GlowLibrary glow = new GlowLibrary();
        glow.createVersions(); // Mimics Glow.versions = [1, 2, 3]
        
        // Simulate the user modifying the exposed API
        glow.versionsPublic = new int[]{4, 5, 6}; // Glow.versions = [4, 5, 6]

        // Evaluating if the modification affects function call
        String result = glow.showVersions();
        
        // Expected behavior based on the user's input
        assertEquals("4,5,6", result);

        // Internally this should have made use of `versionsPublic` 
        // instead of compressed property like `a`.
    }

    // Simulating the Glow object structure
    class GlowLibrary {
        // This represents the version array in a public manner
        public int[] versionsPublic;
        
        public void createVersions() {
            // Initial array - in reality this would mimic Glow.versions being set
            this.versionsPublic = new int[]{1, 2, 3};
        }
        
        public String showVersions() {
            // Intended to mimic Glow.showVersions = function() { alert(Glow.versions); }
            // Here we return String representation instead of alerting
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < versionsPublic.length; i++) {
                sb.append(versionsPublic[i]);
                if (i < versionsPublic.length - 1) {
                   sb.append(",");
                }
            }
            return sb.toString();
        }
    }
}
