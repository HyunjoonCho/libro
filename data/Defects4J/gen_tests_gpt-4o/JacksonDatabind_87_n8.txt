
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class StdDateFormatTimezoneTest {

    @Test
    public void testDateDeserializationWithConfiguredTimezone() throws Exception {
        // Configure the ObjectMapper with a specific timezone (GMT+2)
        ObjectMapper mapper = new ObjectMapper();
        TimeZone configuredTimeZone = TimeZone.getTimeZone("GMT+2");
        mapper.setTimeZone(configuredTimeZone);
        mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX"));

        // Deserialize a date string without timezone info
        Date date = mapper.readValue("\"1970-01-01T00:00:00.000\"", Date.class);

        // Format the date to a string with timezone info for comparison
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX");
        sdf.setTimeZone(configuredTimeZone);
        String formattedDate = sdf.format(date);

        // The expected behavior, prior to version 2.8.9, was that the date would be parsed using the configured timezone
        String expectedDateString = "1970-01-01T00:00:00.000+02:00";

        assertEquals(expectedDateString, formattedDate);
    }
}
