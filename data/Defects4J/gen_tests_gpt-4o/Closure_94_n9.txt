
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import java.util.Arrays;
import static org.junit.Assert.*;

public class ClosureCompilerTest {
    
    @Test
    public void testDefineAnnotationWithLineBreaks() {
        String jsCode = "/** @define {string} */\n"
                + "var CONSTANT = \"some very long string name that I want to wrap \" +\n"
                + " \"and so break using a + since I don't want to \" +\n"
                + " \"introduce a newline into the string.\";";
        
        CompilerOptions options = new CompilerOptions();
        CommandLineRunner.setUpOptionsForCompilationLevel(options, CommandLineRunner.Level.SIMPLE_OPTIMIZATIONS);

        com.google.javascript.jscomp.Compiler compiler = new com.google.javascript.jscomp.Compiler();
        compiler.compile(
                SourceFile.fromCode("externs.js", ""),
                SourceFile.fromCode("test.js", jsCode),
                options
        );

        // The test will check for errors during compilation
        assertEquals(0, compiler.getErrorCount());
    }
}
