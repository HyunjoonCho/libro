
import org.apache.commons.collections4.Frequency;
import org.junit.Test;

public class FrequencyTest {

    @Test(expected = IllegalArgumentException.class)
    public void testAddNonComparableObject() {
        Frequency f = new Frequency();
        final Object nonComparableObject = new Object();
        
        // Attempt to add a non-Comparable object should fail
        f.addValue(nonComparableObject);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testGetCumFreqWithNonComparableObject() {
        Frequency f = new Frequency();
        final Object nonComparableObject = new Object();

        // This will add a Comparable value first
        f.addValue(1);
        
        // Attempt to get cumulative frequency for a non-Comparable object
        f.getCumFreq(nonComparableObject);
    }

    @Test
    public void testGetCountAndPctWithNonComparableObject() {
        Frequency f = new Frequency();
        final Object nonComparableObject = new Object();

        f.addValue(nonComparableObject);

        // The count should be 0 as the object is not Comparable
        assertEquals(0, f.getCount(nonComparableObject));

        // The percentage should be 0 as the object is not Comparable
        assertEquals(0.0, f.getPct(nonComparableObject), 0.0);
    }
}
