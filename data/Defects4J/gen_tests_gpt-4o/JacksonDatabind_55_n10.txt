
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;
import static org.junit.Assert.*;

import java.util.EnumMap;
import java.util.Map;

public class EnumMapJsonPropertyTest {

    enum Status {
        @JsonProperty("Active")
        ACTIVE,
        @JsonProperty("Inactive")
        INACTIVE
    }

    @Test
    public void testEnumMapSerialization() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        Map<Status, String> statusMap = new EnumMap<>(Status.class);
        statusMap.put(Status.ACTIVE, "active status description");
        statusMap.put(Status.INACTIVE, "inactive status description");

        String jsonOutput = mapper.writeValueAsString(statusMap);
        System.out.println(jsonOutput);

        // Check if the JSON output uses the @JsonProperty values instead of the enum names
        assertTrue(jsonOutput.contains("\"Active\""));
        assertTrue(jsonOutput.contains("\"Inactive\""));
        assertFalse(jsonOutput.contains("ACTIVE"));
        assertFalse(jsonOutput.contains("INACTIVE"));
    }
}
