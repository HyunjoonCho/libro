
import static org.junit.Assert.assertFalse;

import java.io.StringReader;

import javax.xml.parsers.DocumentBuilderFactory;

import org.apache.commons.jxpath.JXPathContext;
import org.junit.Test;
import org.xml.sax.InputSource;

public class JXPathBinaryOperatorsTest {

    @Test
    public void testBinaryOperatorsWithEmptyNodeSet() throws Exception {
        // Create an empty XML document with a root element <doc/>
        String xmlContent = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><doc/>";
        
        // Parse the XML document to a DOM object
        JXPathContext pathContext = JXPathContext.newContext(
            DocumentBuilderFactory.newInstance()
                .newDocumentBuilder()
                .parse(new InputSource(new StringReader(xmlContent)))
        );

        // Evaluate the XPath expression "2.0 > child1"
        // It should return false because 'child1' node does not exist
        Boolean result = (Boolean) pathContext.getValue("2.0 > child1", Boolean.class);

        // Assert that the result of comparison is false
        // due to the absence of 'child1' node which results in an empty node-set
        assertFalse("The comparison should be false since 'child1' node does not exist", result);
    }
}

