
import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.doNothing;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.mockito.ArgumentCaptor;

public class ArgumentCaptorVarargsTest {

    // Sample service interface
    public interface SampleService {
        void process(String... args);
    }

    private SampleService sampleService;

    @Before
    public void setUp() {
        // Mock the SampleService
        sampleService = mock(SampleService.class);
    }

    @Test
    public void testArgumentCaptorWithVarargs() {
        // Arrange: Set up the mock to do nothing for demonstration
        doNothing().when(sampleService).process((String[]) null);

        // Act: Call the method with some arguments
        sampleService.process("one", "two", "three");

        // Capture the arguments using ArgumentCaptor
        ArgumentCaptor<String> argumentCaptor = ArgumentCaptor.forClass(String.class);
        verify(sampleService).process(argumentCaptor.capture());

        // Assert: Verify the captured arguments
        List<String> capturedArguments = argumentCaptor.getAllValues();
        assertEquals(3, capturedArguments.size());
        assertEquals("one", capturedArguments.get(0));
        assertEquals("two", capturedArguments.get(1));
        assertEquals("three", capturedArguments.get(2));
    }
}
