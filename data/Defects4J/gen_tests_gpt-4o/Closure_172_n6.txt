
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import java.util.Collections;

import static org.junit.Assert.assertFalse;

public class PrototypeTypeInferenceTest {

    @Test
    public void testPrototypeTypeInference() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();

        String code = "function f(a) { a.prototype = '__proto'; }" +
                      "function g(a) { a.prototype = function(){}; }";

        SourceFile input = SourceFile.fromCode("test.js", code);

        Result result = compiler.compile(Collections.emptyList(), Collections.singletonList(input), options);

        for (JSError error : result.warnings) {
            System.out.println("Warning: " + error);
        }

        for (JSError error : result.errors) {
            System.out.println("Error: " + error);
        }

        // Expect no errors related to type inference for the assignment to prototype
        assertFalse("Expected no type inference errors but found some.", result.success == false);
    }
}
