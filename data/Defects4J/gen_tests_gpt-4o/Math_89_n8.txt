
import org.junit.Test;
import org.apache.commons.math3.stat.Frequency;

import static org.junit.Assert.*;

public class FrequencyTest {

    @Test(expected = ClassCastException.class)
    public void testAddNonComparableObject() {
        Frequency frequency = new Frequency();
        
        final Object nonComparableObject = new Object();
        
        // Since we expect an exception upon the second addition (as described in the bug report),
        // the proper fix should prevent even the first object from being added without error.
        frequency.addValue(nonComparableObject); // This should fail, but it does not according to the bug report
        
        // Attempting another operation should show the failure.
        frequency.addValue(nonComparableObject); // This should throw a ClassCastException
    }
    
    @Test
    public void testFrequencyReturnsZeroForNonComparableObject() {
        Frequency frequency = new Frequency();
        
        final Object nonComparableObject = new Object();
        frequency.addValue(nonComparableObject);
        
        assertEquals(0, frequency.getCount(nonComparableObject)); // As per bug report, should return 0
        assertEquals(0.0, frequency.getPct(nonComparableObject), 0.001); // As per bug report, should return 0.0
    }
}
