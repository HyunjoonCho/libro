
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import org.junit.Test;

import java.io.*;

import static org.junit.Assert.assertEquals;

public class ObjectReaderSerializationTest {

    @Test
    public void testObjectReaderSerialization() {
        ObjectMapper mapper = new ObjectMapper();
        ObjectReader reader = mapper.reader();

        try {
            // Serialize the ObjectReader
            ByteArrayOutputStream byteOutStream = new ByteArrayOutputStream();
            ObjectOutputStream outStream = new ObjectOutputStream(byteOutStream);
            outStream.writeObject(reader);

            // Deserialize the ObjectReader
            ByteArrayInputStream byteInStream = new ByteArrayInputStream(byteOutStream.toByteArray());
            ObjectInputStream inStream = new ObjectInputStream(byteInStream);
            ObjectReader deserializedReader = (ObjectReader) inStream.readObject();

            // Verify basic equality or reference preservation
            // We are not expecting a perfect equality, just that the deserialization doesn't throw an error
            assertEquals(reader.getFactory(), deserializedReader.getFactory());

        } catch (IOException | ClassNotFoundException e) {
            throw new AssertionError("Serialization or deserialization failed", e);
        }
    }
}
