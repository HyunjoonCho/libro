
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.JsonParser.Feature;
import org.junit.Test;

import java.math.BigDecimal;

public class JsonParserTest {

    @Test(expected = NumberFormatException.class)
    public void testNaNAsBigDecimal() throws Exception {
        JsonFactory factory = new JsonFactory();
        factory.configure(Feature.ALLOW_NON_NUMERIC_NUMBERS, true);

        String json = "[NaN]";
        
        try (JsonParser parser = factory.createParser(json)) {
            parser.nextToken(); // Start array
            parser.nextToken(); // Read NaN
            
            if (parser.getCurrentToken() == JsonToken.VALUE_NUMBER_FLOAT) {
                // Attempt to get NaN as BigDecimal, which should throw NumberFormatException
                parser.getDecimalValue();
            }
        }
    }
}
