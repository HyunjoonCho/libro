
import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.jsoup.nodes.FormElement;

import java.io.IOException;
import java.util.List;

public class JsoupFormTest {
    public static void main(String[] args) throws IOException {
        // Set up a mock HTML document for testing
        String html = "<html><body>"
                + "<form action='submit'>"
                + "<input type='text' name='alpha' value='value1'/>"
                + "<input type='text' name='beta' value='value2'/>"
                + "</form></body></html>";
        
        Document doc = Jsoup.parse(html);
        
        // Print HTML including "input[name=alpha]"
        System.out.println("Original Document:");
        System.out.println(doc.toString());
        
        Elements alphaInput = doc.select("input[name=alpha]");
        if (!alphaInput.isEmpty()) {
            alphaInput.first().remove();
        }
        
        // Print HTML excluding "input[name=alpha]"
        System.out.println("\nDocument after removing input[name=alpha]:");
        System.out.println(doc.toString());
        
        FormElement form = (FormElement) doc.select("form").first();
        
        // Print HTML excluding "input[name=alpha]"
        System.out.println("\nForm Element after removing input[name=alpha]:");
        System.out.println(form.toString());
        
        List<Connection.KeyVal> data = form.formData();
        
        // Print a list, expecting to exclude "alpha"
        System.out.println("\nForm Data:");
        System.out.println(data.toString());
        
        // Test assertion for reproduction
        boolean containsAlpha = data.stream()
                .anyMatch(keyVal -> keyVal.key().equals("alpha"));
        
        if (containsAlpha) {
            throw new AssertionError("Form data still contains 'alpha' key after it was removed from the document.");
        }
    }
}
