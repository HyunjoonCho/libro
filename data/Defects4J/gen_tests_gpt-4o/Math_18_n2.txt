public void testCMAESOptimizerBoundsPrecision() {
    double[] lowerBound = {0.0};
    double[] upperBound = {1.0};
    CMAESOptimizer optimizer = new CMAESOptimizer(10000, 1e-9, true, 0, 0, RandomSource.create(), false, new SimpleValueChecker(1e-9, 1e-9));

    MultivariateFunction objectiveFunction = point -> Math.pow(point[0] - 0.000001, 2);

    // Optimize near lower bound
    PointValuePair resultNearLower = optimizer.optimize(
        new MaxEval(10000),
        new ObjectiveFunction(objectiveFunction),
        GoalType.MINIMIZE,
        new InitialGuess(new double[]{0.0001}),
        SimpleBounds.unbounded(1), 
        OptimConfiguration.simplex(1).withLowerBounds(lowerBound).withUpperBounds(upperBound)
    );

    // Optimize near upper bound
    PointValuePair resultNearUpper = optimizer.optimize(
        new MaxEval(10000),
        new ObjectiveFunction(objectiveFunction),
        GoalType.MINIMIZE,
        new InitialGuess(new double[]{0.9999}),
        SimpleBounds.unbounded(1), 
        OptimConfiguration.simplex(1).withLowerBounds(lowerBound).withUpperBounds(upperBound)
    );

    double differenceInBounds = resultNearUpper.getPoint()[0] - resultNearLower.getPoint()[0];

    // Assert that the resolution difference is significant
    assertTrue("Resolution near bounds is not consistent: too coarse near upper bound", differenceInBounds > 1e-5);
}