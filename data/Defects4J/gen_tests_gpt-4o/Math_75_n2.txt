
import org.apache.commons.math3.stat.Frequency;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class FrequencyTest {

    @Test
    public void testGetPctUsingGetCumPct() {
        Frequency frequency = new Frequency();

        // Adding elements to the frequency object
        frequency.addValue("A");
        frequency.addValue("B");
        frequency.addValue("A");
        frequency.addValue("C");

        // Calculating percentage of 'A'
        double pctForAUsingDeprecated = frequency.getPct("A");
        double expectedPctForA = frequency.getCount("A") / (double) frequency.getSumFreq();

        // Assert that the deprecated method calls getCumPct instead of getPct
        double cumulativePctForA = frequency.getCumPct("A");

        // Verifying that the deprecated method's result matches getCumPct's result
        assertEquals("The deprecated getPct(Object) method should return cumulative percentage, not frequency percentage", cumulativePctForA, pctForAUsingDeprecated, 1e-9);

        // Additional verification to confirm the expected behavior of the new getPct method
        double pctForAUsingNewMethod = frequency.getPct((Comparable<?>) "A");
        assertEquals("The new getPct(Comparable) method should return the frequency percentage", expectedPctForA, pctForAUsingNewMethod, 1e-9);
    }
}
