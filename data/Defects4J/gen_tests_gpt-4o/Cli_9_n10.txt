
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.MissingOptionException;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class MissingOptionExceptionTest {

    @Test
    public void testMissingOptionExceptionMessage() {
        // Setup command line options
        Options options = new Options();
        options.addOption(Option.builder("format")
                .desc("The format option")
                .hasArg()
                .required()
                .build());
        options.addOption(Option.builder("source")
                .desc("The source option")
                .hasArg()
                .required()
                .build());
        options.addOption(Option.builder("properties")
                .desc("The properties option")
                .hasArg()
                .required()
                .build());

        DefaultParser parser = new DefaultParser();
        String[] args = new String[]{}; // No args provided to simulate missing options

        try {
            CommandLine cmd = parser.parse(options, args);
        } catch (MissingOptionException e) {
            // Check if the error message contains the bug mentioned
            String expectedMessageCLI11 = "Missing required options: formatsourceproperties";
            assertEquals(expectedMessageCLI11, e.getMessage());
        }
    }
}
