
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.w3c.dom.Document;
import org.xml.sax.InputSource;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.StringReader;
import static org.junit.Assert.*;

public class JXPathNamespaceTest {

    @org.junit.Test
    public void testDefaultNamespaceResetIssue() throws Exception {
        // Sample XML content as described in the bug report
        String xml = "<root xmlns:b='bla' xmlns='test111'>"
                   + "<b:foo>"
                   + "<b:bar>a</b:bar>"
                   + "<test xmlns=''></test>"
                   + "</b:foo>"
                   + "</root>";

        // Parse the XML string into a Document
        Document document = DocumentBuilderFactory.newInstance()
                                                  .newDocumentBuilder()
                                                  .parse(new InputSource(new StringReader(xml)));

        // Create the JXPath context
        JXPathContext context = JXPathContext.newContext(document);

        // Select the 'test' node
        Pointer pointer = context.getPointer("/root/b:foo/test");

        // For demonstration, print the path of the 'test' node
        String path = ((DOMNodePointer)pointer).asPath();
        
        // Assert the expected path to confirm correctness (loop prevention)
        // Adjust the expected value based on how the library should behave post-fix
        // As per the bug report, previously this might have failed with a loop, hence check if it completes
        assertEquals("/root/b:foo/test", path);
    }
}
