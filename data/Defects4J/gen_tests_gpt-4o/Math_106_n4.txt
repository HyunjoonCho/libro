
import org.apache.commons.math3.fraction.Fraction;
import org.apache.commons.math3.fraction.ProperFractionFormat;
import org.junit.Test;

import java.text.ParsePosition;

import static org.junit.Assert.*;

public class FractionParseTest {

    @Test
    public void testParseNegativeImproperFraction() {
        ProperFractionFormat properFormat = new ProperFractionFormat();

        // Test with source = "1 -1 / 2", expecting null because it's illogical
        String source1 = "1 -1 / 2";
        ParsePosition pos1 = new ParsePosition(0);
        Fraction result1 = properFormat.parse(source1, pos1);
        assertNull("Parsing should fail for illogical input '1 -1 / 2'", result1);
    }

    @Test
    public void testParseNegativeMixedFraction() {
        ProperFractionFormat properFormat = new ProperFractionFormat();

        // Test with source = "-1 -2 / 3", expecting null because it's illogical
        String source2 = "-1 -2 / 3";
        ParsePosition pos2 = new ParsePosition(0);
        Fraction result2 = properFormat.parse(source2, pos2);
        assertNull("Parsing should fail for illogical input '-1 -2 / 3'", result2);
    }

    @Test
    public void testParseFractionWithNegativeDenominator() {
        ProperFractionFormat properFormat = new ProperFractionFormat();

        // Test with source = "1 2 / -3", expecting null because it's illogical
        String source3 = "1 2 / -3";
        ParsePosition pos3 = new ParsePosition(0);
        Fraction result3 = properFormat.parse(source3, pos3);
        assertNull("Parsing should fail for illogical input '1 2 / -3'", result3);
    }
}
