
import static org.mockito.Mockito.*;
import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import static org.junit.Assert.*;

// Dummy Android-like class representing a TextView
class TextView {
    String text;

    TextView() {
        this.text = "";
    }

    void setText(String text) {
        this.text = text;
    }

    String getText() {
        return this.text;
    }
}

// Class containing TextViews where we want to inject mocks
class MyViewGroup {
    TextView txtGateView; // Target for correct injection
    TextView txtNextStep; // This should be injected with the mock
}

public class InjectMocksTest {
    @Mock
    TextView mockTextView; // Mock TextView to inject

    @InjectMocks
    MyViewGroup myViewGroup = new MyViewGroup();

    @Before
    public void setUp() {
        // Initialize Mockito annotations for injection
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testInjectMocksIncorrectField() {
        // Triggering the test which shows the bug in question
        assertNotNull(myViewGroup.txtNextStep); // This should be injected with mockTextView
        assertNull(myViewGroup.txtGateView); // This should remain null, as we're not injecting here

        // Verify that mockTextView was actually injected into txtNextStep
        myViewGroup.txtNextStep.setText("Hello World!");
        verify(mockTextView).setText("Hello World!");

        // Bug: This might insert into the wrong field, myViewGroup.txtGateView
    }
}
