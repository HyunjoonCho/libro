
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class JsonParserTest {

    @Test
    public void testEagerParsingWithoutSpaceShouldFail() {
        String json = "123true";
        JsonFactory factory = new JsonFactory();
        
        assertThrows(Exception.class, () -> {
            try (JsonParser parser = factory.createParser(json)) {
                JsonToken token = parser.nextToken();
                assertEquals(JsonToken.VALUE_NUMBER_INT, token, "Expected first token to be a number");
                
                token = parser.nextToken(); // It should fail here
                if (token != null) {
                    throw new IllegalStateException("Expected parsing to fail, but got token: " + token);
                }
            }
        });
    }
}
