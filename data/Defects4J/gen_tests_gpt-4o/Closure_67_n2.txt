public void testAdvancedCompilationFunctionRenaming() {
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    JSSourceFile input = JSSourceFile.fromCode("input.js", 
        "function A() {" +
        "  this._x = 1;" +
        "}" +
        "A.prototype['func1'] = " + // done to save public reference to func1
        "A.prototype.func1 = function() {" +
        "  this._x = 2;" +
        "  this.func2();" +
        "};" +
        "A.prototype.func2 = function() {" +
        "  this._x = 3;" +
        "  this.func3();" +
        "};" +
        "window['A'] = A;"
    );
    Result result = new Compiler().compile(ExternsSupplier.of(), input, options);
    assertFalse("Compilation should succeed without errors", result.success);
    assertNotNull("Function 'func2' should exist after compilation", FindFunctionInAST(result.compiledCode(), "func2"));
}