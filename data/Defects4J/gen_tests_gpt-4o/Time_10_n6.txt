
import org.joda.time.Days;
import org.joda.time.LocalDate;
import org.joda.time.MonthDay;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class DaysBetweenTest {

    @Test
    public void testDaysBetweenWithLocalDate() {
        final LocalDate january12012 = new LocalDate(2012, 1, 1);
        final LocalDate february292012 = new LocalDate(2012, 2, 29);

        // OK
        assertEquals(59, Days.daysBetween(january12012, february292012).getDays());
    }

    @Test
    public void testDaysBetweenWithMonthDay() {
        final MonthDay january1 = new MonthDay(1, 1);
        final MonthDay february29 = new MonthDay(2, 29);

        // This should pass if 2012 is correctly considered a leap year.
        // The bug is that it fails with an exception instead.
        try {
            assertEquals(59, Days.daysBetween(january1, february29).getDays());
            throw new AssertionError("Expected exception not thrown");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception due to bug
            assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
        }
    }
}
