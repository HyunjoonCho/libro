
import org.jsoup.Jsoup;
import org.jsoup.Connection;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.jsoup.parser.Parser;
import org.jsoup.parser.ParseSettings;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class FormElementTest {

    @Test
    public void testCheckboxWithoutValueGetsDefaultValue() {
        // HTML with checkbox checked without explicit value
        final String html = "<html>\n"
                + "    <head>\n"
                + "        <title>Test</title>\n"
                + "    </head>\n"
                + "    \n"
                + "    <body>\n"
                + "\n"
                + "    <form name=\"myForm\" method=\"POST\">\n"
                + "        <input type=\"checkbox\" name=\"testCheckBox\" checked=\"checked\" /> Something<br/>\n"
                + "\n"
                + "        <input type=\"submit\" value=\"Submit\" />\n"
                + "    </form>\n"
                + "\n"
                + "    </body>\n"
                + "</html>";

        // Parse the document
        Document document = Jsoup.parse(html);

        // Get the form element
        Element formElement = document.select("form[name=myForm]").first();

        if (formElement instanceof Connection.KeyVal) {
            List<Connection.KeyVal> data = (List<Connection.KeyVal>) formElement;
            boolean checkboxFound = false;
            for (Connection.KeyVal keyVal : data) {
                // Check if the checkbox is correctly parsed with a default value
                if (keyVal.key().equals("testCheckBox")) {
                    assertEquals("on", keyVal.value());
                    checkboxFound = true;
                }
            }
            // Ensure the checkbox is part of the form data
            assertTrue(checkboxFound);
        }
    }
}
