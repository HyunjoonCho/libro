public void testMissingTypeChecksWithPolymorphicTypeIds() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, true);
    String json = "{ \"@type\": \"java.util.HashMap\", \"key\": \"value\" }";
    
    try {
        JavaType type = mapper.getTypeFactory().constructFromCanonical("java.util.EnumMap<java.lang.Enum, java.lang.String>");
        mapper.readValue(json, type);
        fail("Expected a JsonMappingException due to type incompatibility.");
    } catch (JsonMappingException e) {
        assertTrue(e.getMessage().contains("Cannot construct instance of `java.util.EnumMap`"));
    }
}