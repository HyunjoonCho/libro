
import org.junit.Test;
import static org.junit.Assert.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

public class ClosureCompilerBugTest {

    @Test
    public void testClosureCompilerVariableInliningBug() {
        // Capture the output of the System.out
        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
        System.setOut(new PrintStream(outContent));

        // Define and run the function foo
        foo();

        // Allow some time for all the setTimeout callbacks to be called
        try {
            Thread.sleep(100);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        // Reset the System.out
        System.setOut(System.out);

        // Split the captured output by new lines
        String[] outputs = outContent.toString().split(System.lineSeparator());

        // Expected output array
        String[] expectedOutputs = {"1", "2", "3", "4", "5"};

        // Validate the output
        assertArrayEquals(expectedOutputs, outputs);
    }

    public void foo() {
        int[] arr = {1, 2, 3, 4, 5};
        for (int i = 0; i < arr.length; i++) {
            final int j = arr[i];
            new Thread(() -> {
                final int k = j;
                new Thread(() -> System.out.println(k)).start();
            }).start();
        }
    }
}
