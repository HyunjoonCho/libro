public void testJsCompilerTypedefResolution() {
    Compiler compiler = new Compiler(); 
    CompilerOptions options = new CompilerOptions();
    options.setLanguage(CompilerOptions.LanguageMode.ECMASCRIPT_NEXT); 

    String jsCode = ""
        + "goog.provide('a.b.c');\n"
        + "goog.scope(function() {\n"
        + "  var b = a.b;\n"
        + "  var c = b.c;\n"
        + "  /** @typedef {string} */\n"
        + "  c.MyType;\n"
        + "  /** @param {c.MyType} x The variable. */\n"
        + "  c.myFunc = function(x) {};\n"
        + "});\n";

    SourceFile externs = SourceFile.fromCode("externs", ""); 
    SourceFile input = SourceFile.fromCode("input", jsCode);

    Result result = compiler.compile(externs, input, options);

    assertFalse("Expected no compiler errors, but found: " + result.errors, result.success != 1); 
}