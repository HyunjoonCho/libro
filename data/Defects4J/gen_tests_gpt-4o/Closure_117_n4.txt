public void testWrongTypeNameReportedOnMissingPropertyError() {
    String jsCode = "/**\n" +
                    " * @constructor\n" +
                    " */\n" +
                    "function C2() {}\n" +
                    "\n" +
                    "/**\n" +
                    " * @constructor\n" +
                    " * @param {C2} c2\n" +
                    " */\n" +
                    "function C3(c2) {\n" +
                    "    /**\n" +
                    "     * @type {C2} \n" +
                    "     * @private\n" +
                    "     */\n" +
                    "    this.c2_ = c2;\n" +
                    "\n" +
                    "    use(this.c2_.prop);\n" +
                    "}\n";

    // Assuming a hypothetical method checkJavaScriptCodeDiagnostics
    List<Diagnostic> diagnostics = checkJavaScriptCodeDiagnostics(jsCode);

    boolean propertyErrorDetected = diagnostics.stream().anyMatch(diagnostic ->
        diagnostic.getMessage().equals("Property prop never defined on C3.c2_") &&
        diagnostic.getTypeName().equals("C3.c2_")
    );

    assertFalse("Expected error message about wrong property definition type.", propertyErrorDetected);

    boolean correctTypeErrorDetected = diagnostics.stream().anyMatch(diagnostic ->
        diagnostic.getMessage().equals("Property prop never defined on C2") &&
        diagnostic.getTypeName().equals("C2")
    );

    assertTrue("Expected error message about missing property on correct type C2.", correctTypeErrorDetected);
}