
import org.junit.Test;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Scriptable;

import static org.junit.Assert.*;

public class ClosureCompilerTest {

    @Test
    public void testJavaScriptCompilationWithKeysFunction() {
        String jsCode = 
                "function keys(obj) {\n" +
                "  var a = [], i = 0;\n" +
                "  for (a[i++] in obj);\n" +
                "  return a;\n" +
                "}";

        try {
            Context context = Context.enter();
            Scriptable scope = context.initStandardObjects();
            
            // Attempt to compile the JavaScript code
            context.compileString(jsCode, "test", 1, null);
            
            // Specifically for Closure Compiler API, it would involve compiling the script with actual Closure Compiler classes
            // Which requires Closure Compiler's API available and may involve more setup

            // If no exception is thrown, assume it's compiled correctly
            assertTrue(true);
        } catch (Exception e) {
            fail("Compilation should succeed but failed with: " + e.getMessage());
        } finally {
            Context.exit();
        }
    }
}
