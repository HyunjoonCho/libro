
import org.apache.commons.cli.*;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;

public class CommandLineTest {

    @Test
    public void testGetOptionValueWithLongOpt() {
        // Define the option using OptionBuilder
        final String debugOpt = "debug";
        Option debug = Option.builder("d")
                             .longOpt(debugOpt)
                             .desc("turn on debugging")
                             .hasArg()
                             .argName("level")
                             .build();

        // Create Options object and add the debug option
        Options options = new Options();
        options.addOption(debug);

        // Simulate command line input like: --debug=info
        String[] args = new String[] { "--debug", "info" };

        // Parse the command line arguments
        CommandLineParser parser = new DefaultParser();
        try {
            CommandLine commandLine = parser.parse(options, args);

            // Attempt to get the option value using the long option name
            String dbg1 = commandLine.getOptionValue(debugOpt);

            // Attempt to get the option value using the short option character
            String dbg2 = commandLine.getOptionValue('d');

            // Validate the results
            assertNull("Expected null when using the long option with getOptionValue", dbg1);
            assertEquals("Expected 'info' when using the short option character", "info", dbg2);

        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
}
