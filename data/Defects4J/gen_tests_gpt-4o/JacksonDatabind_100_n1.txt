
import com.fasterxml.jackson.core.Base64Variants;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.TreeTraversingParser;
import org.junit.Test;
import java.io.IOException;

import static org.junit.Assert.assertArrayEquals;

public class TreeTraversingParserTest {

    @Test
    public void testTreeTraversingParserWithCustomBase64Variant() throws IOException {
        // Original input string encoded in Base64 with mime variant
        String base64Encoded = "U29tZSBkYXRhIHdpdGggQmFzZTY0IE1JTUUgdmFyaWFudA==";

        // Creating a TextNode with base64 data
        JsonNode node = new TextNode(base64Encoded);

        // Creating a TreeTraversingParser with the node
        TreeTraversingParser parser = new TreeTraversingParser(node);

        // Parsing binary value with MIME variant
        byte[] data1 = node.binaryValue();

        // Parsing binary value with the specified Base64 variant
        byte[] data2 = parser.getBinaryValue(Base64Variants.MIME);

        // Verifying if both data arrays are equal (they should be equal)
        assertArrayEquals(data1, data2);
    }
}
