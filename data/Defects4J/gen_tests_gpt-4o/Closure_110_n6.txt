
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class GoogScopeTest {

    @Test
    public void testPrivateFunctionInsideGoogScope() {
        String jsCode = "goog.scope(function() {" +
                        "  /* @private */" +
                        "  function test() {}" +
                        "});";

        // Create a Closure Compiler runner with the given JavaScript code
        CommandLineRunner runner = new CommandLineRunner(new String[]{
            "--js", "-",
            "--warning_level", "VERBOSE"
        }) {
            @Override
            protected int doRun() {
                try {
                    sourceFromString(jsCode);
                    return super.doRun();
                } catch (Exception e) {
                    e.printStackTrace();
                    return 1;
                }
            }
        };

        // Run the compiler and collect the result
        Result result = runner.run();

        // Check that the error message about the variable not being an alias is present
        String errors = result.errors.toString();
        assertTrue(errors.contains("The local variable test is in a goog.scope and is not an alias."));
    }
}
