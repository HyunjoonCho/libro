
import org.junit.Test;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

import static org.junit.Assert.fail;

public class JavaScriptParseTest {

    @Test
    public void testUnnamedFunctionStatement() {
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("nashorn"); // or "javascript"
        
        String unnamedFunctionStatement = "function () {};";

        try {
            engine.eval(unnamedFunctionStatement);
            fail("Expected a ScriptException due to unnamed function statement but none was thrown.");
        } catch (ScriptException e) {
            // The expected behavior is to catch a ScriptException due to a parse error
            System.out.println("Caught expected ScriptException: " + e.getMessage());
        }
    }
    
    @Test
    public void testNamedFunctionExpression() {
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("nashorn"); // or "javascript"
        
        String namedFunctionExpression = "(function() {});";

        try {
            engine.eval(namedFunctionExpression);
            // No exception should be thrown for this
        } catch (ScriptException e) {
            fail("Expected no ScriptException for a valid function expression, but got: " + e.getMessage());
        }
    }
}
