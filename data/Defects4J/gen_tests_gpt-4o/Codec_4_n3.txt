
import org.apache.commons.codec.binary.Base64;
import org.junit.Test;
import java.nio.charset.StandardCharsets;
import static org.junit.Assert.assertEquals;

public class Base64Test {

    @Test
    public void testInstanceEncodeNoCRLF() {
        Base64 base64 = new Base64();

        String input = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
        byte[] inputBytes = input.getBytes(StandardCharsets.UTF_8);

        // Static method behavior (consistent across versions)
        byte[] expectedOutput = Base64.encodeBase64(inputBytes);
        String expectedEncodedString = new String(expectedOutput, StandardCharsets.UTF_8);

        // Instance method behavior (different in 1.4)
        byte[] actualOutput = base64.encode(inputBytes);
        String actualEncodedString = new String(actualOutput, StandardCharsets.UTF_8);

        // Assert that the instance encode does not add additional CRLF or chunking
        // This assertion should fail in version 1.4 if the bug is present
        assertEquals(expectedEncodedString, actualEncodedString);
    }

    @Test
    public void testNoCRLFForShortString() {
        Base64 base64 = new Base64();

        String input = "aaaaaaaaaa"; // Short string
        byte[] inputBytes = input.getBytes(StandardCharsets.UTF_8);

        // Static method output
        byte[] expectedOutput = Base64.encodeBase64(inputBytes);
        String expectedEncodedString = new String(expectedOutput, StandardCharsets.UTF_8);

        // Instance method output
        byte[] actualOutput = base64.encode(inputBytes);
        String actualEncodedString = new String(actualOutput, StandardCharsets.UTF_8);

        assertEquals(expectedEncodedString, actualEncodedString);
    }

    @Test
    public void testNoCRLFForSingleCharacter() {
        Base64 base64 = new Base64();

        String input = "a"; // Single character
        byte[] inputBytes = input.getBytes(StandardCharsets.UTF_8);

        // Static method output
        byte[] expectedOutput = Base64.encodeBase64(inputBytes);
        String expectedEncodedString = new String(expectedOutput, StandardCharsets.UTF_8);

        // Instance method output
        byte[] actualOutput = base64.encode(inputBytes);
        String actualEncodedString = new String(actualOutput, StandardCharsets.UTF_8);

        assertEquals(expectedEncodedString, actualEncodedString);
    }
}
