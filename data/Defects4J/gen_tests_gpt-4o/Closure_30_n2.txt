script
function testCombiningTemporaryStrings() {
    // Mock function to simulate sgxFloor
    function sgxFloor(value) {
        return Math.floor(value);
    }

    // Constructor for sgxColorRGBA object
    function sgxColorRGBA(r, g, b, a) {
        this.r = r;
        this.g = g;
        this.b = b;
        this.a = a;
    }

    sgxColorRGBA.prototype.asHex = function() {
        var hexString = "";
        
        var str = (sgxFloor(this.r * 255)).toString(16);
        if (str.length < 2) { str = "0" + str; }
        hexString += str;

        str = (sgxFloor(this.g * 255)).toString(16);
        if (str.length < 2) { str = "0" + str; }
        hexString += str;

        str = (sgxFloor(this.b * 255)).toString(16);
        if (str.length < 2) { str = "0" + str; }
        hexString += str;

        str = (sgxFloor(this.a * 255)).toString(16);
        if (str.length < 2) { str = "0" + str; }
        hexString += str;

        return hexString;
    };

    // Test case
    var color = new sgxColorRGBA(1.0, 0.5, 0.25, 0.75);
    var result = color.asHex();

    console.log(result); // Expect "ff7f3fbf"

    // Assert the expected output
    if (result !== "ff7f3fbf") {
        console.error("Test failed: Unexpected hex color code.");
    } else {
        console.log("Test passed.");
    }
}

// Execute the test
testCombiningTemporaryStrings();
