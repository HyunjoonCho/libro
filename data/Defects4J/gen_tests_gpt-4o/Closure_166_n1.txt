
import org.junit.Test;

public class TypeInferenceTest {

    /**
     * Function with a record type parameter.
     * @param record {{prop: string, prop2: (string|undefined)}}
     */
    private void func(Object record) {
        // Simulate log to console
        if (record instanceof Record) {
            Record rec = (Record) record;
            System.out.println(rec.prop);
        }
    }

    /**
     * Function with a union type parameter.
     * @param record {{prop: string, prop2: (string|undefined)}|string}
     */
    private void func2(Object record) {
        if (record instanceof String) {
            System.out.println(record);
        } else if (record instanceof Record) {
            Record rec = (Record) record;
            System.out.println(rec.prop);
        }
    }

    private static class Record {
        String prop;
        String prop2;

        Record(String prop, String prop2) {
            this.prop = prop;
            this.prop2 = prop2;
        }
    }

    @Test
    public void testFuncAndFunc2() {
        Record rec = new Record("a", null);

        func(rec);
        
        // This should not cause an error since it's valid as per the provided description
        func2(rec);
    }
}
