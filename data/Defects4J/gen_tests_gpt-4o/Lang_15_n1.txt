
import org.apache.commons.lang3.reflect.TypeUtils;
import org.junit.Assert;
import org.junit.Test;

import java.lang.reflect.Type;
import java.util.Map;

public class TypeUtilsTest {

    @Test
    public void testGetTypeArguments_PartiallyAssignedClasses() {
        Map<Type, Type> typeVarAssigns = TypeUtils.getTypeArguments(Other.class, This.class);

        Assert.assertEquals(2, typeVarAssigns.size());
        Assert.assertEquals(String.class, typeVarAssigns.get(This.class.getTypeParameters()[0]));
        Assert.assertEquals(Other.class.getTypeParameters()[0], typeVarAssigns.get(This.class.getTypeParameters()[1]));
    }

    public interface This<K, V> {
    }

    public class Other<T> implements This<String, T> {
    }
}
