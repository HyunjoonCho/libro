public void testSimplexSolverIssue() {
    LinearObjectiveFunction f = new LinearObjectiveFunction(new double[]{0.8, 0.2, 0.7, 0.3, 0.6, 0.4}, 0);
    Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
    constraints.add(new LinearConstraint(new double[]{1, 0, 1, 0, 1, 0}, Relationship.EQ, 23.0));
    constraints.add(new LinearConstraint(new double[]{0, 1, 0, 1, 0, 1}, Relationship.EQ, 23.0));
    constraints.add(new LinearConstraint(new double[]{1, 0, 0, 0, 0, 0}, Relationship.GEQ, 10.0));
    constraints.add(new LinearConstraint(new double[]{0, 0, 1, 0, 0, 0}, Relationship.GEQ, 8.0));
    constraints.add(new LinearConstraint(new double[]{0, 0, 0, 0, 1, 0}, Relationship.GEQ, 5.0));
    
    SimplexSolver solver = new SimplexSolver();
    RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);

    double[] expectedSolution = {10.0, 0.0, 8.0, 0.0, 5.0, 23.0};
    double expectedValue = 25.8;
    
    assertEquals(expectedValue, solution.getValue(), 1e-5);
    double[] resultPoint = solution.getPoint();
    for (int i = 0; i < resultPoint.length; i++) {
        assertEquals(expectedSolution[i], resultPoint[i], 1e-5);
    }
}