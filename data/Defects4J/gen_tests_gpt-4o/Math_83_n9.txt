
import org.apache.commons.math3.optim.linear.LinearConstraint;
import org.apache.commons.math3.optim.linear.LinearObjectiveFunction;
import org.apache.commons.math3.optim.linear.Relationship;
import org.apache.commons.math3.optim.linear.SimplexSolver;
import org.apache.commons.math3.optim.linear.GoalType;
import org.apache.commons.math3.optim.PointValuePair;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

import java.util.ArrayList;
import java.util.Collection;

public class SimplexSolverTest {

    @Test
    public void testSimplexSolver() {
        // Linear Objective Function
        LinearObjectiveFunction f = new LinearObjectiveFunction(
            new double[]{0.8, 0.2, 0.7, 0.3, 0.6, 0.4}, 0
        );

        // Constraints
        Collection<LinearConstraint> constraints = new ArrayList<>();

        constraints.add(new LinearConstraint(
            new double[]{1, 0, 1, 0, 1, 0}, Relationship.EQ, 23.0
        ));
        constraints.add(new LinearConstraint(
            new double[]{0, 1, 0, 1, 0, 1}, Relationship.EQ, 23.0
        ));
        constraints.add(new LinearConstraint(
            new double[]{1, 0, 0, 0, 0, 0}, Relationship.GEQ, 10.0
        ));
        constraints.add(new LinearConstraint(
            new double[]{0, 0, 1, 0, 0, 0}, Relationship.GEQ, 8.0
        ));
        constraints.add(new LinearConstraint(
            new double[]{0, 0, 0, 0, 1, 0}, Relationship.GEQ, 5.0
        ));

        // Optimization
        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);

        // Expected values
        double expectedObjectiveValue = 25.8;
        double[] expectedVariables = new double[]{10.0, 0.0, 8.0, 0.0, 5.0, 23.0};

        // Check objective value
        assertEquals(expectedObjectiveValue, solution.getValue(), 1e-5);

        // Check variable values
        double[] actualVariables = solution.getPoint();
        for (int i = 0; i < expectedVariables.length; i++) {
            assertEquals(expectedVariables[i], actualVariables[i], 1e-5);
        }
    }
}
