
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.junit.Test;
import static org.junit.Assert.*;

public class ElementSiblingIndexTest {

    @Test
    public void testElementSiblingIndexBehavior() {
        // Sample HTML with duplicate <tr> elements
        String html = "<table><tr><td>Cell1</td><td>Cell2</td></tr>"
                    + "<tr><td>Cell3</td><td>Cell4</td></tr>"
                    + "<tr><td>Cell1</td><td>Cell2</td></tr></table>";
        
        Document doc = Jsoup.parse(html);
        Element table = doc.select("table").first();
        Element firstRow = table.select("tr").first();
        Element identicalRow = table.select("tr").get(2);

        // Get the element sibling index of both rows
        int indexFirstRow = firstRow.elementSiblingIndex();
        int indexIdenticalRow = identicalRow.elementSiblingIndex();

        // Verify the behavior of the elementSiblingIndex
        assertEquals("Expected sibling indices to be the same", indexFirstRow, indexIdenticalRow);

        // Check the relationship between sibling index and position in parent's children
        // This check will demonstrate that the relationship does not hold as per documentation
        assertNotSame("Expected different element instances despite same index",
                table.children().get(indexFirstRow), identicalRow);

        // However, the elements should be logically equal
        assertEquals("Expected elements to be logically equal", 
                table.children().get(indexIdenticalRow), identicalRow);
    }
}
