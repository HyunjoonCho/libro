
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;
import static org.junit.Assert.*;

public class PosixParserTest {

    @Test
    public void testPosixParserWithUnrecognizedToken() {
        Options options = new Options();
        options.addOption("a", false, "Option A");

        CommandLineParser parser = new PosixParser();
        
        String[] args = new String[] {"-z", "-a", "foo"};

        try {
            // Parsing with the stopAtNonOption enabled
            CommandLine cmd = parser.parse(options, args, true);

            // Assert that option 'a' is recognized
            assertTrue(cmd.hasOption("a"));
            
            // Ensure that the non-option argument "foo" is parsed correctly
            assertArrayEquals(new String[]{"foo"}, cmd.getArgs());

            // Since '-z' is not recognized, it should have stopped parsing
            // and returned it as part of the remaining args
            assertFalse(cmd.hasOption("z"));

        } catch (ParseException e) {
            fail("Parsing failed. Exception: " + e.getMessage());
        }
    }
}
