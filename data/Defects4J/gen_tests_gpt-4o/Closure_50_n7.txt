
import com.google.javascript.jscomp.*;

import java.util.ArrayList;
import java.util.List;

public class ClosureCompilerOptimizationTest {

    public static void main(String[] args) {
        String sourceCode =
                "var variable = confirm(\"value from user\");\n" +
                "var array = [\"constant\", variable];\n" +
                "alert(array.join(\",\"));";

        List<SourceFile> externals = CommandLineRunner.getDefaultExterns();
        List<SourceFile> inputs = new ArrayList<>();
        inputs.add(SourceFile.fromCode("foo.js", sourceCode));

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        Result result = compiler.compile(externals, inputs, options);

        String compiledCode = compiler.toSource();

        System.out.println("Compiled Output: " + compiledCode);

        // Check if the compiled code doesn't explicitly join with ","
        if (compiledCode.contains("join(\",\")")) {
            throw new AssertionError("Optimization not applied: array.join(\",\") was not converted");
        } else if (compiledCode.contains("join()")) {
            System.out.println("Test passed: array.join(\",\") was converted to array.join()");
        } else {
            throw new AssertionError("Unexpected compiled code");
        }
    }
}
