
import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.OpenMapRealVector;
import org.apache.commons.math3.linear.RealVector;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class RealVectorTest {

    @Test
    public void testArrayRealVectorLInfNorm() {
        // Creating a vector with both positive and negative values
        RealVector vector = new ArrayRealVector(new double[]{-3.5, 2.0, -5.1, 4.9});
        // Expecting the maximum absolute value
        double expectedLInfNorm = 5.1;
        // Checking the current implementation of getLInfNorm
        double actualLInfNorm = vector.getLInfNorm();
        assertEquals(expectedLInfNorm, actualLInfNorm, 1e-10);
    }

    @Test
    public void testOpenMapRealVectorLInfNorm() {
        // Creating a vector with both positive and negative values
        RealVector vector = new OpenMapRealVector(4);
        vector.setEntry(0, -3.5);
        vector.setEntry(1, 2.0);
        vector.setEntry(2, -5.1);
        vector.setEntry(3, 4.9);
        // Expecting the maximum absolute value
        double expectedLInfNorm = 5.1;
        // Checking the current implementation of getLInfNorm
        double actualLInfNorm = vector.getLInfNorm();
        assertEquals(expectedLInfNorm, actualLInfNorm, 1e-10);
    }
}
