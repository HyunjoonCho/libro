
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;

import org.jfree.data.Range;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DatasetUtilities;
import org.junit.Test;

public class DatasetUtilitiesTest {

    @Test
    public void testIterateRangeBounds() {
        // Create a DefaultCategoryDataset as a sample dataset
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Add some data to the dataset
        // The data setup would be crafted based on known issues or assumptions, for example:
        dataset.addValue(1.0, "Row1", "Column1");
        dataset.addValue(null, "Row1", "Column2"); // NULL value to test handling
        dataset.addValue(3.0, "Row1", "Column3");
        dataset.addValue(5.0, "Row2", "Column1");
        dataset.addValue(10.0, "Row2", "Column2");
        dataset.addValue(2.0, "Row3", "Column1");
        dataset.addValue(6.0, "Row3", "Column3");

        // Use DatasetUtilities to calculate the range bounds
        // Assume that there's a bug related to how bounds are calculated with null values
        Range range = DatasetUtilities.iterateRangeBounds(dataset);

        // Assert the results - expected values are based on the bug description assumptions
        // Since we are reproducing a bug, we might expect the returned range to be incorrect
        // Here we assert against the expected correct behavior
        assertEquals("Expected lower bound of the range.", 1.0, range.getLowerBound(), 0.0001);
        assertEquals("Expected upper bound of the range.", 10.0, range.getUpperBound(), 0.0001);

        // To ensure that if there's an issue, the range does not cover incorrect null values
        // A part of this test should also ensure that null values are appropriately ignored
        // Depending on the bug specifics, further assertions may be required
    }

    @Test
    public void testIterateRangeBoundsWithEmptyDataset() {
        // Test the behavior when the dataset is empty
        DefaultCategoryDataset emptyDataset = new DefaultCategoryDataset();

        // Use DatasetUtilities to calculate the range bounds
        Range range = DatasetUtilities.iterateRangeBounds(emptyDataset);

        // Assert that the range is null for an empty dataset
        assertNull("Expected range to be null for an empty dataset.", range);
    }
}
