
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.module.jsonSchema.JsonSchema;
import com.fasterxml.jackson.module.jsonSchema.JsonSchemaGenerator;
import com.fasterxml.jackson.module.jsonSchema.types.NumberSchema;
import org.junit.Test;

import java.math.BigDecimal;
import static org.junit.Assert.assertTrue;

public class BigDecimalSchemaTest {

    @Test
    public void testBigDecimalSchemaIntrospection() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        JsonSchemaGenerator schemaGen = new JsonSchemaGenerator(objectMapper);

        JsonSchema schema = schemaGen.generateSchema(BigDecimal.class);

        // Expecting the schema to be of type NumberSchema for BigDecimal
        assertTrue("Schema should be of type NumberSchema", schema.isNumberSchema());

        NumberSchema numberSchema = (NumberSchema) schema;

        // Here we check if the schema is wrongly recognized as integer which shouldn't be the case
        assertTrue("Schema should not be 'integer'", !numberSchema.isInteger());
    }
}
