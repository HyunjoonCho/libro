
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.rhino.Node;
import org.junit.Test;
import static org.junit.Assert.fail;

public class CompilerTest {

    @Test
    public void testIncompleteFunctionDefinition() {
        String jsCode = "f f f ;\nfunction t";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();

        // Enable IDE mode
        options.ideMode = true;

        try {
            Result result = compiler.compile(Node.EMPTY, Node.newString(jsCode), options);
            if (result.success) {
                fail("Compiler should have failed on incomplete function definition.");
            }
        } catch (Exception e) {
            // Expect a compiler crash due to incomplete function definition
            if (!e.getMessage().contains("INTERNAL COMPILER ERROR")) {
                fail("Expected an INTERNAL COMPILER ERROR, but got: " + e.getMessage());
            }
        }
    }
}
