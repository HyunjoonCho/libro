
import org.junit.Test;
import org.joda.time.LocalDate;

import java.util.Calendar;
import java.util.GregorianCalendar;

import static org.junit.Assert.assertEquals;

public class LocalDateTest {

    @Test
    public void testFromCalendarFieldsWithEra() {
        // Create a GregorianCalendar instance representing January 1, 2020 AD
        Calendar calendarAD = new GregorianCalendar(2020, Calendar.JANUARY, 1);
        calendarAD.set(Calendar.ERA, GregorianCalendar.AD);

        // Convert to LocalDate
        LocalDate localDateAD = LocalDate.fromCalendarFields(calendarAD);

        // Verify the LocalDate is correct
        assertEquals(2020, localDateAD.getYear());
        assertEquals(1, localDateAD.getMonthOfYear());
        assertEquals(1, localDateAD.getDayOfMonth());

        // Create a GregorianCalendar instance representing January 1, 2020 BC (should throw an exception in Joda-Time)
        Calendar calendarBC = new GregorianCalendar(2020, Calendar.JANUARY, 1);
        calendarBC.set(Calendar.ERA, GregorianCalendar.BC);

        // Convert to LocalDate
        LocalDate localDateBC = LocalDate.fromCalendarFields(calendarBC);

        // Verify the LocalDate is adjusted correctly for BC
        assertEquals(-2019, localDateBC.getYear()); // 2020 BC in GregorianCalendar converts to -2019 in Joda-Time
        assertEquals(1, localDateBC.getMonthOfYear());
        assertEquals(1, localDateBC.getDayOfMonth());
    }
}
