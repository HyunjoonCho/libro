public void testDifferentOutputFromRestApiAndCommandLineJar() throws IOException {
    String code = "var foreignObject = gfx.parentNode.parentNode;\n" +
                  "var parentContainer = foreignObject.parentNode.parentNode;";
    
    // Simulate the compilation using the command line jar
    String commandLineOutput = compileWithCommandLineJar(code);

    // Simulate the compilation using the REST API or expected correct output
    String expectedOutput = "if(b){if(a=b.parentNode.parentNode,b=a.parentNode.parentNode,null!==b)";

    assertEquals(expectedOutput, commandLineOutput);
}

private String compileWithCommandLineJar(String code) throws IOException {
    // This function simulates the compiling process using the command line tool
    // Replace with actual command or mock implementation for testing
    ProcessBuilder processBuilder = new ProcessBuilder(
        "java", "-jar", "compiler.jar", "--js_code", code
    );
    processBuilder.redirectErrorStream(true);
    Process process = processBuilder.start();

    // Capture and return the output
    try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {
        StringBuilder output = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) {
            output.append(line);
        }
        return output.toString().trim();
    }
}