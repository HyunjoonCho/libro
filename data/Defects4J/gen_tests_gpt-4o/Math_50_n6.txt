
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.junit.Test;
import static org.junit.Assert.fail;

public class RegulaFalsiSolverTest {

    @Test
    public void testRegulaFalsiSolverBug() {
        final UnivariateFunction function = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return Math.exp(x) - Math.pow(Math.PI, 3.0);
            }
        };

        UnivariateSolver solver = new RegulaFalsiSolver();
        try {
            double root = solver.solve(100, function, 1, 10);
            fail("Expected MaxCountExceededException was not thrown");
        } catch (org.apache.commons.math3.exception.MaxCountExceededException e) {
            // Expected exception because of the bug. Test should pass.
            System.out.println("Caught expected MaxCountExceededException: " + e.getMessage());
        } catch (Exception e) {
            fail("Unexpected exception type: " + e);
        }
    }
}
