
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.StringReader;
import java.util.Iterator;

import static org.junit.Assert.assertEquals;

public class CSVParserTest {

    @Test
    public void newIteratorSameLexer() throws Exception {
        String fiveRows = "1\n2\n3\n4\n5\n";
        
        System.out.println("Enhanced for loop, no peeking:");
        CSVParser parser = new CSVParser(new BufferedReader(new StringReader(fiveRows)), CSVFormat.DEFAULT);
        int recordNumber = 0;
        for (CSVRecord record : parser) {
            recordNumber++;
            System.out.println(recordNumber + " -> " + record.get(0));
            if (recordNumber >= 2) {
                break;
            }
        }
        
        Iterator<CSVRecord> newIterator = parser.iterator();
        recordNumber++;
        System.out.println("hasNext(): " + newIterator.hasNext());
        CSVRecord record = newIterator.next();
        System.out.println(recordNumber + " -> " + record.get(0));
        
        recordNumber++;
        System.out.println("hasNext(): " + newIterator.hasNext());
        record = newIterator.next();
        System.out.println(recordNumber + " -> " + record.get(0));
        
        assertEquals("4", record.get(0));

        // Expected output:
        // 1 -> 1
        // 2 -> 2
        // hasNext(): true
        // 3 -> 4
        // 4 -> 5
    }
}
