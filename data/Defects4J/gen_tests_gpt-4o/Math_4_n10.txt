
import org.apache.commons.geometry.euclidean.threed.Line;
import org.apache.commons.geometry.euclidean.threed.Vector3D;
import org.apache.commons.geometry.euclidean.threed.SubLine;
import org.junit.Test;

import static org.junit.Assert.assertNull;

public class SubLineTest {

    @Test
    public void testNonIntersectingSubLineIntersection() {
        // Create two non-intersecting lines
        Line line1 = new Line(Vector3D.ZERO, Vector3D.of(1, 0, 0), 1e-10);
        Line line2 = new Line(Vector3D.of(0, 1, 0), Vector3D.of(1, 1, 0), 1e-10);

        // Create sublines from the lines
        SubLine subLine1 = new SubLine(line1, Line.MINUS_INFINITY, Line.PLUS_INFINITY);
        SubLine subLine2 = new SubLine(line2, Line.MINUS_INFINITY, Line.PLUS_INFINITY);

        // Attempt to find intersection, expecting null
        try {
            Vector3D intersection = subLine1.intersection(subLine2, true);
            assertNull("Intersection should be null for non-intersecting lines", intersection);
        } catch (NullPointerException e) {
            fail("NullPointerException was thrown");
        }
    }
}
