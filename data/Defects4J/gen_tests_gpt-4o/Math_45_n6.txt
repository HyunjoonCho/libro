
import org.apache.commons.math3.linear.OpenMapRealMatrix;
import org.junit.Test;
import static org.junit.Assert.*;

public class OpenMapRealMatrixTest {

    @Test
    public void testIntegerOverflowInComputeKey() {
        // Assume max value for integer is the size to test overflow
        int rows = Integer.MAX_VALUE / 100;  // Adjust row size to trigger overflow
        int cols = 2; // Smaller column size for simplicity
        
        OpenMapRealMatrix matrix = new OpenMapRealMatrix(rows, cols);
        
        try {
            // This operation is where we expect an overflow within computeKey
            matrix.setEntry(rows - 1, 1, 1.0);
            
            // If no exception occurs, let's check for a bogus retrieval
            double result = matrix.getEntry(rows - 1, 1);
            assertEquals("Matrix entry value should be 1.0", 1.0, result, 0.0);
        } catch (Exception e) {
            fail("Integer overflow should not cause an exception: " + e.getMessage());
        }
    }
}
