
import static org.junit.Assert.*;

import org.junit.Test;

public class CommandLineParserTest {

    @Test
    public void testNegativeNumberArgument() {
        // Assuming there is a CommandLineParser class, and related Option, Group, and ArgumentBuilder classes

        CommandLineParser parser = new CommandLineParser();

        ArgumentBuilder aBuilder = new ArgumentBuilder();
        OptionBuilder oBuilder = new OptionBuilder();
        GroupBuilder gBuilder = new GroupBuilder();

        Argument numArg = aBuilder
                .withValidator(NumberValidator.getNumberInstance())
                .withMinimum(1)
                .withMaximum(1)
                .create();

        Option numOpt = oBuilder
                .withLongName("num")
                .withArgument(numArg)
                .create();

        Group options = gBuilder
                .withOption(numOpt)
                .create();

        try {
            // Parsing an option with a negative number as an argument
            parser.parse(options, new String[] {"--num", "-0.1"});
            fail("Expected an exception due to negative number being mistaken as an option.");
        } catch (UnexpectedArgumentException e) {
            // Validate that the correct error message was thrown
            assertEquals("Unexpected -0.1 while processing --num", e.getMessage());
        }
    }
}
