
import com.google.javascript.jscomp.*;
import com.google.javascript.rhino.Node;

public class TypeCheckerTest extends CompilerTestCase {

    @Override
    protected CompilerPass getProcessor(Compiler compiler) {
        return null; // This will be set up by each test case, if necessary
    }

    public void testTypeCheckingFunctionScopedAnnotation() {
        String code =
            "var ns = {};\n" +
            "(function() {\n" +
            "  /** @param {string=} b */\n" +
            "  ns.a = function(b) {}; \n" +
            "})();\n" +
            "\n" +
            "function d() {\n" +
            "  ns.a();\n" +
            "  ns.a(123);\n" +
            "}\n";

        testWarning(code,
                // Expect a warning for ns.a(123) but not for ns.a()
                RhinoErrorReporter.BAD_JSDOC_ANNOTATION);

        String codeWithoutFunctionScope =
            "var ns = {};\n" +
            "/** @param {string=} b */\n" +
            "ns.a = function(b) {}; \n" +
            "\n" +
            "function d() {\n" +
            "  ns.a();\n" +
            "  ns.a(123);\n" +
            "}\n";

        test(codeWithoutFunctionScope, codeWithoutFunctionScope); // No warnings expected
    }

    public static void main(String[] args) {
        TypeCheckerTest test = new TypeCheckerTest();
        test.setUp();
        test.testTypeCheckingFunctionScopedAnnotation();
        test.tearDown();
    }
}
