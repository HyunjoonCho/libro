
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.junit.Test;
import java.math.BigDecimal;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class EqualsBuilderTest {

    @Test
    public void testBigDecimalComparisonUsingEqualsBuilder() {
        BigDecimal value1 = new BigDecimal("1.0");
        BigDecimal value2 = new BigDecimal("1.00");

        // This will fail because BigDecimal's equals method considers scale.
        assertFalse(value1.equals(value2));

        // Simulating the current behavior of EqualsBuilder
        
        // Assuming EqualsBuilder behaves like this:
        boolean isEqualWithEqualsBuilder = new EqualsBuilder()
                .append(value1, value2)
                .isEquals();

        // It should be false, because EqualsBuilder currently uses equals()
        assertFalse(isEqualWithEqualsBuilder);

        // The desired behavior using compareTo instead of equals:
        assertTrue(value1.compareTo(value2) == 0);
    }
}
