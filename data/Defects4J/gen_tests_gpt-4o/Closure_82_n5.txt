
import org.junit.Test;
import static org.junit.Assert.*;

public class MissingPropertyWarningTest {

    @Test
    public void testMissingPropertyWarning() {
        String s = new String("hello");

        // Attempt to access a non-existent property `indexOf` on `toLowerCase` method,
        // which should trigger a warning or error in the presence of verbose warnings 
        // or missing properties checks.
        try {
            Object result = s.toLowerCase().getClass().getMethod("indexOf", String.class);
            fail("Expected a NoSuchMethodException because 'indexOf' is not a method of the result of toLowerCase()");
        } catch (NoSuchMethodException e) {
            // Expected exception, test should pass.
        } catch (Exception e) {
            fail("Expected a NoSuchMethodException, but caught a different exception: " + e);
        }
    }

    @Test
    public void testOtherStringFunctionWarning() {
        String s = new String("hello");

        // This directly uses 'toLowerCase', which has no 'substr' property either.
        // Here we expect it to also fail correctly in a verbose warning mode.
        try {
            Object result = s.toLowerCase().getClass().getMethod("substr", int.class, int.class);
            fail("Expected a NoSuchMethodException because 'substr' is not a method of the result of toLowerCase()");
        } catch (NoSuchMethodException e) {
            // Expected exception, test should pass.
        } catch (Exception e) {
            fail("Expected a NoSuchMethodException, but caught a different exception: " + e);
        }
    }
}
