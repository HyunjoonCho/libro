
import org.apache.commons.cli.*;

import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.charset.StandardCharsets;

import static org.junit.Assert.assertTrue;

public class HelpFormatterTest {

    @org.junit.Test
    public void testOptionGroupOrderWithNoComparator() {
        OptionGroup group = new OptionGroup();
        Option h = Option.builder("h").desc("Option h").build();
        Option s = Option.builder("s").desc("Option s").build();
        Option b = Option.builder("b").desc("Option b").build();
        Option t = Option.builder("t").desc("Option t").build();
        group.addOption(h)
            .addOption(s)
            .addOption(b)
            .addOption(t);

        Options options = new Options();
        options.addOptionGroup(group);
        options.addOption(Option.builder("o").desc("Option o").build());

        HelpFormatter formatter = new HelpFormatter();
        formatter.setOptionComparator(null);

        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        PrintWriter writer = new PrintWriter(outputStream, true, StandardCharsets.UTF_8);

        formatter.printHelp(writer, HelpFormatter.DEFAULT_WIDTH, "cmd", "", options, 
                            HelpFormatter.DEFAULT_LEFT_PAD, HelpFormatter.DEFAULT_DESC_PAD, null);

        writer.flush();
        String helpOutput = outputStream.toString(StandardCharsets.UTF_8);

        int indexOfH = helpOutput.indexOf("-h");
        int indexOfS = helpOutput.indexOf("-s");
        int indexOfB = helpOutput.indexOf("-b");
        int indexOfT = helpOutput.indexOf("-t");

        // Check the order of the options in the group
        assertTrue("Option 'h' should appear before 's'", indexOfH < indexOfS);
        assertTrue("Option 's' should appear before 'b'", indexOfS < indexOfB);
        assertTrue("Option 'b' should appear before 't'", indexOfB < indexOfT);
    }
}
