
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import static org.junit.Assert.assertArrayEquals;
import org.junit.Test;

public class PosixParserTest {

    @Test
    public void testUnrecognizedLongOptionWithStopAtNonOption() throws ParseException {
        // Define options
        Options options = new Options();
        options.addOption("a", false, "Option a");
        options.addOption("b", true, "Option b");

        // Define the command line arguments as in the bug report
        String[] args = new String[] {"--zop", "-abfoo"};

        // Create the parser and parse the command line with stopAtNonOption set to true
        CommandLineParser parser = new PosixParser();
        CommandLine cmd = parser.parse(options, args, true);

        // Check the result
        // We expect the tokens to remain unchanged after the unrecognized --zop
        String[] remainingArgs = cmd.getArgs();
        assertArrayEquals("Unexpected command line args splitting", new String[] {"--zop", "-abfoo"}, remainingArgs);
    }
}
