public void testLargeIso8601Dates() throws ParseException {
    StdDateFormat formatter = new StdDateFormat();
    String maxFormattedDate = formatter.format(new Date(Long.MAX_VALUE));
    String minFormattedDate = formatter.format(new Date(Long.MIN_VALUE));

    // Assert that parsing the maximum date doesn't throw an exception
    Date parsedMaxDate = formatter.parse(maxFormattedDate);
    assertEquals(Long.MAX_VALUE, parsedMaxDate.getTime());

    // Check formatting of year > 9999 (should not include non-numeric characters)
    // This test assumes a specific formatted pattern which could vary based on implementation
    assertTrue(maxFormattedDate.startsWith("292278994"));

    try {
        // Try to parse the minimum date and expect an exception due to formatting issues
        formatter.parse(minFormattedDate);
        fail("Expected a ParseException due to invalid date formatting for Long.MIN_VALUE");
    } catch (ParseException e) {
        // Expected behavior, the year is out of range or incorrectly formatted
    }
}