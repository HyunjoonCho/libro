
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.StringReader;
import java.util.Iterator;

import static org.junit.Assert.assertEquals;

public class CSVParserTest {
    
    @Test
    public void testNewIteratorSameLexer() throws Exception {
        String fiveRows = "1\n2\n3\n4\n5\n";

        System.out.println("Enhanced for loop, no peeking:");
        CSVParser parser = new CSVParser(new BufferedReader(new StringReader(fiveRows)), CSVFormat.DEFAULT);
        int recordNumber = 0;
        for (CSVRecord record : parser) {
            recordNumber++;
            System.out.println(recordNumber + " -> " + record.get(0));
            if (recordNumber >= 2) {
                break;
            }
        }
        // CSVParser.iterator() returns a new iterator; lexer should be synchronized
        Iterator<CSVRecord> iter = parser.iterator();
        while (iter.hasNext()) {
            CSVRecord record = iter.next();
            recordNumber++;
            System.out.println(recordNumber + " -> " + record.get(0));

            if (recordNumber == 3) {
                assertEquals("3", record.get(0)); // Expect "3" instead of "4"
            }
        }
        // Output expected to be:
        // 1 -> 1
        // 2 -> 2
        // 3 -> 3
        // 4 -> 4
        // 5 -> 5
    }
}
