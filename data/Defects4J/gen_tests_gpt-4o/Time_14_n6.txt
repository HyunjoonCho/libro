public void testLeapDateAddition() {
    MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
    try {
        isoLeap.plusDays(2);
        fail("Expected IllegalFieldValueException not thrown");
    } catch (IllegalFieldValueException e) {
        assertTrue(e.getMessage().contains("Value 29 for dayOfMonth must be in the range [1,28]"));
    }

    try {
        isoLeap.plusMonths(1);
        fail("Expected IllegalFieldValueException not thrown");
    } catch (IllegalFieldValueException e) {
        assertTrue(e.getMessage().contains("Value 29 for dayOfMonth must be in the range [1,28]"));
    }

    try {
        isoLeap.plusMonths(-1);
        fail("Expected IllegalFieldValueException not thrown");
    } catch (IllegalFieldValueException e) {
        assertTrue(e.getMessage().contains("Value 29 for dayOfMonth must be in the range [1,28]"));
    }

    try {
        isoLeap.minusMonths(1);
        fail("Expected IllegalFieldValueException not thrown");
    } catch (IllegalFieldValueException e) {
        assertTrue(e.getMessage().contains("Value 29 for dayOfMonth must be in the range [1,28]"));
    }

    try {
        isoLeap.minusMonths(-1);
        fail("Expected IllegalFieldValueException not thrown");
    } catch (IllegalFieldValueException e) {
        assertTrue(e.getMessage().contains("Value 29 for dayOfMonth must be in the range [1,28]"));
    }

    try {
        isoLeap.minusDays(-1);
        fail("Expected IllegalFieldValueException not thrown");
    } catch (IllegalFieldValueException e) {
        assertTrue(e.getMessage().contains("Value 29 for dayOfMonth must be in the range [1,28]"));
    }
}