
import org.joda.time.DateTimeConstants;
import org.joda.time.MonthDay;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.IllegalFieldValueException;
import org.junit.Test;

public class MonthDayTest {

    @Test(expected = IllegalFieldValueException.class)
    public void testAddDaysToIsoLeapDate() {
        MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        isoLeap.plusDays(2);
    }

    @Test(expected = IllegalFieldValueException.class)
    public void testAddMonthsToIsoLeapDate() {
        MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        isoLeap.plusMonths(1);
    }

    @Test(expected = IllegalFieldValueException.class)
    public void testSubtractMonthsFromIsoLeapDate() {
        MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        isoLeap.minusMonths(1);
    }

    @Test
    public void testSubtractDaysFromIsoLeapDate() {
        MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        MonthDay result = isoLeap.minusDays(1);
        assertEquals("--02-28", result.toString());
    }

    @Test
    public void testIsoLeapDateBoundaryBehavior() {
        MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        MonthDay result = isoLeap.minusDays(1).plusDays(2);
        assertEquals("--03-01", result.toString());
    }
}
