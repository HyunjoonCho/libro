public void testJsonStreamContextDifference() throws JsonProcessingException {
    ObjectMapper objectMapper = new ObjectMapper();
    ExampleClass exampleObject = new ExampleClass("test");

    // Serialize using write method
    String jsonString = objectMapper.writeValueAsString(exampleObject);
    JsonNode jsonNodeWrite = objectMapper.readTree(jsonString);
    JsonStreamContext writeContext = objectMapper.getFactory().createGenerator(new StringWriter()).getOutputContext();
    
    // Serialize using convert method
    JsonNode jsonNodeConvert = objectMapper.convertValue(exampleObject, JsonNode.class);
    JsonStreamContext convertContext = objectMapper.getFactory().createGenerator(new StringWriter()).getOutputContext();

    // Fail if contexts are built differently
    assertEquals(writeContext.getCurrentName(), convertContext.getCurrentName());
    assertEquals(writeContext.inArray(), convertContext.inArray());
    assertEquals(writeContext.inObject(), convertContext.inObject());
}

private static class ExampleClass {
    public String name;
    public ExampleClass(String name) {
        this.name = name;
    }
}