
import javax.script.Invocable;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class ClosureCompilerTest {

    @Test
    public void testTryCatchBlockBehavior() throws ScriptException, NoSuchMethodException {
        String originalJs = 
            "function a() {" +
            "  var x = '1';" +
            "  try {" +
            "    x += somefunction();" +
            "  } catch(e) {" +
            "  }" +
            "  x += '2';" +
            "  try {" +
            "    x += somefunction();" +
            "  } catch(e) {" +
            "  }" +
            "  return x;" +
            "}" +
            "function somefunction() { throw new Error('This is a forced error.'); }" +
            "function test() { return a() + a(); }";

        // This is what the compiled JS does according to the bug report
        String compiledJs = 
            "function b() {" +
            "  var a;" +
            "  try {" +
            "    a = '1' + somefunction();" +
            "  } catch(c) {" +
            "  }" +
            "  try {" +
            "    a = a + '2' + somefunction();" +
            "  } catch(d) {" +
            "  }" +
            "  return a;" +
            "}" +
            "function somefunction() { throw new Error('This is a forced error.'); }" +
            "function testCompiled() { return b() + b(); }";

        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("nashorn");

        // Evaluate original script and check the result
        engine.eval(originalJs);
        Invocable inv = (Invocable) engine;
        String resultOriginal = (String) inv.invokeFunction("test");
        assertEquals("1212", resultOriginal);

        // Evaluate compiled script and check the result
        engine.eval(compiledJs);
        String resultCompiled = (String) inv.invokeFunction("testCompiled");
        assertEquals("1212", resultCompiled); // This should fail, reproducing the bug
    }
}
