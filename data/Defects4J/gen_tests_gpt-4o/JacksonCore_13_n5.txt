
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.StringWriter;

import static org.junit.Assert.assertEquals;

public class Utf8JsonGeneratorTest {

    @Test
    public void testQuoteFieldNamesToggle() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        JsonFactory factory = mapper.getFactory();

        StringWriter writer = new StringWriter();

        // Create a generator with QUOTE_FIELD_NAMES disabled
        try (JsonGenerator gen = factory.createGenerator(writer)) {
            gen.configure(JsonGenerator.Feature.QUOTE_FIELD_NAMES, false);
            gen.writeStartObject();
            gen.writeFieldName("fieldName");
            gen.writeString("value");
            gen.writeEndObject();
        }

        // Validate the output JSON does not have quotes around field names
        assertEquals("{fieldName:\"value\"}", writer.toString());

        // Parse the output JSON back to validate structure
        try (JsonParser parser = factory.createParser(writer.toString())) {
            assertEquals(JsonParser.Token.START_OBJECT, parser.nextToken());
            assertEquals("fieldName", parser.nextFieldName());
            assertEquals("value", parser.nextTextValue());
            assertEquals(JsonParser.Token.END_OBJECT, parser.nextToken());
        }
    }
}
