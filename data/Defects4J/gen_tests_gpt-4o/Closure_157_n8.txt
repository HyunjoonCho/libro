
import org.junit.Test;
import static org.junit.Assert.*;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.EcmaError;

public class RhinoParserTest {

    @Test
    public void testQuotedPropertyNameWithGetter() {
        Context context = Context.enter();
        try {
            Scriptable scope = context.initStandardObjects();
            context.setLanguageVersion(Context.VERSION_ES5);
            String script = "var obj = { get 'x'() { return 1; } }; obj['x'];";
            Object result = context.evaluateString(scope, script, "TestScript", 1, null);
            assertEquals(1, Context.jsToJava(result, int.class));
        } catch (EcmaError e) {
            fail("Parsing failed for quoted property name with get: " + e.getMessage());
        } finally {
            Context.exit();
        }
    }

    @Test
    public void testNumericPropertyNameWithGetter() {
        Context context = Context.enter();
        try {
            Scriptable scope = context.initStandardObjects();
            context.setLanguageVersion(Context.VERSION_ES5);
            String script = "var obj = { get 1() { return 1; } }; obj[1];";
            Object result = context.evaluateString(scope, script, "TestScript", 1, null);
            assertEquals(1, Context.jsToJava(result, int.class));
        } catch (EcmaError e) {
            fail("Parsing failed for numeric property name with get: " + e.getMessage());
        } finally {
            Context.exit();
        }
    }
}
