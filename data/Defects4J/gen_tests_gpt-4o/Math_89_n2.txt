
import static org.junit.jupiter.api.Assertions.*;

import org.apache.commons.math3.stat.Frequency;
import org.junit.jupiter.api.Test;

public class FrequencyTest {
    
    @Test
    public void testNonComparableObject() {
        Frequency frequency = new Frequency();

        final Object OBJ = new Object();

        // Test the behavior of addValue with a non-Comparable object
        try {
            frequency.addValue(OBJ); // This call should ideally fail before adding the object
        } catch (IllegalArgumentException e) {
            fail("Frequency should allow adding non-Comparable object but handle it gracefully.");
        }

        // Expectation: getCount and getPct should return 0 because the object should not be counted
        assertEquals(0, frequency.getCount(OBJ));
        assertEquals(0.0, frequency.getPct(OBJ), 0.001);
        
        // Attempt to add the second same object to trigger the mentioned IllegalArgumentException
        assertThrows(IllegalArgumentException.class, () -> frequency.addValue(OBJ));
    }
}
