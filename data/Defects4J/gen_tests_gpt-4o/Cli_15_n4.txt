
import org.apache.commons.cli2.CommandLine;
import org.apache.commons.cli2.Group;
import org.apache.commons.cli2.builder.ArgumentBuilder;
import org.apache.commons.cli2.builder.DefaultOptionBuilder;
import org.apache.commons.cli2.builder.GroupBuilder;
import org.apache.commons.cli2.commandline.Parser;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class DefaultArgumentsTest {

    @Test
    public void testDefaultArguments() throws Exception {
        String defaultValue1 = "100";
        String defaultValue2 = "1000";

        DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
        ArgumentBuilder abuilder = new ArgumentBuilder();
        GroupBuilder gbuilder = new GroupBuilder();

        DefaultOption bOption = obuilder.withShortName("b")
                .withLongName("b")
                .withArgument(abuilder.withName("b")
                        .withMinimum(0)
                        .withMaximum(2)
                        .withDefault(defaultValue1)
                        .withDefault(defaultValue2)
                        .create())
                .create();

        Group options = gbuilder
                .withName("options")
                .withOption(bOption)
                .create();

        Parser parser = new Parser();
        parser.setHelpTrigger("--help");
        parser.setGroup(options);

        // Test case 1: No arguments, expect defaults to be used
        String[] args1 = new String[]{};
        CommandLine cl1 = parser.parse(args1);
        List b1 = cl1.getValues("-b");
        assertEquals("[" + defaultValue1 + ", " + defaultValue2 + "]", b1 + "");

        // Test case 2: One argument, expect the first argument to override defaultValue1,
        // and defaultValue2 to be used for the second position
        String enteredValue1 = "1";
        String[] args2 = new String[]{"-b", enteredValue1};
        CommandLine cl2 = parser.parse(args2);
        List b2 = cl2.getValues("-b");
        assertEquals("[" + enteredValue1 + ", " + defaultValue2 + "]", b2 + "");

        // Test case 3: Two arguments, expect both arguments to override defaults
        String enteredValue2 = "2";
        String[] args3 = new String[]{"-b", enteredValue1, enteredValue2};
        CommandLine cl3 = parser.parse(args3);
        List b3 = cl3.getValues("-b");
        assertEquals("[" + enteredValue1 + ", " + enteredValue2 + "]", b3 + "");
    }
}
