
import org.apache.commons.math3.optim.linear.LinearConstraint;
import org.apache.commons.math3.optim.linear.LinearObjectiveFunction;
import org.apache.commons.math3.optim.linear.GoalType;
import org.apache.commons.math3.optim.linear.Relationship;
import org.apache.commons.math3.optim.linear.SimplexSolver;
import org.apache.commons.math3.optim.RealPointValuePair;
import org.junit.Test;

import java.util.ArrayList;
import java.util.Collection;

import static org.junit.Assert.assertEquals;

public class SimplexSolverTest {

    @Test
    public void testSimplexSolverIssue() {
        LinearObjectiveFunction objectiveFunction = new LinearObjectiveFunction(new double[]{7, 3, 0, 0}, 0);

        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[]{1, 0, 0, 0}, Relationship.LEQ, 1)); // a <= 1
        constraints.add(new LinearConstraint(new double[]{0, 1, 0, 0}, Relationship.LEQ, 1)); // b <= 1
        constraints.add(new LinearConstraint(new double[]{3, 0, -5, 0}, Relationship.LEQ, 0)); // 3a - 5c <= 0
        constraints.add(new LinearConstraint(new double[]{2, 0, 0, -5}, Relationship.LEQ, 0)); // 2a - 5d <= 0
        constraints.add(new LinearConstraint(new double[]{0, 2, -5, 0}, Relationship.LEQ, 0)); // 2b - 5c <= 0
        constraints.add(new LinearConstraint(new double[]{0, 3, 0, -5}, Relationship.LEQ, 0)); // 3b - 5d <= 0
        constraints.add(new LinearConstraint(new double[]{3, 2, 0, 0}, Relationship.LEQ, 5)); // 3a + 2b <= 5
        constraints.add(new LinearConstraint(new double[]{2, 3, 0, 0}, Relationship.LEQ, 5)); // 2a + 3b <= 5

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair result = solver.optimize(objectiveFunction, constraints, GoalType.MAXIMIZE, true);

        // Expected solution: a = 1, b = 1, objective function value = 10
        assertEquals(1.0, result.getPoint()[0], 1e-6); // a
        assertEquals(1.0, result.getPoint()[1], 1e-6); // b
        assertEquals(10.0, result.getValue(), 1e-6);   // Objective function value
    }
}
