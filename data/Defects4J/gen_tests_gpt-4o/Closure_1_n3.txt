script
// Test Case for Bug: Function Arguments Should Not Be Optimized Away
function testFunctionArgumentOptimization() {
    // Define a function with two parameters
    function foo(bar, baz) {
        return bar;
    }
    
    // Check the initial length property of the function
    var initialLength = foo.length;
    console.log("Initial foo.length: " + initialLength); // Expected: 2
    
    // Use a hypothetical minifier or manual simulation of optimization
    // Simulating what happens when SIMPLE_OPTIMIZATIONS removes unused parameters
    function fooOptimized(bar) {
        return bar;
    }
    
    // Check the 'optimized' length property of the function
    var optimizedLength = fooOptimized.length;
    console.log("Optimized foo.length: " + optimizedLength); // Actual: 1, Expected: 2

    // Assert the failure condition
    if (optimizedLength !== initialLength) {
        console.warn("Bug Reproduced: Function length changed from " + initialLength + " to " + optimizedLength);
    } else {
        console.log("Function length remains consistent.");
    }
}

// Run the test case
testFunctionArgumentOptimization();
