public void testFilteringParserDelegateMissingEndObject() throws IOException {
    String json = "{ \"a\":123, \"array\":[1,2], \"ob\": { \"value0\":2, \"value\":3, \"value2\":4 }, \"b\":true }";
    JsonFactory factory = new JsonFactory();
    JsonParser p0 = factory.createParser(json);
    JsonParser p = new FilteringParserDelegate(p0,
            new NameMatchFilter("value"), true, false);

    StringBuilder output = new StringBuilder();
    JsonGenerator generator = factory.createGenerator(new StringWriter()) {
        @Override
        public void writeStartObject() {
            output.append("{");
        }

        @Override
        public void writeEndObject() {
            output.append("}");
        }

        @Override
        public void writeFieldName(String name) {
            output.append("\"").append(name).append("\":");
        }

        @Override
        public void writeNumber(int v) {
            output.append(v);
        }

        @Override
        public void flush() {
        }
    };

    while (p.nextToken() != null) {
        generator.copyCurrentEvent(p);
    }
    generator.close();
    // The expected output should end with two closing brackets
    assertEquals("{\"ob\":{\"value\":3}}", output.toString());
}