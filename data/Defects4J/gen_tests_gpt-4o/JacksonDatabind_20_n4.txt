
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.PropertyNamingStrategy;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class TestPropertyNamingStrategyIssue {

    public static class ClassWithObjectNodeField {
        public String id;
        public ObjectNode json;
    }

    @Test
    public void testDeserializationWithPropertyNamingStrategy() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.setPropertyNamingStrategy(PropertyNamingStrategy.LOWER_CASE);
        
        String jsonString = "{ \"id\": \"1\", \"json\": { \"foo\": \"bar\", \"baz\": \"bing\" } }";

        ClassWithObjectNodeField deserialized = 
            mapper.readValue(jsonString, ClassWithObjectNodeField.class);

        assertNotNull(deserialized);
        assertEquals("1", deserialized.id);

        JsonNode fooNode = deserialized.json.get("foo");
        JsonNode bazNode = deserialized.json.get("baz");

        assertNotNull(fooNode);
        assertEquals("bar", fooNode.asText());

        assertNotNull(bazNode);
        assertEquals("bing", bazNode.asText());
    }
}
