
import org.apache.commons.math3.stat.inference.ChiSquareTest;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class ChiSquareTestBugReproductionTest {

    @Test
    public void testChiSquareWithUnequalSums() {
        ChiSquareTest testStatistic = new ChiSquareTest();

        long[] observed = { 500, 623, 72, 70, 31 };
        double[] expected = { 485, 541, 82, 61, 37 };

        // The incorrect statistic value from the bug report:
        double incorrectStatistic = 16.4131070362;
        
        // The correct calculation requires rescaling the expected values
        double correctStatistic = testStatistic.chiSquare(rescaleExpected(expected, observed), observed);

        // Assert that the incorrect method returns the wrong value
        assertEquals(incorrectStatistic, testStatistic.chiSquare(expected, observed), 1E-10);

        // Calculate correct value using manual rescaling approach
        assertEquals(9.0233, correctStatistic, 1E-4);
    }

    private double[] rescaleExpected(double[] expected, long[] observed) {
        double observedSum = sum(observed);
        double expectedSum = sum(expected);
        double scale = observedSum / expectedSum;

        double[] rescaledExpected = new double[expected.length];
        for (int i = 0; i < expected.length; i++) {
            rescaledExpected[i] = expected[i] * scale;
        }

        return rescaledExpected;
    }

    private double sum(double[] array) {
        double sum = 0;
        for (double value : array) {
            sum += value;
        }
        return sum;
    }

    private long sum(long[] array) {
        long sum = 0;
        for (long value : array) {
            sum += value;
        }
        return sum;
    }
}
