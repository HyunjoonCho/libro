public void testCMAESOptimizerBounds() {
    double[] lowerBound = {0.0, 0.0};
    double[] upperBound = {1.0, 1.0};
    CMAESOptimizer optimizer = new CMAESOptimizer();

    MultivariateFunction objectiveFunction = new MultivariateFunction() {
        @Override
        public double value(double[] point) {
            return -(point[0] * point[0] + point[1] * point[1]);
        }
    };

    PointValuePair result = optimizer.optimize(
        new MaxEval(1000),
        new ObjectiveFunction(objectiveFunction),
        GoalType.MAXIMIZE,
        new SimpleBounds(lowerBound, upperBound),
        new InitialGuess(new double[] {0.5, 0.5}),
        new CMAESOptimizer.Sigma(new double[] {0.3, 0.3})
    );

    double[] point = result.getPoint();
    for (int i = 0; i < point.length; i++) {
        assertTrue("Point is out of bounds: " + point[i], point[i] >= lowerBound[i] && point[i] <= upperBound[i]);
    }
}