
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;

public class TarArchiveInputStreamTest {

    @Test(expected = IOException.class)
    public void testCorruptTarFileThrowsIOException() throws IOException {
        // Create a corrupted byte array that represents a fake tar file.
        byte[] corruptedTar = new byte[]{0, 1, 2, 3, 4, 5, 6, -1};
        ByteArrayInputStream inputStream = new ByteArrayInputStream(corruptedTar);

        // Attempt to read from the corrupted tar input stream and expect an IOException.
        try (TarArchiveInputStream tarInput = new TarArchiveInputStream(inputStream)) {
            // This will trigger parsing the header, leading to an exception for a corrupt header
            TarArchiveEntry entry = tarInput.getNextTarEntry();
        }
    }
}
