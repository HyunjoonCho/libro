
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class AbstractLeastSquaresTest {

    // Hypothetical implementation of AbstractLeastSquares class
    class AbstractLeastSquares {
        private double[] residualsWeights;
        private double[] residuals;

        public AbstractLeastSquares(double[] residuals, double[] residualsWeights) {
            this.residuals = residuals;
            this.residualsWeights = residualsWeights;
        }

        public double getChiSquare() {
            double chiSquare = 0.0;
            for (int i = 0; i < residuals.length; i++) {
                // Incorrect chi-square calculation as per the bug report
                chiSquare += (residuals[i] * residuals[i]) / residualsWeights[i];
            }
            return chiSquare;
        }

        public double getRMS() {
            return Math.sqrt(getChiSquare() / residuals.length);
        }
    }

    @Test
    public void testChiSquareCalculation() {
        double[] residuals = {2.0, 3.0};
        double[] weights = {1.0, 0.5}; // Weights for each observation

        AbstractLeastSquares als = new AbstractLeastSquares(residuals, weights);

        // Expected chi-square should multiply the squared residual by the weight
        double expectedChiSquare = (4.0 * 1.0) + (9.0 * 0.5);
        assertEquals(expectedChiSquare, als.getChiSquare(), 1e-6);
    }
}
