
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;

import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DatasetChangeListener;
import org.jfree.data.general.DatasetChangeEvent;
import org.junit.Test;

public class MultiplePiePlotTest {

    @Test
    public void testDatasetIsWiredToListenerInConstructor() {
        final boolean[] listenerNotified = {false};
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.addChangeListener(new DatasetChangeListener() {
            @Override
            public void datasetChanged(DatasetChangeEvent event) {
                listenerNotified[0] = true;
            }
        });

        // Instantiate MultiplePiePlot with the dataset
        MultiplePiePlot plot = new MultiplePiePlot(dataset);

        // Initially, listener should not be notified
        assertFalse(listenerNotified[0]);

        // Modify the dataset
        dataset.addValue(1.0, "Row1", "Column1");

        // After modification, listener should be notified
        assertTrue("Listener should be notified of dataset change", listenerNotified[0]);
    }

    @Test
    public void testDatasetWithSetDatasetMethod() {
        final boolean[] listenerNotified = {false};

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.addChangeListener(new DatasetChangeListener() {
            @Override
            public void datasetChanged(DatasetChangeEvent event) {
                listenerNotified[0] = true;
            }
        });

        // Instantiate MultiplePiePlot without dataset
        MultiplePiePlot plot = new MultiplePiePlot();

        // Set dataset using setDataset method
        plot.setDataset(dataset);

        // Initially, listener should not be notified
        assertFalse(listenerNotified[0]);

        // Modify the dataset
        dataset.addValue(2.0, "Row2", "Column2");

        // Check if listener was notified after the change
        assertTrue("Listener should be notified of dataset change", listenerNotified[0]);
    }
}
