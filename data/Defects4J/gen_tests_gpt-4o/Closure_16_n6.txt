public void testJsCompilerTypedefResolution() {
    // Create a mock or simplification of the JSCompiler environment
    // Assume JsCompiler.compile(...) is a method to compile provided code

    String jsCode = "goog.provide('a.b.c');\n"
                  + "goog.scope(function() {\n"
                  + "var b = a.b;\n"
                  + "var c = b.c;\n"
                  + "/** @typedef {string} */\n"
                  + "c.MyType;\n"
                  + "/** @param {c.MyType} x The variable. */\n"
                  + "c.myFunc = function(x) {};\n"
                  + "});";

    // Replace JsCompiler with actual compiler invocation
    try {
        boolean compiledSuccessfully = JsCompiler.compile(jsCode); // Assume this returns false if there was a compiler error
        assertTrue("JSCompiler should resolve typedefs recursively without error.", compiledSuccessfully);
    } catch (Exception e) {
        fail("JSCompiler raised an exception when resolving typedefs recursively.");
    }
}