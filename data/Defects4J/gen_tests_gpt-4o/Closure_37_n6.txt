
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import static org.junit.Assert.fail;

public class CompilerTest {

    @Test
    public void testIncompleteFunctionDefinitionShouldNotCrashCompiler() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // Enable IDE mode
        options.setIdeMode(true);

        // JavaScript source code with incomplete function definition
        String jsCode = "f f f ; function t";

        try {
            // This should compile without crashing the compiler
            compiler.compile(SourceFile.fromCode("externs", ""), SourceFile.fromCode("test.js", jsCode), options);
        } catch (RuntimeException e) {
            // Check if the error is due to the internal compiler error we expect
            if (e.getMessage().contains("INTERNAL COMPILER ERROR")) {
                fail("The compiler crashed due to an incomplete function definition in IDE mode.");
            } else {
                // Unexpected exception
                throw e;
            }
        }
    }
}
