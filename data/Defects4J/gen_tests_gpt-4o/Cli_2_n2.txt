
import static org.junit.Assert.*;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

public class CommandLineTest {

    @Test
    public void testParameterValueMisinterpretedAsOption() {
        // Create the options for the command line
        Options options = new Options();
        options.addOption("t", true, "A test option");

        // Use the PosixParser as described in the bug report
        CommandLineParser parser = new PosixParser();
        String[] args = new String[]{"-t", "-something"};
        
        try {
            // Parse the arguments
            CommandLine commandLine = parser.parse(options, args);
            
            // Check if the option 't' was recognized without error
            assertTrue("Option 't' should be present", commandLine.hasOption("t"));
            
            // Verify that the value of option 't' is "-something"
            assertEquals("Option 't' should have the value '-something'", "-something", commandLine.getOptionValue("t"));
        } catch (ParseException e) {
            fail("Parsing failed: " + e.getMessage());
        }
    }
}
