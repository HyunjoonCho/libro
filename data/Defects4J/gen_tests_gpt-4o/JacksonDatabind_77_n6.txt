
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator;
import org.junit.Test;

import static org.junit.Assert.assertThrows;

public class JacksonSecurityTest {

    @Test
    public void testJacksonDefaultTypingVulnerability() {
        ObjectMapper mapper = new ObjectMapper();
        // Enable default typing -- this is where the vulnerability is exposed
        mapper.activateDefaultTyping(LaissezFaireSubTypeValidator.instance, ObjectMapper.DefaultTyping.NON_FINAL);

        String exploitPayload = "[\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\",{\"_bytecodes\":[\"\"],\"_name\":\"a.b\",\"_tfactory\":{}}]";

        assertThrows(Exception.class, () -> {
            // Attempt to deserialize malicious payload which could lead to RCE if exploited correctly
            mapper.readValue(exploitPayload, Object.class);
        });
    }
}
