
import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;

public class NegativeNumberOptionTest {

    @Test
    public void testNegativeNumberForOption() {
        // Set up the test options
        Options options = new Options();
        options.addOption(Option.builder()
                .longOpt("num")
                .hasArg(true)
                .desc("A numerical argument that can be negative")
                .build());

        CommandLineParser parser = new DefaultParser();

        String[] args = new String[]{"--num", "-0.1"};

        try {
            // This should parse without error, but it currently fails
            CommandLine cmd = parser.parse(options, args);
            String numValue = cmd.getOptionValue("num");
            assertNotNull("The num option should have a value.", numValue);
            assertEquals("-0.1", numValue);
        } catch (ParseException e) {
            fail("Parsing failed due to: " + e.getMessage());
        }
    }
}
