public void testCompatibilityCheckWithPolymorphicTypeIds() {
    ObjectMapper mapper = new ObjectMapper();

    // Configure to use polymorphic type handling
    mapper.activateDefaultTyping(
        LaissezFaireSubTypeValidator.instance,
        ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE,
        JsonTypeInfo.As.PROPERTY
    );

    String incorrectTypeData = "[\"java.util.HashSet\", [\"element1\", \"element2\"]]";

    try {
        // Attempt to deserialize into a type that expects a Map
        EnumMap<?, ?> result = mapper.readValue(incorrectTypeData, EnumMap.class);
        fail("Expected JsonMappingException due to type incompatibility");
    } catch (JsonMappingException e) {
        // Exception is expected due to the type incompatibility
        assertTrue(e.getMessage().contains("Cannot deserialize instance"));
    }
}