
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class PosixParserBugTest {

    private static final String OPTION_TARGET = "t";
    private static final String OPTION_TARGET_LONG = "target";

    @Test
    public void testPosixParserWithLongOption() throws Exception {
        // Set up options
        Option generateTarget = new Option(OPTION_TARGET, OPTION_TARGET_LONG, true, "Generate files for the specified target machine");
        Options cmdLineOpts = new Options();
        cmdLineOpts.addOption(generateTarget);

        // Test input
        String[] args = {"-target", "foobar.com"};

        // Parse using PosixParser
        CommandLineParser parser = new PosixParser();
        CommandLine parsedLine;
        try {
            parsedLine = parser.parse(cmdLineOpts, args);
        } catch (ParseException pe) {
            throw new Exception("Invalid command: " + pe.getMessage());
        }

        // Verify that the option is correctly parsed
        if (parsedLine.hasOption(OPTION_TARGET)) {
            assertEquals("foobar.com", parsedLine.getOptionValue(OPTION_TARGET));
        }
    }
}
