
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Assert;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

public class TarFileTest {

    @Test
    public void testAIXTarFileWithSymlink() {
        File tarFile = new File("path/to/aix-tar-with-symlink.tar");

        try (FileInputStream fis = new FileInputStream(tarFile);
             TarArchiveInputStream tis = new TarArchiveInputStream(fis)) {

            TarArchiveEntry entry;
            boolean foundSymlink = false;

            while ((entry = tis.getNextTarEntry()) != null) {
                if (entry.isSymbolicLink()) {
                    foundSymlink = true;
                    break;
                }
            }

            // The test expectation here is that the TarArchiveInputStream
            // should at least be able to find a symbolic link without error.
            Assert.assertTrue("Should have found a symbolic link in the tar file", foundSymlink);

        } catch (IOException e) {
            // If an IOException is thrown, this represents the bug.
            Assert.fail("IOException occurred: " + e.getMessage());
        }
    }
}
