
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.MissingOptionException;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.junit.Test;
import static org.junit.Assert.*;

public class MissingOptionExceptionTest {

    @Test
    public void testMissingOptionExceptionMessage() {
        Options options = new Options();
        options.addOption(new Option("f", "format", true, "Set format"));
        options.addOption(new Option("s", "source", true, "Set source"));
        options.addOption(new Option("p", "properties", true, "Set properties"));

        String[] args = {};

        try {
            CommandLine cmd = new DefaultParser().parse(options, args);
        } catch (MissingOptionException e) {
            String expectedMessage = "Missing required options: -f -s -p";
            // Check if the error message is formatted as expected
            assertEquals(expectedMessage, e.getMessage());
        } catch (ParseException e) {
            fail("Unexpected ParseException: " + e.getMessage());
        }
    }
}
