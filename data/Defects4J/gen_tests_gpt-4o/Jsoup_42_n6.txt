
import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.jsoup.parser.Parser;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class FormCheckboxTest {

    @Test
    public void testFormCheckboxDefaultValue() {
        final String html = "<html>\n"
                + "    <head>\n"
                + "        <title>Test</title>\n"
                + "    </head>\n"
                + "    <body>\n"
                + "    <form name=\"myForm\" method=\"POST\">\n"
                + "        <input type=\"checkbox\" name=\"testCheckBox\" checked=\"checked\" /> Something<br/>\n"
                + "        <input type=\"submit\" value=\"Submit\" />\n"
                + "    </form>\n"
                + "    </body>\n"
                + "</html>";

        Document document = Jsoup.parse(html);
        Element formElement = document.selectFirst("form[name=myForm]");
        assert formElement != null;

        // Get form elements' data
        Elements inputs = formElement.select("input");
        for (Element input : inputs) {
            // Ignoring disabled inputs and submit buttons not directly clicked
            if (!input.hasAttr("disabled") && !"submit".equals(input.attr("type"))) {
                String type = input.attr("type");
                String name = input.attr("name");
                
                // If the input is a checkbox, this is where the bug is. It should include "on" if no value is specified.
                if ("checkbox".equals(type) && input.hasAttr("checked")) {
                    String value = input.hasAttr("value") ? input.val() : "on";
                    System.out.println(name + "=" + value);
                    // Checking the output using JUnit assertion
                    assertEquals("on", value);
                }
            }
        }
    }
}
