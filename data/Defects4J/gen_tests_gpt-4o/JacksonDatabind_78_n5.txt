public void testJacksonDefaultTypingDeserializationVulnerability() {
    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.enableDefaultTyping();
    String maliciousJson = "[\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\",{" +
            "\"transletBytecodes\":[\"AAIAZQ==\"],\"transletName\":\"a.b\"," +
            "\"outputProperties\":{}}]";
    try {
        objectMapper.readValue(maliciousJson, Object.class);
        fail("Expected JsonMappingException to be thrown due to deserialization vulnerability");
    } catch (JsonMappingException e) {
        // Expected exception due to security vulnerability in handling default typing
    } catch (IOException e) {
        fail("Did not expect IOException other than JsonMappingException");
    }
}