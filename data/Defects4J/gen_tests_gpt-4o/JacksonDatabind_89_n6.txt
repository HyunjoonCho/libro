
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidTypeIdException;
import org.junit.Test;

public class PolymorphicDeserializationTest {

    static class VulnerableType {
        public String type;
    }

    @Test(expected = InvalidTypeIdException.class)
    public void testVulnerableTypeDeserialization() throws Exception {
        String json = "{ \"@type\": \"java.util.logging.FileHandler\", \"type\": \"someLogFile.log\" }";
        
        ObjectMapper mapper = new ObjectMapper();
        mapper.enableDefaultTyping(); // Enabling polymorphic typing for the test case
        
        // Attempt to deserialize the potentially vulnerable type
        mapper.readValue(json, Object.class);
    }
}
