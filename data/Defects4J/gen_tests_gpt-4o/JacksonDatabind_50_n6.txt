
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class JsonIdentityInfoDeserializationTest {
    
    @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
    @JsonIdentityReference(alwaysAsId = false)
    static class Node {
        public String id;
        public Node child;

        @JsonCreator
        public Node(String id) {
            this.id = id;
        }
    }

    @Test
    public void testDeserializationWithForwardReferences() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"id\":\"node1\",\"child\":{\"id\":\"node2\",\"child\":\"node1\"}}";

        Node node = mapper.readValue(json, Node.class);
        
        // Validating that node1 is equal to child.node.parent 
        assertEquals("node1", node.id);
        assertEquals("node2", node.child.id);
        assertEquals(node, node.child.child);
    }
}
