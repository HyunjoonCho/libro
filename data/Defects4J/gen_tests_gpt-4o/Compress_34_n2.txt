
import org.apache.tika.Tika;
import org.apache.tika.exception.TikaException;
import org.junit.Test;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

public class TestZipFileParsing {

    @Test(expected = ArrayIndexOutOfBoundsException.class)
    public void testParseFromLocalFileDataException() throws IOException, TikaException {
        // Create a ZIP file with the specified condition in-memory
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try (ZipOutputStream zos = new ZipOutputStream(baos)) {
            // Create a ZIP entry that matches the description
            ZipEntry entry = new ZipEntry("image.jpg");
            entry.setExtra(createExtraData());
            zos.putNextEntry(entry);
            zos.write(new byte[]{0, 1, 2, 3}); // Some dummy data for the image
            zos.closeEntry();
        }

        byte[] fakeZipContent = baos.toByteArray();
        Tika tika = new Tika();
        // This should trigger the exception based on the problem. Adjust the logic per environment.
        tika.detect(new ByteArrayInputStream(fakeZipContent), "TR_01.ZIP");
    }

    private byte[] createExtraData() {
        // This method simulates creating the 'ux' extra field with a zero-length part following the 'UT' extra fields
        return new byte[]{
                85, 84, 5, 0, 7, (byte) 144, (byte) 148, 51, 85, // UT part (Unix times)
                117, 120, 0, 0                                // Zero-length 'ux' part
        };
    }
}
