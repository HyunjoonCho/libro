
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.DiagnosticGroups;
import org.junit.Test;
import static org.junit.Assert.*;

public class CompilerFlagOrderTest {

    @Test
    public void testJsCompFlagsOrder() {
        CompilerOptions options = new CompilerOptions();
        options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CompilerOptions.Reach.WARNING);
        options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CompilerOptions.Reach.ERROR);
        options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CompilerOptions.Reach.OFF);

        // Expecting CHECK_TYPES to be off since it's the last argument
        assertEquals(CompilerOptions.Reach.OFF, options.getWarningLevel(DiagnosticGroups.CHECK_TYPES));

        options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CompilerOptions.Reach.OFF);
        options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CompilerOptions.Reach.WARNING);

        // Expecting CHECK_TYPES to be WARNING since it's the last argument
        assertEquals(CompilerOptions.Reach.WARNING, options.getWarningLevel(DiagnosticGroups.CHECK_TYPES));

        options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CompilerOptions.Reach.WARNING);
        options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CompilerOptions.Reach.ERROR);

        // Expecting CHECK_TYPES to be ERROR since it's the last argument
        assertEquals(CompilerOptions.Reach.ERROR, options.getWarningLevel(DiagnosticGroups.CHECK_TYPES));
    }
}
