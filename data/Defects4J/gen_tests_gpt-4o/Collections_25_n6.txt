
import org.apache.commons.collections4.iterators.CollatingIterator;
import org.junit.Test;

import java.util.Arrays;
import java.util.Iterator;

import static org.junit.Assert.assertEquals;

public class CollatingIteratorTest {

    @Test
    public void testNaturalOrderingWithNullComparator() {
        // Create two sorted iterators
        Iterator<Integer> iterator1 = Arrays.asList(1, 3, 5).iterator();
        Iterator<Integer> iterator2 = Arrays.asList(2, 4, 6).iterator();

        // Create a CollatingIterator with null comparator
        CollatingIterator<Integer> collatingIterator = new CollatingIterator<>(null, iterator1, iterator2);

        // Expected natural order merge: 1, 2, 3, 4, 5, 6
        assertEquals(Integer.valueOf(1), collatingIterator.next());
        assertEquals(Integer.valueOf(2), collatingIterator.next());
        assertEquals(Integer.valueOf(3), collatingIterator.next());
        assertEquals(Integer.valueOf(4), collatingIterator.next());
        assertEquals(Integer.valueOf(5), collatingIterator.next());
        assertEquals(Integer.valueOf(6), collatingIterator.next());
    }
}
