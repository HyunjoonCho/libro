
import org.apache.commons.codec.language.Caverphone2;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class CaverphoneEncodingTest {

    @Test
    public void testCaverphoneEncodingForEndingWithMB() {
        Caverphone2 caverphone = new Caverphone2();
        String encoded = caverphone.encode("Lamb");
        assertEquals("The name ending with 'mb' should be encoded to end with 'm2'", "LM20111111", encoded);
    }

    @Test
    public void testCaverphoneEncodingForStartingWithMB() {
        Caverphone2 caverphone = new Caverphone2();
        String encoded = caverphone.encode("Mbali");
        // Assuming the Caverphone algorithm keeps "mb" intact at the start for this test
        assertEquals("Mbali should not be incorrectly transformed to start with 'm2'", "MBA1921111", encoded);
    }
}
