public void testInterfaceToConstructorStackOverflow() {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setExterns(Collections.emptyList());
    options.setPropertyRenaming(CompilerOptions.PropertyRenamingPolicy.OFF);
    options.setVariableRenaming(VariableRenamingPolicy.OFF);
    options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.WARNING);
    
    String jsCode =
        "/**\n" +
        " * @interface\n" +
        " */\n" +
        "var OtherType = function() {}\n" +
        "\n" +
        "/**\n" +
        " * @implements {MyType}\n" +
        " * @constructor\n" +
        " */\n" +
        "var MyType = function() {}\n" +
        "\n" +
        "/**\n" +
        " * @type {MyType}\n" +
        " */\n" +
        "var x = /** @type {!OtherType} */ (new Object());\n";
    
    compiler.compile(Collections.emptyList(), 
                     Collections.singletonList(SourceFile.fromCode("t.js", jsCode)), 
                     options);
    
    // Note: The test might not reach this assertion if it fails by causing a stack overflow.
    assertEquals(0, compiler.getErrorCount());
}