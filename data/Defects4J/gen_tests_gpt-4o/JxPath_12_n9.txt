public void testIncompleteHandlingOfUndefinedNamespaces() throws Exception {
    String xml = "<root xmlns:A=\"http://example.com/A\" xmlns:B=\"http://example.com/B\">"
               + "<ElementA A:myAttr=\"Mytype\">"
               + "<B:ElementB>MY VALUE</B:ElementB>"
               + "</ElementA>"
               + "</root>";
    
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    factory.setNamespaceAware(true);
    DocumentBuilder builder = factory.newDocumentBuilder();
    Document doc = builder.parse(new InputSource(new StringReader(xml)));

    XPathFactory xPathFactory = XPathFactory.newInstance();
    XPath xPath = xPathFactory.newXPath();
    xPath.setNamespaceContext(new NamespaceContext() {
        public String getNamespaceURI(String prefix) {
            switch (prefix) {
                case "A":
                    return "http://example.com/A";
                case "B":
                    return "http://example.com/B";
                default:
                    return XMLConstants.NULL_NS_URI;
            }
        }

        public String getPrefix(String namespaceURI) {
            return null; 
        }

        public Iterator getPrefixes(String namespaceURI) {
            return null;
        }
    });

    try {
        XPathExpression expr = xPath.compile("/root/ElementA/@A:myAttr");
        String result = (String) expr.evaluate(doc, XPathConstants.STRING);
        assertEquals("Mytype", result);
    } catch (XPathExpressionException e) {
        fail("Exception should not have been thrown for handling attributes with namespaces: " + e.getMessage());
    }
}