
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.Result;
import org.junit.Test;
import static org.junit.Assert.assertNotNull;

public class ClosureCompilerTest {

    @Test
    public void testUnexpectedExpressionNodeDELPROP() {
        String jsCode = "function x() { return delete a; }";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // Enable advanced optimizations
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Suppress all standard compiler warnings
        WarningLevel.QUIET.setOptionsForWarningLevel(options);

        Result result = compiler.compile(
                CommandLineRunner.getDefaultExterns(),
                CommandLineRunner.parse(jsCode),
                options);

        // Assert that the result has errors
        assertNotNull("Expected a compiler error due to unexpected expression node", result.errors);
        // Print the errors to manually verify it correlates to the bug report
        result.errors.forEach(error -> System.out.println(error.description));
    }
}
