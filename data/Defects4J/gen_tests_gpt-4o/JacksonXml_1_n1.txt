
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import org.junit.Test;
import java.util.List;
import static org.junit.Assert.*;

public class NestedListDeserializationTest {

    public static class Definition {
        @JsonProperty("records")
        @JsonDeserialize(contentAs = Record.class)
        public List<Record> records;
    }

    public static class Record {
        @JsonProperty("fields")
        @JsonDeserialize(contentAs = Field.class)
        public List<Field> fields;
    }

    public static class Field {
        @JsonProperty("value")
        public String value;
    }

    @Test
    public void testDeserializationWithEmptyInnerList() throws Exception {
        String json = "{ \"records\": [{ \"fields\": [] }] }";
        
        ObjectMapper objectMapper = new ObjectMapper();
        Definition definition = objectMapper.readValue(json, Definition.class);

        assertNotNull(definition);
        assertNotNull(definition.records);
        assertEquals(1, definition.records.size());
        assertNotNull(definition.records.get(0).fields);
        assertEquals(0, definition.records.get(0).fields.size());
    }
}
