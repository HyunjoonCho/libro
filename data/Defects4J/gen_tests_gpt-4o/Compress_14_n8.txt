
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;

import java.io.FileInputStream;
import java.nio.file.Paths;

import static org.junit.Assert.fail;

public class TarArchiveInputStreamTest {

    @Test
    public void testAIXTarWithSymlink() {
        try (FileInputStream fis = new FileInputStream(Paths.get("src", "test", "resources", "aix-symlink.tar").toFile());
             TarArchiveInputStream tais = new TarArchiveInputStream(fis)) {

            TarArchiveEntry entry;
            while ((entry = tais.getNextTarEntry()) != null) {
                // Iterate through the entries, forcing it to attempt to parse each one.
            }

        } catch (Exception e) {
            e.printStackTrace();
            String expectedMessage = "Error detected parsing the header";
            if (!e.getMessage().contains(expectedMessage)) {
                // Fail the test only if the error is not the expected one.
                fail("Expected a parsing error for AIX tar file with symbolic links, but got: " + e.getMessage());
            }
        }
    }
}

