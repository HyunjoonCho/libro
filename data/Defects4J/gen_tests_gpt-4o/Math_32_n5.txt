public void testRecoverBRepFromBSPTree() {
    double[][] vertices = {
        {0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0},
        {0, 0, 1}, {1, 0, 1}, {1, 1, 1}, {0, 1, 1}
    };
    int[][] faces = {
        {0, 1, 2}, {0, 2, 3}, // bottom
        {4, 5, 6}, {4, 6, 7}, // top
        {0, 1, 5}, {0, 5, 4}, // front
        {1, 2, 6}, {1, 6, 5}, // right
        {2, 3, 7}, {2, 7, 6}, // back
        {3, 0, 4}, {3, 4, 7}  // left
    };

    BSPTree<Euclidean3D> tree = new BSPMesh(vertices, faces).getTree();
    PolyhedronsSet polyhedron = new PolyhedronsSet(tree);

    BoundaryAttribute<Euclidean3D> attribute = (BoundaryAttribute<Euclidean3D>) polyhedron.getBSPTree().getAttribute();
    if (attribute != null) {
        Sides sides = (Sides) attribute.getPlusOutside();
        List<List<SubHyperplane<Euclidean3D>>> boundaryFaces = sides.getBoundary();
        assertNotNull("Boundary faces should not be null", boundaryFaces);
        assertEquals("Incorrect number of faces recovered", 12, boundaryFaces.size());
    } else {
        fail("BSPTree does not contain valid BoundaryAttribute.");
    }
}