public void testLargeNumberOfWeights() {
    int n = 41200;
    double[] weights = new double[n];
    Arrays.fill(weights, 1.0);

    try {
        Weight weight = new Weight(weights);
        MultivariateVectorOptimizer optimizer = new LeastSquaresOptimizer();
        LeastSquaresProblem problem = new LeastSquaresBuilder()
            .start(new double[10]) // Example start point
            .model(new SomeModel()) // Replace with actual model
            .target(new double[n])  // Replace with actual target
            .weight(weight)
            .build();
        
        optimizer.optimize(problem);
        // If no exception is thrown, the problem is considered resolved
    } catch (OutOfMemoryError e) {
        fail("OutOfMemoryError was thrown indicating inefficiency with large weights.");
    }
}