
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.parser.Parser;
import org.junit.Test;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;

public class ScriptTagParsingTest {

    @Test
    public void testScriptTagParsing() {
        String html = "<HTML>\n" +
                "<body>\n" +
                " <div class=vsc sig=Uga>\n" +
                "  <div class=before></div>\n" +
                "  <script type=\"text/javascript\">\n" +
                "   header = jQuery('#header\\_features');\n" +
                "   if(header.length){\n" +
                "    header\n" +
                "     .prepend('<a class=\"prevPage browse left \" />')\n" +
                "     .append('<a class=\"nextPage browse right\" />');\n" +
                "\n" +
                "    items\n" +
                "     .wrapAll('<div class=\"scrollable\"/>')\n" +
                "     .wrapAll('<ul class=\"items\"/>')\n" +
                "     .wrap('<li/>');\n" +
                "   }\n" +
                "   </script>\n" +
                "   <div class=after></div>\n" +
                " </div>\n" +
                "</body>\n" +
                "</HTML>";

        // Parse the HTML string
        Document document = Jsoup.parse(html, "", Parser.htmlParser());

        // Check if the div with class 'after' is not inside the script tag
        Element afterDiv = document.selectFirst("div.after");
        Element parent = afterDiv.parent();

        // Check that the parent of 'div.after' is not the <script> element
        assertFalse("The 'after' div should not be a child of <script>.", parent.tagName().equals("script"));

        // We could also specify more checks on the integrity of the dom
    }
}
