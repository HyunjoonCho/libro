
import org.apache.commons.collections4.IterableUtils;
import org.apache.commons.collections4.IteratorUtils;
import org.junit.Test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

import static org.junit.Assert.fail;

public class IteratorUtilsTest {

    @Test
    public void testCollatedIteratorWithNullComparator() {
        List<Integer> list1 = Arrays.asList(1, 3, 5);
        List<Integer> list2 = Arrays.asList(2, 4, 6);

        try {
            Iterator<Integer> collatedIterator = IteratorUtils.collatedIterator(null, list1.iterator(), list2.iterator());
            List<Integer> resultList = new ArrayList<>();
            while (collatedIterator.hasNext()) {
                resultList.add(collatedIterator.next());
            }
            fail("Expected ClassCastException due to missing natural ordering with null comparator.");
        } catch (ClassCastException e) {
            // Expected behavior as no comparator was provided and natural ordering was not used.
            System.out.println("Caught expected ClassCastException: " + e.getMessage());
        }
    }
}
