
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.junit.Test;
import static org.junit.Assert.*;

public class LineTest {

    @Test
    public void testLineRevertPrecision() {
        // Create a line with a direction close to the X-axis but far from the origin
        Vector3D point = new Vector3D(1e9, 1e9, 1e9);
        Vector3D direction = new Vector3D(1, 0, 0);
        Line line = new Line(point, direction, 1e-10);

        // Revert the line
        line.revert();

        // Expected direction
        Vector3D expectedDirection = direction.negate();

        // Assert the direction of the reverted line is precise
        assertEquals(expectedDirection.getX(), line.getDirection().getX(), 1e-15);
        assertEquals(expectedDirection.getY(), line.getDirection().getY(), 1e-15);
        assertEquals(expectedDirection.getZ(), line.getDirection().getZ(), 1e-15);
    }
}
