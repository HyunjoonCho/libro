
import org.apache.commons.math3.fraction.BigFraction;
import org.junit.Test;
import java.math.BigInteger;

import static org.junit.Assert.assertFalse;

public class BigFractionTest {

    @Test
    public void testDoubleValueWithLargeNumerator() {
        // Create a BigFraction with a large numerator
        BigInteger numerator = new BigInteger("9".repeat(309)); // 309-digit number
        BigInteger denominator = BigInteger.ONE; // simple denominator
        BigFraction bigFraction = new BigFraction(numerator, denominator);

        // Get the double value and assert it's not NaN
        double doubleValue = bigFraction.doubleValue();
        assertFalse("Expected doubleValue not to be NaN", Double.isNaN(doubleValue));
    }

    @Test
    public void testDoubleValueWithLargeDenominator() {
        // Create a BigFraction with a large denominator
        BigInteger numerator = BigInteger.ONE; // simple numerator
        BigInteger denominator = new BigInteger("9".repeat(309)); // 309-digit number
        BigFraction bigFraction = new BigFraction(numerator, denominator);

        // Get the double value and assert it's not NaN
        double doubleValue = bigFraction.doubleValue();
        assertFalse("Expected doubleValue not to be NaN", Double.isNaN(doubleValue));
    }
}
