
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.util.zip.GZIPInputStream;

public class TarExtractionTest {
    
    private static final String TEMP_DIR_PATH = "path/to/temp/dir/";
    private static final String FILE_NAME = "test.tgz";

    @Test(expected = IllegalArgumentException.class)
    public void testTarExtractionThrowsIllegalArgumentException() throws IOException {
        TarArchiveInputStream tarIn = new TarArchiveInputStream(
                new GZIPInputStream(
                        new BufferedInputStream(
                                new FileInputStream(TEMP_DIR_PATH + FILE_NAME))));

        try {
            TarArchiveEntry entry = tarIn.getNextTarEntry();

            while (entry != null) {
                File path = new File(TEMP_DIR_PATH, entry.getName());
                if (entry.isDirectory()) {
                    path.mkdirs();
                } else {
                    path.createNewFile();
                    byte[] read = new byte[2048];
                    try (BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path))) {
                        int len;
                        while ((len = tarIn.read(read)) != -1) {
                            bout.write(read, 0, len);
                        }
                    }
                }
                entry = tarIn.getNextTarEntry();
            }
        } finally {
            tarIn.close();
        }
    }
}
