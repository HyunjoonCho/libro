
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.module.afterburner.AfterburnerModule;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class JacksonNonEmptyExclusionTest {

    public static class TestClass {
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String name = "";

        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public int age = 0;

        public int height = 180;  // should always be serialized
    }

    @Test
    public void testNonEmptyExclusion() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new AfterburnerModule());
        
        TestClass testObject = new TestClass();
        
        String jsonResult = mapper.writeValueAsString(testObject);
        // Expected jsonResult should only contain the "height" attribute,
        // since "name" is an empty String and "age" is 0, both should be excluded
        String expectedJson = "{\"height\":180}";
        
        assertEquals(expectedJson, jsonResult);
    }
}
