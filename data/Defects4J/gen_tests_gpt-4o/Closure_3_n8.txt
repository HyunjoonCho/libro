public void testOptimizationFailsWithCatchVariable() {
    String inputJavaScript =
        "function getStack() {\n" +
        " var getErrorObject = function() {\n" +
        "   try {\n" +
        "     throw Error(\"\");\n" +
        "   } catch(err) {\n" +
        "     return err;\n" +
        "   }\n" +
        " };\n" +
        " return getErrorObject().stack;\n" +
        "}\n" +
        "window['getStackTrace']=getStack;";

    String expectedOutputJavaScript =
        "function getStack() { try { throw Error(\"\"); } catch(err) { return err.stack; }} " +
        "window.getStackTrace = getStack;";

    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.SIMPLE_OPTIMIZATIONS.applyTo(options);

    // Run the compiler
    Result result = compiler.compile(CommandLineRunner.getDefaultExterns(), 
                                     SourceFile.fromCode("input.js", inputJavaScript),
                                     options);

    // Assertion to check that compilation succeeds
    assertTrue(result.success);

    // Assertion to check that our expected JavaScript matches
    String compiledCode = compiler.toSource();
    assertEquals(expectedOutputJavaScript, compiledCode);
}