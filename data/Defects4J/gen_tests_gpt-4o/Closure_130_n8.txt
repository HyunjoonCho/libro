
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import org.junit.Test;
import static org.junit.Assert.*;

public class ClosureCompilerTest {

    @Test
    public void testArgumentsNotMovedToDifferentScope() throws ScriptException {
        // Define the original and the rewritten functions as strings
        String originalFunction = 
            "function outer() {" +
            "  return function() {" +
            "    var args = arguments;" +
            "    setTimeout(function() { return args.length; }, 0);" +
            "  };" +
            "}" +
            "outer()(1, 2, 3);";

        String rewrittenFunction = 
            "function outer() {" +
            "  return function() {" +
            "    setTimeout(function() { return arguments.length; }, 0);" +
            "  };" +
            "}" +
            "outer()(1, 2, 3);";

        // Using Java's built-in script engine manager to execute JavaScript
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("JavaScript");

        // Execute both versions and check if they give different results
        Object originalResult = engine.eval(originalFunction);
        Object rewrittenResult = engine.eval(rewrittenFunction);

        // Verify that the rewritten version behaves differently due to the bug
        assertNotEquals("Rewritten function should result in different 'arguments' scope", originalResult, rewrittenResult);
    }
}
