public void testAnonymousObjectTypeInference() {
    try {
        // The equivalent of the problematic JavaScript code:
        // Defining a constructor function with a specified parameter type
        callzConstructor(new CallzParameter("hi"));
        // The test would fail if it reaches here and doesn't throw an exception
        fail("Should have thrown an exception due to missing required property 'prop2'");
    } catch (Exception e) {
        // Expected behavior: an exception is thrown due to missing 'prop2'
        assertTrue(e.getMessage().contains("missing required property 'prop2'"));
    }
}

// Mocking the JavaScript function and parameter in Java
class CallzParameter {
    String prop1;
    Integer prop2; // Nullable, representing (number|undefined)

    CallzParameter(String prop1, Integer prop2) {
        this.prop1 = prop1;
        this.prop2 = prop2;
    }

    CallzParameter(String prop1) {
        this(prop1, null);
    }
}

void callzConstructor(CallzParameter parry) {
    if (parry.prop2 != null && parry.prop2 < 5) {
        System.out.println("alright!");
    }
    System.out.println(parry.prop1);
}