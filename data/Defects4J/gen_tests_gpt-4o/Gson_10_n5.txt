
import com.google.gson.Gson;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import junit.framework.TestCase;

import java.io.IOException;

public class JsonAdapterAnnotationOnFieldsTest extends TestCase {

    public void testPrimitiveFieldAnnotationTakesPrecedenceOverDefault() {
        Gson gson = new Gson();
        String json = gson.toJson(new GadgetWithPrimitivePart(42));
        
        // Expectation is that the custom TypeAdapter will serialize the long as a String
        assertEquals("{\"part\":\"42\"}", json);

        GadgetWithPrimitivePart gadget = gson.fromJson(json, GadgetWithPrimitivePart.class);
        assertEquals(42, gadget.part);
    }

    private static final class GadgetWithPrimitivePart {
        @JsonAdapter(LongToStringTypeAdapterFactory.class)
        final long part;

        private GadgetWithPrimitivePart(long part) {
            this.part = part;
        }
    }

    private static final class LongToStringTypeAdapterFactory implements TypeAdapterFactory {
        static final TypeAdapter<Long> ADAPTER = new TypeAdapter<Long>() {
            @Override
            public void write(JsonWriter out, Long value) throws IOException {
                out.value(value.toString());
            }

            @Override
            public Long read(JsonReader in) throws IOException {
                return in.nextLong();
            }
        };
        
        @Override
        public <T> TypeAdapter<T> create(Gson gson, final TypeToken<T> type) {
            Class<?> cls = type.getRawType();
            if (Long.class.isAssignableFrom(cls)) {
                return (TypeAdapter<T>) ADAPTER;
            } else if (long.class.isAssignableFrom(cls)) {
                return (TypeAdapter<T>) ADAPTER;
            }
            throw new IllegalStateException("Non-long field of type " + type
                    + " annotated with @JsonAdapter(LongToStringTypeAdapterFactory.class)");
        }
    }
}
