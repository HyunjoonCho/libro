
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.MapperFeature;
import org.junit.Test;
import static org.junit.Assert.assertTrue;

@JacksonXmlRootElement(localName = "myname")
@JsonInclude(JsonInclude.Include.NON_EMPTY)
class XMLTest {}

public class XMLTestSerializationTest {

    @Test
    public void testJacksonXmlRootElementAnnotation() throws Exception {
        final XmlMapper xmlMapper = new XmlMapper();
        final XmlMapper noAnnotationsXmlMapper = xmlMapper.copy()
                .configure(MapperFeature.USE_ANNOTATIONS, false)
                .configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);

        String noAnnotationsOutput = noAnnotationsXmlMapper.writeValueAsString(new XMLTest());
        String annotationsOutput = xmlMapper.writeValueAsString(new XMLTest());

        // Assert that the output from the noAnnotationsXmlMapper does not include 'myname'
        assertTrue(noAnnotationsOutput.contains("<XMLTest/>"));
        
        // Assert that the output from the annotations-enabled xmlMapper includes 'myname'
        assertTrue(annotationsOutput.contains("<myname/>"));
    }
}
