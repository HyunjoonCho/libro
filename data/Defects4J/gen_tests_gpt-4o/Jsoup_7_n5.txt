
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class JsoupTest {

    @Test
    public void testMalformedTreeWithMultipleBodyElements() throws Exception {
        // Assuming the HTML file is located in "src/test/resources/jsoup-tc/sample.html"
        InputStream inputStream = getClass().getResourceAsStream("/jsoup-tc/sample.html");
        
        // Parse the HTML file using Jsoup
        Document document = Jsoup.parse(inputStream, "UTF-8", "");

        // Get all body elements in the parsed document
        Elements bodyElements = document.getElementsByTag("body");

        // Check if there is more than one body element that does not follow the normal HTML hierarchy
        assertEquals("The document should have only one body element as a direct child of html", 1, bodyElements.size());

        // Check if the only body element is a direct child of the HTML element
        Element htmlElement = document.child(0); // Get the root html element
        assertEquals("html", htmlElement.tagName());
        Elements directBodyChildren = htmlElement.getElementsByTag("body");
        
        // Ensure the body element is a direct child of the html element
        assertEquals("The body element should be a direct child of the html element", 1, directBodyChildren.size());
    }
}
