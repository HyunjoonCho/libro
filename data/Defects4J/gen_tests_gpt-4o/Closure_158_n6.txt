
import static org.junit.Assert.assertEquals;

import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.DiagnosticGroups;
import org.junit.Test;

public class CompilerFlagPrecedenceTest {

    @Test
    public void testJscompFlagPrecedence() {
        CompilerOptions options = new CompilerOptions();

        // Set jscomp flags: error first, then warning, then off
        options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CompilerOptions.Severity.ERROR);
        options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CompilerOptions.Severity.WARNING);
        options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CompilerOptions.Severity.OFF);

        // Expect "off" to take precedence and be the final level
        assertEquals(CompilerOptions.Severity.OFF, options.getWarningLevel(DiagnosticGroups.ACCESS_CONTROLS));

        // Set jscomp flags: warning first, then off, then error
        options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CompilerOptions.Severity.WARNING);
        options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CompilerOptions.Severity.OFF);
        options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CompilerOptions.Severity.ERROR);

        // Expect "error" to take precedence as it is the last set flag
        assertEquals(CompilerOptions.Severity.ERROR, options.getWarningLevel(DiagnosticGroups.ACCESS_CONTROLS));
    }
}
