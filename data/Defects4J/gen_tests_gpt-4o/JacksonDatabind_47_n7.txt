
import com.fasterxml.jackson.annotation.JsonDeserialize;
import com.fasterxml.jackson.annotation.JsonSerialize;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

public class JacksonSerializeTest {

    public interface AccessionIdentifier {
    }

    public static class BaseAccessionIdentifier implements AccessionIdentifier {
        private String id;

        public BaseAccessionIdentifier() {
        }

        public BaseAccessionIdentifier(String id) {
            this.id = id;
        }

        public String getId() {
            return id;
        }

        public void setId(String id) {
            this.id = id;
        }
    }

    public static class Foo {

        private AccessionIdentifier reference;

        public Foo() {
        }

        @JsonSerialize(as = BaseAccessionIdentifier.class)
        @JsonDeserialize(as = BaseAccessionIdentifier.class)
        public AccessionIdentifier getReference() {
            return reference;
        }

        public void setReference(AccessionIdentifier reference) {
            this.reference = reference;
        }
    }

    @Test
    public void testJsonSerializeAs() {
        ObjectMapper objectMapper = new ObjectMapper();
        Foo foo = new Foo();
        foo.setReference(new BaseAccessionIdentifier("test-id"));

        try {
            String json = objectMapper.writeValueAsString(foo);
            System.out.println(json);
        } catch (JsonProcessingException e) {
            e.printStackTrace();
            // This is where the bug manifests: an exception is expected here
        }
    }
}
