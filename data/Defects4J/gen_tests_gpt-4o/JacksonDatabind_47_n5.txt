
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.fail;

public class JacksonSerializationTest {

    // Assuming these classes/interfaces are provided as per the bug report

    interface AccessionIdentifier {
    }

    public static class BaseAccessionIdentifier implements AccessionIdentifier {
        private String id;
    
        public BaseAccessionIdentifier() {
        }
    
        public BaseAccessionIdentifier(String id) {
            this.id = id;
        }
    
        public String getId() {
            return id;
        }
    
        public void setId(String id) {
            this.id = id;
        }
    }

    public static class Foo {
        @JsonSerialize(as = BaseAccessionIdentifier.class)
        @JsonDeserialize(as = BaseAccessionIdentifier.class)
        public AccessionIdentifier getReference() {
            return new BaseAccessionIdentifier("1234");
        }
    }

    @Test
    public void testJsonSerializeAsSuperType() {
        ObjectMapper objectMapper = new ObjectMapper();
        Foo foo = new Foo();

        try {
            // This is where the exception mentioned in the bug is triggered
            String json = objectMapper.writeValueAsString(foo);
            System.out.println("Serialized JSON: " + json);
        } catch (JsonProcessingException e) {
            fail("Serialization failed with exception: " + e.getMessage());
        }
    }
}
