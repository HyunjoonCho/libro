public void testSwitchedOrderDeleteKey() {
    var customData = new HashMap<String, String>();
    customData.put("key", "value");

    // Original function behavior
    String result = testRemoveKeyOriginal("key", customData);
    assertEquals("value", result);
    assertFalse(customData.containsKey("key"));

    // Compiled function behavior
    customData.put("key", "value"); // Reset the customData
    result = testRemoveKeyCompiled("key", customData);
    assertNull(result);
    assertFalse(customData.containsKey("key"));
}

private String testRemoveKeyOriginal(String key, Map<String, String> dataSlot) {
    String retval = dataSlot != null ? dataSlot.get(key) : null;
    boolean hadKey = dataSlot != null && dataSlot.containsKey(key);

    if (dataSlot != null) {
        dataSlot.remove(key);
    }

    return hadKey ? retval : null;
}

private String testRemoveKeyCompiled(String key, Map<String, String> dataSlot) {
    String retval = dataSlot != null ? dataSlot.get(key) : null;
    
    if (dataSlot != null) {
        dataSlot.remove(key);
    }
    
    return dataSlot != null && dataSlot.containsKey(key) ? retval : null;
}