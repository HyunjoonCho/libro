
import static org.junit.Assert.assertEquals;
import org.junit.Test;
import java.util.HashMap;
import java.util.Map;

public class CustomDataTest {

    @Test
    public void testOriginalBehavior() {
        Map<String, String> customData = new HashMap<>();
        customData.put("key", "value");

        assertEquals("value", testRemoveKeyOriginal("key", customData));
        assertEquals(false, customData.containsKey("key"));
    }

    @Test
    public void testCompiledBehavior() {
        Map<String, String> customData = new HashMap<>();
        customData.put("key", "value");

        assertEquals(null, testRemoveKeyCompiled("key", customData));
        assertEquals(false, customData.containsKey("key"));
    }

    private String testRemoveKeyOriginal(String key, Map<String, String> customData) {
        Map<String, String> dataSlot = customData;
        String retval = dataSlot != null ? dataSlot.get(key) : null;
        boolean hadKey = dataSlot != null && dataSlot.containsKey(key);

        if (dataSlot != null)
            dataSlot.remove(key);

        return hadKey ? retval : null;
    }

    private String testRemoveKeyCompiled(String key, Map<String, String> customData) {
        Map<String, String> dataSlot = customData;
        String retval = dataSlot != null ? dataSlot.get(key) : null;

        if (dataSlot != null)
            dataSlot.remove(key);

        return dataSlot != null && dataSlot.containsKey(key) ? retval : null;
    }
}
