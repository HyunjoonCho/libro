public void testCustomSerializerUsedWithJsonValue() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(CustomClass.class, new CustomClassSerializer());
    mapper.registerModule(module);

    CustomClass customClass = new CustomClass(10);
    String result = mapper.writeValueAsString(customClass);

    assertEquals("Serialized with CustomClassSerializer", result);
}

static class CustomClass {
    private final int value;

    public CustomClass(int value) {
        this.value = value;
    }

    @JsonValue
    public String asJsonValue() {
        return "JsonValue: " + value;
    }
}

static class CustomClassSerializer extends JsonSerializer<CustomClass> {
    @Override
    public void serialize(CustomClass value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        gen.writeString("Serialized with CustomClassSerializer");
    }
}