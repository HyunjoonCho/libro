
import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormat;
import org.junit.Test;
import org.junit.Assert;

public class DateTimeZoneTest {

    @Test
    public void testMaxOffset() {
        // Assuming parse method is limited to 23:59
        // Create a DateTimeZone with the maximum valid offset
        try {
            DateTimeZone maxValidOffset = DateTimeZone.forOffsetHoursMinutes(23, 59);
            DateTimeFormatter formatter = DateTimeFormat.forPattern("ZZ");
            // We expect this string to be "+23:59"
            Assert.assertEquals("+23:59", formatter.withZone(maxValidOffset).print(0L));
        } catch (IllegalArgumentException e) {
            Assert.fail("Should allow max offset of 23:59");
        }

        // Test exceeding maximum offset
        try {
            DateTimeZone.invalidZone = DateTimeZone.forOffsetHoursMinutes(23, 59, 59, 799);
            Assert.fail("Should not allow offset greater than 23:59:59.999");
        } catch (IllegalArgumentException e) {
            // Expected exception
        }
    }
}
