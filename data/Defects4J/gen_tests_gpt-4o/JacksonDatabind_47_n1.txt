
import com.fasterxml.jackson.annotation.JsonDeserialize;
import com.fasterxml.jackson.annotation.JsonSerialize;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class JacksonTest {

    public static class Foo {
        @JsonSerialize(as = BaseAccessionIdentifier.class)
        @JsonDeserialize(as = BaseAccessionIdentifier.class)
        private AccessionIdentifier reference;

        public Foo(AccessionIdentifier reference) {
            this.reference = reference;
        }

        public AccessionIdentifier getReference() {
            return reference;
        }

        public void setReference(AccessionIdentifier reference) {
            this.reference = reference;
        }
    }
    
    public interface AccessionIdentifier {
    }

    public static class BaseAccessionIdentifier implements AccessionIdentifier {
    }

    @Test
    public void testSerializationWithJsonSerializeAsAnnotation() {
        ObjectMapper objectMapper = new ObjectMapper();
        Foo foo = new Foo(new BaseAccessionIdentifier());
        
        boolean exceptionThrown = false;
        
        try {
            // Attempt serialization
            String json = objectMapper.writeValueAsString(foo);
        } catch (JsonProcessingException e) {
            exceptionThrown = true;
            // Output the error to verify it's the same problem
            System.out.println("Exception: " + e.getMessage());
        }
        
        assertTrue("Expected a JsonMappingException to be thrown", exceptionThrown);
    }
}
