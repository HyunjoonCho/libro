
import org.apache.commons.math3.optim.linear.LinearConstraint;
import org.apache.commons.math3.optim.linear.LinearObjectiveFunction;
import org.apache.commons.math3.optim.linear.Relationship;
import org.apache.commons.math3.optim.linear.SimplexSolver;
import org.apache.commons.math3.optim.linear.GoalType;
import org.apache.commons.math3.optim.linear.PointValuePair;
import org.junit.Test;
import java.util.ArrayList;
import java.util.Collection;

import static org.junit.Assert.assertEquals;

public class SimplexSolverTest {

    @Test
    public void testIncorrectSimplexSolution() {
        // Objective function coefficients: maximize 3x + 4y
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 3, 4 }, 0);

        // Constraints:
        // 2x + y <= 14
        // 4x + 3y <= 28
        // x >= 0, y >= 0 (implicit in solver)

        Collection<LinearConstraint> constraints = new ArrayList<>();
        constraints.add(new LinearConstraint(new double[] { 2, 1 }, Relationship.LEQ, 14));
        constraints.add(new LinearConstraint(new double[] { 4, 3 }, Relationship.LEQ, 28));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);

        // Expected solution for this problem, suppose the max at (5, 4) yielding a value of 31
        assertEquals(5.0, solution.getPoint()[0], 1e-6); // x = 5
        assertEquals(4.0, solution.getPoint()[1], 1e-6); // y = 4

        // Objective function value
        assertEquals(31.0, solution.getValue(), 1e-6);
    }
}
