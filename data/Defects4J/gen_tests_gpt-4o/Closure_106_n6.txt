
import com.google.javascript.jscomp.CommandLineRunner;
import org.junit.Test;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class ClosureCompilerBugTest {

    @Test(expected = RuntimeException.class)
    public void testCollapsePropertiesBug() throws IOException {
        // Create a temporary JS file with content that likely triggers the issue
        File tempJSFile = File.createTempFile("TestJsFile", ".js");
        tempJSFile.deleteOnExit();
        
        try (FileWriter writer = new FileWriter(tempJSFile)) {
            writer.write("var ns = {};\n");
            writer.write("ns.Foo = function() {};\n");
            writer.write("goog.exportSymbol('ns.Foo', ns.Foo);\n");
            writer.write("goog.exportSymbol('ns.Foo.prototype.method', ns.Foo.prototype.method);\n");
        }

        // Run Closure Compiler with ADVANCED_OPTIMIZATIONS
        String[] compileArgs = {
            "--js", tempJSFile.getAbsolutePath(),
            "--compilation_level", "ADVANCED_OPTIMIZATIONS"
        };

        try {
            CommandLineRunner.main(compileArgs);
        } catch (RuntimeException e) {
            // Assert the exception message or type if needed
            throw e;  // Re-throw to satisfy the test's expected exception
        }
    }
}
