
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.filter.TokenFilter;
import com.fasterxml.jackson.core.filter.FilteringParserDelegate;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertEquals;

public class FilteringParserDelegateTest {

    @Test
    public void testMatchCountFunctionality() throws IOException {
        String json = "{ \"name\": \"John\", \"age\": 30, \"city\": \"New York\" }";

        TokenFilter filter = new TokenFilter() {
            @Override
            public TokenFilter includeProperty(String name) {
                return ("name".equals(name) || "city".equals(name)) ? TokenFilter.INCLUDE_ALL : null;
            }
        };
        
        JsonParser parser = new com.fasterxml.jackson.databind.ObjectMapper().getFactory().createParser(json);
        FilteringParserDelegate filteringParserDelegate = new FilteringParserDelegate(parser, filter, false, false);

        int matchCount = 0;
        while (filteringParserDelegate.nextToken() != null) {
            if (filteringParserDelegate.getCurrentToken() == JsonToken.FIELD_NAME) {
                matchCount++;
            }
        }
        
        // The expected match count would be 2 for fields "name" and "city".
        // This simulates the expected functionality if _matchCount was utilized correctly.
        assertEquals(2, matchCount);
    }
}
