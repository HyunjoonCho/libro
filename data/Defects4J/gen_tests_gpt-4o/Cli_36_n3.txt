
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.Assert.assertTrue;

public class HelpFormatterTest {

    @Test
    public void testOptionGroupOrdering() {
        OptionGroup group = new OptionGroup();
        Option h = Option.builder("h").build();
        Option s = Option.builder("s").build();
        Option b = Option.builder("b").build();
        Option t = Option.builder("t").build();
        group.addOption(h)
             .addOption(s)
             .addOption(b)
             .addOption(t);
        
        Options options = new Options();
        options.addOptionGroup(group);
        options.addOption(Option.builder("o").build());
        
        HelpFormatter formatter = new HelpFormatter();
        formatter.setOptionComparator(null);

        ByteArrayOutputStream out = new ByteArrayOutputStream();
        PrintStream printStream = new PrintStream(out);
        System.setOut(printStream);
        
        formatter.printHelp("cmd", "", options, null);
        
        String output = out.toString();
        
        // Check that the options in the group appear in the order they were added
        int indexH = output.indexOf("-h");
        int indexS = output.indexOf("-s");
        int indexB = output.indexOf("-b");
        int indexT = output.indexOf("-t");

        // This condition reproduces the bug: expecting order h, s, b, t
        assertTrue(indexH >= 0);
        assertTrue(indexS > indexH);
        assertTrue(indexB > indexS);
        assertTrue(indexT > indexB);
    }
}
