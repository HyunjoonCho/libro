
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class RecursiveTypeSerializationTest {

    // Base class implements an interface with a generic type parameter
    public static class Base implements IFace<Sub> {
        @JsonProperty
        int base = 1;
    }

    // Sub class with its own property
    public static class Sub {
        @JsonProperty
        int sub = 2;
    }

    // Interface with a generic type parameter
    public interface IFace<T> {}

    @Test
    public void testSubSerializationIncludesBaseProperties() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        
        // Instance of the Sub class
        Sub sub = new Sub();

        // Serializing the Sub class
        String jsonResult = objectMapper.writeValueAsString(sub);

        // Assert that the serialized JSON string contains both "base" and "sub" properties
        String expectedJson = "{\"base\":1,\"sub\":2}";
        assertEquals("The serialized JSON should contain both base and sub properties", expectedJson, jsonResult);
    }
}
