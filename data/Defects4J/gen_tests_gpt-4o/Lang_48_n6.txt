
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.junit.Test;
import java.math.BigDecimal;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class EqualsBuilderBigDecimalTest {

    @Test
    public void testBigDecimalEqualityUsingEqualsBuilder() {
        BigDecimal bd1 = new BigDecimal("10.0");
        BigDecimal bd2 = new BigDecimal("10.00");

        // Expected to be true when using compareTo, but false with equals because scale differs
        boolean isEqualWithEqualsBuilder = new EqualsBuilder()
            .append(bd1, bd2)
            .isEquals();

        assertFalse("EqualsBuilder should return false when comparing BigDecimals with different scales using equals.", isEqualWithEqualsBuilder);

        // This is what ideally should happen if compareTo is used instead of equals
        boolean isEqualWithCompareTo = bd1.compareTo(bd2) == 0;

        assertTrue("compareTo should return true when comparing BigDecimals with different scales but same value.", isEqualWithCompareTo);
    }
}
