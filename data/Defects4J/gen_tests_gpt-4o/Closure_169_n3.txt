
public class ClosureCompilerBugTest {

    /**
     * @param obj {{func: function()}}
     */
    public static void test1(Object obj) {
        // Function body is omitted as it is not the focus of the test case
    }

    /**
     * Function to test strange "wrong parameter" warning for callback function.
     */
    @Test
    public void testCallbackFunctionWarning() {
        Object fnStruc1 = new Object() {
            final Function<Void, Void> func = () -> {
                return null;
            };
        };

        try {
            // Attempting to simulate the compile-warning in Java
            test1(fnStruc1);
            // If no exception is thrown, the test passes
            assertTrue(true);
        } catch (WarningException e) {
            // If a warning similar to the Closure Compiler's warning is raised, fail the test
            fail("Unexpected warning: " + e.getMessage());
        }
    }

    /**
     * Exception class to simulate a warning in the Closure Compiler context.
     */
    static class WarningException extends RuntimeException {
        WarningException(String message) {
            super(message);
        }
    }
}
