public void testDurationToPeriodWithFixedTimeZone() {
    // Set the default time zone to GMT for this test case
    DateTimeZone.setDefault(DateTimeZone.forID("Etc/GMT"));
    
    Duration aDuration = new Duration(DateTimeConstants.MILLIS_PER_HOUR * 30 
        + DateTimeConstants.MILLIS_PER_MINUTE * 50 
        + DateTimeConstants.MILLIS_PER_SECOND * 14);
    
    Period period = aDuration.toPeriod();

    assertEquals(1, period.getDays());
    assertEquals(6, period.getHours());
    assertEquals(50, period.getMinutes());
    assertEquals(14, period.getSeconds());

    // Reset the default time zone to the original
    DateTimeZone.setDefault(null);
}

public void testDurationToPeriodWithDSTTimeZone() {
    // Set the default time zone to America/Chicago for this test case
    DateTimeZone.setDefault(DateTimeZone.forID("America/Chicago"));
    
    Duration aDuration = new Duration(DateTimeConstants.MILLIS_PER_HOUR * 30 
        + DateTimeConstants.MILLIS_PER_MINUTE * 50 
        + DateTimeConstants.MILLIS_PER_SECOND * 14);
    
    Period period = aDuration.toPeriod();

    assertEquals(0, period.getDays());
    assertEquals(30, period.getHours());
    assertEquals(50, period.getMinutes());
    assertEquals(14, period.getSeconds());

    // Reset the default time zone to the original
    DateTimeZone.setDefault(null);
}