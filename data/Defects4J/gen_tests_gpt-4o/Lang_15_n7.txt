
import org.apache.commons.lang3.reflect.TypeUtils;
import org.junit.Assert;
import org.junit.Test;

import java.util.Map;

public class TypeUtilsTest {

    public interface This<K, V> {
    }

    public class Other<T> implements This<String, T> {
    }

    @Test
    public void testGetTypeArguments_forPartiallyAssignedClasses() {
        Map<Type, Type> typeVarAssigns = TypeUtils.getTypeArguments(Other.class, This.class);

        // Validate that there are exactly two type arguments
        Assert.assertEquals(2, typeVarAssigns.size());

        // Check if the first type parameter of This (K) is correctly assigned to String
        Assert.assertEquals(String.class, typeVarAssigns.get(This.class.getTypeParameters()[0]));

        // Check if the second type parameter of This (V) is correctly assigned
        // to the type parameter of Other
        Assert.assertEquals(Other.class.getTypeParameters()[0], typeVarAssigns.get(This.class.getTypeParameters()[1]));
    }
}
