
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.threed.Rotation;
import org.apache.commons.math3.exception.MathIllegalArgumentException;
import org.junit.Test;

import static org.junit.Assert.*;

public class RotationTest {

    @Test
    public void testNumericalProblemInRotationCreation() {
        Vector3D u1 = new Vector3D(-4921140.837095533, -2.1512094250440013E7, -890093.279426377);
        Vector3D u2 = new Vector3D(-2.7238580938724895E9, -2.169664921341876E9, 6.749688708885301E10);

        Vector3D v1 = new Vector3D(1, 0, 0);
        Vector3D v2 = new Vector3D(0, 0, 1);
        
        try {
            Rotation rotation = new Rotation(u1, u2, v1, v2);
            fail("Expected MathIllegalArgumentException due to numerical instability.");
        } catch (MathIllegalArgumentException e) {
            // Test passes as we expect an exception due to numerical instability.
        }
    }
}
