
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

import static com.fasterxml.jackson.core.JsonGenerator.Feature.QUOTE_FIELD_NAMES;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class UTF8JsonGeneratorTest {

    @Test
    public void testQuoteFieldNamesToggle() throws IOException {
        JsonFactory jsonFactory = new JsonFactory();
        
        // Test with QUOTE_FIELD_NAMES enabled (default)
        ByteArrayOutputStream outputStream1 = new ByteArrayOutputStream();
        JsonGenerator generator1 = jsonFactory.createGenerator(outputStream1);
        
        generator1.writeStartObject();
        generator1.writeFieldName("key");
        generator1.writeString("value");
        generator1.writeEndObject();
        generator1.close();
        
        String jsonWithQuotes = outputStream1.toString("UTF-8");
        assertEquals("{\"key\":\"value\"}", jsonWithQuotes);

        // Test with QUOTE_FIELD_NAMES disabled
        ByteArrayOutputStream outputStream2 = new ByteArrayOutputStream();
        JsonGenerator generator2 = jsonFactory.createGenerator(outputStream2);
        generator2.disable(QUOTE_FIELD_NAMES);
        
        generator2.writeStartObject();
        generator2.writeFieldName("key");
        generator2.writeString("value");
        generator2.writeEndObject();
        generator2.close();
        
        String jsonWithoutQuotes = outputStream2.toString("UTF-8");
        assertEquals("{key:\"value\"}", jsonWithoutQuotes);
    }
}
