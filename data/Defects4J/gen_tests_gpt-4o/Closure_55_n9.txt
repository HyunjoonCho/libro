
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;
import java.util.Collections;
import static org.junit.Assert.assertEquals;

public class GetterExceptionTest {

    @Test
    public void testGetterException() {
        // Sample JavaScript code with a getter causing the exception
        String jsCode = "var obj = { get name() { return 'test'; } };";

        // Set up the Google Closure Compiler
        Compiler compiler = new Compiler();
        SourceFile extern = SourceFile.fromCode("externs.js", "");
        SourceFile input = SourceFile.fromCode("input.js", jsCode);

        // Compile the JavaScript code
        Result result = compiler.compile(extern, input, Collections.emptyList());

        // Check for errors
        for (JSError message : result.errors) {
            System.out.println("Error: " + message.toString());
        }

        // Assert that there was an error detected
        assertEquals(1, result.errors.length);
        assertEquals("Expected function but was call Reference node CALL 128 [free_call: 1] [source_file: input.js]",
                     result.errors[0].description);
    }
}
