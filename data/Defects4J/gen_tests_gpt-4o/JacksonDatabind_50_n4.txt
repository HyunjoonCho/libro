public void testJsonIdentityInfoDeserializationWithCreator() throws Exception {
    String json = "{\"id\":1,\"name\":\"Test\",\"related\":{\"id\":2,\"name\":\"Related\"}}";
    
    ObjectMapper mapper = new ObjectMapper();
    mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);

    TestEntity entity = mapper.readValue(json, TestEntity.class);
    
    assertNotNull(entity);
    assertEquals(1, entity.getId());
    assertEquals("Test", entity.getName());
    assertNotNull(entity.getRelated());
    assertEquals(2, entity.getRelated().getId());
    assertEquals("Related", entity.getRelated().getName());
}

@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public static class TestEntity {
    private int id;
    private String name;
    private RelatedEntity related;

    @JsonCreator
    public TestEntity(@JsonProperty("id") int id, @JsonProperty("name") String name, @JsonProperty("related") RelatedEntity related) {
        this.id = id;
        this.name = name;
        this.related = related;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public RelatedEntity getRelated() {
        return related;
    }
}

@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public static class RelatedEntity {
    private int id;
    private String name;

    @JsonCreator
    public RelatedEntity(@JsonProperty("id") int id, @JsonProperty("name") String name) {
        this.id = id;
        this.name = name;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }
}