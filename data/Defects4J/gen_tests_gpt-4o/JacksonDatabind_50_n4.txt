
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class JsonIdentityInfoTest {

    @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
    static class Node {
        public int id;
        public String name;

        @JsonIdentityReference(alwaysAsId = true)
        public Node next;

        @JsonCreator
        public Node(int id, String name) {
            this.id = id;
            this.name = name;
        }
    }

    @Test
    public void testJsonIdentityInfoDeserialization() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        String json = """
                      {
                        "id": 1, 
                        "name": "node1", 
                        "next": 2
                      }
                      """;

        // Provided JSON represents two nodes with a forward reference
        Node node = mapper.readValue(json, Node.class);

        // Expect the forward reference to be correctly resolved
        assertEquals(1, node.id);
        assertEquals("node1", node.name);
        assertEquals(2, node.next.id);
    }
}
