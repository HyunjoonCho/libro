
import com.google.gson.Gson;
import com.google.gson.JsonParser;
import com.google.gson.JsonPrimitive;
import com.google.gson.stream.JsonReader;
import org.junit.Test;

import java.io.StringReader;

import static org.junit.Assert.assertEquals;

public class NegativeZeroTest {

    @Test
    public void testNegativeZero() {
        String json = "-0";

        JsonReader jsonReader = new JsonReader(new StringReader(json));
        jsonReader.setLenient(true);

        try {
            JsonPrimitive parsedNumber = (JsonPrimitive) JsonParser.parseReader(jsonReader);
            Number number = parsedNumber.getAsNumber();

            // Checking the lexical representation of the number
            String numberAsString = number.toString();
            
            // Assert that Gson should preserve the negative zero in the lexical form
            assertEquals("-0", numberAsString);
        } catch (Exception e) {
            // Fails the test if any exception occurs
            e.printStackTrace();
            assertEquals("Exception should not occur", e.getMessage());
        }
    }
}
