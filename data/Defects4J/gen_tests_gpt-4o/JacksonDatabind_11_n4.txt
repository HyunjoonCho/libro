
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

import org.junit.Test;

// Dummy Ruleform class to satisfy the T extends Ruleform
class Ruleform implements Serializable { 
    private static final long serialVersionUID = 1L;
    private String name;

    public Ruleform(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }
}

class Something implements Serializable {
    private static final long serialVersionUID = 1L;
    private Ruleform entity;

    public <T extends Ruleform> T getEntity() {
        return (T) entity;
    }

    public <T extends Ruleform> void setEntity(T entity) {
        this.entity = entity;
    }
}

public class SerializationTest {

    @Test
    public void testSerializationOfSomething() throws Exception {
        // Create an instance of Something
        Something original = new Something();
        Ruleform originalEntity = new Ruleform("Test Entity");
        original.setEntity(originalEntity);

        // Serialize the original object
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(baos);
        oos.writeObject(original);
        oos.close();

        // Deserialize to get a new object
        ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
        ObjectInputStream ois = new ObjectInputStream(bais);
        Something deserialized = (Something) ois.readObject();
        ois.close();

        // Assert that the deserialized object is equal to the original object
        assertNotNull(deserialized);
        assertNotNull(deserialized.getEntity());
        assertEquals(originalEntity.getName(), deserialized.getEntity().getName());
    }
}
