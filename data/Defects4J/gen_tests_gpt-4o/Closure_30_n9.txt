script
// Test suite to check the problematic behavior described in the bug report.
function testAsHexMethod() {
    function sgxFloor(value) {
        return Math.floor(value);
    }
    
    function sgxColorRGBA(r, g, b, a) {
        this.r = r;
        this.g = g;
        this.b = b;
        this.a = a;
    }

    sgxColorRGBA.prototype.asHex = function() {
        // Intentionally using the global str variable to illustrate the problem in larger code bases.
        str = (sgxFloor(this.r * 255)).toString(16);
        if (str.length < 2) { str = "0" + str; }
        var hexString = str; // Start collect the hexString
        
        str = (sgxFloor(this.g * 255)).toString(16);
        if (str.length < 2) { str = "0" + str; }
        hexString += str;
        
        str = (sgxFloor(this.b * 255)).toString(16);
        if (str.length < 2) { str = "0" + str; }
        hexString += str;
        
        str = (sgxFloor(this.a * 255)).toString(16);
        if (str.length < 2) { str = "0" + str; }
        hexString += str;
        
        return hexString;
    }

    // The test
    var color = new sgxColorRGBA(0.5, 0.5, 0.5, 0.5);
    var result = color.asHex();
    var expected = "7f7f7f7f"; // Expect "#7f7f7f7f"
    
    console.assert(result === expected, `Test failed: expected ${expected} but got ${result}`);
}

// Run the test
testAsHexMethod();
