
import org.apache.commons.lang3.time.StopWatch;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class StopWatchTest {
    
    @Test
    public void testSuspendDoesNotActAsSplit() throws InterruptedException {
        StopWatch sw = new StopWatch();

        sw.start();

        Thread.sleep(1000);

        sw.suspend();

        // Capture Time 1
        long time1 = sw.getTime();
        // Check after first suspension
        assertEquals("Time after first suspend should be 1000 ms", 1000, time1);

        Thread.sleep(2000);

        // Verify Time 1 again after some sleep
        assertEquals("Time after delay during suspend should remain 1000 ms", time1, sw.getTime());

        sw.resume();

        Thread.sleep(3000);

        sw.suspend();

        // Capture Time 2
        long time2 = sw.getTime();
        // Verify Time 2 after second suspension
        assertEquals("Time after second suspend should be 4000 ms", 4000, time2);

        Thread.sleep(4000);

        // Ensure Time 2 remains unchanged after additional sleep
        assertEquals("Time after delay during second suspend should remain 4000 ms", time2, sw.getTime());

        Thread.sleep(5000);

        sw.stop();

        // Final time should be equal to Time 2 since the stopwatch was stopped after being suspended
        assertEquals("Final stopped time should be equal to Time 2, not increased", time2, sw.getTime());
    }
}
