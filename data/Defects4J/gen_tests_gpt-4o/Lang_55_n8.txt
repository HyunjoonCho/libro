@Test
public void testStopWatchSuspendDoesNotActAsSplit() throws InterruptedException {
    StopWatch sw = new StopWatch();

    // Start the StopWatch and let it run for 1 second
    sw.start();  
    Thread.sleep(1000);  

    // Suspend the StopWatch, time should be approximately 1 second
    sw.suspend();  
    long time1 = sw.getTime();
    System.out.println("Time after first suspend: " + time1);

    // Wait additional 2 seconds while suspended
    Thread.sleep(2000);  

    // Ensure time has not incremented, it should still be approximately 1 second
    assertEquals(time1, sw.getTime());
    System.out.println("Time after 2 seconds of suspend: " + sw.getTime());

    // Resume and let it run for another 3 seconds, then suspend again
    sw.resume();  
    Thread.sleep(3000);  
    sw.suspend();  

    // Time should now be approximately the initial time + 3 seconds
    long time2 = sw.getTime();
    System.out.println("Time after second suspend: " + time2);
    assertTrue(time2 >= time1 + 3000 && time2 < time1 + 3500); // Allow a small margin for time errors

    // Wait additional 4 seconds while suspended
    Thread.sleep(4000);  

    // Ensure time has not incremented, it should still be approximately time2
    assertEquals(time2, sw.getTime());
    System.out.println("Time after 4 seconds of suspend: " + sw.getTime());

    // Stop the StopWatch
    sw.stop();  

    // Time should remain as time2, NOT as time2 + 5000
    assertEquals(time2, sw.getTime());
    System.out.println("Final time after stop (should match time after last suspend): " + sw.getTime());
}