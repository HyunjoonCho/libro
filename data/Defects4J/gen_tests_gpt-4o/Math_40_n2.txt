
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math3.exception.TooManyEvaluationsException;
import org.junit.Test;

import static org.junit.Assert.*;

public class BracketingNthOrderBrentSolverTest {

    @Test(expected = TooManyEvaluationsException.class)
    public void testUnbalancedBracketingLeadsToExceedingIterations() {
        // Define a function where the root is at 12500.0
        UnivariateFunction function = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return x - 12500.0;
            }
        };

        // Create a solver with a high accuracy requirement and low max evaluations to trigger the aging issue
        BracketingNthOrderBrentSolver solver = new BracketingNthOrderBrentSolver(
                1e-15, // Relative accuracy
                1e-15, // Absolute accuracy
                5      // Order of the approximation (can be a typical value like 5)
        );
        
        // Intentionally start with a very narrow interval and poor estimates combined with a small maxEval
        solver.solve(
                100,                // Maximal count of evaluations
                function,           // The univariate function
                12500.0,            // Start of the bracket interval
                12500.03,           // End of the bracket interval
                12500.015           // Initial guess (midpoint)
        );
    }
}
