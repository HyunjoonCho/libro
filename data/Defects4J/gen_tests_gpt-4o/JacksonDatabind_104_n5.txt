
import com.fasterxml.jackson.databind.util.StdDateFormat;
import org.junit.Test;

import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

import static org.junit.Assert.fail;

public class LargeYearTest {

    @Test
    public void testLargeYearFormatting() {
        StdDateFormat formatter = new StdDateFormat();
        
        // Create a date with a year larger than 9999
        Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
        calendar.clear();
        calendar.set(Calendar.YEAR, 10000);
        calendar.set(Calendar.MONTH, Calendar.DECEMBER);
        calendar.set(Calendar.DAY_OF_MONTH, 31);
        Date largeYearDate = calendar.getTime();
        
        try {
            String formattedDate = formatter.format(largeYearDate);
            System.out.println("Formatted Date: " + formattedDate);
            
            // Attempt to parse the formatted date
            Date parsedDate = formatter.parse(formattedDate);
            System.out.println("Parsed Date: " + parsedDate);
            
            // The test should fail because the format and parse does not handle years > 9999 correctly
            fail("Expected a ParseException due to large year, but parsing was successful.");
        } catch (ParseException e) {
            // Expected behavior: should throw a ParseException
            System.out.println("Caught expected ParseException: " + e.getMessage());
        }
    }
}
