
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertTrue;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

public class PosixParserBugTest {

    @Test
    public void testUnrecognizedTokenStartingWithDash() throws ParseException {
        // Set up the options
        Options options = new Options();
        options.addOption("a", false, "an option that does not require an argument");

        // Set up a PosixParser with stopAtNonOption enabled
        PosixParser parser = new PosixParser();
        String[] args = new String[] {"-z", "-a", "foo"};
        
        // Parse the command line. Expected behavior is the parser should stop at "-z"
        CommandLine cmd = parser.parse(options, args, true);

        // Verify the outcome
        // Expected: since '-z' is unrecognized and stopAtNonOption is true, parsing should stop at '-z'
        assertTrue(cmd.getArgList().contains("-z"));
        assertTrue(cmd.hasOption("a"));
        assertArrayEquals(new String[] {"foo"}, cmd.getArgs());
    }
}
