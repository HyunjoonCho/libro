
import com.google.javascript.jscomp.*;

import static org.junit.Assert.fail;

import org.junit.Test;

public class ClosureCompilerBugTest {

    @Test
    public void testDeleteExpressionCompilationError() {
        // JavaScript code that causes the Internal Compiler Error in advanced mode
        String jsCode = "function x() { return delete a; }";

        // Set up the Closure Compiler options
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Create a new Compiler instance
        Compiler compiler = new Compiler();

        // Compile the JavaScript code
        try {
            compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("input.js", jsCode), options);
            fail("Expected a RuntimeException due to internal compiler error");
        } catch (RuntimeException e) {
            // Check if the exception message contains "INTERNAL COMPILER ERROR"
            if (!e.getMessage().contains("INTERNAL COMPILER ERROR")) {
                fail("Unexpected exception message: " + e.getMessage());
            }
        }
    }
}
