public void testIncorrectAssignmentRemoval() {
    // Arrange
    SomeNode someNode = new SomeNode("id123");
    
    // Act
    boolean resultOriginal = closureCompilerTestOriginal(someNode);
    boolean resultCompiled = closureCompilerTestCompiled(someNode);
    
    // Assert
    assertEquals(resultOriginal, resultCompiled);
}

// Original function before compilation
private boolean closureCompilerTestOriginal(SomeNode someNode) {
    String nodeId;
    return ((nodeId = someNode.getId()) != null && (nodeId = Integer.toString(Integer.parseInt(nodeId.substring(1)))) != null && Integer.parseInt(nodeId) > 0);
}

// Compiled function showing the issue
private boolean closureCompilerTestCompiled(SomeNode b) {
    String a;
    return b.getId() != null && (a = Integer.toString(Integer.parseInt(a.substring(1)))) != null && Integer.parseInt(a) > 0;
}

// Helper class to simulate SomeNode behavior
class SomeNode {
    private String id;

    SomeNode(String id) {
        this.id = id;
    }

    String getId() {
        return id;
    }
}