public void testUnboundedSolutionException() {
    LinearObjectiveFunction objectiveFunction = new LinearObjectiveFunction(new double[]{1, 0}, 0);
    Collection<LinearConstraint> constraints = new ArrayList<>();

    int entitiesCount = 15;
    Random random = new Random();

    for (int i = 0; i < entitiesCount; i++) {
        double[] qR = new double[entitiesCount];
        double[] xR = new double[entitiesCount];
        for (int j = 0; j < entitiesCount; j++) {
            qR[j] = random.nextDouble();
            xR[j] = random.nextDouble();
        }
        constraints.add(new LinearConstraint(qR, Relationship.GEQ, 0));
        constraints.add(new LinearConstraint(xR, Relationship.GEQ, 0));
    }

    SimplexSolver solver = new SimplexSolver();
    try {
        solver.optimize(objectiveFunction, constraints, GoalType.MINIMIZE, false);
        fail("Expected UnboundedSolutionException");
    } catch (UnboundedSolutionException e) {
        // Expected exception
    }
}