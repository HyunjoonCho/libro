
import static org.mockito.Mockito.*;

import org.junit.Test;

public class MatcherTypePrintingTest {

    public interface SomeInterface {
        void someMethod(int a, Integer b);
        void someOther(int a, String b);
    }

    @Test
    public void testMatcherTypePrinting() {
        SomeInterface mock = mock(SomeInterface.class);
        
        // Stub method with incorrect type
        when(mock.someOther(1, "(String) 2")).thenReturn(null);
        
        try {
            // Call with the intended correct argument
            verify(mock).someOther(1, "2");
        } catch (Throwable e) {
            // Capture and assert on the exception message to validate the printing bug
            String message = e.getMessage();
            assert message.contains("(String) \"2\"") :
                "Message does not contain the expected matcher format: " + message;
        }
    }
}
