
import org.apache.commons.codec.binary.Base64;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Base64Test {

    @Test
    public void testEncodeWithoutChunking() throws Exception {
        String inputString = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
        byte[] inputBytes = inputString.getBytes("UTF-8");
        
        // Using the static method expecting no CRLF (unchunked).
        byte[] encodedStatic = Base64.encodeBase64(inputBytes);
        String resultStatic = new String(encodedStatic, "UTF-8");
        
        // Using the instance method (previous version had no CRLF, new version does).
        Base64 base64 = new Base64();
        byte[] encodedInstance = base64.encode(inputBytes);
        String resultInstance = new String(encodedInstance, "UTF-8");
        
        // Verify length: static and instance methods should have same length
        assertEquals(resultStatic.length(), resultInstance.length());
        
        // Verify that static method does not have newline
        assertEquals(resultStatic, resultInstance.replace("\r\n", ""));
    }
}
