
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class ClosureCompilerBugTest {

    @Test
    public void testOriginalReduction() throws ScriptException {
        String originalScript = 
            "function echo(val) { return val; }\n" +
            "function reduction() {\n" +
            "    var a, b;\n" +
            "    if (echo(b = true) || echo(b = false))\n" +
            "        a = b;\n" +
            "    else\n" +
            "        a = null;\n" +
            "    return a;\n" +
            "}\n" +
            "reduction();";

        Object result = executeJavaScript(originalScript);
        assertEquals(true, result);
    }

    @Test
    public void testCompiledReduction() throws ScriptException {
        String compiledScript = 
            "function echo(val) { return val; }\n" +
            "function reduction() {\n" +
            "    var a;\n" +
            "    return echo(true) || echo(a = false) ? a : null;\n" +
            "}\n" +
            "reduction();";

        Object result = executeJavaScript(compiledScript);
        assertEquals(true, result); // Fails due to bug, would return false or undefined
    }

    private Object executeJavaScript(String script) throws ScriptException {
        ScriptEngineManager factory = new ScriptEngineManager();
        ScriptEngine engine = factory.getEngineByName("nashorn");
        return engine.eval(script);
    }
}
