
import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnit;
import org.mockito.junit.MockitoJUnitRunner;
import org.mockito.junit.MockitoRule;

import static org.mockito.Mockito.when;
import static org.junit.Assert.assertEquals;

//@RunWith(MockitoJUnitRunner.class) - Comment out to use the rule instead
public class MockitoJUnitRuleTest {

    @Rule
    public MockitoRule mockitoRule = MockitoJUnit.rule();

    @Mock
    private Dependency dependency;

    @InjectMocks
    private SystemUnderTest systemUnderTest;

    @Test
    public void testMockitoRule() {
        when(dependency.operate()).thenReturn("Mocked Result");

        String result = systemUnderTest.doOperation();

        assertEquals("Mocked Result", result);
    }

    // Supporting Classes
    public static class Dependency {
        public String operate() {
            return "Real Operation";
        }
    }

    public static class SystemUnderTest {
        private Dependency dependency;

        public String doOperation() {
            return dependency.operate();
        }
    }
}
