public void testGetResultInMultiStartUnivariateRealOptimizer() {
    UnivariateRealFunction function = new SinFunction();
    MultiStartUnivariateRealOptimizer optimizer = new MultiStartUnivariateRealOptimizer(
            new BrentOptimizer(1e-10, 1e-14),
            10,
            new JDKRandomGenerator());

    optimizer.optimize(100, function, GoalType.MINIMIZE, -10.0, 10.0);

    // Assuming the best result is at 0.0 for function < 0.0 multiple times and values depend on random attempts
    double bestResult = optimizer.getResult();
    assertEquals(0.0, bestResult, 1e-5);
    double bestFunctionValue = optimizer.getFunctionValue();
    assertEquals(function.value(bestResult), bestFunctionValue, 1e-5);
}