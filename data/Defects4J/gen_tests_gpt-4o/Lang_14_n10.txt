public void testStringUtilsEqualsWithDifferentCharSequenceImplementations() {
    CharSequence string = new String("example");
    CharSequence name = new NameImpl("example");
    
    // Using StringUtils' equals should return true as both CharSequences represent the same sequence.
    assertTrue(StringUtils.equals(string, name));
}

private static class NameImpl implements javax.lang.model.element.Name {
    private final String content;
    
    public NameImpl(String content) {
        this.content = content;
    }
    
    @Override
    public boolean contentEquals(CharSequence cs) {
        return content.equals(cs.toString());
    }
    
    @Override
    public int length() {
        return content.length();
    }

    @Override
    public char charAt(int index) {
        return content.charAt(index);
    }

    @Override
    public CharSequence subSequence(int start, int end) {
        return content.subSequence(start, end);
    }
    
    @Override
    public String toString() {
        return content;
    }
}