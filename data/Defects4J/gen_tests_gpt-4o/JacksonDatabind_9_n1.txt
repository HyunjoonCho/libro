
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class MapWithClassAsKeyTest {
    
    @Test(expected = com.fasterxml.jackson.databind.exc.InvalidFormatException.class)
    public void testMapWithClassAsKey() throws Exception {
        Map<Class<? extends Object>, String> map = new HashMap<>();
        map.put(ArrayList.class, "ArrayList");
        map.put(HashMap.class, "HashMap");

        ObjectMapper mapper = new ObjectMapper();

        // Serialize the map to JSON
        String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(map);
        System.out.println(json);

        // Attempt to deserialize the JSON back into a Map
        // This should throw an InvalidFormatException
        mapper.readValue(json, new TypeReference<Map<Class<? extends Object>, String>>() {});
    }
}
