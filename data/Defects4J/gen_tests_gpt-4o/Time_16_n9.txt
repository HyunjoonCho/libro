
import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.MutableDateTime;
import org.junit.Test;
import static org.junit.Assert.*;

public class DateTimeFormatterTest {

    @Test
    public void testParseInto() {
        String pattern = "MM-dd";
        String inputDate = "02-28";
        
        // Initial DateTime with a leap year
        DateTime initialDateTime = new DateTime(2020, 1, 1, 0, 0); // 2020 is a leap year
        DateTimeFormatter formatter = DateTimeFormat.forPattern(pattern).withDefaultYear(initialDateTime.getYear());

        // Use parseInto to parse the date into the mutable date time, using the year from the initialDateTime
        MutableDateTime mutableDateTime = initialDateTime.toMutableDateTime();
        int parsePos = formatter.parseInto(mutableDateTime, inputDate, 0);

        // Ensure parse was successful
        assertEquals("Parse position should end at input length", inputDate.length(), parsePos);

        // Validate the year has not been overwritten
        assertEquals(2020, mutableDateTime.getYear());
        assertEquals(2, mutableDateTime.getMonthOfYear());
        assertEquals(28, mutableDateTime.getDayOfMonth());
    }
}
