
import org.apache.commons.lang3.time.StopWatch;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class StopWatchTest {

    @Test
    public void testSuspendFollowedByStop() throws InterruptedException {
        StopWatch sw = new StopWatch();

        sw.start();
        Thread.sleep(1000);
        sw.suspend();

        // Capture the time after first suspend
        long timeAfterFirstSuspend = sw.getTime();

        Thread.sleep(2000);
        // Time should still be the same as it was after first suspend
        assertEquals(timeAfterFirstSuspend, sw.getTime());

        sw.resume();
        Thread.sleep(3000);
        sw.suspend();

        // Capture the time after second suspend
        long timeAfterSecondSuspend = sw.getTime();

        Thread.sleep(4000);
        // Time should still be the same as it was after second suspend
        assertEquals(timeAfterSecondSuspend, sw.getTime());

        Thread.sleep(5000);
        sw.stop();

        // Time should still be the same as it was after second suspend, not increased by the period it was stopped
        assertEquals(timeAfterSecondSuspend, sw.getTime());
    }
}
