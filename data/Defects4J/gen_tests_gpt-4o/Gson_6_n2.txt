
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.junit.Test;

import static org.junit.Assert.assertNotNull;

public class GsonTypeAdapterFactoryTest {

    @Test
    public void testTypeAdapterFactoryReturningNull() {
        // Create a Gson instance with a custom TypeAdapterFactory
        Gson gson = new GsonBuilder()
                .registerTypeAdapterFactory(new NullReturningTypeAdapterFactory())
                .create();

        // Expecting Gson to handle the null TypeAdapter gracefully without throwing NPE
        // Asserting that Gson instance was constructed
        assertNotNull(gson);

        // Trying to use Gson to serialize a simple object
        // This should not cause a NullPointerException
        String json = gson.toJson(new TestObject("Test"));

        // Verifying the serialized JSON is not null, it should serialize without an adapter
        assertNotNull(json);
    }

    private static class NullReturningTypeAdapterFactory implements TypeAdapterFactory {
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            // Returning null intentionally to reproduce the bug
            return null;
        }
    }

    private static class TestObject {
        private String name;

        public TestObject(String name) {
            this.name = name;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }
    }
}
