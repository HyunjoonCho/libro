
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class OverlyAggressiveCommaRemovalTest {

    // Original function
    public int testFunction(Object n) {
        int i = 0;
        if (n != null && !(n instanceof String) && !(n instanceof Number) && !(n instanceof Boolean)) {
            throw new IllegalArgumentException("Only strings, numbers, and booleans are allowed");
        }
        i = "undefined".equals(n) ? i : ((n instanceof String) ? ((String) n).length() : 0);
        return i;
    }

    @Test
    public void testOriginalFunction() {
        // Set up the input
        String dummy = "6chars";

        // Expected behavior
        int expected = 6; // Length of the string "6chars"

        // Testing the function
        int result = testFunction(dummy);
        
        // Assertion
        assertEquals(expected, result);
    }

    // This simulates the behavior of the optimized code
    public int optimizedFunction(Object n) {
        return 0;
    }

    @Test
    public void testOptimizedFunction() {
        // Set up the input
        String dummy = "6chars";

        // Expected behavior
        int expected = 0; // The optimized function returns 0 incorrectly

        // Testing the function
        int result = optimizedFunction(dummy);
        
        // Assertion
        assertEquals(expected, result);
    }
}
