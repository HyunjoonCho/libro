
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.MapperFeature;
import org.junit.Test;
import static org.junit.Assert.*;
import java.io.IOException;

// Interfaces
interface Contact {
    String getCity();
}

interface Person extends Contact {}

// Implementation classes
class ContactImpl implements Contact {
    public String getCity() { return "SomeCity"; }
}

class PersonImpl extends ContactImpl implements Person {}

// Mixin classes
abstract class ContactMixin implements Contact {
    @JsonProperty
    public abstract String getCity();
}

abstract class PersonMixin extends ContactMixin implements Person {}

public class MixinTest {

    @Test
    public void testMixinAnnotationsLost() throws IOException {
        // Setup ObjectMapper with the module configuration
        ObjectMapper mapper = new ObjectMapper();
        SimpleModule module = new SimpleModule();
        module.setMixInAnnotation(Person.class, PersonMixin.class);
        
        // Configure the mapper with the settings described in the bug report
        mapper.registerModule(module);
        mapper.configure(MapperFeature.ALLOW_FINAL_FIELDS_AS_MUTATORS, false);
        mapper.configure(MapperFeature.AUTO_DETECT_FIELDS, false);
        mapper.configure(MapperFeature.AUTO_DETECT_GETTERS, false);
        mapper.configure(MapperFeature.AUTO_DETECT_IS_GETTERS, false);
        mapper.configure(MapperFeature.INFER_PROPERTY_MUTATORS, false);

        // Serialize PersonImpl instance
        PersonImpl personImpl = new PersonImpl();
        String result = mapper.writeValueAsString(personImpl);

        // Test that the 'city' property is not serialized due to the bug
        assertFalse("Serialized result should not include 'city'", result.contains("city"));
    }
}
