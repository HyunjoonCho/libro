
import org.apache.commons.math3.stat.descriptive.SummaryStatistics;
import org.apache.commons.math3.stat.descriptive.moment.Variance;
import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class SummaryStatisticsTest {

    @Test
    public void testStandardDeviationProducesNaNWithCustomVariance() {
        // Test data
        int[] scores = {1, 2, 3, 4};

        // Create SummaryStatistics instance
        SummaryStatistics stats = new SummaryStatistics();

        // Set the variance implementation to use population variance
        stats.setVarianceImpl(new Variance(false));

        // Add values to the stats instance
        for (int score : scores) {
            stats.addValue(score);
        }

        // Calculate standard deviation
        double sd = stats.getStandardDeviation();

        // Check if the standard deviation is NaN
        assertTrue("Standard deviation should be NaN", Double.isNaN(sd));

        // Optional: workaround verification
        double workaroundSd = Math.sqrt(stats.getSecondMoment() / stats.getN());
        System.out.println("Workaround Standard Deviation: " + workaroundSd);
    }
}
