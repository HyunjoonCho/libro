
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.PosixParser;
import org.apache.commons.cli.ParseException;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

public class PosixParserTest {
    @Test
    public void testNonOptionStopAtNonOption() throws ParseException {
        // Set up the options
        Options options = new Options();
        options.addOption("a", false, "Option A");
        options.addOption("b", false, "Option B");

        // Use PosixParser with stopAtNonOption enabled
        CommandLineParser parser = new PosixParser();
        String[] args = {"-azb"};

        // Parse the command line
        CommandLine cmd = parser.parse(options, args, true);

        // Expected output should be "-a" and "zb" as arguments, with option "b" not recognized as it's part of non-option
        String[] expectedArgs = {"-a", "zb"};
        
        // Verify the parsed arguments
        assertArrayEquals(expectedArgs, cmd.getArgs());

        // Print the parsed arguments for visibility
        HelpFormatter formatter = new HelpFormatter();
        formatter.printHelp("PosixParserTest", options);
    }
}
