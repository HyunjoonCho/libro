
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import java.util.Arrays;

public class ClosureCompilerTestCase {
    public static void main(String[] args) {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setCompilationLevel(CompilerOptions.CompilationLevel.ADVANCED_OPTIMIZATIONS);

        // Mock JavaScript code that could cause collapsing errors
        String jsCode = "var goog = goog || {};\n" +
            "goog.exportSymbol = function(name, obj) {};\n" +
            "var core = {};\n" +
            "core.someFunc = function() {};\n" +
            "goog.exportSymbol('core.someFunc', core.someFunc);\n" +
            "core = {newProp: function() {}};  // Redefining core, possible issue\n" +
            "goog.exportSymbol('core.newProp', core.newProp);";

        SourceFile input = SourceFile.fromCode("input.js", jsCode);

        try {
            Result result = compiler.compile(Arrays.asList(SourceFile.fromCode("externs.js", "")), Arrays.asList(input), options);
            if (result.success) {
                System.out.println("Compilation succeeded.");
            } else {
                System.err.println("Compilation failed.");
                result.errors.forEach(error -> System.err.println(error));
            }
        } catch (RuntimeException e) {
            System.err.println("Unexpected exception: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
