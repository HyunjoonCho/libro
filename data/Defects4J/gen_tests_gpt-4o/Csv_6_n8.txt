
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.junit.Test;

import java.io.IOException;
import java.io.StringReader;
import java.util.Map;

import static org.junit.Assert.*;

public class CSVRecordTest {

    @Test
    public void testToMapWhenHeaderTooLong() throws IOException {
        String csvData = "a,b";

        // Using StringReader to simulate reading from a file
        try (CSVParser parser = new CSVParser(new StringReader(csvData), CSVFormat.DEFAULT.withHeader("A", "B", "C"))) {
            CSVRecord record = parser.iterator().next();
            
            // Capture the potential ArrayOutOfBoundsException
            try {
                Map<String, String> recordMap = record.toMap();
                // Check if map contains only available header keys, and handles missing values gracefully.
                assertEquals("a", recordMap.get("A"));
                assertEquals("b", recordMap.get("B"));
                assertNull(recordMap.get("C")); // This should be null because "C" has no value in the record
            } catch (ArrayIndexOutOfBoundsException e) {
                fail("toMap() should handle header longer than record gracefully, but it threw an exception.");
            }
        }
    }
}
