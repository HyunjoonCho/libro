
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.MapperFeature;
import junit.framework.TestCase;
import org.junit.Test;

public class MixinAnnotationsTest extends TestCase {

    public interface Contact {
        String getCity();
    }
    
    public static class ContactImpl implements Contact {
        public String getCity() {
            return "Sample City";
        }
    }
    
    public static class ContactMixin implements Contact {
        @JsonProperty
        public String getCity() {
            return null; // Dummy implementation for the mixin
        }
    }
    
    public interface Person extends Contact {}

    public static class PersonImpl extends ContactImpl implements Person {}

    public static class PersonMixin extends ContactMixin implements Person {}

    @Test
    public void testMixinAnnotationsLost() throws Exception {
        // Configure a Jackson module and ObjectMapper
        ObjectMapper mapper = new ObjectMapper();
        SimpleModule module = new SimpleModule();
        module.disable(MapperFeature.ALLOW_FINAL_FIELDS_AS_MUTATORS)
              .disable(MapperFeature.AUTO_DETECT_FIELDS)
              .disable(MapperFeature.AUTO_DETECT_GETTERS)
              .disable(MapperFeature.AUTO_DETECT_IS_GETTERS)
              .disable(MapperFeature.INFER_PROPERTY_MUTATORS);
        
        // Set MixIn only for Person, as described in bug report
        module.setMixInAnnotation(Person.class, PersonMixin.class);
        mapper.registerModule(module);

        // Create a PersonImpl instance
        PersonImpl person = new PersonImpl();

        // Serialize the instance to JSON
        String json = mapper.writeValueAsString(person);

        // Check if "city" is included in the JSON output
        assertTrue("JSON should have included 'city' property, but it was not found: " + json,
                   json.contains("\"city\""));
    }
}
