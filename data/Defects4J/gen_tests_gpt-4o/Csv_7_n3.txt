
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.junit.Test;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.util.Map;
import static org.junit.Assert.assertEquals;

public class HeaderMapTest {

    @Test
    public void testDuplicateHeaders() throws IOException {
        String csvContent = "Col1,Col2,Col2,Col3,Col4\n" +
                            "1,2,3,4,5\n" +
                            "4,5,6,7,8\n";

        CSVFormat myFormat = CSVFormat.RFC4180
            .withDelimiter(',')
            .withQuote('"')
            .withQuotePolicy(CSVFormat.Quote.MINIMAL)
            .withIgnoreSurroundingSpaces(true)
            .withHeader()
            .withSkipHeaderRecord(true);

        Reader in = new StringReader(csvContent);
        CSVParser parser = new CSVParser(in, myFormat);

        for (CSVRecord record : parser) {
            Map<String, Integer> headerMap = parser.getHeaderMap();
            
            // Check the size of headerMap to ensure it includes all headers
            // With duplicates, the map ends up with fewer keys than expected
            assertEquals("HeaderMap should include all header names including duplicates", 5, headerMap.size());

            // Additional checks to confirm behavior
            assertEquals("Unexpected value for Col1", "1", record.get("Col1"));
            assertEquals("Unexpected value for second Col2", "3", record.get("Col2"));
        }
        
        parser.close();
    }
}
