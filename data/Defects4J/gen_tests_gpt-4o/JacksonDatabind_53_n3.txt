public void testJsonDeserializeWithGenericMap() throws Exception {
    ObjectMapper objectMapper = new ObjectMapper();
    String json = "{ \"something\": [ { \"id\": \"123e4567-e89b-12d3-a456-426614174000\", \"property\": \"value\" } ] }";
    
    // Register module to handle deserialization of UUID keys
    SimpleModule module = new SimpleModule();
    module.addKeyDeserializer(UUID.class, new KeyDeserializer() {
        @Override
        public Object deserializeKey(String key, DeserializationContext ctxt) throws IOException {
            return UUID.fromString(key);
        }
    });
    objectMapper.registerModule(module);

    // Assuming a POJO class `MyPojo` with method `setSomething` and the specified annotation
    MyPojo result = objectMapper.readValue(json, MyPojo.class);

    // Validate that the map was correctly deserialized
    Map<UUID, Foo> expectedMap = new MyHashMap<>();
    expectedMap.put(UUID.fromString("123e4567-e89b-12d3-a456-426614174000"), new Foo("value"));
    
    // Assuming `MyPojo` has a getter to retrieve the map, e.g., getSomething()
    assertEquals(expectedMap, result.getSomething());
}