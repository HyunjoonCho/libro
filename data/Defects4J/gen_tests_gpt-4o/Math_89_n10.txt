
import org.apache.commons.math3.stat.Frequency;
import org.junit.Test;
import static org.junit.Assert.*;

public class FrequencyBugTest {

    @Test(expected = IllegalArgumentException.class)
    public void testAddNonComparableObject() {
        Frequency f = new Frequency();
        Object obj = new Object();
        f.addValue(obj); // This should throw an IllegalArgumentException
    }

    @Test
    public void testGetCountAndPctWithNonComparableObject() {
        Frequency f = new Frequency();
        Object obj = new Object();
        assertEquals(0, f.getCount(obj));
        assertEquals(0.0, f.getPct(obj), 0.0);
    }

    @Test
    public void testAddComparableObject() {
        Frequency f = new Frequency();
        Integer value = 1;
        f.addValue(value);
        assertEquals(1, f.getCount(value));
        assertEquals(100.0, f.getPct(value), 0.0);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testGetCumFreqWithNonComparableObject() {
        Frequency f = new Frequency();
        Object obj = new Object();
        f.getCumFreq(obj); // This should throw an IllegalArgumentException
    }

    @Test(expected = IllegalArgumentException.class)
    public void testGetCumPctWithNonComparableObject() {
        Frequency f = new Frequency();
        Object obj = new Object();
        f.getCumPct(obj); // This should throw an IllegalArgumentException
    }
}
