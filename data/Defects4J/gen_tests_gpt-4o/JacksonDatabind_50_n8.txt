
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
class Person {
    public int id;
    public String name;
    @JsonIdentityReference(alwaysAsId = false)
    public Address address;

    @JsonCreator
    public Person(int id) {
        this.id = id;
    }
}

@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
class Address {
    public int id;
    public String street;

    @JsonCreator
    public Address(int id) {
        this.id = id;
    }
}

public class JsonIdentityInfoDeserializationTest {

    @Test
    public void testDeserializationWithJsonIdentityInfo() throws Exception {
        String json = "{\"id\":1,\"name\":\"John Doe\",\"address\":{\"id\":100,\"street\":\"123 Main St\"}}";

        ObjectMapper mapper = new ObjectMapper();
        Person person = mapper.readValue(json, Person.class);

        // This part is assuming the expected deserialization should correctly link the address with the person
        assertEquals(1, person.id);
        assertEquals("John Doe", person.name);
        assertEquals(100, person.address.id);
        assertEquals("123 Main St", person.address.street);
    }
}
