public void testMissingBaseClassPropertiesWithRecursiveTypes() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    JavaType baseType = mapper.getTypeFactory().constructType(Base.class);
    Base baseInstance = new Base();
    Sub subInstance = new Sub();

    // Ensuring both types are registered, emulating the bug report scenario
    mapper.getTypeFactory().constructType(Sub.class);

    // Serialize the Sub instance
    String jsonResult = mapper.writeValueAsString(subInstance);

    // Deserialize to ensure both fields are present
    Map<String, Integer> resultMap = mapper.readValue(jsonResult, new TypeReference<Map<String, Integer>>() {});

    assertTrue(resultMap.containsKey("base"));
    assertTrue(resultMap.containsKey("sub"));
    assertEquals(1, resultMap.get("base").intValue());
    assertEquals(2, resultMap.get("sub").intValue());
}