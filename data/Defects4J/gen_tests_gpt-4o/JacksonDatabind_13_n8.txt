
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class NullObjectIdDeserializationTest {

    @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
    public static class Entity {
        public Integer id;
        public String name;

        public Entity() {
        }

        public Entity(Integer id, String name) {
            this.id = id;
            this.name = name;
        }
    }

    @Test
    public void testDeserializeWithNullObjectId() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        // Ensure deserialization allows null Object Ids
        mapper.configure(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES, false);

        String jsonWithNullId = "{\"id\":null, \"name\":\"Test Entity\"}";

        Entity entity = mapper.readValue(jsonWithNullId, Entity.class);

        assertEquals(null, entity.id);
        assertEquals("Test Entity", entity.name);
    }
}
