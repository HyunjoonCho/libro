public void testVarArgsTypeCheck() {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticGroups.ALL_CHECKS, CheckLevel.WARNING);

    String code = "/**\n" +
                  " * @param {...string} var_args\n" +
                  " */\n" +
                  "function foo(var_args) {\n" +
                  "    return arguments.length;\n" +
                  "}\n" +
                  "foo('hello');\n" +
                  "foo(123);\n" +
                  "foo('hello', 123);";

    compiler.compile(SourceFile.fromCode("externs.js", ""), 
                     SourceFile.fromCode("test.js", code), 
                     options);

    List<JSError> warnings = compiler.getWarnings();
    boolean foundWarningForThirdCall = false;
    for (JSError warning : warnings) {
        if (warning.description.contains("type-mismatch") && 
           warning.sourceName.equals("test.js") && 
           warning.lineNumber == /* use the actual line number for third call here */) {
            foundWarningForThirdCall = true;
        }
    }

    assertTrue("Expected type-mismatch warning for third foo() call", foundWarningForThirdCall);
}