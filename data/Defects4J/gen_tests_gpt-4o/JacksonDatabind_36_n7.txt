
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.util.StdDateFormat;
import org.junit.Test;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import static org.junit.Assert.assertEquals;

public class StdDateFormatTest {

    @Test
    public void testLenientDateParsing() throws Exception {
        // Create an ObjectMapper with a StdDateFormat
        ObjectMapper objectMapper = new ObjectMapper();

        // Set up a sample date string that should be invalid if not lenient
        String invalidDateString = "2015-01-32";

        // Parse the date using the ObjectMapper
        Date parsedDate = objectMapper.getDateFormat().parse(invalidDateString);

        // Manually parse the expected date using lenient parsing to simulate the incorrect behavior
        SimpleDateFormat lenientFormat = new SimpleDateFormat("yyyy-MM-dd");
        lenientFormat.setLenient(true); // This is similar to the default StdDateFormat behavior
        Date expectedDate = lenientFormat.parse(invalidDateString);

        // Assert that the parsed date matches the leniently parsed expected date
        assertEquals(expectedDate, parsedDate);

        // Optionally, assert that the expected incorrect conversion happened: 2015-01-32 -> 2015-02-01
        SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy-MM-dd");
        assertEquals("2015-02-01", outputFormat.format(parsedDate));
    }
}
