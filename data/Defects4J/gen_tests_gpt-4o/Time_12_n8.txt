
import org.joda.time.LocalDate;
import org.junit.Test;

import java.util.Calendar;
import java.util.GregorianCalendar;

import static org.junit.Assert.assertEquals;

public class LocalDateTest {

    @Test
    public void testCalendarEraHandlingInLocalDate() {
        // Create a GregorianCalendar instance for a date in BC era
        Calendar calendarBC = new GregorianCalendar();
        calendarBC.set(Calendar.ERA, GregorianCalendar.BC);
        calendarBC.set(Calendar.YEAR, 1); // 1 BC
        calendarBC.set(Calendar.MONTH, Calendar.JANUARY);
        calendarBC.set(Calendar.DAY_OF_MONTH, 1);
        
        // Convert to LocalDate
        LocalDate localDateBC = LocalDate.fromCalendarFields(calendarBC);
        
        // Assert the LocalDate mapping
        assertEquals(-1, localDateBC.getYear()); // Year should be -1 for 1 BC
        assertEquals(1, localDateBC.getMonthOfYear());
        assertEquals(1, localDateBC.getDayOfMonth());

        // Create a GregorianCalendar instance for a date in AD era
        Calendar calendarAD = new GregorianCalendar();
        calendarAD.set(Calendar.ERA, GregorianCalendar.AD);
        calendarAD.set(Calendar.YEAR, 1); // 1 AD
        calendarAD.set(Calendar.MONTH, Calendar.JANUARY);
        calendarAD.set(Calendar.DAY_OF_MONTH, 1);

        // Convert to LocalDate
        LocalDate localDateAD = LocalDate.fromCalendarFields(calendarAD);

        // Assert the LocalDate mapping
        assertEquals(1, localDateAD.getYear()); // Year should be 1
        assertEquals(1, localDateAD.getMonthOfYear());
        assertEquals(1, localDateAD.getDayOfMonth());
    }
}
