
import static org.junit.Assert.assertEquals;

import java.util.Arrays;
import java.util.List;
import java.util.Random;

import org.apache.commons.math.stat.clustering.Cluster;
import org.apache.commons.math.stat.clustering.EuclideanIntegerPoint;
import org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer;
import org.junit.Test;

public class ClusterAnalysisTest {

    @Test
    public void testPerformClusterAnalysis2() {
        // Initialize the KMeansPlusPlusClusterer with a Random instance
        KMeansPlusPlusClusterer<EuclideanIntegerPoint> transformer = 
            new KMeansPlusPlusClusterer<EuclideanIntegerPoint>(new Random(1746432956321L));
        
        // Define the points to be clustered
        EuclideanIntegerPoint[] points = new EuclideanIntegerPoint[] {
            new EuclideanIntegerPoint(new int[] { 1959, 325100 }),
            new EuclideanIntegerPoint(new int[] { 1960, 373200 }),
        };
        
        // The issue might stem from incorrect parameters for the 'cluster' method below
        try {
            // Attempt to cluster the points with specific max iterations and number of clusters
            List<Cluster<EuclideanIntegerPoint>> clusters = transformer.cluster(Arrays.asList(points), 1, 1);

            // Assert that the clustering result contains exactly one cluster
            assertEquals(1, clusters.size());
        } catch (NullPointerException e) {
            // Catch and print the exception for further troubleshooting
            System.out.println("NullPointerException encountered in testPerformClusterAnalysis2");
            e.printStackTrace();
            throw e; // Rethrow to indicate test failure
        }
    }
}
