
import org.apache.commons.math3.stat.Frequency;
import org.junit.Test;
import static org.junit.Assert.*;

public class FrequencyBugTest {

    @Test(expected = IllegalArgumentException.class)
    public void testAddValueThrowsExceptionForNonComparable() {
        Frequency f = new Frequency();
        Object nonComparableObject = new Object();
        f.addValue(nonComparableObject); // Should throw an exception
    }

    @Test
    public void testGetCountReturnsZeroForNonComparable() {
        Frequency f = new Frequency();
        Object nonComparableObject = new Object();
        f.addValue(nonComparableObject); // This should ideally fail

        // Expecting 0 as the object is non-comparable and shouldn't really be added
        assertEquals(0, f.getCount(nonComparableObject));
    }

    @Test
    public void testGetPctReturnsZeroForNonComparable() {
        Frequency f = new Frequency();
        Object nonComparableObject = new Object();
        f.addValue(nonComparableObject); // This should ideally fail

        // Expecting 0.0 as the object is non-comparable and shouldn't really be added
        assertEquals(0.0, f.getPct(nonComparableObject), 0.0001);
    }
}
