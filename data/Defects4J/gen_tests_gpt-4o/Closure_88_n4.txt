
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;

import org.junit.Test;

public class ClosureCompilerTest {
    
    public boolean closureCompilerTest(Node someNode) {
        String nodeId;
        return ((nodeId = someNode.id) && (nodeId = Integer.toString(Integer.parseInt(nodeId.substring(1)))) != null) && Integer.parseInt(nodeId) > 0;
    }
    
    class Node {
        String id;
        
        Node(String id) {
            this.id = id;
        }
    }
    
    @Test
    public void testClosureCompilerIncorrectAssignmentRemoval() {
        Node testNode1 = new Node("a1"); // Ideally should set nodeId to 1
        Node testNode2 = new Node("a0"); // Ideally should set nodeId to 0

        assertTrue("Expected true when nodeId is greater than 0", closureCompilerTest(testNode1));
        assertFalse("Expected false when nodeId is not greater than 0", closureCompilerTest(testNode2));
    }
}
