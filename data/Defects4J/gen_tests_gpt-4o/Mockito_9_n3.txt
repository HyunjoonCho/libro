
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import org.junit.Test;

// Define an abstract class with an abstract method and a concrete method using it
abstract class MyAbstractClass {
    public abstract String abstractMethod();

    public String concreteMethod() {
        return "Hello, " + abstractMethod();
    }
}

public class MockitoAbstractClassTest {

    @Test
    public void testSpyingOnAbstractClass() {
        // Create a spy of the abstract class
        MyAbstractClass spy = spy(MyAbstractClass.class);

        // Mock behavior for the abstract method
        when(spy.abstractMethod()).thenReturn("world!");

        // Call the concrete method that uses the abstract method
        String result = spy.concreteMethod();

        // Verify that the abstract method was called
        verify(spy).abstractMethod();

        // Assert the expected outcome
        assertEquals("Hello, world!", result);
    }
}
