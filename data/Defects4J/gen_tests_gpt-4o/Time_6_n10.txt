
import org.joda.time.Chronology;
import org.joda.time.GJChronology;
import org.joda.time.LocalDate;
import org.joda.time.Period;
import org.junit.Test;
import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

public class GJChronologyTest {

    @Test(expected = org.joda.time.IllegalFieldValueException.class)
    public void testMinusYearsAcross1BC() {
        Chronology chronology = GJChronology.getInstance();

        LocalDate start = new LocalDate(2013, 5, 31, chronology);
        LocalDate expectedEnd = new LocalDate(-1, 5, 31, chronology); // 1 BC

        // This line should throw an exception due to the handling of year 0
        assertThat(start.minusYears(2013), is(equalTo(expectedEnd)));

        // This line should also throw an exception for the same reason
        assertThat(start.plus(Period.years(-2013)), is(equalTo(expectedEnd)));
    }
}
