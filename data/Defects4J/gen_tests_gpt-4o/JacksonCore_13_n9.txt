
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.io.JsonStringEncoder;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

import static org.junit.Assert.assertEquals;

public class Utf8JsonGeneratorTest {

    @Test
    public void testQuoteFieldNamesToggle() throws IOException {
        JsonFactory factory = new JsonFactory();
        StringWriter writer = new StringWriter();
        
        JsonGenerator generator = factory.createGenerator(writer);
        
        // Set to not quote field names
        generator.configure(JsonGenerator.Feature.QUOTE_FIELD_NAMES, false);
        generator.writeStartObject();
        generator.writeFieldName("fieldName");
        generator.writeString("value");
        generator.writeEndObject();
        generator.close();
        
        // Expecting unquoted field name
        assertEquals("{fieldName:\"value\"}", writer.toString());

        // Reset writer for next test
        writer = new StringWriter();
        generator = factory.createGenerator(writer);
        
        // Set to quote field names
        generator.configure(JsonGenerator.Feature.QUOTE_FIELD_NAMES, true);
        generator.writeStartObject();
        generator.writeFieldName("fieldName");
        generator.writeString("value");
        generator.writeEndObject();
        generator.close();
        
        // Expecting quoted field name
        assertEquals("{\"fieldName\":\"value\"}", writer.toString());
    }
}
