
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
import org.apache.commons.compress.archivers.zip.ZipFile;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;

public class ZipEntryEqualityTest {

    @Test
    public void testZipArchiveEntryEquality() throws IOException {
        // Create a simple zip file in memory
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        try (ZipOutputStream zos = new ZipOutputStream(bos)) {
            ZipEntry entry = new ZipEntry("test.txt");
            zos.putNextEntry(entry);
            zos.write("Sample content".getBytes());
            zos.closeEntry();
        }

        byte[] zipBytes = bos.toByteArray();

        // Use ZipArchiveInputStream to read entries
        ZipArchiveEntry entryFromInputStream = null;
        try (ZipArchiveInputStream zis = new ZipArchiveInputStream(new ByteArrayInputStream(zipBytes))) {
            entryFromInputStream = zis.getNextZipEntry();
        }

        // Write the byte array to a temporary file
        File tempFile = File.createTempFile("test", ".zip");
        tempFile.deleteOnExit();

        try (FileOutputStream fos = new FileOutputStream(tempFile)) {
            fos.write(zipBytes);
        }

        // Use ZipFile to read the same entry
        ZipArchiveEntry entryFromZipFile = null;
        try (ZipFile zipFile = new ZipFile(tempFile)) {
            Enumeration<ZipArchiveEntry> entries = zipFile.getEntries();
            if (entries.hasMoreElements()) {
                entryFromZipFile = entries.nextElement();
            }
        }

        // Check if comment-related difference affects equality
        assertEquals("Expected same name for entries", entryFromInputStream.getName(), entryFromZipFile.getName());
        
        // This will fail due to different comment handling
        assertNotEquals("Expected different zip entries due to comment handling", entryFromInputStream, entryFromZipFile);
    }
}
