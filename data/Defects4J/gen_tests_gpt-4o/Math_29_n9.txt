
import org.apache.commons.math3.linear.OpenMapRealVector;
import org.apache.commons.math3.linear.RealVector;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class OpenMapRealVectorTest {

    @Test
    public void testEbeMultiplyWithNaNAndInfinity() {
        // Create vectors with special values: NaN and Infinity
        double[] data1 = {1.0, 2.0, Double.NaN, 4.0, Double.POSITIVE_INFINITY};
        double[] data2 = {5.0, Double.NaN, 3.0, Double.NEGATIVE_INFINITY, 2.0};

        RealVector v1 = new OpenMapRealVector(data1);
        RealVector v2 = new OpenMapRealVector(data2);

        // Perform element-by-element multiplication
        RealVector result = ((OpenMapRealVector) v1).ebeMultiply(v2);

        // Check results
        assertEquals(5.0, result.getEntry(0), 0.0);
        assertTrue(Double.isNaN(result.getEntry(1))); // NaN * any number should be NaN
        assertTrue(Double.isNaN(result.getEntry(2))); // NaN * any number should be NaN
        assertTrue(Double.isInfinite(result.getEntry(3))); // 4.0 * -Infinity should result in -Infinity
        assertTrue(Double.isInfinite(result.getEntry(4))); // Infinity * 2.0 should be Infinity

    }
}
