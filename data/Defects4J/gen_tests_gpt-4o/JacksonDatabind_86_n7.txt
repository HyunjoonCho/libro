
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class RecursiveTypeSerializationTest {

    interface IFace<T> {}

    static class Base implements IFace<Sub> {
        @JsonProperty
        int base = 1;
    }

    static class Sub extends Base {
        @JsonProperty
        int sub = 2;
    }

    @Test
    public void testSerializationWithRecursiveTypes() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        Sub subInstance = new Sub();
        String jsonResult = mapper.writeValueAsString(subInstance);

        // The expected JSON should include both 'base' and 'sub' properties
        String expectedJson = "{\"base\":1,\"sub\":2}";

        assertEquals(expectedJson.replaceAll("\\s+", ""), jsonResult.replaceAll("\\s+", ""));
    }
}
