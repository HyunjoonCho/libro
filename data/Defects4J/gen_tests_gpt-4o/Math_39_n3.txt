public void testTooLargeFirstStepWithDormandPrince853() {
    double[] y = new double[] { 1.0 };
    FirstOrderDifferentialEquations equations = new FirstOrderDifferentialEquations() {
        public int getDimension() {
            return 1;
        }
        
        public void computeDerivatives(double t, double[] y, double[] yDot) {
            yDot[0] = -y[0];
        }
    };
    
    DormandPrince853Integrator integrator = new DormandPrince853Integrator(1.0e-10, 1.0e+10, 1.0e-10, 1.0e-10);
    try {
        integrator.integrate(equations, 0.0, y, 1.0e-12, y);
        fail("Should have thrown an exception due to the integration range being too short.");
    } catch (Exception e) {
        // Expected behavior, the integration range is too short for the initial step size
    }
}