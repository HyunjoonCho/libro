
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.FirstOrderIntegrator;
import org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class DormandPrince853IntegratorTest {
    
    private static class ExponentialDecayEquation implements FirstOrderDifferentialEquations {
        public int getDimension() {
            return 1;
        }
        
        public void computeDerivatives(double t, double[] y, double[] yDot) {
            // Example simple exponential decay equation dy/dt = -y
            yDot[0] = -y[0];
        }
    }
    
    @Test
    public void testTooLargeFirstStep() {
        FirstOrderDifferentialEquations equation = new ExponentialDecayEquation();
        double[] yStart = {1.0}; // Initial condition
        double[] yEnd = new double[1]; 
        double t0 = 0.0;
        double t1 = 1e-10; // Very short integration range
        
        FirstOrderIntegrator integrator = new DormandPrince853Integrator(1e-12, 1.0, 1e-10, 1e-10);
        
        integrator.integrate(equation, t0, yStart, t1, yEnd);
        
        // Since the range is very short, yEnd should be approximately equal to yStart within the small range
        assertEquals(1.0, yEnd[0], 1e-10);
    }
}
