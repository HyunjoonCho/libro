
import org.apache.commons.lang3.LocaleUtils;
import org.junit.Test;

import java.util.Locale;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

public class LocaleUtilsTest {

    @Test
    public void testToLocale_MissingLanguage() {
        // Test parsing a locale string with missing language
        try {
            Locale locale = LocaleUtils.toLocale("_FR");
            assertNull("Locale language should be null", locale.getLanguage());
            assertEquals("FR", locale.getCountry());
            assertNull("Locale variant should be null", locale.getVariant());
        } catch (IllegalArgumentException e) {
            fail("Locale parsing should not throw an IllegalArgumentException for missing language");
        }
    }
    
    @Test
    public void testToLocale_FrenchWithVariant() {
        // Test parsing a locale string with missing language and variant
        try {
            Locale locale = LocaleUtils.toLocale("fr__P");
            assertEquals("fr", locale.getLanguage());
            assertNull("Locale country should be null", locale.getCountry());
            assertEquals("P", locale.getVariant());
        } catch (IllegalArgumentException e) {
            fail("Locale parsing should not throw an IllegalArgumentException for missing elements");
        }
    }
}
