public void testObviousOptimizationsInInlineIf() {
    // Test case 1: true == null ? a() : b() should always call b()
    boolean testCase1 = (true == null ? a() : b());
    assertTrue(testCase1);

    // Test case 2: true == false ? a() : b() should always call b()
    boolean testCase2 = (true == false ? a() : b());
    assertTrue(testCase2);

    // Real life use case: sum(true, 1) should return 3
    int sumResult = sum(true, 1);
    assertEquals(3, sumResult);
}

private boolean a() {
    // Simulating an action that returns false
    return false;
}

private boolean b() {
    // Simulating an action that returns true
    return true;
}

private int sum(boolean a, int b) {
    return (a == true ? 2 : (a ? 1 : 0)) + b;
}