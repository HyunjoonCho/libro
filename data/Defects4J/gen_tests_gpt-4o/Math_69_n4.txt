
import org.apache.commons.math3.stat.correlation.PearsonsCorrelation;
import org.apache.commons.math3.stat.descriptive.DescriptiveStatistics;
import org.apache.commons.math3.util.FastMath;
import org.junit.Test;
import static org.junit.Assert.*;

public class PearsonsCorrelationTest {

    @Test
    public void testPrecisionOfCorrelationPValues() {
        // Construct two arrays with many values that result in a high correlation
        double[] treatment1 = new double[100];
        double[] treatment2 = new double[100];
        for (int i = 0; i < treatment1.length; i++) {
            treatment1[i] = 100 * FastMath.sin(i);
            treatment2[i] = 100 * FastMath.sin(i + 0.1);
        }
        
        PearsonsCorrelation correlation = new PearsonsCorrelation();
        DescriptiveStatistics stats = new DescriptiveStatistics();
        
        // Calculate the p-values
        double[][] pValuesMatrix = correlation.getCorrelationPValues(treatment1, treatment2);
        double pValue = pValuesMatrix[0][1];

        // Check if the p-value is non-zero and extremely small
        assertTrue("Expected a very small non-zero p-value, but got: " + pValue, pValue > 0 && pValue < 2.2e-16);
    }
}
