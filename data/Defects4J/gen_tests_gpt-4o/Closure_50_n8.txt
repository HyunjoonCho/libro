
import com.google.javascript.jscomp.*;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class ClosureCompilerTest {

    @Test
    public void testJoinOptimization() {
        String originalJs = "var variable = confirm('value from user');" +
                "var array = ['constant', variable];" +
                "alert(array.join(','));";
        String expectedJs = "var a=[\"constant\",confirm(\"value from user\")];alert(a.join());";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        SourceFile extern = SourceFile.fromCode("externs.js", "function alert(x) {} function confirm(x) {}");
        SourceFile input = SourceFile.fromCode("input.js", originalJs);

        compiler.compile(extern, input, options);
        String compiledCode = compiler.toSource();

        assertEquals(expectedJs, compiledCode);
    }
}
