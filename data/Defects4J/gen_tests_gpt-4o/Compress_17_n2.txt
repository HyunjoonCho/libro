
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;

import static org.junit.Assert.assertThrows;

public class TarFileTest {

    @Test
    public void testReadAndroidBackupTar() {
        // Simulated tar data that causes IllegalArgumentException within parseOctal
        byte[] corruptedHeaderData = new byte[512];
        // Let's say the corruption happens in the bytes that TarUtils tries to parse
        // These bytes will be a part of the header, in a place that results in the invalid byte
        System.arraycopy("01750\000\000\000".getBytes(), 0, corruptedHeaderData, 0, 8);

        // Wrap it in a ByteArrayInputStream for testing
        ByteArrayInputStream bais = new ByteArrayInputStream(corruptedHeaderData);
        TarArchiveInputStream tais = new TarArchiveInputStream(bais);

        assertThrows(IllegalArgumentException.class, () -> {
            TarArchiveEntry entry = tais.getNextTarEntry();
        });

        try {
            tais.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
