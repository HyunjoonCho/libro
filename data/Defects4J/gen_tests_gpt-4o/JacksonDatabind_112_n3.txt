public void testCustomStringCollectionDeserialization() throws Exception {
    ObjectMapper objectMapper = new ObjectMapper();

    String json = "{\"strings\": [\"one\", \"two\", \"three\"]}";

    try {
        DeserializationClass result = objectMapper.readValue(json, DeserializationClass.class);
        fail("Expected JsonMappingException due to lack of default constructor");
    } catch (JsonMappingException e) {
        assertTrue(e.getMessage().contains("Cannot construct instance"));
    }
}

static class DeserializationClass {
    private CustomStringCollection strings;

    // Assume appropriate getters, setters, or constructor not provided
}

static class CustomStringCollection extends AbstractCollection<String> {
    private final List<String> internalList;

    CustomStringCollection(List<String> list) {
        internalList = Collections.unmodifiableList(list);
    }

    @Override
    public Iterator<String> iterator() {
        return internalList.iterator();
    }

    @Override
    public int size() {
        return internalList.size();
    }

    // No default constructor
}