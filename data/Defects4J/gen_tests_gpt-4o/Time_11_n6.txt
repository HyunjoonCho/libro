
import org.joda.time.tz.DateTimeZoneBuilder;
import org.junit.Test;

public class DateTimeZoneBuilderTest {

    @Test
    public void testDateTimeZoneBuilderNPE() throws Exception {
        // Build a DateTimeZone with a duplicate-named 'recurring saving time' in the first thread
        getTestDataTimeZoneBuilder().toDateTimeZone("TestDTZ1", true);

        // Run the same operation in a new thread to test for NPE
        Thread t1 = new Thread(() -> {
            try {
                getTestDataTimeZoneBuilder().toDateTimeZone("TestDTZ2", true);
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        });

        t1.start();
        t1.join();
    }

    private DateTimeZoneBuilder getTestDataTimeZoneBuilder() {
        return new DateTimeZoneBuilder()
                .addCutover(1601, 'w', 1, 1, 1, false, 7200000)
                .setStandardOffset(3600000)
                .addRecurringSavings("", 3600000, 1601, Integer.MAX_VALUE, 'w', 3, -1, 1, false, 7200000)
                .addRecurringSavings("", 0, 1601, Integer.MAX_VALUE, 'w', 10, -1, 1, false, 10800000);
    }
}
