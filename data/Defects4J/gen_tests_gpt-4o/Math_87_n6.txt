
import org.apache.commons.math3.optim.linear.SimplexTableau;
import org.apache.commons.math3.optim.linear.LinearObjectiveFunction;
import org.apache.commons.math3.optim.linear.Relationship;
import org.apache.commons.math3.optim.linear.LinearConstraint;
import org.apache.commons.math3.optim.linear.GoalType;
import org.apache.commons.math3.optim.linear.NonNegativeConstraint;
import org.apache.commons.math3.optim.PointValuePair;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class SimplexTableauBugTest {

    @Test
    public void testBasicVariableDetection() {
        // Define the linear objective function: Maximize 3x + 4y
        LinearObjectiveFunction objectiveFunction = new LinearObjectiveFunction(new double[] {3, 4}, 0);

        // Constraints: x + y <= 5, x <= 3, y <= 4
        List<LinearConstraint> constraints = new ArrayList<>();
        constraints.add(new LinearConstraint(new double[] {1, 1}, Relationship.LEQ, 5));
        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] {0, 1}, Relationship.LEQ, 4));

        // Initialize the SimplexTableau
        SimplexTableau tableau = new SimplexTableau(objectiveFunction, constraints, GoalType.MAXIMIZE, true, 0, new NonNegativeConstraint(true));

        // Solve the problem and check if basic variables are detected correctly
        PointValuePair solution = tableau.solve();

        // Check if the solution is valid, this means the basic variable detection was correct
        assertEquals(3.0, solution.getPoint()[0], 1e-6); // x should be 3
        assertEquals(2.0, solution.getPoint()[1], 1e-6); // y should be 2
        assertEquals(17.0, solution.getValue(), 1e-6);   // Objective function value should be 17
    }
}
