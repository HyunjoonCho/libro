
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class PolymorphicTypeTest {

    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = SubType.class)
    static abstract class BaseType {
        public String baseProperty = "base";
    }

    static class SubType extends BaseType {
        public String subProperty = "sub";
    }

    @Test
    public void testPolymorphicDeserialization() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();

        // SubType should be deserialized with both properties from BaseType and SubType.
        String json = "{ \"type\": \"unknown\", \"subProperty\": \"testSub\" }";
        BaseType result = objectMapper.readValue(json, BaseType.class);

        // Verify that the properties from both base and sub types are preserved
        assertEquals("base", result.baseProperty, "The base property should be preserved");
        assertEquals("testSub", ((SubType) result).subProperty, "The sub property should be deserialized correctly");
    }
}
