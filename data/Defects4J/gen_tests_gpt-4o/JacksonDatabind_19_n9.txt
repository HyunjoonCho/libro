
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.util.Properties;

import static org.junit.Assert.assertEquals;

public class PropertiesSerializationTest {

    @Test
    public void testPropertiesSerialization() throws Exception {
        ObjectMapper mapper = new ObjectMapper();

        // Create a Properties object with non-String values
        Properties properties = new Properties();
        properties.put("key1", "value1");
        properties.put("key2", 123);
        properties.put("key3", true);

        // Serialize the Properties object
        String json = mapper.writeValueAsString(properties);

        // Deserialize back
        Properties deserializedProperties = mapper.readValue(
                json, 
                TypeFactory.defaultInstance().constructMapType(Properties.class, String.class, String.class)
        );

        // Validate that all values are coerced to String
        assertEquals("value1", deserializedProperties.getProperty("key1"));
        assertEquals("123", deserializedProperties.getProperty("key2"));
        assertEquals("true", deserializedProperties.getProperty("key3"));
    }
}
