script
/**
 * This test case is designed to reproduce a bug in the Closure Compiler where
 * warnings about the "dangerous use of the global this object" are not issued
 * consistently as expected.
 */

// ==ClosureCompiler==
// @compilation_level ADVANCED_OPTIMIZATIONS
// @output_file_name default.js
// ==/ClosureCompiler==

/** @constructor */
function Foo() {
    this._bar = null;
}

/** @this {Foo} */
function writeMethodWithAnnotation() {
    this._bar = 123; // no warning. ok
}

/** @this {Foo} */
function readMethodWithAnnotation() {
    return this._bar; // no warning. ok
}

//----

function writeMethodWithoutAnnotation() {
    this._bar = 123; // warning. ok.
}

function readMethodWithoutAnnotation() {
    return this._bar; // <- No warning! Expected warning here.
}

// Test case
function testGlobalThisWarning() {
    // Create an instance of Foo to silence actual execution errors
    var fooInstance = new Foo();

    // Execute functions within the context of fooInstance
    writeMethodWithAnnotation.call(fooInstance);
    readMethodWithAnnotation.call(fooInstance);
    writeMethodWithoutAnnotation.call(fooInstance);
    var result = readMethodWithoutAnnotation.call(fooInstance);

    // Assertion to ensure code executes without runtime errors
    console.assert(result === 123, "Expected result to be 123");
}

// Run the test case
testGlobalThisWarning();
