
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class LineTest {

    @Test
    public void testRevertPrecision() {
        // Create a line with a specific direction vector
        Vector3D direction = new Vector3D(1e10, 1, 1);
        Vector3D pointOnLine = new Vector3D(0, 0, 0);
        Line line = new Line(pointOnLine, direction);

        // Revert the line
        line.revert();

        // The expected direction after revert should be the negation of the original direction
        Vector3D expectedDirection = direction.negate();

        // Perform a comparison allowing for very small numerical imprecision
        assertEquals(expectedDirection.getX(), line.getDirection().getX(), 1e-10);
        assertEquals(expectedDirection.getY(), line.getDirection().getY(), 1e-10);
        assertEquals(expectedDirection.getZ(), line.getDirection().getZ(), 1e-10);
    }
}
