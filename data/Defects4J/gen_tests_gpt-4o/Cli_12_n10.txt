
import org.apache.commons.cli.*;
import org.junit.Test;
import static org.junit.Assert.*;

public class PosixParserTest {

    private static final String OPTION_TARGET = "t";
    private static final String OPTION_TARGET_LONG = "target";

    @Test
    public void testPosixParserBehavior() {
        // Define the options
        Options options = new Options();
        Option generateTarget = new Option(OPTION_TARGET, OPTION_TARGET_LONG, true, "Generate files for the specified target machine");
        options.addOption(generateTarget);
        
        CommandLineParser parser = new PosixParser(); // Using deprecated PosixParser for the sake of reproduction
        String[] args = {"-target", "foobar.com"};

        try {
            // Parse the command line arguments
            CommandLine parsedLine = parser.parse(options, args);

            // Verify the output
            if (parsedLine.hasOption(OPTION_TARGET)) {
                String targetValue = parsedLine.getOptionValue(OPTION_TARGET);
                // This assertion checks if the behavior matches the reported bug
                assertEquals("parsing error: expected 'foobar.com'", "foobar.com", targetValue);
            }
        } catch (ParseException e) {
            fail("Parsing failed due to unexpected ParseException: " + e.getMessage());
        }
    }
}
