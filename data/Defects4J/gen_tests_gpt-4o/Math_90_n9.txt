
import org.apache.commons.math3.stat.Frequency;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class FrequencyTest {

    @Test
    public void testNonComparableObject() {
        Frequency frequency = new Frequency();
        final Object nonComparableObject = new Object();

        // Attempt to add a non-Comparable object, should ideally fail,
        // but currently creates incorrect behavior
        frequency.addValue(nonComparableObject);

        // The getCount method should fail, but instead returns 0
        assertEquals(0L, frequency.getCount(nonComparableObject));

        // The getPct method should fail, but instead returns 0.0
        assertEquals(0.0, frequency.getPct(nonComparableObject), 0.0);

        // Test adding a second non-Comparable object, should fail with an exception
        boolean exceptionThrown = false;
        try {
            frequency.addValue(new Object());
        } catch (IllegalArgumentException e) {
            exceptionThrown = true;
        }

        // An exception must be thrown on this call
        assertEquals(true, exceptionThrown);
    }
}
