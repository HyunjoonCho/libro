
import org.apache.commons.lang3.time.DurationFormatUtils;
import org.junit.Test;

import java.util.Calendar;

import static org.junit.Assert.assertNotEquals;

public class DurationFormatUtilsTest {

    @Test
    public void testDurationFormatUtilsEndOfYear() {
        Calendar cal = Calendar.getInstance();

        cal.set(Calendar.MONTH, Calendar.DECEMBER);
        cal.set(Calendar.DAY_OF_MONTH, 31);
        cal.set(Calendar.YEAR, 2005);
        cal.set(Calendar.HOUR_OF_DAY, 0);
        cal.set(Calendar.MINUTE, 0);
        cal.set(Calendar.SECOND, 0);
        cal.set(Calendar.MILLISECOND, 0);

        String result = DurationFormatUtils.formatPeriod(cal.getTimeInMillis(), System.currentTimeMillis(), "MM");

        // Assert to ensure that the result is not a negative month period
        // In this context, -2 months makes no sense and indicates a failure in calculation
        assertNotEquals("-2", result);

        // Usually, you'll want a positive result or some specific expected value. 
        // But since `System.currentTimeMillis()` provides a moving target, a fixed expected value
        // can't be reliably asserted. Hence, ensure the result isn't nonsensical.
        System.out.println("Formatted Period: " + result);
    }
}
