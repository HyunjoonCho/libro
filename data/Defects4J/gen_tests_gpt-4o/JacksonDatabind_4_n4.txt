
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidFormatException;
import com.fasterxml.jackson.databind.module.SimpleModule;
import org.junit.Test;

import java.io.IOException;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class InvalidFormatExceptionTest {

    static class SimpleObject {
        public int number;
    }

    @Test
    public void testInvalidFormatExceptionIndex() {
        String jsonInput = "[{\"number\": 1}, {\"number\": \"not-a-number\"}, {\"number\": 2}]";
        ObjectMapper mapper = new ObjectMapper();

        try {
            mapper.readValue(jsonInput, mapper.getTypeFactory().constructCollectionType(List.class, SimpleObject.class));
        } catch (InvalidFormatException e) {
            // We expect an index of 1, since the invalid format occurs at the second element
            assertEquals(1, e.getPath().get(0).getIndex());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
