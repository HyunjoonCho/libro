
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;
import com.fasterxml.jackson.annotation.JsonTypeInfo.As;
import com.fasterxml.jackson.databind.ObjectMapper;

import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class ExternalTypeIdDeserializationTest {

    @JsonTypeInfo(use = Id.NAME, include = As.EXTERNAL_PROPERTY, property = "type")
    private static class MyPojo {
        private String data;

        @JsonCreator
        public MyPojo(@JsonProperty("data") String data) {
            this.data = data;
        }

        public String getData() {
            return data;
        }
    }

    @JsonTypeName("myPojo")
    private static class MyPojoImpl extends MyPojo {
        public MyPojoImpl(String data) {
            super(data);
        }
    }

    @Test
    public void testExternalTypeIdDeserialization() throws Exception {
        String json = "{ \"type\": \"myPojo\", \"data\": \"testData\" }";

        ObjectMapper mapper = new ObjectMapper();
        MyPojo pojo = mapper.readValue(json, MyPojo.class);

        assertEquals("testData", pojo.getData());
    }
}
