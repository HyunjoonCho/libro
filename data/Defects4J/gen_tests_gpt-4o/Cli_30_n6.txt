
import org.apache.commons.cli.*;

import java.util.Properties;

import static org.junit.Assert.*;

public class OptionGroupStateTest {

    @org.junit.Test
    public void testMutuallyExclusiveOptionsWithDefaults() throws Exception {
        // Create mutually exclusive options 'a' and 'b'
        OptionGroup group = new OptionGroup();
        group.addOption(new Option("a", "option-a", false, "Option A"));
        group.addOption(new Option("b", "option-b", false, "Option B"));

        // Create Options and add the OptionGroup
        Options options = new Options();
        options.addOptionGroup(group);

        // Create default Properties with a conflicting option 'b'
        Properties defaultProps = new Properties();
        defaultProps.setProperty("b", "true");

        // Arguments that specify option 'a'
        String[] args = {"-a"};

        // Create the parser and parse the options
        DefaultParser parser = new DefaultParser();
        CommandLine cmd = parser.parse(options, args, defaultProps);

        // Check if both 'a' and 'b' are set, which should not be the case
        assertTrue("Option 'a' should be set", cmd.hasOption("a"));
        assertFalse("Option 'b' should not be set", cmd.hasOption("b"));

        // This prints both options, illustrating the bug:
        System.out.println("Options present: " + cmd.getOptions().length);
        for (Option opt : cmd.getOptions()) {
            System.out.println("Option: " + opt.getLongOpt());
        }
    }
}
