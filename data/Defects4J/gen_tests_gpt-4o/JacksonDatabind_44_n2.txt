public void testPolymorphicTypeResolutionWithDefaultImpl() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerSubtypes(new NamedType(DerivedClass.class, "derived"));
    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

    String json = "{\"type\":\"unknown\",\"baseProperty\":\"baseValue\",\"derivedProperty\":\"derivedValue\"}";

    BaseClass result = null;
    try {
        result = mapper.readValue(json, BaseClass.class);
    } catch (JsonProcessingException e) {
        fail("Deserialization should not throw exception: " + e.getMessage());
    }

    assertNotNull(result);
    assertEquals(DefaultBaseClass.class, result.getClass());
    assertEquals("baseValue", result.getBaseProperty());
}