
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import static org.junit.Assert.assertFalse;

public class LendsAnnotationTest {

    @Test
    public void testLendsAnnotationSupport() {
        // JavaScript code with @lends annotation
        String jsCode =
                "/**\n" +
                " * @name MyClass\n" +
                " * @class\n" +
                " * @extends superClass1\n" +
                " * @extends superClass2\n" +
                " */\n" +
                "dojo.declare('MyClass', [superClass1, superClass2], /** @lends MyClass.prototype */ {\n" +
                "  foo: function() {\n" +
                "    this.bar(); // This should be recognized as safe\n" +
                "  },\n" +
                "  bar: function() {\n" +
                "    console.log('bar');\n" +
                "  }\n" +
                "});";

        // Closure Compiler setup
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();

        // Set options...
        // For demonstration, we're using simple configurations
        options.setCheckTypes(true);

        // Compiling the source
        SourceFile input = SourceFile.fromCode("test.js", jsCode);
        Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), input, options);

        // Assert no errors (which there currently are, due to @lends not being recognized)
        assertFalse("Compilation resulted in errors due to @lends not being recognized", result.success);
    }
}
