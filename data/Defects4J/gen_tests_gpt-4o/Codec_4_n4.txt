
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import org.apache.commons.codec.binary.Base64;
import java.nio.charset.StandardCharsets;

public class Base64EncodingTest {

    @Test
    public void testBase64EncodeNoCrLf() {
        Base64 base64Instance = new Base64();
        String input = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
        byte[] inputData = input.getBytes(StandardCharsets.UTF_8);

        // Using the static method which should not add CRLF
        byte[] staticEncodedData = Base64.encodeBase64(inputData);
        String staticEncodedString = new String(staticEncodedData, StandardCharsets.UTF_8);

        // Using the instance method which should not add CRLF in version 1.3
        byte[] instanceEncodedData = base64Instance.encode(inputData);
        String instanceEncodedString = new String(instanceEncodedData, StandardCharsets.UTF_8);

        // Assert that encoded strings are equal
        assertEquals(staticEncodedString, instanceEncodedString);

        // Assert that the instance encoded data does not contain CRLF at the end
        assertFalse(instanceEncodedString.endsWith("\r\n"));
    }
}
