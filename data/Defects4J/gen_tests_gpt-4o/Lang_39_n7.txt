
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.apache.commons.lang3.StringUtils;
import org.junit.Test;

public class StringUtilsTest {

    @Test
    public void testReplaceEachWithNullReplacement() {
        String original = "Hello World!";
        String[] searchList = {"Hello", "World"};
        String[] replacementList = {"Greetings", null};
        
        try {
            String result = StringUtils.replaceEach(original, searchList, replacementList);
            // You can assert what you expect here if the method is modified to be null-friendly
            // For now, checking that it handles null without throwing an exception.
            assertEquals("Greetings !", result);
            // Alternatively, depending on desired behavior:
            // assertEquals("Greetings World!", result);
            // assertEquals("Greetings null!", result);
        } catch (NullPointerException e) {
            fail("replaceEach should handle null values in replacementList without throwing NullPointerException.");
        }
    }
}
