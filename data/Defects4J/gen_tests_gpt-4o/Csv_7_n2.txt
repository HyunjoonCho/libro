
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.apache.commons.csv.QuoteMode;
import org.junit.Test;

import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.util.Map;

import static org.junit.Assert.*;

public class HeaderMapTest {

    @Test
    public void testHeaderMapWithDuplicateColumns() throws IOException {
        String csvData = "Col1,Col2,Col2,Col3,Col4\n"
                       + "1,2,3,4,5\n"
                       + "4,5,6,7,8\n";

        Reader in = new StringReader(csvData);
        CSVFormat format = CSVFormat.RFC4180
                                .withDelimiter(',')
                                .withQuote('"')
                                .withQuoteMode(QuoteMode.MINIMAL)
                                .withIgnoreSurroundingSpaces(true)
                                .withHeader()
                                .withSkipHeaderRecord(true);

        try (CSVParser parser = new CSVParser(in, format)) {
            for (CSVRecord record : parser) {
                Map<String, String> headerMap = record.toMap();
                // Check if the duplicate header "Col2" causes an issue
                assertTrue("Expected to find 'Col2', but it was missing or not handled properly", headerMap.containsKey("Col2"));
                assertEquals("2", record.get("Col2")); // Expected value for the first occurrence
                // The underlying issue should be fixed to either handle both Col2 correctly or throw an informative exception
                // If not fixed, this will fail or provide incorrect data
            }
        }
    }
}
