
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.nio.charset.StandardCharsets;

import static org.junit.Assert.assertTrue;

public class MinificationTest {

    @Test
    public void testMinificationWithNonAsciiCharacters() {
        // Original JavaScript content with non-ASCII characters
        String originalCode = "var text = 'Привет мир';"; // "Hello world" in Russian

        // Set up the compiler and options
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Compile the original code
        SourceFile input = SourceFile.fromInputStream("input.js",
                new ByteArrayInputStream(originalCode.getBytes(StandardCharsets.UTF_8)));
        Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), input, options);

        // Get the minified result
        String minifiedCode = compiler.toSource();

        // Verify that the minified code size is not larger than the original
        assertTrue("Minified code is unexpectedly larger than the original code",
                minifiedCode.length() <= originalCode.length());
        
        // Optionally, print the length for debugging purposes
        System.out.println("Original code length: " + originalCode.length());
        System.out.println("Minified code length: " + minifiedCode.length());
    }
}
