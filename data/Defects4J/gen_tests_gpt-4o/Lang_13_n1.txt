
import org.apache.commons.lang3.SerializationException;
import org.apache.commons.lang3.SerializationUtils;
import org.junit.Test;

import java.io.Serializable;

import static org.junit.Assert.*;

public class SerializationUtilsTest {

    static class TestClass implements Serializable {
        private static final long serialVersionUID = 1L;
        private Class<?> primitiveType;

        public TestClass(Class<?> primitiveType) {
            this.primitiveType = primitiveType;
        }

        public Class<?> getPrimitiveType() {
            return primitiveType;
        }
    }

    @Test
    public void testPrimitiveTypeClassSerialization() {
        TestClass original = new TestClass(int.class);
        
        try {
            // Attempt to clone an object containing a primitive class reference
            TestClass clone = SerializationUtils.clone(original);
            assertEquals(original.getPrimitiveType(), clone.getPrimitiveType());
        } catch (SerializationException e) {
            // If cloning fails due to ClassNotFoundException, output the details
            fail("Cloning operation threw a SerializationException due to ClassNotFoundException: " + e.getMessage());
        }
    }
}
