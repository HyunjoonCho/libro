
import org.apache.commons.io.IOUtils;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;

public class CompilerTest {

    @Test
    public void testCommandLineVsWebUICompilation() throws Exception {
        String javascriptCode = "var foreignObject = gfx.parentNode.parentNode;\n"
                              + "var parentContainer = foreignObject.parentNode.parentNode;";

        // Simulating command line compilation
        String commandLineOutput = compileWithCommandLine(javascriptCode);

        // Simulating web UI compilation
        String webUIOutput = compileWithWebUI(javascriptCode); // Normally you'd call the actual Web API

        // Check the outputs to ensure they are as expected
        assert !commandLineOutput.equals(webUIOutput) : "The outputs should be different, but they aren't";
    }

    private String compileWithCommandLine(String code) throws Exception {
        // This is a mocked function. You would call the actual compiler command here.
        // Normally this would involve calling the compiler.jar as explained in the bug description.

        // Simulating incorrect command line compilation output
        return "var b=a=a.parentNode.parentNode;";
    }

    private String compileWithWebUI(String code) throws Exception {
        // This is a mocked function. You would call the web UI/API and retrieve the output.
        // Normally this would involve interacting with the service at http://closure-compiler.appspot.com/home

        // Simulating correct web UI compilation output
        return "if(b){if(a=b.parentNode.parentNode,b=a.parentNode.parentNode,null!==b)";
    }
}
