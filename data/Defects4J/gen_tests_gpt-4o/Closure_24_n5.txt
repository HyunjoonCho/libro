
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.DiagnosticGroup;
import com.google.javascript.jscomp.DiagnosticGroups;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import static org.junit.Assert.assertFalse;

public class GoogScopeTest {

    @Test
    public void testFunctionDeclarationInGoogScope() {
        String codeSnippet1 = "goog.scope(function() { var x = function(){}; });";
        String codeSnippet2 = "goog.scope(function() { function x() {} });";

        CompilerOptions options = new CompilerOptions();
        Compiler compiler = new Compiler();

        // Preparing compiler options to show warnings and errors for goog.scope issues
        CompilerOptions.setWarningLevel(options, DiagnosticGroups.CHECK_VARIABLES, CompilerOptions.WarningLevel.WARNING);

        // Compile the first code snippet
        Result result1 = compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test1.js", codeSnippet1), options);
        assertFalse("First code snippet should produce an error", result1.success);

        // Compile the second code snippet
        Result result2 = compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test2.js", codeSnippet2), options);
        assertFalse("Second code snippet should produce an error", result2.success);
    }
}
