
import static org.junit.Assert.*;
import org.junit.Test;

public class NegativeNumberAsOptionTest {

    @Test
    public void testNegativeNumberArgument() {
        // Construct the argument with number validation
        Argument numArg = aBuilder.withValidator(NumberValidator.getNumberInstance())
                                  .withMinimum(1).withMaximum(1).create();

        // Create the option expecting a numerical argument
        Option numOpt = oBuilder.withLongName("num").withArgument(numArg).create();

        // Group for the option
        Group options = gBuilder.withOption(numOpt).create();

        // Parser setup
        Parser parser = new Parser();
        parser.setGroup(options);

        // Attempt to parse negative number argument
        String[] args = {"--num", "-0.1"};

        try {
            parser.parse(args);
            fail("Expected an exception to be thrown for negative number argument, but it was parsed successfully.");
        } catch (Exception e) {
            // Expected behavior: an error indicating that -0.1 is treated as an unexpected option
            assertEquals("Unexpected -0.1 while processing --num", e.getMessage());
        }
    }
}
