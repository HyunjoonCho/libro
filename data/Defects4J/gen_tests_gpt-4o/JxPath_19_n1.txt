
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.xml.DOMParser;
import org.junit.Test;
import org.w3c.dom.Document;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.util.Iterator;

import static org.junit.Assert.assertTrue;

public class JXPathContextTest {

    @Test
    public void testIteratePointersWithMultiplePrefixes() throws Exception {
        String xml = "<a:doc xmlns:a='ns'>"
                   + "  <a:elem />"
                   + "  <b:elem xmlns:b='ns' />"
                   + "</a:doc>";

        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
        dbf.setNamespaceAware(true);
        DocumentBuilder db = dbf.newDocumentBuilder();
        Document doc = db.parse(new java.io.ByteArrayInputStream(xml.getBytes()));

        JXPathContext context = JXPathContext.newContext(doc);

        // Create a DOMParser to parse XML and create a JXPathContext
        context.setNamespaceContextPointer(DOMParser.convert(doc));

        Iterator<?> pointers = context.iteratePointers("//elem");

        // Ensure both elements with different prefixes but the same namespace are returned
        assertTrue("First element should be present.", pointers.hasNext());
        Pointer firstPointer = (Pointer) pointers.next();
        assertTrue("Second element should be present.", pointers.hasNext());
        Pointer secondPointer = (Pointer) pointers.next();

        assertTrue("No more elements should be present.", !pointers.hasNext());

        // Verify both pointers are pointing to elements
        assertTrue(firstPointer.getNode() != null);
        assertTrue(secondPointer.getNode() != null);
    }
}
