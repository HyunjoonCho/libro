
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.xml.DOMParser;
import org.apache.commons.jxpath.xml.DocumentContainer;
import org.junit.Test;
import org.w3c.dom.Document;

import java.io.StringReader;

import static org.junit.Assert.assertEquals;

public class JXPathNamespaceLoopTest {

    @Test
    public void testNamespaceLoopInAsPath() {
        
        String xmlContent = "<?xml version='1.0'?>\n" +
                "<b:foo xmlns:b=\"bla\" xmlns=\"test111\">\n" +
                "  <b:bar>a</b:bar>\n" +
                "  <test xmlns=\"\"></test>\n" +
                "</b:foo>";

        try {
            // Parse the XML content into a DOM document
            DocumentContainer container = new DocumentContainer(new StringReader(xmlContent), new DOMParser());
            Document document = (Document)container.getValue();

            // Create JXPathContext
            JXPathContext context = JXPathContext.newContext(document);

            // Navigate to the 'test' element node
            Pointer pointer = context.getPointer("//test");

            // Capture the generated XPath for the 'test' node
            String path = pointer.asPath();

            // Ensure the path does not cause an infinite loop and is correctly prefixed
            assertEquals("/b:foo/test", path);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
