public void testTarArchiveInputStreamWithBigUserId() throws Exception {
    byte[] tarData = new byte[512];
    // Create a tar header with a large user ID (larger than can be encoded in standard octal)
    String userId = "62410554";
    byte[] userIdBytes = userId.getBytes("UTF-8");
    System.arraycopy(userIdBytes, 0, tarData, TarConstants.UID_OFFSET, userIdBytes.length);
    // Fill remaining header with valid data
    tarData[TarConstants.MAGIC_OFFSET] = 'u';
    tarData[TarConstants.MAGIC_OFFSET + 1] = 's';
    tarData[TarConstants.MAGIC_OFFSET + 2] = 't';
    tarData[TarConstants.MAGIC_OFFSET + 3] = 'a';
    tarData[TarConstants.MAGIC_OFFSET + 4] = 'r';
    tarData[TarConstants.MAGIC_OFFSET + 5] = ' ';
    
    try (ByteArrayInputStream bais = new ByteArrayInputStream(tarData);
         TarArchiveInputStream tais = new TarArchiveInputStream(bais)) {
        try {
            tais.getNextTarEntry();
            fail("Expected an IllegalArgumentException due to invalid user ID");
        } catch (IllegalArgumentException e) {
            assertEquals("Invalid byte 52 at offset 7 in '62410554' len=8", e.getMessage());
        }
    }
}