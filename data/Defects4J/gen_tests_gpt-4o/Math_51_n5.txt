
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.solver.UnivariateSolver;
import org.apache.commons.math3.analysis.solver.RegulaFalsiSolver;
import org.junit.Test;

import static org.junit.Assert.fail;

public class RegulaFalsiSolverTest {

    @Test
    public void testBug() {
        final UnivariateFunction f = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return Math.exp(x) - Math.pow(Math.PI, 3.0);
            }
        };

        UnivariateSolver solver = new RegulaFalsiSolver();

        try {
            double root = solver.solve(100, f, 1, 10);
            fail("Expected IllegalStateException due to maximal count exceeded");
        } catch (org.apache.commons.math3.exception.MaxCountExceededException e) {
            System.out.println("Test passed. Maximal evaluations exceeded as expected.");
        }
    }
}
