public void testCMAESOptimizerBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer(1000, 0, true, 0, 0, RandomSource.create(), false, new SimpleValueChecker());
    double[] startPoint = new double[] {1.5, 1.5};
    double[] lowerBound = new double[] {0.0, 0.0};
    double[] upperBound = new double[] {1.0, 1.0};
    
    PointValuePair result = optimizer.optimize(
        new MaxEval(1000),
        new ObjectiveFunction(new MultivariateFunction() {
            @Override
            public double value(double[] point) {
                // Example of a simple function to optimize
                return point[0] * point[0] + point[1] * point[1];
            }
        }),
        GoalType.MINIMIZE,
        new InitialGuess(startPoint),
        new SimpleBounds(lowerBound, upperBound)
    );

    double[] optimizedPoint = result.getPoint();
    assertTrue("Optimized point exceeds lower bounds", optimizedPoint[0] >= lowerBound[0] && optimizedPoint[1] >= lowerBound[1]);
    assertTrue("Optimized point exceeds upper bounds", optimizedPoint[0] <= upperBound[0] && optimizedPoint[1] <= upperBound[1]);
}