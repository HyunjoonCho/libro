
import org.apache.commons.math3.distribution.NormalDistribution;
import org.apache.commons.math3.exception.MathException;
import org.junit.Test;
import static org.junit.Assert.fail;

public class NormalDistributionTest {

    @Test
    public void testCumulativeProbabilityConvergenceException() {
        NormalDistribution normalDistribution = new NormalDistribution();

        for (int i = 0; i < 500; i++) {
            // Using Math.exp(Integer.MAX_VALUE) to trigger large values.
            // Typically, Math.exp(Integer.MAX_VALUE) will return Infinity.
            double val = Math.exp(Integer.MAX_VALUE); 

            try {
                System.out.println("val = " + val + " cumulative = " + normalDistribution.cumulativeProbability(val));
            } catch (MathException e) {
                // Catching the potential exception to replicate the bug behavior
                e.printStackTrace();
                fail("Cumulative probability calculation failed with a MathException for large value input.");
            }
        }
    }
}
