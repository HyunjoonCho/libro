
import org.apache.commons.math3.fraction.Fraction;
import org.apache.commons.math3.fraction.ProperFractionFormat;
import org.junit.Test;
import java.text.ParsePosition;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;

public class ProperFractionFormatTest {

    @Test
    public void testParseNegative1() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "1 -1 / 2";
        ParsePosition pos = new ParsePosition(0);

        Fraction actual = properFormat.parse(source, pos);
        assertNull("Expected parsing to fail and return null", actual);
    }

    @Test
    public void testParseNegative2() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "-1 -2 / 3";
        ParsePosition pos = new ParsePosition(0);

        Fraction actual = properFormat.parse(source, pos);
        assertNull("Expected parsing to fail and return null", actual);
    }

    @Test
    public void testParseInvalidDenominator() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "1 2 / -3";
        ParsePosition pos = new ParsePosition(0);

        Fraction actual = properFormat.parse(source, pos);
        assertNull("Expected parsing to fail and return null", actual);
    }

    @Test
    public void testParseNegativeWithSpaces() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = " -1 -2 / 3";
        ParsePosition pos = new ParsePosition(0);

        Fraction actual = properFormat.parse(source, pos);
        assertNull("Expected parsing to fail and return null", actual);
    }
}
