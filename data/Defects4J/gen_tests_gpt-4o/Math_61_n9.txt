
import org.junit.Test;
import static org.junit.Assert.*;

// Assuming these are part of your imported libraries
class NormalDistribution {
    // This method will be overridden
    public void modifyBehavior() {
        // Intended to be overridden
    }
}

class PoissonDistributionImpl {
    private NormalDistribution normalDistribution;
    private double mean;
    
    public PoissonDistributionImpl(double p, NormalDistribution z) {
        super();
        setNormal(z);       // Overridable method called here
        setMean(p);
    }
    
    public void setNormal(NormalDistribution z) {
        this.normalDistribution = z;
    }
    
    public void setMean(double p) {
        this.mean = p;
    }

    public NormalDistribution getNormal() {
        return normalDistribution;
    }
    
    public double getMean() {
        return mean;
    }
}

// Test class to reproduce the issue
public class PoissonDistributionImplTest {

    // Subclass to simulate overridden behavior
    class SpecialNormalDistribution extends NormalDistribution {
        @Override
        public void modifyBehavior() {
            throw new UnsupportedOperationException("Execution of override during construction.");
        }
    }

    @Test(expected = UnsupportedOperationException.class)
    public void testConstructorWithOverriddenMethod() {
        SpecialNormalDistribution specialNormDist = new SpecialNormalDistribution();
        PoissonDistributionImpl poisson = new PoissonDistributionImpl(3.0, specialNormDist);
        // This should cause the UnsupportedOperationException if overridden method is called
    }
}
