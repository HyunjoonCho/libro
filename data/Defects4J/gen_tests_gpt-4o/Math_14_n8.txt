public void testLargeNumberOfWeights() {
    int numberOfPoints = 41200;
    double[] observations = new double[numberOfPoints];
    double[] weights = new double[numberOfPoints];
    double[] initialGuess = new double[]{1.0, 1.0, 1.0}; // Adjust based on specific requirements

    for (int i = 0; i < numberOfPoints; i++) {
        observations[i] = i;
        weights[i] = 1.0;
    }

    MultivariateVectorOptimizer optimizer = new LevenbergMarquardtOptimizer();
    // Example polynomial curve fitting problem
    PolynomialCurveFitter fitter = PolynomialCurveFitter.create(2);
    
    try {
        double[] fitResult = fitter.fit(observations, observations, weights); // This should trigger the memory issue
    } catch (OutOfMemoryError e) {
        fail("OutOfMemoryError should not occur even with large number of weights: " + e.getMessage());
    }
}