
import org.apache.commons.math3.fitting.AbstractCurveFitter;
import org.apache.commons.math3.fitting.WeightedObservedPoint;
import org.apache.commons.math3.fitting.PolynomialCurveFitter;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

public class LargeWeightTest {

    @Test(expected = OutOfMemoryError.class)
    public void testLargeWeightsExhaustMemory() {
        // Define the degree of polynomial fitting
        int polynomialDegree = 2;
        
        // Instantiate a polynomial curve fitter with the defined degree
        AbstractCurveFitter fitter = PolynomialCurveFitter.create(polynomialDegree);

        // Create a large number of observed points
        int numPoints = 41200;
        List<WeightedObservedPoint> points = new ArrayList<>();

        for (int i = 0; i < numPoints; i++) {
            points.add(new WeightedObservedPoint(1.0, i, i * i)); // Simple quadratic example
        }

        // Attempt to fit the curve, expecting an OutOfMemoryError due to large weight handling
        fitter.fit(points);
    }
}
