
import static org.junit.Assert.assertEquals;
import org.apache.commons.lang3.time.StopWatch;
import org.junit.Test;

public class StopWatchTest {

    @Test
    public void testSuspendDoesNotActAsSplitOnStop() throws InterruptedException {
        StopWatch stopWatch = new StopWatch();

        stopWatch.start();
        Thread.sleep(1000);

        stopWatch.suspend();
        long timeAfterFirstSuspend = stopWatch.getTime();
        System.out.println("Time 1 (ok): " + timeAfterFirstSuspend);

        Thread.sleep(2000);
        assertEquals("Time should not have changed while suspended", timeAfterFirstSuspend, stopWatch.getTime());

        stopWatch.resume();
        Thread.sleep(3000);
        stopWatch.suspend();
        long timeAfterSecondSuspend = stopWatch.getTime();
        System.out.println("Time 2 (ok): " + timeAfterSecondSuspend);

        Thread.sleep(4000);
        assertEquals("Time should not have changed while suspended", timeAfterSecondSuspend, stopWatch.getTime());

        timeAfterSecondSuspend = stopWatch.getTime();
        System.out.println("Time 2 (again, ok): " + timeAfterSecondSuspend);

        Thread.sleep(5000);

        stopWatch.stop();
        long finalTime = stopWatch.getTime();
        System.out.println("Final Time: " + finalTime);

        assertEquals("Stopped time should match time after last suspend call", timeAfterSecondSuspend, finalTime);
    }
}
