
import com.google.javascript.jscomp.*;

public class TypeInferenceTest {

    public static void main(String[] args) {
        compileJavaScript();
    }

    private static void compileJavaScript() {
        String jsCode = "/** @param {string} x */\n" +
                        "function g(x) {}\n" +
                        "/** @param {undefined} x */\n" +
                        "function f(x) {\n" +
                        " if (x != undefined) { g(x); }\n" +
                        "}";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
        WarningLevel.VERBOSE.setOptionsForWarningLevel(options);

        SourceFile extern = SourceFile.fromCode("externs.js", "function alert(x) {}");
        SourceFile input = SourceFile.fromCode("input.js", jsCode);

        Result result = compiler.compile(extern, input, options);

        if (result.success) {
            System.out.println("Compilation Successful");
        } else {
            for (JSError warning : result.warnings) {
                System.out.println("Warning: " + warning.description);
            }
            for (JSError error : result.errors) {
                System.out.println("Error: " + error.description);
            }
        }
    }
}
