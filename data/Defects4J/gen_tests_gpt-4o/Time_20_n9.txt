
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;
import org.junit.Test;

import static org.junit.Assert.*;

public class DateTimeZoneTest {

    private static final DateTimeFormatter formatter = DateTimeFormat.forPattern("MM/dd/yyyy HH:mm:ss.SSS ZZZ");

    private String convertDateTimeToFormattedString(DateTime dateTime) {
        return formatter.print(dateTime);
    }

    private DateTime parseStringToDateTime(String formattedDateTime) {
        return formatter.parseDateTime(formattedDateTime);
    }

    @Test
    public void testTimeZoneDiscrepancy() {
        // Example with known discrepancy
        String testTimeZone = "America/Atka";
        DateTime dateTime = DateTime.now().withZone(DateTimeZone.forID(testTimeZone));

        String formattedDate = convertDateTimeToFormattedString(dateTime);
        DateTime convertedDateTime = parseStringToDateTime(formattedDate);

        assertEquals("Expected zone ID mismatch", dateTime.getZone().getID(), convertedDateTime.getZone().getID());

        if (!dateTime.getZone().getID().equals("America/Atka")) {
            fail("Expected 'America/Atka' to equal: " + dateTime.getZone().getID());
        }
    }
}
