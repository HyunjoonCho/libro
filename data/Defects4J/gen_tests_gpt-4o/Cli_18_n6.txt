
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.fail;

public class PosixParserTest {

    @Test
    public void testUnrecognizedTokensWithStopAtNonOption() {
        Options options = new Options();
        options.addOption(new Option("a", "alpha", false, "An example option"));

        String[] args = {"-z", "-a", "foo"};
        CommandLineParser parser = new PosixParser();
        
        try {
            CommandLine cmd = parser.parse(options, args, true);

            // The '-z' should not be ignored and parsing should stop at the unrecognized token
            String[] expectedArgs = {"-z", "-a", "foo"};
            String[] actualArgs = cmd.getArgs();

            assertArrayEquals("Unexpected arguments", expectedArgs, actualArgs);
        } catch (ParseException e) {
            fail("Parsing failed: " + e.getMessage());
        }
    }
}
