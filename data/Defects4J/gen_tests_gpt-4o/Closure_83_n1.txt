
import org.junit.Test;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

/**
 * This test case assumes that the Closure Compiler jar is available and accessible
 * at a known path, which you need to set before running the test case.
 */
public class ClosureCompilerTest {

    private static final String COMPILER_JAR_PATH = "path/to/compiler.jar"; // Update this path accordingly

    @Test
    public void testVersionOption() {
        try {
            // Prepare process to run the jar with the --version option
            ProcessBuilder processBuilder = new ProcessBuilder(
                    "java", "-jar", COMPILER_JAR_PATH, "--version"
            );
            Process process = processBuilder.start();

            // Capture the output (stdout) and error (stderr) of the process
            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
            try (InputStream inputStream = process.getInputStream()) {
                byte[] buffer = new byte[1024];
                int bytesRead;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
            }

            String output = outputStream.toString();

            // Check if the output contains version information
            assertTrue("Version information not found in output",
                    output.contains("Closure Compiler") && output.contains("Version"));

            // Check that the process did not print an operand error
            assertTrue("Unexpected operand error in output",
                    !output.contains("Опция \"--version\" требует операнд"));

        } catch (IOException e) {
            fail("Failed to execute process: " + e.getMessage());
        }
    }
}
