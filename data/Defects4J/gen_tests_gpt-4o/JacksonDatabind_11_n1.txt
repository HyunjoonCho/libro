
import java.io.*;

class Ruleform implements Serializable {
    private static final long serialVersionUID = 1L;
    private String data;

    public Ruleform(String data) {
        this.data = data;
    }

    public String getData() {
        return data;
    }
}

class Something implements Serializable {
    private static final long serialVersionUID = 1L;
    private Ruleform entity;

    public <T extends Ruleform> T getEntity() {
        return (T) entity;
    }

    public <T extends Ruleform> void setEntity(T entity) {
        this.entity = entity;
    }
}

public class DeserializationTest {

    public static void main(String[] args) {
        try {
            // Create an instance of Something and set a Ruleform entity
            Something somethingOriginal = new Something();
            Ruleform ruleform = new Ruleform("Test Data");
            somethingOriginal.setEntity(ruleform);
            
            // Serialize the Something instance
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            ObjectOutputStream out = new ObjectOutputStream(bos);
            out.writeObject(somethingOriginal);
            out.flush();
            byte[] serializedBytes = bos.toByteArray();
            out.close();
            bos.close();
            
            // Deserialize the Something instance
            ByteArrayInputStream bis = new ByteArrayInputStream(serializedBytes);
            ObjectInputStream in = new ObjectInputStream(bis);
            Something somethingDeserialized = (Something) in.readObject();
            in.close();
            bis.close();
            
            // Verify the deserialized object
            Ruleform deserializedRuleform = somethingDeserialized.getEntity();
            System.out.println("Deserialized Data: " + deserializedRuleform.getData());
            
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
}
