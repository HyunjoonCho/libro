public void testInvalidZipEntryDifferentiation() throws IOException {
    byte[] invalidZip = new byte[]{
        0x50, 0x4B, 0x03, 0x04, // Local file header signature
        0x14, 0x00, // Version needed to extract
        0x00, 0x00, // General purpose bit flag
        0x00, 0x00, // Compression method
        0x00, 0x00, 0x00, 0x00, // File modification time and date
        0x00, 0x00, 0x00, 0x00, // CRC-32 of uncompressed data
        0x00, 0x00, 0x00, 0x00, // Compressed size
        0x00, 0x00, 0x00, 0x00, // Uncompressed size
        0x00, 0x00, // File name length
        0x00, 0x00  // Extra field length
    };

    try (ByteArrayInputStream bais = new ByteArrayInputStream(invalidZip);
         ZipArchiveInputStream zis = new ZipArchiveInputStream(bais)) {
        
        try {
            zis.getNextZipEntry();
            fail("Expected exception not thrown for invalid zip entry");
        } catch (ZipException e) {
            assertEquals("invalid entry encountered", e.getMessage().toLowerCase());
        }
    }
}