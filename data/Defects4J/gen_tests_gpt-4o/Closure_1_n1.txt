public void testFunctionArgumentsNotOptimizedAway() {
    String inputJs = ""
        + "function foo(bar, baz) {"
        + "  return bar;"
        + "}"
        + "alert(foo.length);";

    // Compile the JS code using Closure Compiler's SIMPLE_OPTIMIZATIONS level
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

    Compiler compiler = new Compiler();
    Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test.js", inputJs), options);

    String optimizedJs = compiler.toSource();
    assertFalse("Function's length property should be maintained", optimizedJs.contains("function foo(a){return a}alert(foo.length)"));
    assertTrue("Function's arguments should not be optimized away", optimizedJs.contains("function foo(a,b){return a}alert(foo.length)"));
}