
import org.junit.Test;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;

public class IOUtilsTest {
    
    // Simple IOUtils with skip method.
    public final class IOUtils{
        // Simulated skip method that attempts to skip bytes
        public static long skip(InputStream input, long toSkip) throws IOException {
            long remaining = toSkip;
            byte[] buffer = new byte[2048];
            while (remaining > 0) {
                long numRead = input.read(buffer, 0, (int)Math.min(buffer.length, remaining));
                if (numRead < 0) { // EOF
                    break;
                }
                remaining -= numRead;
            }
            return toSkip - remaining;
        }
    }
    
    @Test
    public void testSkipWithCipherInputStream() {
        try {
            // Create a key and initialize cipher
            KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
            keyGenerator.init(128);
            SecretKey secretKey = keyGenerator.generateKey();
            Cipher cipher = Cipher.getInstance("AES");
            cipher.init(Cipher.ENCRYPT_MODE, secretKey);

            // Create a test input stream
            byte[] data = new byte[4096]; // 4KB of zeros
            InputStream originalStream = new ByteArrayInputStream(data);

            // Wrap originalStream into a CipherInputStream
            CipherInputStream cipherInputStream = new CipherInputStream(originalStream, cipher);

            // Attempt to skip
            // Trying to skip 2048 bytes, expecting it to reach EOF correctly if skip stops prematurely
            long numToSkip = 2048;

            // Simulate IOUtils.skip(delta) and validate
            long skipped = IOUtils.skip(cipherInputStream, numToSkip);

            // Check if the skipped bytes are equal to the number we wanted to skip
            assertTrue("Skipped bytes should equal numToSkip", skipped == numToSkip);

        } catch (Exception e) {
            // If we encounter any exceptions during the test, fail
            fail("Exception encountered: " + e.getMessage());
        }
    }
}
