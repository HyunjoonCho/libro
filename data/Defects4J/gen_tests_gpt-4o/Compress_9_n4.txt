public void testTarArchiveOutputStreamBytesWritten() throws Exception {
    File tempFile = File.createTempFile("tartest", ".tar");
    FileOutputStream myOutputStream = new FileOutputStream(tempFile);

    ArchiveOutputStream sTarOut = new ArchiveStreamFactory().createArchiveOutputStream(ArchiveStreamFactory.TAR, myOutputStream);

    File sSource = File.createTempFile("od_l", ".txt");
    try (FileOutputStream fos = new FileOutputStream(sSource)) {
        byte[] data = new byte[1024];
        fos.write(data);
    }
    
    TarArchiveEntry sEntry = new TarArchiveEntry(sSource);
    sEntry.setSize(sSource.length());
    sTarOut.putArchiveEntry(sEntry);

    FileInputStream sInput = new FileInputStream(sSource);
    byte[] cpRead = new byte[8192];

    int iRead;
    while ((iRead = sInput.read(cpRead)) > 0) {
        sTarOut.write(cpRead, 0, iRead);
    }
    sInput.close();
    sTarOut.closeArchiveEntry();
    long processedBytesBeforeClose = ((TarArchiveOutputStream) sTarOut).getBytesWritten();
    sTarOut.close();

    long processedBytesAfterClose = ((TarArchiveOutputStream) sTarOut).getBytesWritten();
    assertTrue("Bytes written should be greater than zero before close.", processedBytesBeforeClose > 0);
    assertTrue("Bytes written should be greater than zero after close.", processedBytesAfterClose > 0);
    assertTrue("Bytes written should equal file length plus header bytes.", 
               processedBytesAfterClose > sSource.length());

    sSource.delete();
    tempFile.delete();
}