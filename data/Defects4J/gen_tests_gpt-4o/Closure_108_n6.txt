
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;

import org.junit.Test;
import static org.junit.Assert.*;

public class GoogScopeAliasedTypeTest {

    @Test
    public void testPreconditionCrashWithAliasedTypeDeclaration() {
        String code = ""
            + "var goog = {};\n"
            + "goog.scope;\n"
            + "var ns = {};\n"
            + "ns.sub = {};\n"
            + "/** @constructor */\n"
            + "ns.sub.C = function() {};\n"
            + "goog.scope(function() {\n"
            + "    var sub = ns.sub;\n"
            + "    /** @type {sub.C} */\n"
            + "    var x = null;\n"
            + "});\n";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        // Configure the options as needed

        JSSourceFile extern = JSSourceFile.fromCode("externs.js", "");
        JSSourceFile input = JSSourceFile.fromCode("test.js", code);

        // Run the compiler
        Result result = compiler.compile(extern, input, options);
        
        // The expected behavior is that there is no compilation error or exception
        assertTrue("Compilation should not have errors", result.success);
    }
}
