
import static org.junit.Assert.assertTrue;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import com.google.javascript.jscomp.CommandLineRunner;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class CommentHandlingTest {
    private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();
    private final PrintStream originalOut = System.out;
    private final PrintStream originalErr = System.err;

    @Before
    public void setUpStreams() {
        System.setOut(new PrintStream(outContent));
        System.setErr(new PrintStream(errContent));
    }

    @After
    public void restoreStreams() {
        System.setOut(originalOut);
        System.setErr(originalErr);
    }

    @Test
    public void testNonJSDocCommentHandling() {
        String[] args = {
            "--js", "input.js",
            "--js_code", "/*! @preserve Foo License */ alert(\"foo\");"
        };
        new CommandLineRunner(args).run();

        // Verify that there is no warning when using /*! but the comment is not preserved
        assertTrue(errContent.toString().contains("WARNING - Parse error. Non-JSDoc comment has annotations. Did you mean to start it with '/**'?"));
        assertFalse(outContent.toString().contains("Foo License"));
    }
}
