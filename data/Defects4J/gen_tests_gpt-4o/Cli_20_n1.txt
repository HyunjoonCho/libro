
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

public class PosixParserTest {

    @Test
    public void testUnrecognizedLongOptionWithStopAtNonOption() throws Exception {
        Options options = new Options();
        options.addOption("a", false, "Option a");
        options.addOption("b", true, "Option b with argument");

        CommandLineParser parser = new PosixParser();
        String[] args = {"--zop", "-abfoo"};

        // Parse with stopAtNonOption set to true
        CommandLine cmd = parser.parse(options, args, true);

        // Check that the command line arguments after unrecognized long option are kept unchanged
        String[] expectedArgs = {"--zop", "-abfoo"};
        assertArrayEquals(expectedArgs, cmd.getArgs());
    }
}
