
import org.apache.commons.math3.fraction.Fraction;
import org.apache.commons.math3.fraction.ProperFractionFormat;
import org.junit.Test;

import java.text.ParsePosition;

import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertEquals;

public class FractionParsingTest {

    @Test
    public void testParseNegativeInvalid() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "-1 -2 / 3";
        ParsePosition pos = new ParsePosition(0);
        Fraction actual = properFormat.parse(source, pos);
        assertNull(actual);
    }

    @Test
    public void testParseNegativeSuccess() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "-1 -2 / 3";
        ParsePosition pos = new ParsePosition(0);
        Fraction actual = properFormat.parse(source, pos);
        assertEquals(1, actual.getNumerator());
        assertEquals(3, actual.getDenominator());
    }

    @Test
    public void testParseNegativeInput2() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "1 2 / -3";
        ParsePosition pos = new ParsePosition(0);
        Fraction actual = properFormat.parse(source, pos);
        assertEquals(1, actual.getNumerator());
        assertEquals(3, actual.getDenominator());
    }

    @Test
    public void testParseNegativeInput3() {
        ProperFractionFormat properFormat = new ProperFractionFormat();
        String source = "-1 -2 / 3";
        ParsePosition pos = new ParsePosition(0);
        Fraction actual = properFormat.parse(source, pos);
        assertEquals(1, actual.getNumerator());
        assertEquals(3, actual.getDenominator());
    }
}
