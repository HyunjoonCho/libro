
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import static org.junit.Assert.assertEquals;

public class JXPathNamespaceTest {

    @Test
    public void testIteratePointersWithMultiplePrefixes() throws Exception {
        // Setup the XML document from the bug report
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.newDocument();

        Element root = doc.createElementNS("ns", "a:doc");
        doc.appendChild(root);

        Element elem1 = doc.createElementNS("ns", "a:elem");
        root.appendChild(elem1);

        Element elem2 = doc.createElementNS("ns", "b:elem");
        root.appendChild(elem2);

        // Create a JXPath context
        JXPathContext context = JXPathContext.newContext(doc);

        // Use iteratePointers to iterate over elements within the same namespace
        int count = 0;
        for (Pointer pointer : context.iteratePointers("//ns:elem")) {
            count++;
        }

        // According to the bug report, this will erroneously count 1 due to the prefix issue
        // Correct behavior should be to count 2 elements
        assertEquals("Unexpected number of elements found", 2, count);
    }
}

