public void testHeaderMapWithDuplicateColumnNames() {
    String csvData = "Col1,Col2,Col2,Col3,Col4\n1,2,3,4,5\n4,5,6,7,8";
    CSVFormat myFormat = CSVFormat.RFC4180.withDelimiter(',')
                                          .withQuoteChar('"')
                                          .withQuotePolicy(Quote.MINIMAL)
                                          .withIgnoreSurroundingSpaces(true)
                                          .withHeader()
                                          .withSkipHeaderRecord(true);

    try {
        CSVParser parser = CSVParser.parse(csvData, myFormat);
        Map<String, Integer> headerMap = parser.getHeaderMap();

        // Check if the parse raises an exception or if the header map size is as expected
        assertNotNull(headerMap);
        assertEquals(4, headerMap.size());

        // Ensure Col2 does not resolve to an unexpected index due to duplicates
        assertTrue(headerMap.containsKey("Col2"));
        assertEquals(1, (int) headerMap.get("Col2"));
    } catch (IOException e) {
        fail("Parsing CSV should not throw an exception: " + e.getMessage());
    }
}