
import org.junit.Test;
import org.mockito.Mockito;

import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

public class TypedParameterTest {

    interface ExampleService {
        void someMethod(int a, Integer b);
        void someOther(int a, String b);
    }

    @Test
    public void testMockitoTypedParameters() {
        // Create a mock of ExampleService
        ExampleService service = mock(ExampleService.class);

        // Call the method with specific parameters
        service.someMethod(1, 2);
        service.someOther(1, "2");

        // Verify the method invocations with incorrect parameters to
        // trigger the inappropriate type information display in output
        try {
            verify(service).someMethod(1, (Integer) 3);
            verify(service).someOther(1, "(String) 2");
        } catch (AssertionError e) {
            System.out.println("Observed failure due to type mismatch, demonstrating formatting:");
            e.printStackTrace();
            // If the toString behavior is incorrect, it will reflect in the printed stack trace
        }
    }
}
