
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class ShapeNumberTest {

    static class TestEntity {
        @JsonFormat(shape = JsonFormat.Shape.NUMBER, locale = "en_US") // Explicitly set to NUMBER
        public double value;

        public TestEntity(double value) {
            this.value = value;
        }
    }

    @Test
    public void testExplicitShapeNumberOverride() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();

        TestEntity entity = new TestEntity(1234.56);

        // Serialize the object
        String serialized = objectMapper.writeValueAsString(entity);

        // Before the fix, shape NUMBER might be ignored due to locale setting,
        // and it might have been serialized as: {"value":"1234.56"}
        // We ensure that it's serialized as a number: {"value":1234.56}
        assertEquals("{\"value\":1234.56}", serialized);
    }
}
