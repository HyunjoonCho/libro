public void testPrototypePropertyTypeInference() {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setLanguageIn(CompilerOptions.LanguageMode.ECMASCRIPT3);
    compiler.initOptions(options);

    String code = "/** @param {Object} a */\n" +
                  "function f(a) {\n" +
                  "  a.prototype = '__proto';\n" +
                  "}\n" +
                  "/** @param {Object} a */\n" +
                  "function g(a) {\n" +
                  "  a.prototype = function(){};\n" +
                  "}\n";

    CompilerInput input = new CompilerInput(SourceFile.fromCode("test.js", code));
    compiler.addInput(input);

    Result result = compiler.analyzeInputs();

    List<JSError> warnings = result.warnings;
    assertTrue(warnings.stream().noneMatch(
        warning -> warning.getDescription().contains("assignment to property prototype of Object")));

    assertTrue("Expected no type errors", result.success);
}