
import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;

public class ZipArchiveInputStreamTest {

    @Test(expected = IOException.class)
    public void testTruncatedZipArchive() throws IOException {
        // This is an example of truncated ZIP data
        // The actual content should be a proper ZIP file header but truncated
        byte[] truncatedZipData = "PK\x03\x04...".getBytes(StandardCharsets.ISO_8859_1);

        // Wrap the byte array in a ByteArrayInputStream
        ByteArrayInputStream bais = new ByteArrayInputStream(truncatedZipData);

        // Create the ZipArchiveInputStream
        ZipArchiveInputStream zipInputStream = new ZipArchiveInputStream(bais);

        try {
            // Attempt to read from the ZipArchiveInputStream
            // This should produce an IOException due to truncation
            while (zipInputStream.read() != -1) {
                // Normally do something with the data
            }
        } finally {
            // Close the stream
            zipInputStream.close();
        }
    }
}
