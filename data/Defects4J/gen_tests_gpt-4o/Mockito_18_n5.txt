
import static org.mockito.Mockito.*;

import org.junit.Test;
import java.util.Iterator;
import java.util.Iterable;

public class MockitoIterableTest {

    @Test
    public void testMockedIterableReturnsEmpty() {
        Iterable<?> mockedIterable = mock(Iterable.class);
        
        // When a method is called on the mock, it should return an empty Iterable
        when(mockedIterable.iterator()).thenReturn(new Iterator<Object>() {
            @Override
            public boolean hasNext() {
                return false;
            }

            @Override
            public Object next() {
                return null;
            }
        });

        Iterator<?> iterator = mockedIterable.iterator();
        assertFalse(iterator.hasNext());
    }

    @Test
    public void testMockedIteratorReturnsEmpty() {
        Iterator<?> mockedIterator = mock(Iterator.class);

        // When hasNext is called on the mock, it should return false
        when(mockedIterator.hasNext()).thenReturn(false);

        assertFalse(mockedIterator.hasNext());
    }
}
