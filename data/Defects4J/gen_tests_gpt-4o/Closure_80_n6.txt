
import com.google.javascript.jscomp.CommandLineRunner;
import org.junit.Test;
import static org.junit.Assert.*;

public class ClosureCompilerTest {

    @Test
    public void testDeleteExpressionCrash() {
        String jsCode = "function x() { return delete a; }";
        
        // Configure compiler arguments to enable advanced compilation
        String[] args = {
            "--compilation_level", "ADVANCED_OPTIMIZATIONS",
            "--js", "input.js"
        };
        
        // Write the JavaScript code to a file
        try (java.io.FileWriter fileWriter = new java.io.FileWriter("input.js")) {
            fileWriter.write(jsCode);
        } catch (java.io.IOException e) {
            fail("Failed to write to input.js file");
        }
        
        // Run the compiler
        CommandLineRunner runner;
        try {
            runner = new CommandLineRunner(args);
            int exitCode = runner.run();
            assertNotEquals("Compiler should not succeed on this input", 0, exitCode);
        } catch (Exception e) {
            // Expected to reach here due to INTERNAL COMPILER ERROR
            assertTrue(e.getMessage().contains("INTERNAL COMPILER ERROR"));
        }
        
        // Clean up test file
        new java.io.File("input.js").delete();
    }
}
