
import static org.junit.Assert.fail;
import org.junit.Test;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.RhinoException;

public class JavaScriptParsingTest {

    @Test
    public void testUnnamedFunctionStatementShouldError() {
        Context ctx = Context.enter();
        try {
            Scriptable scope = ctx.initStandardObjects();
            String unnamedFunction = "function () {};";
            ctx.evaluateString(scope, unnamedFunction, "test", 1, null);
            fail("Expected a syntax error for unnamed function statement, but none was thrown.");
        } catch (RhinoException e) {
            // Expected exception due to syntax error in JavaScript
            System.out.println("Caught expected parse error: " + e.getMessage());
        } finally {
            Context.exit();
        }
    }

    @Test
    public void testUnnamedFunctionExpressionShouldNotError() {
        Context ctx = Context.enter();
        try {
            Scriptable scope = ctx.initStandardObjects();
            String unnamedFunctionExpression = "(function(){});";
            ctx.evaluateString(scope, unnamedFunctionExpression, "test", 1, null);
            // Here, no exception is expected so the test should pass as it is.
        } catch (RhinoException e) {
            fail("Did not expect a parse error, but caught one: " + e.getMessage());
        } finally {
            Context.exit();
        }
    }
}
