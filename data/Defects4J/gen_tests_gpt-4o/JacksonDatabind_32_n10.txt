
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.fail;

public class DeserializationTest {

    @Test
    public void testDeserializeEmptyJsonObject() {
        ObjectMapper mapper = new ObjectMapper();
        try {
            // This should not throw an exception, expecting it to be parsed correctly to an empty Map
            mapper.readValue("{}", SomeObjectThatCanBeAggregated.class);
            // If no exception is thrown, the test passes or continue to validate expected object
        } catch (JsonMappingException e) {
            // If an exception is thrown, the test case reproduces the reported bug
            fail("Unexpected JsonMappingException: " + e.getMessage());
        } catch (Exception e) {
            fail("An unexpected exception occurred: " + e.getMessage());
        }
    }

    static class SomeObjectThatCanBeAggregated {

        @JsonCreator
        public SomeObjectThatCanBeAggregated(Object obj) {
            System.out.println(obj + " // " + obj.getClass());
        }
    }
}
