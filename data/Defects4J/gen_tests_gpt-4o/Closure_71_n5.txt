
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class PrivatePropertyVisibilityTest {

    @Test
    public void testPrivatePropertyRedeclaration() {
        // JavaScript code
        String fooJs = ""
                + "/** @constructor */\n"
                + "function Foo() {\n"
                + "  /** @private */\n"
                + "  this.x_ = 3;\n"
                + "}";
        
        String subFooJs = ""
                + "/** @constructor \n"
                + " *  @extends {Foo} */\n"
                + "function SubFoo() {\n"
                + "  /** @private */\n"
                + "  this.x_ = 3;\n"
                + "}";

        // Set up the compiler and options
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setWarningLevel(com.google.javascript.jscomp.DiagnosticGroups.VISIBILITY, com.google.javascript.jscomp.CheckLevel.ERROR);

        // Compile the code
        Result result = compiler.compile(
                SourceFile.fromCode("externs.js", ""), // No externs
                SourceFile.fromCode("foo.js", fooJs),
                SourceFile.fromCode("subfoo.js", subFooJs),
                options
        );

        // Check for expected errors
        assertTrue("Expected a visibility error due to private property redeclaration", result.errors.length > 0);
    }
}
