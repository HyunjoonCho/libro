public void testPrivatePropertyRedefinedWarning() {
    String fooJs = "/** @constructor */ function Foo() { /** @private */ this.x_ = 3; }";
    String subFooJs = "/** @constructor \n" +
                      " * @extends {Foo} */ function SubFoo() { /** @private */ this.x_ = 3; }";

    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticGroups.VISIBILITY, CheckLevel.ERROR);

    Result result = compiler.compile(
        externs, 
        ImmutableList.of(SourceFile.fromCode("Foo.js", fooJs), SourceFile.fromCode("SubFoo.js", subFooJs)),
        options
    );

    assertTrue("Expected visibility error for redeclaring private property in subclass", result.errors.length > 0);
}