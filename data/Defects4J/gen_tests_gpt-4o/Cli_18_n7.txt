
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

public class PosixParserTest {

    @Test
    public void testUnrecognizedOptionWithStopAtNonOption() throws ParseException {
        // Define our accepted options
        Options options = new Options();
        options.addOption("a", false, "A simple option");

        // Create the parser instance
        CommandLineParser parser = new PosixParser();

        // Command line that includes an unrecognized option starting with '-'
        String[] args = new String[]{"-z", "-a", "foo"};

        // Parse the command line with stopAtNonOption enabled
        CommandLine cmd = parser.parse(options, args, true);

        // Check the arguments returned after parsing
        // We expect "-z" to still be in the unparsed portion of the command line
        String[] remainingArgs = cmd.getArgs();

        // Assert that "-z" is not ignored but treated as a non-option argument
        assertArrayEquals("Expected unrecognized option '-z' to be part of the remaining non-options", 
                          new String[]{"-z", "foo"}, remainingArgs);
    }
}
