
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.PropertyNamingStrategies;
import com.fasterxml.jackson.databind.annotation.JsonNaming;
import com.fasterxml.jackson.databind.json.JsonMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class PropertyNamingStrategyTest {

    @JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class)
    static class ExampleClass {
        private final String exampleProperty;

        public ExampleClass(String exampleProperty) {
            this.exampleProperty = exampleProperty;
        }

        public String getExampleProperty() {
            return exampleProperty;
        }
    }

    @Test
    public void testNamingStrategyWithConstructorProperty() throws Exception {
        ObjectMapper mapper = JsonMapper.builder()
                .propertyNamingStrategy(PropertyNamingStrategies.SNAKE_CASE)
                .build();

        String json = "{\"example_property\": \"value\"}";
        ExampleClass result = mapper.readValue(json, ExampleClass.class);

        assertEquals("value", result.getExampleProperty());

        // Additional test to ensure correct serialization
        String serializedJson = mapper.writeValueAsString(result);
        assertEquals(json, serializedJson);
    }
}
