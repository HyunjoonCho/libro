
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonGenerationException;
import java.io.IOException;
import java.io.StringWriter;

public class SurrogateTest {

    public static void main(String[] args) {
        JsonFactory jsonFactory = new JsonFactory();

        // This string contains a valid surrogate pair (UTF-16 encoding) for an emoji character
        String surrogateStr = "xxxxxxx" + "\uD83D\uDE00" + "xxxxxxx"; // Example with a surrogate pair

        try (StringWriter writer = new StringWriter();
             JsonGenerator jsonGenerator = jsonFactory.createGenerator(writer)) {

            // The call to writeRaw can throw JsonGenerationException if the surrogate pair is not handled well
            jsonGenerator.writeRaw(surrogateStr);
            jsonGenerator.flush();

            String jsonOutput = writer.toString();
            System.out.println("Generated JSON: " + jsonOutput);
        } catch (JsonGenerationException e) {
            // Catch and print the exception to verify the bug is reproduced
            System.err.println("Caught JsonGenerationException: " + e.getMessage());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
