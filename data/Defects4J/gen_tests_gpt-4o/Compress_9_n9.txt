public void testTarArchiveOutputStreamGetBytesWritten() throws Exception {
    File tempFile = File.createTempFile("tartest", ".tar");
    tempFile.deleteOnExit();

    FileOutputStream fileOutputStream = new FileOutputStream(tempFile);
    TarArchiveOutputStream tarOutputStream = (TarArchiveOutputStream) 
        new ArchiveStreamFactory().createArchiveOutputStream(ArchiveStreamFactory.TAR, fileOutputStream);

    File sourceFile = new File("C:/share/od_l.txt");
    TarArchiveEntry entry = new TarArchiveEntry(sourceFile);
    entry.setSize(sourceFile.length()); // Setting the size explicitly for the test

    tarOutputStream.putArchiveEntry(entry);

    FileInputStream inputStream = new FileInputStream(sourceFile);
    byte[] buffer = new byte[8192];
    int bytesRead;
    while ((bytesRead = inputStream.read(buffer)) > 0) {
        tarOutputStream.write(buffer, 0, bytesRead);
    }

    // Check bytes written before closing
    long bytesWrittenBeforeClose = tarOutputStream.getBytesWritten();
    assertTrue("Expected more bytes to be written", bytesWrittenBeforeClose > 0);

    inputStream.close();
    tarOutputStream.closeArchiveEntry();
    tarOutputStream.close();

    // Check bytes written after closing
    long bytesWrittenAfterClose = tarOutputStream.getBytesWritten();
    assertTrue("Expected bytes written after close to be larger", bytesWrittenAfterClose > 0);
    assertEquals("Bytes written should be greater than or equal to file length", 
                 bytesWrittenAfterClose, bytesWrittenBeforeClose);
}