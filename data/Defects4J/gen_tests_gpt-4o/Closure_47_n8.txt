
import static org.junit.Assert.assertEquals;

import org.junit.Test;

public class SourceMapTest {

    @Test
    public void testOriginalSourceLineNumber() {
        // Simulate a mapping where generated source is (0, 0) to (0, 10) 
        // mapped to original source line 1, column 0 to 1, column 10.
        
        // Simulating a source map entry 
        SourceMapEntry entry = new SourceMapEntry(0, 0, 1, 0);

        // Check if the original line number is one-based, which it should not be
        int originalSourceLineNumber = entry.getOriginalLine();

        // Failing test to demonstrate the issue: 
        // The assertion should be 0 for zero-based indices, but is 1 for the current bug
        assertEquals("Original source line number should be zero-based", 0, originalSourceLineNumber);
    }
}

class SourceMapEntry {
    private final int generatedLine;
    private final int generatedColumn;
    private final int originalLine;
    private final int originalColumn;

    // Simplified constructor for test simulation purposes 
    public SourceMapEntry(int generatedLine, int generatedColumn, int originalLine, int originalColumn) {
        this.generatedLine = generatedLine;
        this.generatedColumn = generatedColumn;
        this.originalLine = originalLine;
        this.originalColumn = originalColumn;
    }

    public int getOriginalLine() {
        return originalLine; // There is a bug here, as it returns one-based line index
    }
}
