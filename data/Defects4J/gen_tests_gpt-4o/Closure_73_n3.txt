
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class CodepointTest {

    @Test
    public void testCodepointU007fNotRawInOutput() {
        // Create a new compiler instance
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // Set the input JavaScript code
        String input = "alert('\\x7f');";
        SourceFile inputSourceFile = SourceFile.fromCode("input.js", input);
        
        // Compile the code
        Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), inputSourceFile, options);
        
        // Emit the compiled code as a string
        String output = compiler.toSource();
        
        // Assert that the output does not contain the raw non-printable character
        // and instead uses the escaped representation
        assertTrue("Output contains raw \\x7f codepoint", output.contains("\\x7f"));
    }
}
