public void testAnonymousObjectTypeInference() {
    // A mock to reproduce the issue with type inference when using constructors
    class Callz {
        Callz(Map<String, Object> parry) {
            Object prop2 = parry.get("prop2");
            if (prop2 instanceof Number && ((Number) prop2).doubleValue() < 5) {
                System.out.println("alright!");
            }
            System.out.println(parry.get("prop1"));
        }
    }

    // This would simulate the failure described, as the constructor expects a "prop2" key
    // which is absent here, hence we'll simulate the unexpected behavior
    Map<String, Object> input = new HashMap<>();
    input.put("prop1", "hi");
    
    // The constructor call new Callz(input) would fail type inference in JavaScript
    new Callz(input);
}