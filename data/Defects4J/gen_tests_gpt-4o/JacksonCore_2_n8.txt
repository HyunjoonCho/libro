
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import org.junit.Test;

import static org.junit.Assert.fail;

public class JsonParserTest {

    @Test
    public void testParseNumberAndBooleanWithoutSpace() {
        String jsonInput = "123true";

        JsonFactory jsonFactory = new JsonFactory();
        try (JsonParser parser = jsonFactory.createParser(jsonInput)) {
            if (parser.nextToken() != JsonToken.VALUE_NUMBER_INT) {
                fail("Expected a number token");
            }

            // Attempting to parse the next token should result in an exception
            parser.nextToken();
            fail("Expected a parse exception due to invalid JSON input");
        } catch (IOException e) {
            // This is the expected behavior
            System.out.println("Caught expected IOException: " + e.getMessage());
        }
    }
}
