
import static org.junit.Assert.assertEquals;
import java.io.StringReader;
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

public class LabeledLoopsTest {

    @Test
    public void testLabeledLoopsCompilation() {
        String originalCode = 
            "var i = 0; " +
            "lab1: do { " +
            "  lab2: do { " +
            "    i++; " +
            "    if (1) { " +
            "      break lab2; " +
            "    } else { " +
            "      break lab1; " +
            "    } " +
            "  } while(false); " +
            "} while(false); " +
            "console.log(i);";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        // Configure the compiler if needed

        // Compile the given code
        SourceFile extern = SourceFile.fromCode("externs.js", "");
        SourceFile input = SourceFile.fromCode("input.js", originalCode);
        
        compiler.compile(extern, input, options);

        String compiledCode = compiler.toSource();

        // The expected compiled output should be analyzed.
        String expectedIECompatibleOutput = 
            "var a=0;do{do{a++;break}while(0)}while(0);console.log(a);";

        // Ensure the compiled code matches what we expect
        assertEquals(expectedIECompatibleOutput, compiledCode);
    }
}
