
import org.apache.commons.math3.distribution.GammaDistribution;
import org.apache.commons.math3.distribution.AbstractRealDistribution;
import org.junit.Test;

import java.io.*;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;

public class GammaDistributionTest {

    @Test
    public void testGammaDistributionSerialization() throws IOException, ClassNotFoundException {
        double shape = 2.0;
        double scale = 1.0;

        // Create and initialize GammaDistribution
        GammaDistribution originalDist = new GammaDistribution(shape, scale);

        // Generate samples from the original distribution
        double[] originalSamples = new double[10];
        for (int i = 0; i < originalSamples.length; i++) {
            originalSamples[i] = originalDist.sample();
        }

        // Serialize the distribution
        ByteArrayOutputStream byteOut = new ByteArrayOutputStream();
        ObjectOutputStream out = new ObjectOutputStream(byteOut);
        out.writeObject(originalDist);
        out.close();

        // Deserialize the distribution
        ByteArrayInputStream byteIn = new ByteArrayInputStream(byteOut.toByteArray());
        ObjectInputStream in = new ObjectInputStream(byteIn);
        GammaDistribution clonedDist = (GammaDistribution) in.readObject();
        in.close();

        // Generate samples from the cloned distribution
        double[] clonedSamples = new double[10];
        for (int i = 0; i < clonedSamples.length; i++) {
            clonedSamples[i] = clonedDist.sample();
        }

        // Compare the samples
        assertArrayEquals("The samples from the cloned distribution do not match the original distribution.",
                originalSamples, clonedSamples, 1e-9);
    }
}
