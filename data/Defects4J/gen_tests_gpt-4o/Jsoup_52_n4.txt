
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.parser.Parser;
import org.junit.Test;

import java.io.IOException;
import java.nio.charset.Charset;

import static org.junit.Assert.assertEquals;

public class XmlEncodingDetectionTest {

    @Test
    public void testXmlEncodingDetection() throws IOException {
        // Example of XML content with a specific charset declaration
        String xmlContent = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n" +
                            "<note>\n" +
                            "    <to>Tove</to>\n" +
                            "    <from>Jani</from>\n" +
                            "    <heading>Reminder</heading>\n" +
                            "    <body>Don't forget me this weekend!</body>\n" +
                            "</note>";

        // Assuming the XML is served from a URL, in a real test you would mock this request,
        // but here we are illustrating the problem with a direct parse for simplicity.
        Document document = Jsoup.parse(xmlContent, "http://example.com/hoy.xml", Parser.xmlParser());

        // Jsoup by default may not respect the specified encoding in XML declaration
        // and might default to UTF-8 or other charset settings.
        Charset expectedCharset = Charset.forName("ISO-8859-1");
        Charset actualCharset = document.charset();
        
        assertEquals("Charset should match the one declared in the XML declaration.", expectedCharset, actualCharset);
    }
}
