
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.joda.time.Period;
import org.joda.time.format.ISOPeriodFormat;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
import org.junit.jupiter.api.Test;

public class PeriodFormatterTest {

    @Test
    public void testDifferentBehaviourOfPeriodFormatter() {
        // Create a formatter using ISOPeriodFormat.standard()
        PeriodFormatter isoFormatter = ISOPeriodFormat.standard();

        // Create a formatter using a manually constructed PeriodFormatterBuilder
        PeriodFormatter manualFormatter = new PeriodFormatterBuilder()
                .appendLiteral("P")
                .appendYears()
                .appendSuffix("Y")
                .appendMonths()
                .appendSuffix("M")
                .appendWeeks()
                .appendSuffix("W")
                .appendDays()
                .appendSuffix("D")
                .appendSeparatorIfFieldsAfter("T")
                .appendHours()
                .appendSuffix("H")
                .appendMinutes()
                .appendSuffix("M")
                .appendSecondsWithOptionalMillis()
                .appendSuffix("S")
                .toFormatter();

        // Create a period to test formatting
        Period testPeriod = new Period().withYears(1).withMonths(2).withWeeks(3).withDays(4)
                .withHours(5).withMinutes(6).withSeconds(7).withMillis(890);

        // Format the test period with both formatters
        String isoFormatted = isoFormatter.print(testPeriod);
        String manualFormatted = manualFormatter.print(testPeriod);

        // Verify that both formatters produce the same output
        assertEquals(isoFormatted, manualFormatted, "The formatted periods should be the same");
    }
}
