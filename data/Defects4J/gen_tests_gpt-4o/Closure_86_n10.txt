
import org.junit.Test;
import static org.junit.Assert.*;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

public class SideEffectsAnalysisTest {

    @Test
    public void testSideEffectsAnalysis() {
        // Setup the JavaScript engine
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("JavaScript");

        // JavaScript code simulating the issue
        String script =
            "/** @constructor */\n" +
            "function Foo() {\n" +
            "  var self = this;\n" +
            "  window.setTimeout(function() {\n" +
            "    window.location = self.location;\n" +
            "  }, 0);\n" +
            "}\n" +
            "\n" +
            "Foo.prototype.setLocation = function(loc) {\n" +
            "  this.location = loc;\n" +
            "};\n" +
            "\n" +
            "(new Foo()).setLocation('http://www.google.com/');\n" +
            "\n" +
            "var locationSet = (new Foo()).location === 'http://www.google.com/';\n" +
            "locationSet;"; // Returns if the location was set

        try {
            // Evaluate the script and check if location was correctly set
            Object result = engine.eval(script);
            assertTrue("The setLocation call was incorrectly removed or not executed", (Boolean) result);
        } catch (ScriptException e) {
            fail("Script execution failed: " + e.getMessage());
        }
    }
}
