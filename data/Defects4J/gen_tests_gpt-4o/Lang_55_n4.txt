
import org.apache.commons.lang3.time.StopWatch;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class StopWatchTest {

    @Test
    public void testSuspendResumeBehavior() throws InterruptedException {
        StopWatch sw = new StopWatch();

        sw.start();
        Thread.sleep(1000);

        sw.suspend();
        long timeAfterFirstSuspend = sw.getTime();
        System.out.println("Time after first suspend: " + timeAfterFirstSuspend);

        Thread.sleep(2000);
        assertEquals("Time should not have advanced after suspend", timeAfterFirstSuspend, sw.getTime());

        sw.resume();
        Thread.sleep(3000);

        sw.suspend();
        long timeAfterSecondSuspend = sw.getTime();
        System.out.println("Time after second suspend: " + timeAfterSecondSuspend);

        Thread.sleep(4000);
        assertEquals("Time should not have advanced after second suspend", timeAfterSecondSuspend, sw.getTime());

        sw.stop();
        long timeAfterStop = sw.getTime();
        System.out.println("Time after stop: " + timeAfterStop);

        assertEquals("StopWatch time should not advance after stop following suspend", timeAfterSecondSuspend, timeAfterStop);
    }
}
