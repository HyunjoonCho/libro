public void testJSC_USED_GLOBAL_THISWarning() {
    // Capture any warnings related to using global this
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.WARNING);

    // Simulate compiling the code snippet to check for warnings
    String code = 
        "var NS = {" +
        "   read: function() {" +
        "       return this.foo;" +
        "   }," +
        "   write: function() {" +
        "       this.foo = 123;" +
        "   }" +
        "};" +
        "NS.write2 = function() {" +
        "   this.foo = 123;" +
        "};";

    Compiler compiler = new Compiler();
    compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test.js", code), options);

    // Verify that warnings for the dangerous use of the global this object are present
    List<JSError> warnings = compiler.getWarnings();
    assertTrue(warnings.stream().anyMatch(warning -> 
        warning.getType().key.equals("JSC_USED_GLOBAL_THIS")));
}