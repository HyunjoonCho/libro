public void testDependencySortingWithClosurePassFalse() {
    // Create a new Compiler instance
    Compiler compiler = new Compiler();

    // Set compiler options
    CompilerOptions compilerOptions = new CompilerOptions();
    compilerOptions.setClosurePass(false);

    // Set dependency sorting on
    DependencyOptions dependencyOptions = new DependencyOptions();
    dependencyOptions.setDependencySorting(true);
    compilerOptions.setDependencyOptions(dependencyOptions);

    // Sample JS code with dependencies
    String js1 = "goog.provide('example1'); goog.require('example2');";
    String js2 = "goog.provide('example2');";

    // Compile the JS code
    SourceFile input1 = SourceFile.fromCode("input1.js", js1);
    SourceFile input2 = SourceFile.fromCode("input2.js", js2);

    Result result = compiler.compile(Collections.emptyList(), Arrays.asList(input1, input2), compilerOptions);

    // Check that compilation was successful and no warnings/errors occurred
    assertTrue(result.success);

    // Check the concatenated output is in the expected dependent order
    String expectedOutput = "goog.provide('example2');" +
                            "goog.provide('example1'); goog.require('example2');";
    assertEquals(expectedOutput, compiler.toSource());
}