
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class AbstractLeastSquaresTest {

    // Assuming there's a concrete implementation of AbstractLeastSquares called LeastSquaresImplementation
    private class DummyLeastSquares extends AbstractLeastSquares {
        @Override
        public double[] computeResiduals(double[] parameters) {
            // Dummy implementation, real implementation would calculate residuals based on parameters
            return new double[]{1.0, 2.0};
        }

        @Override
        public double[] computeJacobian(double[] parameters) {
            // Dummy implementation, real implementation would provide the Jacobian matrix
            return new double[0];
        }
    }

    @Test
    public void testChiSquareWeightHandling() {
        DummyLeastSquares leastSquares = new DummyLeastSquares();

        // Set weights for the observations
        leastSquares.setResidualsWeights(new double[]{0.5, 0.5});

        // Calculate chi-square
        double chiSquare = leastSquares.getChiSquare();

        // Calculate expected chi-square using weights as multiplicative factors
        double expectedChiSquare = 0.5 * Math.pow(1.0, 2) + 0.5 * Math.pow(2.0, 2);

        // Assert the chi-square is calculated as expected
        assertEquals(expectedChiSquare, chiSquare, 1e-6);
    }
}
