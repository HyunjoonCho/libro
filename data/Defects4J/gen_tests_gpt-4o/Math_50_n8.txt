
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver;
import org.junit.Test;
import static org.junit.Assert.*;

public class RegulaFalsiSolverTest {

    @Test
    public void testBugRegulaFalsiSolver() {
        UnivariateFunction f = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return Math.exp(x) - Math.pow(Math.PI, 3.0);
            }
        };

        UnivariateSolver solver = new RegulaFalsiSolver();
        
        try {
            double root = solver.solve(100, f, 1, 10);
            fail("Expected an IllegalStateException due to maximal count exceeded");
        } catch (IllegalStateException e) {
            assertTrue(e.getMessage().contains("maximal count (100) exceeded"));
        }
    }
}
