
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.junit.Test;

import java.io.StringReader;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class CSVFormatTest {

    @Test
    public void testExcelFormatIgnoresEmptyHeaderNames() throws Exception {
        String csvData = 
                "A,B,C,,\n" +
                "a,b,c,d,e\n";

        CSVParser parser = CSVFormat.EXCEL
                .withHeader()
                .parse(new StringReader(csvData));

        List<CSVRecord> records = parser.getRecords();

        // There is only one record since the first row is the header.
        assertEquals(1, records.size());

        CSVRecord record = records.get(0);

        // Check that the values are read correctly for non-empty headers
        assertEquals("a", record.get("A"));
        assertEquals("b", record.get("B"));
        assertEquals("c", record.get("C"));

        // Try accessing empty headers
        try {
            record.get("");
            throw new AssertionError("Expected an IllegalArgumentException for empty header access");
        } catch (IllegalArgumentException e) {
            // Expected exception when accessing an empty header
        }

        // Verify that the additional values can be accessed by index
        assertEquals("d", record.get(3));
        assertEquals("e", record.get(4));
    }
}
