
import javax.script.Invocable;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import org.junit.Test;
import static org.junit.Assert.*;

public class SideEffectsAnalysisTest {

    @Test
    public void testSideEffectsInJavaScript() throws ScriptException, NoSuchMethodException {
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("nashorn");
        
        // JavaScript code simulating the scenario with a check for location set
        String script = 
            "/** @constructor */\n" +
            "function Foo() {\n" +
            "    var self = this;\n" +
            "    this.location = null;\n" +
            "    window = { setTimeout: function(fn, delay) { fn(); } };\n" + // Mocking setTimeout
            "    window.setTimeout(function() {\n" +
            "        self.triggeredLocation = self.location;\n" + 
            "    }, 0);\n" +
            "}\n" +
            "\n" +
            "Foo.prototype.setLocation = function(loc) {\n" +
            "    this.location = loc;\n" +
            "};\n" +
            "\n" +
            "var foo = new Foo();\n" +
            "foo.setLocation('http://www.google.com/');\n" +
            "foo.triggeredLocation;";  // Capture the set location

        // Evaluate script and capture result
        Object result = engine.eval(script);

        assertEquals("http://www.google.com/", result);
    }
}
