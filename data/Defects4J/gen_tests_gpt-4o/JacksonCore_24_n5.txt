
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InputCoercionException;
import org.junit.Test;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class InputCoercionExceptionTest {

    @Test
    public void testInputCoercionExceptionForOverflowInt() {
        ObjectMapper objectMapper = new ObjectMapper();
        String json = "2147483648"; // One more than Integer.MAX_VALUE

        try {
            objectMapper.readValue(json, int.class);
            fail("Expected an InputCoercionException due to int overflow");
        } catch (InputCoercionException e) {
            // Confirming that the correct exception type is thrown and has sufficient context
            assertTrue(e.getMessage().contains("out of range of int"));
            assertTrue(e.getProcessor() instanceof JsonParser);
            assertTrue(e.getTargetType() == Integer.TYPE);
        } catch (Exception e) {
            fail("Unexpected exception type: " + e.getClass().getName());
        }
    }
}
