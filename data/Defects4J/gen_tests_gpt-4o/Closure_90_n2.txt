public void testThisWithTypedefWarning() {
    // Setup code as per the bug report to replicate the warning
    String jsCode = ""
        + "goog.provide('bug');\n"
        + "\n"
        + "/**\n"
        + " * @this {bug.Thing}\n"
        + " */\n"
        + "bug.sharedMethod = function() {};\n"
        + "\n"
        + "/**\n"
        + " * @constructor\n"
        + " */\n"
        + "bug.A = function() {};\n"
        + "\n"
        + "/**\n"
        + " * @constructor\n"
        + " */\n"
        + "bug.B = function() {};\n"
        + "\n"
        + "/**\n"
        + " * @type {bug.A|bug.B}\n"
        + " */\n"
        + "bug.Thing = goog.typedef;\n";

    // Assume `compile` is a method provided by the testing framework that compiles
    // the JavaScript and captures warnings, it's not a real method available in Java
    
    List<Warning> warnings = compile(jsCode);

    // Assert that the expected warning was emitted
    assertEquals(1, warnings.size());
    assertEquals("@this type of a function must be an object\n" +
                 "Actual type: (bug.A|bug.B|null)", warnings.get(0).getMessage());
}