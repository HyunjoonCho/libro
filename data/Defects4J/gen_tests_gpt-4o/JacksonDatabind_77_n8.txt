public void testJacksonDefaultTypingVulnerability() {
    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);

    String maliciousJson = "[\"org.springframework.util.LinkedMultiValueMap\", {\"rawData\":{\"class\":\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\",\"_bytecodes\":[\"<malicious_bytecode>\"]}}]";
    
    try {
        objectMapper.readValue(maliciousJson, Object.class);
        fail("Expected JsonMappingException due to security vulnerability");
    } catch (JsonMappingException e) {
        // Expected exception due to security vulnerability
    } catch (Exception e) {
        fail("Unexpected exception type: " + e.getClass().getName());
    }
}