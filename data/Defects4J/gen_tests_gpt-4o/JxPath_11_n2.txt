
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathException;
import org.apache.commons.jxpath.ri.model.dom.DOMParser;
import org.junit.Test;
import org.w3c.dom.Document;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import static org.junit.Assert.*;

public class UndefinedNamespaceTest {

    @Test
    public void testUndefinedNamespaceForAttributes() {
        String xmlContent = "<ElementA A:myAttr=\"Mytype\" xmlns:A=\"http://example.com/A\">"
                + "<B:ElementB xmlns:B=\"http://example.com/B\">MY VALUE</B:ElementB>"
                + "</ElementA>";

        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            factory.setNamespaceAware(true);
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document document = builder.parse(new java.io.ByteArrayInputStream(xmlContent.getBytes()));

            JXPathContext context = JXPathContext.newContext(document);

            // Register namespaces for elements
            context.registerNamespace("A", "http://example.com/A");
            context.registerNamespace("B", "http://example.com/B");

            // Attempt to access the attribute with prefixed namespace
            String value = (String) context.getValue("/ElementA/@A:myAttr");
            assertEquals("Mytype", value);

        } catch (JXPathException e) {
            fail("JXPathException thrown: " + e.getMessage());
        } catch (Exception e) {
            fail("Exception thrown: " + e.getMessage());
        }
    }
}
