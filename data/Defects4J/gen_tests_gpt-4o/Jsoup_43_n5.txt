public void testElementSiblingIndexBehavior() {
    String html = "<table><tr><td>Cell1</td><td>Cell2</td></tr><tr><td>Cell1</td><td>Cell2</td></tr><tr><td>Cell3</td><td>Cell4</td></tr></table>";
    Document doc = Jsoup.parse(html);
    Element row1 = doc.select("tr").get(0);
    Element row2 = doc.select("tr").get(1);
    Element row3 = doc.select("tr").get(2);

    int index1 = row1.elementSiblingIndex();
    int index2 = row2.elementSiblingIndex();
    int index3 = row3.elementSiblingIndex();

    // Check if the objects at index1 and index2 in the parent children are the same as the row elements
    assertSame(row1, row1.parent().children().get(index1));
    assertSame(row2, row2.parent().children().get(index2));
    assertSame(row3, row3.parent().children().get(index3));

    // Adding failure cases where row1 and row2 have the same structure but different sibling index
    Element retrievedRow1 = row1.parent().children().get(index1);
    Element retrievedRow2 = row2.parent().children().get(index2);

    assertTrue(retrievedRow1.equals(row1));
    assertFalse(retrievedRow1 == row2);

    assertTrue(retrievedRow2.equals(row2));
    assertFalse(retrievedRow2 == row1);
}