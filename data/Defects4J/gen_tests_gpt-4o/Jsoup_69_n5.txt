
import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.jsoup.parser.Parser;
import org.jsoup.Connection.KeyVal;
import org.jsoup.nodes.FormElement;

import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import org.junit.Test;
import static org.junit.Assert.assertFalse;

public class JsoupFormTest {

    @Test
    public void testRemoveNodeFromFormData() throws IOException {
        String html = "<html><body><form><input name='alpha' value='123'/></form></body></html>";
        Document doc = Jsoup.parse(html, "", Parser.htmlParser());

        // Prints HTML including "input[name=alpha]"
        System.out.println("Before removal: " + doc.toString());

        // Remove the input element
        Element inputElement = doc.select("input[name=alpha]").first();
        inputElement.remove();

        // Prints HTML excluding "input[name=alpha]"
        System.out.println("After removal: " + doc.toString());

        FormElement form = (FormElement) doc.select("form").first();

        // Prints HTML excluding "input[name=alpha]"
        System.out.println("Form HTML: " + form.toString());

        List<Connection.KeyVal> data = form.formData();

        // Prints a list including "alpha"
        System.out.println("Form Data before fix: " + data.toString());

        // Check that "alpha" no longer appears in the form data
        boolean containsAlpha = data.stream().anyMatch(kv -> kv.key().equals("alpha"));
        assertFalse("Form data still contains 'alpha' after removal", containsAlpha);
    }
}
