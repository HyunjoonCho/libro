
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

public class PosixParserTest {

    @Test
    public void testStopAtNonOptionWithUnrecognizedLongOption() throws ParseException {
        // Define the options
        Options options = new Options();
        options.addOption("a", false, "Option a");
        options.addOption("b", true, "Option b with argument");

        // Create the parser with the stopAtNonOption set to true
        PosixParser parser = new PosixParser();

        // Define the command line arguments
        String[] args = new String[]{"--zop", "-abfoo"};

        // Parse the command line
        CommandLine cmd = parser.parse(options, args, true);

        // Check the remaining arguments
        String[] remainingArgs = cmd.getArgs();

        // We expect the remaining args to be unchanged
        String[] expectedRemainingArgs = new String[]{"--zop", "-abfoo"};

        // Assert that the remaining arguments are as expected
        assertArrayEquals(expectedRemainingArgs, remainingArgs);
    }
}
