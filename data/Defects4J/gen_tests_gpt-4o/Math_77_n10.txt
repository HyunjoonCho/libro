
import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.OpenMapRealVector;
import org.apache.commons.math3.linear.RealVector;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class VectorNormTest {

    @Test
    public void testArrayRealVectorLInfNorm() {
        // Create an ArrayRealVector with both positive and negative elements
        double[] data = {-1.0, 3.0, -2.0, 5.0};
        RealVector vector = new ArrayRealVector(data);

        // This should return the max of abs value of entries, which is 5.0
        double expected = 5.0;
        
        // Call the current buggy implementation
        double result = vector.getLInfNorm();

        // Fails: result is accumulated wrongly because of typo in implementation
        assertEquals(expected, result, 1e-10);
    }

    @Test
    public void testOpenMapRealVectorLInfNorm() {
        // Create an OpenMapRealVector with both positive and negative elements
        double[] data = {-1.0, 3.0, -2.0, 5.0};
        RealVector vector = new OpenMapRealVector(data);

        // This should return the max of abs value of entries, which is 5.0
        double expected = 5.0;
        
        // Call the current buggy implementation
        double result = vector.getLInfNorm();

        // Fails because the implementation doesn't compute the norm correctly
        assertEquals(expected, result, 1e-10);
    }
}
