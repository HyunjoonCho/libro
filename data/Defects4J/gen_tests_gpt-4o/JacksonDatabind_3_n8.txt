
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.json.JsonMapper;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertNull;

public class StringArrayDeserializationTest {

    @Test
    public void testStringArrayDeserializationWithNull() throws Exception {
        ObjectMapper objectMapper = new JsonMapper(); // Or new ObjectMapper() if not using Jackson 2.10+
        
        // JSON representing an array with a null value
        String json = "[null, \"string\"]";
        
        // Deserializing JSON to a String array
        String[] result = objectMapper.readValue(json, String[].class);
        
        // Expected result array
        String[] expected = new String[] {null, "string"};
        
        // Assert that the deserialized array matches the expected array
        assertArrayEquals(expected, result);
        
        // Validate null array handling explicitly
        String jsonNullArray = "null";
        String[] resultNullArray = objectMapper.readValue(jsonNullArray, String[].class);
        
        // The result is expected to be null, not an empty array
        assertNull(resultNullArray);
    }
}
