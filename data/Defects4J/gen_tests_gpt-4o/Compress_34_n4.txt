
import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
import org.apache.commons.io.IOUtils;
import org.apache.tika.Tika;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import static org.junit.Assert.*;

public class ZipFileTest {
    @Test
    public void testZipWithEmptyUxExtraField() {
        try {
            // Creating an in-memory zip file with a problematic extra field
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            ZipOutputStream zos = new ZipOutputStream(baos);

            // Adding an entry to the zip file
            ZipEntry entry = new ZipEntry("image.jpg");
            entry.setExtra(new byte[]{
                    85, 84, 5, 0, 7, -112, -108, 51, // UT field
                    85, 117, 120, 0, 0 // Empty ux field
            });
            zos.putNextEntry(entry);
            zos.write("dummyimagecontent".getBytes());
            zos.closeEntry();

            zos.close();

            // Converting the ByteArrayOutputStream to a byte array
            byte[] zipData = baos.toByteArray();

            // Using Tika to detect the content type
            Tika tika = new Tika();
            String contentType = tika.detect(new ByteArrayInputStream(zipData), "TR_01.ZIP");

            // Verify that Tika's detection works without throwing an exception
            // Expected to not reach assertion if bug is present causing exception
            assertNotNull("Content type should be determined", contentType);
        } catch (IOException e) {
            fail("IOException should not occur: " + e.getMessage());
        }
    }
}
