
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class GsonNpeRegressionTest {
    
    static class CustomType {
        String value;
    }
    
    static class NullReturningTypeAdapterFactory implements TypeAdapterFactory {
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            // Return null to simulate the scenario
            return null;
        }
    }
    
    @Test
    public void testNullReturningTypeAdapterFactoryDoesNotCauseNPE() {
        Gson gson = new GsonBuilder()
            .registerTypeAdapterFactory(new NullReturningTypeAdapterFactory())
            .create();
        
        // Serialize a simple object
        CustomType customType = new CustomType();
        customType.value = "test";
        
        // This should not throw a NullPointerException
        String json = gson.toJson(customType);
        
        // Deserialize the JSON back to the object
        CustomType deserialized = gson.fromJson(json, CustomType.class);
        
        // Check if the serialization and deserialization works correctly
        assertEquals("test", deserialized.value);
    }
}
