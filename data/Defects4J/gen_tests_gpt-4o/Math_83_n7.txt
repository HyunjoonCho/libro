public void testSimplexSolver() {
    LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.8, 0.2, 0.7, 0.3, 0.6, 0.4 }, 0);
    Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
    
    constraints.add(new LinearConstraint(new double[] { 1, 0, 1, 0, 1, 0 }, Relationship.EQ, 23.0));
    constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 1, 0, 1 }, Relationship.EQ, 23.0));
    constraints.add(new LinearConstraint(new double[] { 1, 0, 0, 0, 0, 0 }, Relationship.GEQ, 10.0));
    constraints.add(new LinearConstraint(new double[] { 0, 0, 1, 0, 0, 0 }, Relationship.GEQ, 8.0));
    constraints.add(new LinearConstraint(new double[] { 0, 0, 0, 0, 1, 0 }, Relationship.GEQ, 5.0));
    
    RealPointValuePair solution = new SimplexSolver().optimize(f, constraints, GoalType.MAXIMIZE, true);
    
    double[] expectedPoint = { 10.0, 0.0, 8.0, 0.0, 5.0, 23.0 };
    double expectedValue = 25.8;
    double tolerance = 1e-6;
    
    assertEquals(expectedValue, solution.getValue(), tolerance);
    double[] point = solution.getPoint();
    for (int i = 0; i < expectedPoint.length; i++) {
        assertEquals(expectedPoint[i], point[i], tolerance);
    }
}