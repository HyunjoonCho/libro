
import static org.junit.Assert.*;
import org.junit.Test;

// Assuming existence of classes Line, Vector3D based on the bug report description.

public class LineTest {

    @Test
    public void testRevertPrecision() {
        // Create a line with some initial direction
        Vector3D initialDirection = new Vector3D(1e20, 1e20, 1e20);
        Line line = new Line(new Vector3D(0, 0, 0), initialDirection);
        
        // Revert the line's direction
        line.revert();
        
        // Get the direction after revert
        Vector3D revertedDirection = line.getDirection();

        // Expected direction after negation
        Vector3D expectedDirection = initialDirection.negate();

        // Check that the reverted direction matches the negated initial direction precisely
        assertEquals(expectedDirection.getX(), revertedDirection.getX(), 1e-12);
        assertEquals(expectedDirection.getY(), revertedDirection.getY(), 1e-12);
        assertEquals(expectedDirection.getZ(), revertedDirection.getZ(), 1e-12);
    }
}

// Sample Vector3D class with negate method
class Vector3D {
    private final double x, y, z;

    public Vector3D(double x, double y, double z) {
        this.x = x;
        this.y = y;
        this.z = z;
    }

    public double getX() { return x; }
    public double getY() { return y; }
    public double getZ() { return z; }

    public Vector3D negate() {
        return new Vector3D(-x, -y, -z);
    }
}

// Sample Line class
class Line {
    private Vector3D point;
    private Vector3D direction;

    public Line(Vector3D point, Vector3D direction) {
        this.point = point;
        this.direction = direction;
    }

    public void revert() {
        this.direction = this.direction.negate();
    }

    public Vector3D getDirection() {
        return direction;
    }
}
