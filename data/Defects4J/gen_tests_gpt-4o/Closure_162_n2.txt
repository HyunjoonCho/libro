script
goog.provide('foo.Foo');
goog.provide('foo.Foo.Bar');

goog.scope(function() {
  /**
   * @param {Foo.Bar} bar
   * @constructor
   */
  foo.Foo = function(bar) {
    this.bar = bar;
  };
  var Foo = foo.Foo;

  /** @type {Foo.Bar} */
  Foo.prototype.bar = null;

  /** @constructor */
  Foo.Bar = function() {};
});

// Test case to validate the bug
function testTypeAliasBeforeDefinition() {
  try {
    // Attempt to use the type alias before its definition
    /** @type {Foo.Bar} */
    var barInstance = new foo.Foo.Bar();
    // Create a Foo instance
    var fooInstance = new foo.Foo(barInstance);

    console.log('Test passed: ', fooInstance instanceof foo.Foo);
  } catch (error) {
    console.log('Error during test: ', error.message);
  }
}

// Execute the test
testTypeAliasBeforeDefinition();
