js
public class TestRemoveKey {

    @Test
    public void testRemoveKey() {
        // Original input code
        Map<String, String> customData = new HashMap<>();
        customData.put("key", "value");

        assertEquals("value", removeKey(customData, "key"));
        assertFalse(customData.containsKey("key"));

        // Simulated compiled behavior (incorrect)
        customData.put("key", "value");

        assertEquals(null, simulatedRemoveKey(customData, "key"));
        assertFalse(customData.containsKey("key"));
    }

    // Original function
    private String removeKey(Map<String, String> customData, String key) {
        String retval = customData.get(key);
        boolean hadKey = customData.containsKey(key);
        if (customData != null) {
            customData.remove(key);
        }
        return hadKey ? retval : null;
    }

    // Simulated compiled version that shows the bug
    private String simulatedRemoveKey(Map<String, String> customData, String key) {
        String retval = customData.get(key);
        // The "delete" operation happens before the "key in" check, simulating the compiler bug
        if (customData != null) {
            customData.remove(key);
        }
        boolean hadKey = customData.containsKey(key);
        return hadKey ? retval : null;
    }
}
