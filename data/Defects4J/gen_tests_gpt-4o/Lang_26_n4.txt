
import static org.junit.Assert.assertEquals;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;

import org.apache.commons.lang.time.FastDateFormat;
import org.junit.Test;

public class FastDateFormatWeekLocaleTest {

    @Test
    public void testFastDateFormatWeekOfYearLocaleIssue() {
        // Set the default locale to en_US
        Locale.setDefault(Locale.US);
        
        // Use a different locale for formatting (sv_SE)
        Locale locale = new Locale("sv", "SE");

        // Set the date to January 1, 2010
        Calendar cal = Calendar.getInstance();
        cal.set(2010, Calendar.JANUARY, 1, 12, 0, 0);
        cal.set(Calendar.MILLISECOND, 0);
        Date d = cal.getTime();

        // Create formatters with the same locale and pattern
        FastDateFormat fdf = FastDateFormat.getInstance("EEEE', week 'ww", locale);
        SimpleDateFormat sdf = new SimpleDateFormat("EEEE', week 'ww", locale);

        // Format the date with both formatters
        String fastDateFormatOutput = fdf.format(d);
        String simpleDateFormatOutput = sdf.format(d);

        // Compare the outputs
        System.out.println("FastDateFormat: " + fastDateFormatOutput);
        System.out.println("SimpleDateFormat: " + simpleDateFormatOutput);

        // Assert they are different to reproduce the bug
        // For sv_SE locale, January 1, 2010 should be in week 53 of the previous year
        assertEquals("SimpleDateFormat: fredag, week 53", simpleDateFormatOutput);
        assertEquals("FastDateFormat must respect the specified locale for week calculations", simpleDateFormatOutput, fastDateFormatOutput);
    }
}
