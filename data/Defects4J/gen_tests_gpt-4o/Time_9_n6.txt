
import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.junit.Test;

import static org.junit.Assert.*;

public class DateTimeZoneTest {

    @Test
    public void testMaxOffset() {
        DateTimeFormatter formatter = new DateTimeFormatterBuilder()
                .appendTimeZoneOffset(null, false, 2, 4)
                .toFormatter();

        try {
            DateTimeZone.forOffsetHoursMinutes(23, 59);
        } catch (IllegalArgumentException e) {
            fail("Parsing failed for a valid offset of 23:59.");
        }

        try {
            DateTimeZone.forOffsetHoursMinutes(23, 60);
            fail("Parsing should fail for an invalid offset of 23:60.");
        } catch (IllegalArgumentException e) {
            // Expected exception
        }

        try {
            DateTimeZone.forOffsetHoursMinutes(24, 0);
            fail("Parsing should fail for an invalid offset of 24:00.");
        } catch (IllegalArgumentException e) {
            // Expected exception
        }
    }
}
