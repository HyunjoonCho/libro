public void testTarChecksumRightAligned() throws IOException {
    byte[] header = new byte[512];
    // Fill with spaces
    Arrays.fill(header, (byte) ' ');
    // Set a filename
    System.arraycopy("testfile".getBytes(), 0, header, 0, "testfile".getBytes().length);
    // Simulate a right-aligned checksum with leading zeros
    String checksumStr = String.format("%06o", 12345);
    System.arraycopy(checksumStr.getBytes(), 0, header, 148, checksumStr.length());
    header[154] = 0; // NULL terminator

    // Assuming validateTarChecksum is a method in the TAR processing library that should be tested
    boolean isValidChecksum = validateTarChecksum(header);
    
    assertTrue("Checksum should be valid but was treated as invalid", isValidChecksum);
}

// Placeholder for the actual checksum validation from the library under test
private boolean validateTarChecksum(byte[] header) {
    // Implement the checksum calculation using only the first 6 digits for this demonstration
    int calculatedChecksum = 0;
    // Example for calculating checksum, actual logic may vary
    for (int i = 0; i < 512; i++) {
        if (i >= 148 && i < 154) { 
            calculatedChecksum += ' ';
        } else {
            calculatedChecksum += header[i];
        }
    }
    
    int storedChecksum = Integer.parseInt(new String(header, 148, 6).trim(), 8);
    return calculatedChecksum == storedChecksum;
}