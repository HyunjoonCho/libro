
import org.apache.commons.codec.binary.Base64InputStream;
import org.junit.Test;
import java.io.ByteArrayInputStream;
import java.io.IOException;

public class Base64InputStreamTest {

    @Test(expected = ArrayIndexOutOfBoundsException.class)
    public void testArrayIndexOutOfBoundsExceptionOnMultipleReads() throws IOException {
        // Create a large enough input array to trigger the error
        byte[] inputBytes = new byte[10920]; // Number of reads before the exception as given in the bug report

        // Fill the array with dummy data
        for (int i = 0; i < inputBytes.length; i++) {
            inputBytes[i] = (byte) 'a';
        }

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(inputBytes);
        
        // Create Base64InputStream for encoding mode
        Base64InputStream base64InputStream = new Base64InputStream(byteArrayInputStream, true, 0, null);

        // Read through the stream to trigger the exception
        int n = 0;
        try {
            while (base64InputStream.read() != -1) {
                n++;
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("Number of reads before exception: " + n);
            throw e; // Re-throw to satisfy the @Test(expected) condition
        }
    }
}
