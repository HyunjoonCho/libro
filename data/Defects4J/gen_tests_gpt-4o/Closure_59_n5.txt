
public class CommandLineUtilityTest {

    @Test
    public void testExcludeWarningsUsingCommandLine() {
        // Simulate running the command line utility with the flags to exclude specific warnings
        CommandLineUtility utility = new CommandLineUtility();

        String[] args = {
            "--warning_level", "VERBOSE",
            "--jscomp_off", "globalThis",
            "--jscomp_off", "nonStandardJsDocs"
        };

        utility.run(args);

        // Capture the warnings produced during the execution
        List<String> warnings = utility.getWarnings();

        // Check that the "nonStandardJsDocs" warning is ignored
        assertFalse(warnings.contains("nonStandardJsDocs"));

        // Check that the "globalThis" warning is also ignored
        assertFalse(warnings.contains("globalThis"));
    }
}

// Mock implementation of the CommandLineUtility for the sake of this test
class CommandLineUtility {
    private List<String> warnings;

    public void run(String[] args) {
        // Simulated logic of running the command line utility with args
        warnings = new ArrayList<>();
        
        // Simulate the output based on bug behavior
        warnings.add("globalThis"); // This should be excluded but it's included here due to the bug
    }

    public List<String> getWarnings() {
        return warnings;
    }
}
