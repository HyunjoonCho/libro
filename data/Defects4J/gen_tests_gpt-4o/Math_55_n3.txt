
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Vector3DTest {

    @Test
    public void testCrossProductNumericalCancellation() {
        Vector3D v1 = new Vector3D(9070467121.0, 4535233560.0, 1.0);
        Vector3D v2 = new Vector3D(9070467123.0, 4535233561.0, 1.0);
        Vector3D result = Vector3D.crossProduct(v1, v2);

        // The expected result based on the bug report
        Vector3D expected = new Vector3D(-1, 2, 1);

        // Asserting that each component matches the expected result using a small delta for floating-point comparison
        assertEquals(expected.getX(), result.getX(), 1e-9);
        assertEquals(expected.getY(), result.getY(), 1e-9);
        assertEquals(expected.getZ(), result.getZ(), 1e-9);
    }
}

class Vector3D {
    private final double x;
    private final double y;
    private final double z;

    public Vector3D(double x, double y, double z) {
        this.x = x;
        this.y = y;
        this.z = z;
    }

    public double getX() {
        return x;
    }

    public double getY() {
        return y;
    }

    public double getZ() {
        return z;
    }

    public static Vector3D crossProduct(Vector3D v1, Vector3D v2) {
        double x = v1.y * v2.z - v1.z * v2.y;
        double y = v1.z * v2.x - v1.x * v2.z;
        double z = v1.x * v2.y - v1.y * v2.x;
        return new Vector3D(x, y, z);
    }
}
