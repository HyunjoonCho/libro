public void testCMAESOptimizerWithWideBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer(10000, 0.0,
            true, 0, 0, new Random(), false, null);

    MultivariateFunction fitnessFunction = new MultivariateFunction() {
        public double value(double[] point) {
            for (double parameter : point) {
                if (Double.isNaN(parameter)) {
                    fail("CMAESOptimizer called fitness function with NaN parameter");
                }
            }
            return 0.0;
        }
    };

    double[] startPoint = {0.0, 0.0};
    double[] lowerBounds = {-Double.MAX_VALUE, -Double.MAX_VALUE};
    double[] upperBounds = {Double.MAX_VALUE, Double.MAX_VALUE};

    optimizer.optimize(new CMAESOptimizer.PopulationSize(4),
            new CMAESOptimizer.Sigma(new double[]{0.3, 0.3}),
            new MaxEval(1000),
            new ObjectiveFunction(fitnessFunction),
            new SimpleBounds(lowerBounds, upperBounds),
            GoalType.MINIMIZE,
            new InitialGuess(startPoint)
    );
}