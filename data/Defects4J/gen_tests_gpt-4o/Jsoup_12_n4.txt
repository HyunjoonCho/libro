
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;
import org.junit.Test;
import org.jsoup.select.Selector.SelectorParseException;

import static org.junit.Assert.*;

public class SelectorBugTest {

    @Test
    public void testSelectorParseExceptionWithCombinators() {
        String html = "<div><table class='x y'></table></div>";

        Document doc = Jsoup.parse(html);

        try {
            Elements elements1 = doc.select("div table[class~=x|y]");
            fail("Expected SelectorParseException not thrown for selector: div table[class~=x|y]");
        } catch (SelectorParseException expected) {
            // Expected exception
        }

        try {
            Elements elements2 = doc.select("div > table[class~=x|y]");
            fail("Expected SelectorParseException not thrown for selector: div > table[class~=x|y]");
        } catch (SelectorParseException expected) {
            // Expected exception
        }

        try {
            Elements elements3 = doc.select("div + table[class~=x|y]");
            fail("Expected SelectorParseException not thrown for selector: div + table[class~=x|y]");
        } catch (SelectorParseException expected) {
            // Expected exception
        }

        try {
            Elements elements4 = doc.select("div ~ table[class~=x|y]");
            fail("Expected SelectorParseException not thrown for selector: div ~ table[class~=x|y]");
        } catch (SelectorParseException expected) {
            // Expected exception
        }
    }

    @Test
    public void testValidSelector() {
        String html = "<div><table class='x y'></table></div>";

        Document doc = Jsoup.parse(html);

        try {
            Elements elements = doc.select("div, table[class~=x|y]");
            assertEquals(2, elements.size());
        } catch (SelectorParseException unexpected) {
            fail("SelectorParseException was thrown for a valid selector");
        }
    }
}
