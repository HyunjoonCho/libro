
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.exc.InputCoercionException;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class JsonParserTest {

    @Test
    public void testInputCoercionException() {
        String json = "2147483648"; // Value larger than Integer.MAX_VALUE

        JsonFactory factory = new JsonFactory();

        try (JsonParser parser = factory.createParser(json)) {
            if (parser.nextToken() != null) {
                // Try to read the JSON number as an integer, expecting an exception
                parser.getIntValue();
                fail("Expected InputCoercionException due to overflow");
            }
        } catch (IOException e) {
            // Verify if the exception is an instance of InputCoercionException
            assertTrue(e instanceof InputCoercionException);
            // Additional checks can be done here related to exception message and metadata
        }
    }
}
