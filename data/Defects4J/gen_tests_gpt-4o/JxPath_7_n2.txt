
import java.io.StringReader;
import javax.xml.parsers.DocumentBuilderFactory;
import org.apache.commons.jxpath.JXPathContext;
import org.junit.Test;
import org.xml.sax.InputSource;
import static org.junit.Assert.*;

// Add Apache JXPath library's dependency before running this test
public class BinaryOperatorsNodeSetTest {

    @Test
    public void testBinaryOperatorsWithNodeSets() throws Exception {
        // Prepare a simple XML document
        String xml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><doc/>";

        // Set up the JXPath context with the XML document
        JXPathContext pathContext = JXPathContext.newContext(
                DocumentBuilderFactory.newInstance()
                        .newDocumentBuilder()
                        .parse(new InputSource(new StringReader(xml)))
        );

        // Perform the test - the right operand node set is empty ("child1" does not exist)
        Boolean result = (Boolean) pathContext.getValue("2.0 > child1", Boolean.class);

        // Assert that the result should be false, but due to the bug, it's returning true.
        assertFalse("The comparison should result in FALSE since the node-set is empty.", result.booleanValue());
    }
}
