public void testMultiDirectionalCorrectStart() {
    MultiDirectionalSimplexOptimizer optimizer = new MultiDirectionalSimplexOptimizer();
    PointValuePair start = new PointValuePair(new double[]{1.0, 1.0}, 0.0); // Assuming solution is at (1.0, 1.0)
    double[] expectedSolution = {1.0, 1.0};

    ConvergenceChecker<PointValuePair> checker = new SimplePointChecker<>(1e-9, 1e-9);
    optimizer.setConvergenceChecker(checker);

    PointValuePair result = optimizer.optimize(1000, new ObjectiveFunction(x -> 0.0), 
                                               GoalType.MINIMIZE, 
                                               new InitialGuess(new double[]{1.0, 1.0}),
                                               new SimpleBounds(new double[]{0, 0}, new double[]{2.0, 2.0}));

    assertArrayEquals(expectedSolution, result.getPoint(), 1e-9);
}