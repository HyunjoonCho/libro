public void testExtraneousTypeIdMapping() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTypingAsProperty(ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE, "@type");
    
    BaseType value = new BaseTypeImpl(); // Assuming BaseTypeImpl extends BaseType
    String json = "";
    
    try {
        json = mapper.writeValueAsString(value);
    } catch (JsonProcessingException e) {
        fail("Serialization failed: " + e.getMessage());
    }
    
    assertFalse("Type id for base type should not be present if base type is not concrete or uses default name",
        json.contains("\"@type\":\"BaseType\""));
}