
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Node;
import org.jsoup.select.NodeFilter;
import org.jsoup.select.NodeTraversor;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class TextNodeSelectorTest {

    @Test
    public void testTextNodeSelector() {
        String html = "<div><p>First paragraph</p>Some text<p>Second paragraph</p></div>";
        Document doc = Jsoup.parse(html);

        // Traverse the DOM to select text nodes that are siblings of <p> elements
        List<String> textNodeContents = new ArrayList<>();
        NodeTraversor.traverse(new NodeFilter() {
            @Override
            public FilterResult head(Node node, int depth) {
                if (node.nodeName().equals("#text") && node.previousSibling() != null &&
                        node.previousSibling().nodeName().equals("p")) {
                    textNodeContents.add(node.toString().trim());
                }
                return FilterResult.CONTINUE;
            }

            @Override
            public FilterResult tail(Node node, int depth) {
                return FilterResult.CONTINUE;
            }
        }, doc);

        assertEquals(1, textNodeContents.size());
        assertEquals("Some text", textNodeContents.get(0));
    }
}
