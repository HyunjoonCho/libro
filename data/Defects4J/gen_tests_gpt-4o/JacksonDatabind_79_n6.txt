
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class TestJsonIdentityReference {

    @JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class, property = "id")
    @JsonIdentityReference(alwaysAsId = true)
    static class ReallyAlwaysAsId {
        public int id;
        public int value;

        public ReallyAlwaysAsId() { this(0); }
        public ReallyAlwaysAsId(int v) {
            this.id = v;
            this.value = v;
        }
    }

    @JsonPropertyOrder(alphabetic = true)
    static class ReallyAlwaysContainer {

        @JsonIdentityReference(alwaysAsId = true)
        public ReallyAlwaysAsId a = new ReallyAlwaysAsId(1);

        public ReallyAlwaysAsId b = new ReallyAlwaysAsId(2);
    }

    private static final ObjectMapper MAPPER = new ObjectMapper();

    @Test
    public void testReallyAlwaysAsId() throws Exception {
        String json = MAPPER.writeValueAsString(new ReallyAlwaysContainer());
        assertEquals("{\"a\":1,\"b\":2}", json);
    }
}
