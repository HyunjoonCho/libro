
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.math.BigDecimal;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.junit.Test;

public class EqualsBuilderTest {
    
    @Test
    public void testBigDecimalComparison() {
        BigDecimal decimal1 = new BigDecimal("1.0");
        BigDecimal decimal2 = new BigDecimal("1.00");
        
        // Using equals method will result in false, which exposes the bug
        assertFalse(decimal1.equals(decimal2));
        
        // Ideally, using compareTo would consider them equal
        assertTrue(decimal1.compareTo(decimal2) == 0);
        
        // Let's test this using EqualsBuilder
        boolean isEqualUsingEqualsBuilder = new EqualsBuilder()
            .append(decimal1, decimal2)
            .isEquals();
        
        // The bug is here, this will assert false due to using equals method internally
        // The assertion reproduces the bug, expected to fail
        assertTrue(isEqualUsingEqualsBuilder);
    }
}
