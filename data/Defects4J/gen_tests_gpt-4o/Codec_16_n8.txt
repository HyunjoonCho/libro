
import org.junit.Test;
import static org.junit.Assert.*;

public class Base32Test {

    @Test
    public void testHexDecodeTableIncorrectValue() {
        Base32 base32 = new Base32(true); // Assuming a constructor that takes a boolean for hex table
        String encoded = "DEADBEEF"; // Example Base32-Hex encoded string without padding
        String encodedWithPadding = encoded + "W"; // Adding 'W' as padding character

        try {
            byte[] decoded = base32.decode(encodedWithPadding);
            fail("Decoding succeeded unexpectedly with invalid padding character 'W'.");
        } catch (IllegalArgumentException e) {
            // Expected outcome: decoding should fail due to an invalid padding character
            assertTrue(e.getMessage().contains("Invalid character in Base32 encoded data"));
        }
    }
}
