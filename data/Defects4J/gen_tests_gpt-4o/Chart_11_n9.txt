@Test
public void testShapeUtilitiesEqualForDifferentPaths() {
    GeneralPath path1 = new GeneralPath();
    path1.moveTo(0.0f, 0.0f);
    path1.lineTo(1.0f, 1.0f);
    path1.closePath();

    GeneralPath path2 = new GeneralPath();
    path2.moveTo(0.0f, 0.0f);
    path2.lineTo(2.0f, 2.0f);
    path2.closePath();

    // Using the incorrect implementation, this would return true, even though the paths are different.
    boolean result = ShapeUtilities.equal(path1, path2);

    // Assert that the paths are not equal, which highlights the bug.
    assertFalse("ShapeUtilities.equal() should return false for different paths", result);
}