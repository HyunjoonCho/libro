public void testCompilerCrashOnAssignStatement() {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

    String code = "/** @constructor\n"
                + " * @param {...Object} params\n"
                + " */\n"
                + "dojox.gfx.shape.Shape = function(params) {};\n"
                + "dojox.gfx.shape.Shape = dojo.declare(\"dojox.gfx.shape.Shape\", null, /** @lends dojox.gfx.shape.Shape.prototype */ {});";

    try {
        compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test.js", code), options);
        fail("Expected RuntimeException due to INTERNAL COMPILER ERROR");
    } catch (RuntimeException e) {
        assertTrue(e.getCause() instanceof RuntimeException);
        assertTrue(e.getMessage().contains("INTERNAL COMPILER ERROR"));
    }
}