
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class BigDecimalSerializationTest {

    static class Test {
        @JsonFormat(shape = JsonFormat.Shape.STRING)
        private final BigDecimal value;

        public Test(BigDecimal value) {
            this.value = value;
        }

        public BigDecimal getValue() {
            return value;
        }
    }

    @Test
    public void testWriteBigDecimalAsPlainIgnoredWithJsonFormat() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN, true);
        
        Test test = new Test(new BigDecimal("0.0000000005"));
        
        String json = mapper.writeValueAsString(test);
        
        // Expecting the output to be in plain format within the string without scientific notation
        assertEquals("{\"value\":\"0.0000000005\"}", json, "BigDecimal as plain should be respected within JsonFormat");
    }
}
