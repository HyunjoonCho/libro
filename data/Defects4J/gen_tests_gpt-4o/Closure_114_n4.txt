public void testClosureCompilerCrash() {
    String jsCode = "var g=function(m){return m*Math.random()|0},d=document,h=d.getElementById('h'),c=d.getElementById('c'),l;" +
            "(l=function(){requestAnimationFrame(l);h.style.textShadow=\"0 0 1px #000,\"+(g(10)-5)+\"px \"+(g(10)-5)+\"px 0 #888,0 0 180px rgb(\"+g(255)+\",\"+g(255)+\",\"+g(255)+\")\"})();" +
            "d.addEventListener('mousemove',function(v){c.style.marginTop=(v.pageY/10+15|0)+'px'})";
    
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    
    SourceFile input = SourceFile.fromCode("input.js", jsCode);
    SourceFile externs = SourceFile.fromCode("externs.js", "");
    
    try {
        compiler.compile(externs, input, options);
    } catch (RuntimeException e) {
        if (e.getMessage().contains("INTERNAL COMPILER ERROR")) {
            assertTrue(e.getMessage().contains("Unexpected variable l"));
        } else {
            fail("Unexpected exception: " + e.getMessage());
        }
    }
}