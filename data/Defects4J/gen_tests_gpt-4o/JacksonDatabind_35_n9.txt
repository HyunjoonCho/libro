public void testObjectIdWithTypeIdWrapperRegression() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.addMixIn(Target.class, TargetMixin.class);

    String json = "{\"wrapper\":{\"@class\":\"SubTarget\",\"id\":1,\"name\":\"Test\"}," +
                  "\"object\":{\"@class\":\"SubTarget\",\"@id\":1,\"name':'Test\"}}";

    Wrapper wrapper = mapper.readValue(json, Wrapper.class);
    assertNotNull(wrapper);
    assertNotNull(wrapper.wrapper);
    assertTrue(wrapper.wrapper instanceof SubTarget);
    assertEquals("Test", ((SubTarget) wrapper.wrapper).name);
    assertEquals(wrapper.wrapper, wrapper.object);
}

// Sample classes to simulate the test environment
static class Wrapper {
    public Target wrapper;
    public Target object;
}
@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.WRAPPER_OBJECT)
@JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class, property = "@id")
static class Target {}

static class SubTarget extends Target {
    public String name;
}

@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.WRAPPER_OBJECT)
@JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class, property = "@id")
interface TargetMixin {}