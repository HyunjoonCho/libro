
import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormat;
import org.junit.Test;
import static org.junit.Assert.*;

public class DateTimeZoneTest {

    @Test
    public void testMaxOffsetParsing() {
        try {
            DateTimeFormatter dtf = DateTimeFormat.forPattern("ZZ");
            DateTimeZone zone = dtf.parseDateTime("+23:59:59.999").getZone();
            assertEquals(DateTimeZone.forOffsetHoursMinutes(23, 59), zone);
        } catch (IllegalArgumentException e) {
            fail("Failed to parse maximum offset: " + e.getMessage());
        }
    }

    @Test
    public void testExceedMaxOffsetParsing() {
        try {
            DateTimeFormatter dtf = DateTimeFormat.forPattern("ZZ");
            dtf.parseDateTime("+24:00");
            fail("Should have thrown an exception for offset exceeding maximum allowed");
        } catch (IllegalArgumentException e) {
            assertTrue(e.getMessage().contains("Invalid format"));
        }
    }
}
