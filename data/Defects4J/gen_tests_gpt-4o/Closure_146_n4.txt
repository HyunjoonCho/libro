public void testBadTypeInferenceNotUndefined() {
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    options.setWarningLevel(DiagnosticGroups.DETERMINISTIC_TEST, CheckLevel.ERROR);

    String jsCode = "/** @param {string} x */\n"
        + "function g(x) {}\n"
        + "/** @param {undefined} x */\n"
        + "function f(x) {\n"
        + "  if (x != undefined) { g(x); }\n"
        + "}";

    Compiler compiler = new Compiler();
    Result result = compiler.compile(ImmutableList.of(SourceFile.fromCode("externs.js", "")),
                                     ImmutableList.of(SourceFile.fromCode("input.js", jsCode)),
                                     options);

    assertFalse("Compilation should not fail", result.success);
    assertThat(result.errors).hasAtLeastOneOfType(JSErrorType.JSC_TYPE_MISMATCH);
}