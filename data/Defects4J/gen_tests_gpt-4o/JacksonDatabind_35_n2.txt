
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class JacksonBugReproductionTest {

    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.WRAPPER_OBJECT)
    @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
    public static class WrapperObject {
        public int id;
        public String name;

        public WrapperObject() {
        }

        public WrapperObject(int id, String name) {
            this.id = id;
            this.name = name;
        }
    }

    @Test
    public void testObjectIdWithTypeId() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        
        WrapperObject original = new WrapperObject(1, "Test");
        
        // Serialize the object
        String json = objectMapper.writeValueAsString(original);
        
        // Deserialize the JSON back to the object
        WrapperObject deserialized = objectMapper.readValue(json, WrapperObject.class);

        // Assert to check if deserialization gives the correct object
        assertEquals(original.id, deserialized.id);
        assertEquals(original.name, deserialized.name);
    }
}
