
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.NodeSet;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.Text;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import static org.junit.Assert.assertTrue;

public class DOMNodePointerTest {

    @Test
    public void testNodeFunctionMatchesAnyNode() throws Exception {
        // Create a simple DOM document
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document document = builder.newDocument();

        // Create different types of nodes
        Node elementNode = document.createElement("element");
        Node textNode = document.createTextNode("text");
        Node commentNode = document.createComment("comment");

        // Append nodes to the document
        document.appendChild(elementNode);
        elementNode.appendChild(textNode);
        elementNode.appendChild(commentNode);

        // Use JXPath to query with node()
        JXPathContext context = JXPathContext.newContext(document);
        
        // Normally, `node()` should match any node type
        NodeSet nodes = (NodeSet) context.getValue("//*|//comment()|//text()|/*.node()");
        
        // Check if the selection includes various node types
        boolean containsTextNode = false;
        boolean containsCommentNode = false;

        for (Pointer pointer : nodes) {
            Node node = (Node) pointer.getNode();
            if (node instanceof Text && node.getNodeValue().equals("text")) {
                containsTextNode = true;
            } else if (node.getNodeType() == Node.COMMENT_NODE && node.getNodeValue().equals("comment")) {
                containsCommentNode = true;
            }
        }

        assertTrue("node() should match text nodes", containsTextNode);
        assertTrue("node() should match comment nodes", containsCommentNode);
    }
}
