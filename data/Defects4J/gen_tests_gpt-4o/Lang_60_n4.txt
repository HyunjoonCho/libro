
import org.apache.commons.lang3.text.StrBuilder;
import org.junit.Test;
import static org.junit.Assert.*;

public class StrBuilderTest {

    @Test
    public void testReplaceAll() {
        StrBuilder sb = new StrBuilder("The quick brown fox jumps over the lazy dog.");
        sb.replaceAll("quick", "slow"); // Assuming basic replaceAll functionality
        assertEquals("The slow brown fox jumps over the lazy dog.", sb.toString());
    }

    @Test
    public void testDeleteAll() {
        StrBuilder sb = new StrBuilder("The quick brown fox jumps over the lazy dog.");
        sb.deleteAll('o'); // Deletes all occurrences of 'o'
        assertEquals("The quick brwn fx jumps ver the lazy dg.", sb.toString());
    }

    // Add a test case to explore potential issues with StrBuilder buffer management.
    @Test
    public void testLargeReplaceAll() {
        StrBuilder sb = new StrBuilder();
        for (int i = 0; i < 1000; i++) {
            sb.append("a");
        }
        sb.replaceAll("a", "b"); // Replaces all 'a's with 'b's
        for (int i = 0; i < sb.length(); i++) {
            assertEquals('b', sb.charAt(i));
        }
    }

    @Test
    public void testLargeDeleteAll() {
        StrBuilder sb = new StrBuilder();
        for (int i = 0; i < 1000; i++) {
            sb.append("xy");
        }
        sb.deleteAll('x'); // Deletes all 'x's
        for (int i = 0; i < sb.length(); i++) {
            assertNotEquals('x', sb.charAt(i));
        }
        assertEquals(1000, sb.length()); // Only 'y's should remain
    }
}
