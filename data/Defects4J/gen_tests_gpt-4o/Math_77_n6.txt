
import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.OpenMapRealVector;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class VectorNormTest {

    @Test
    public void testArrayRealVectorLInfNorm() {
        // Create a vector with negative and positive values
        double[] data = {-3.0, 4.0, -5.0, 6.0};
        ArrayRealVector vector = new ArrayRealVector(data);
        
        // Expected L_infinity norm is the maximum absolute value: 6.0
        double expectedNorm = 6.0;

        // Invoke method and check if it returns the expected value
        assertEquals(expectedNorm, vector.getLInfNorm(), 0.0);
    }
    
    @Test
    public void testOpenMapRealVectorLInfNorm() {
        // Create a vector with negative and positive values
        OpenMapRealVector vector = new OpenMapRealVector(4);
        vector.setEntry(0, -3.0);
        vector.setEntry(1, 4.0);
        vector.setEntry(2, -5.0);
        vector.setEntry(3, 6.0);

        // Expected L_infinity norm is the maximum absolute value: 6.0
        double expectedNorm = 6.0;

        // Invoke method and check if it returns the expected value
        assertEquals(expectedNorm, vector.getLInfNorm(), 0.0);
    }
}
