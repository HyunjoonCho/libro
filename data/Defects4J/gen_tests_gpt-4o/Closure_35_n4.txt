script
/**
 * @returns {{prop1: (Object|undefined), prop2: (string|undefined), prop3: (string|undefined)}} 
 */
function func(a, b) {
    var results; // Initial declaration without assignment

    if (a) {
        results = {}; // Initialize results if 'a' is true
        results.prop1 = {a: 3}; // Set prop1
    }

    if (b) {
        results = results || {}; // Initialize results if not already initialized
        results.prop2 = 'prop2'; // Set prop2
    } else {
        results = results || {}; // Initialize results if not already initialized
        results.prop3 = 'prop3'; // Set prop3
    }

    return results; // Return results
}

function testFunc() {
    // Test case where both a and b are true
    var result1 = func(true, true);
    assertNotNull(result1);
    assertEquals({a: 3}, result1.prop1);
    assertEquals("prop2", result1.prop2);
     assertUndefined(result1.prop3);

    // Test case where a is true and b is false
    var result2 = func(true, false);
    assertNotNull(result2);
    assertEquals({a: 3}, result2.prop1);
    assertUndefined(result2.prop2);
    assertEquals("prop3", result2.prop3);

    // Test case where a is false and b is true
    var result3 = func(false, true);
    assertNotNull(result3);
    assertUndefined(result3.prop1);
    assertEquals("prop2", result3.prop2);
    assertUndefined(result3.prop3);

    // Test case where both a and b are false
    var result4 = func(false, false);
    assertNotNull(result4);
    assertUndefined(result4.prop1);
    assertUndefined(result4.prop2);
    assertEquals("prop3", result4.prop3);
}

// Utility functions to mimic assertions in JS tests.
function assertNotNull(value) {
    if (value === null || value === undefined) {
        throw new Error("Expected value to be not null or undefined");
    }
}

function assertEquals(expected, actual) {
    if (JSON.stringify(expected) !== JSON.stringify(actual)) {
        throw new Error("Expected " + JSON.stringify(expected) + ", but got " + JSON.stringify(actual));
    }
}

function assertUndefined(value) {
    if (value !== undefined) {
        throw new Error("Expected value to be undefined, but got " + JSON.stringify(value));
    }
}

testFunc(); // Run the test cases
