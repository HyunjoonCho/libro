public void testCastingFunctionCallWithOptimization() {
    // This test is to simulate the issue with casting function and advanced optimizations.
    // Due to the nature of this bug report, we will simulate the function wrapping instead
    // of actual ActiveX invocation because ActiveXObject is specific to Windows and IE.

    // Simulate the behavior of the function wrapping (0, function) behavior in JavaScript
    JavaScriptEngine jsEngine = new JavaScriptEngine();
    String script =
        "'use strict';" +
        "var fakeActiveXObject = {" +
        "   GetVariable: function(param) { return 'You called GetVariable with ' + param; }" +
        "};" +
        "function testFunc() {" +
        "   var result1 = (0, fakeActiveXObject.GetVariable)('$version');" +
        "   var result2 = fakeActiveXObject.GetVariable('$version');" +
        "   return {result1: result1, result2: result2};" +
        "}" +
        "testFunc();";
    
    Map<String, Object> results = (Map<String, Object>) jsEngine.executeScript(script);

    // Asserting that wrapping the function indeed changes the behavior of this
    // simulation and we receive different results.
    assertEquals("Correct function call", "You called GetVariable with $version", results.get("result2"));
    assertNotEquals("Incorrect with function wrapping", "You called GetVariable with $version", results.get("result1"));
}