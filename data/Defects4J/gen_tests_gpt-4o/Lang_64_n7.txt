
import org.apache.commons.lang.enums.ValuedEnum;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class ValuedEnumTest {

    private static class AnimalEnum extends ValuedEnum {
        public static final AnimalEnum DOG = new AnimalEnum("Dog", 1);

        protected AnimalEnum(String name, int value) {
            super(name, value);
        }
    }

    private static class ColorEnum extends ValuedEnum {
        public static final ColorEnum RED = new ColorEnum("Red", 1);

        protected ColorEnum(String name, int value) {
            super(name, value);
        }
    }

    @Test
    public void testCompareToDifferentSubclasses() {
        AnimalEnum animal = AnimalEnum.DOG;
        ColorEnum color = ColorEnum.RED;
        
        // In a typesafe implementation, we would expect an exception or some form 
        // of handling indicating these are not comparable, but with the current implementation,
        // this will return 0 since the integer values are the same.
        int result = animal.compareTo(color);
        assertEquals("Expected compareTo to return 0 for different subclasses with same value", 0, result);
    }
}
