
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

class Base implements IFace<Sub> {
    @JsonProperty
    int base = 1;
}

class Sub extends Base {
    @JsonProperty
    int sub = 2;
}

interface IFace<T> {}

public class RecursiveTypeSerializationTest {

    @Test
    public void testSubClassSerialization() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        TypeFactory typeFactory = objectMapper.getTypeFactory();
        
        // Ensure Base type is resolved first
        typeFactory.constructType(Base.class);

        // Serialize Sub class object
        Sub sub = new Sub();
        String jsonOutput = objectMapper.writeValueAsString(sub);

        // Verify that both base and sub properties are present
        assertEquals("{\"base\":1,\"sub\":2}", jsonOutput);
    }
}
