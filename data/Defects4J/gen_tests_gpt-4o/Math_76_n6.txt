public void testNaNSingularValueFromSVD() {
    double[][] data = {
        {1.0, 2.0, 3.0},
        {2.0, 3.0, 4.0},
        {3.0, 5.0, 7.0}
    };
    RealMatrix matrix = new Array2DRowRealMatrix(data);
    SingularValueDecomposition svd = new SingularValueDecomposition(matrix);
    
    double[] singularValues = svd.getSingularValues();
    for (int i = 0; i < singularValues.length; i++) {
        assertFalse("Singular value should not be NaN", Double.isNaN(singularValues[i]));
    }
    
    // Optionally, check if the last singular value is close to zero
    assertEquals("Last singular value should be close to 0", 0.0, singularValues[singularValues.length - 1], 1e-10);
}