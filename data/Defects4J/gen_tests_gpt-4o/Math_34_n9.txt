
import org.junit.Test;
import org.apache.commons.math3.genetics.Chromosome;
import org.apache.commons.math3.genetics.ListPopulation;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class ListPopulationTest {

    @Test(expected = UnsupportedOperationException.class)
    public void testIteratorRemoveNotAllowed() {
        // Create a sample ListPopulation with a few Chromosomes
        List<Chromosome> chromosomes = new ArrayList<>();
        // Initialize Chromosomes as needed for the specific implementation
        chromosomes.add(new DummyChromosome());
        chromosomes.add(new DummyChromosome());
        
        ListPopulation population = new ListPopulation(chromosomes, chromosomes.size());

        // Obtain the iterator and attempt to remove an element
        Iterator<Chromosome> iterator = population.iterator();
        iterator.next(); // Move to first element
        iterator.remove(); // This should throw UnsupportedOperationException
    }

    // Dummy class for Chromosome to allow instantiation
    private static class DummyChromosome extends Chromosome {
        @Override
        public double fitness() {
            return 0;
        }
    }
}
