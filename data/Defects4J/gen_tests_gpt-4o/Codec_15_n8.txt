
import org.apache.commons.codec.language.Soundex;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class SoundexTest {

    @Test
    public void testSoundexHWRule() {
        Soundex soundex = new Soundex();
        
        // According to Soundex rules, the second 'B' should be encoded because
        // there is an 'H' in between that separates them.
        // Hence, the expected result should include the '1' from the second 'B'.
        // Based on the rule: "If two characters that map to the same code are separated by H or W, the second one is not encoded"
        // The rule is being misapplied if the second character is preceded by two Hs or Ws.
        // For the word "BHB", the expectation is something like "B100" (the '1' from the second 'B' should be present).
        // However, due to the bug, the output might be incorrect.
        String result = soundex.soundex("BHB");
        
        assertEquals("B100", result);
    }
}
