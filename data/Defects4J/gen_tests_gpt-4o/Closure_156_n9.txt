public void testCompilerCrashOnAssignStatement() {
    try {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
        String code = "/** @constructor\n" +
                      " * @param {...Object} params\n" +
                      " */\n" +
                      "dojox.gfx.shape.Shape = function(params) {};\n" +
                      "dojox.gfx.shape.Shape = dojo.declare(\"dojox.gfx.shape.Shape\", null, /** @lends dojox.gfx.shape.Shape.prototype */ {});\n";
        SourceFile extern = SourceFile.fromCode("externs.js", "");
        SourceFile input = SourceFile.fromCode("input.js", code);
        compiler.compile(extern, input, options);
        fail("Expected RuntimeException due to compiler crash");
    } catch (RuntimeException e) {
        assertTrue(e.getMessage().contains("INTERNAL COMPILER ERROR"));
    }
}