
import org.joda.time.DateTimeConstants;
import org.joda.time.DateTimeZone;
import org.joda.time.Duration;
import org.joda.time.Period;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DurationToPeriodTest {

    @Test
    public void testDurationToPeriodWithFixedTimeZone() {
        // Set the time zone to a fixed offset, e.g., GMT
        DateTimeZone fixedTimeZone = DateTimeZone.forID("Etc/GMT");
        DateTimeZone.setDefault(fixedTimeZone);

        // Duration of more than 24 hours
        Duration duration = new Duration(
                DateTimeConstants.MILLIS_PER_HOUR * 30 +
                DateTimeConstants.MILLIS_PER_MINUTE * 50 +
                DateTimeConstants.MILLIS_PER_SECOND * 14
        );

        // Convert to period and verify the result
        Period period = duration.toPeriod();
        assertEquals("P1DT6H50M14S", period.toString());
    }

    @Test
    public void testDurationToPeriodWithDSTTimeZone() {
        // Set the time zone to a DST zone, e.g., America/Chicago
        DateTimeZone dstTimeZone = DateTimeZone.forID("America/Chicago");
        DateTimeZone.setDefault(dstTimeZone);

        // Duration of more than 24 hours
        Duration duration = new Duration(
                DateTimeConstants.MILLIS_PER_HOUR * 30 +
                DateTimeConstants.MILLIS_PER_MINUTE * 50 +
                DateTimeConstants.MILLIS_PER_SECOND * 14
        );

        // Convert to period and verify the result
        Period period = duration.toPeriod();
        assertEquals("PT30H50M14S", period.toString());  // Expected issue: different output
    }
}
