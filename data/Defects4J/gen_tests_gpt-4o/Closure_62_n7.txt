
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class CompilerOutputCaretTest {

    @Test
    public void testCaretOutputWithLineBreak() throws IOException, InterruptedException {
        File testFile = createTestFile("alert(1;\n");
        String output = runCompiler(testFile);
        assertTrue("Expected caret indicator in error output", output.contains("^"));
        testFile.delete();
    }

    @Test
    public void testCaretOutputWithoutLineBreak() throws IOException, InterruptedException {
        File testFile = createTestFile("alert(1;");
        String output = runCompiler(testFile);
        assertTrue("Expected caret indicator missing in error output", !output.contains("^"));
        testFile.delete();
    }

    private File createTestFile(String content) throws IOException {
        File tempFile = File.createTempFile("test", ".js");
        FileWriter writer = new FileWriter(tempFile);
        writer.write(content);
        writer.close();
        return tempFile;
    }

    private String runCompiler(File file) throws IOException, InterruptedException {
        ProcessBuilder builder = new ProcessBuilder(
                "java", "-jar", "compiler.jar", "--js", file.getAbsolutePath());
        builder.redirectErrorStream(true);
        Process process = builder.start();
        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
        StringBuilder output = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) {
            output.append(line).append("\n");
        }
        process.waitFor();
        return output.toString();
    }
}
