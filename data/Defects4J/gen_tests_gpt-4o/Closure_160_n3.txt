
import org.junit.Test;
import java.io.*;

import static org.junit.Assert.*;

public class CompilerCommandLineTest {

    private static final String COMPILER_JAR = "compiler.jar"; // specify path if necessary
    private static final String TEST_JS = "test.js";
    private static final String TEST_JS_CONTENT =
            "foo = {};\n" +
            "foo.bar = function() { alert(this.baz); };";

    @Test
    public void testCheckVarsUndefinedVars() throws IOException, InterruptedException {
        // Create a temporary JavaScript file for testing
        File jsFile = new File(TEST_JS);
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(jsFile))) {
            writer.write(TEST_JS_CONTENT);
        }

        // Run the compiler with different command line arguments and capture the output
        String[] commands = new String[]{
                "--jscomp_warning checkVars",
                "--jscomp_warning undefinedVars"
        };

        for (String command : commands) {
            ProcessBuilder processBuilder = new ProcessBuilder(
                    "java", "-jar", COMPILER_JAR, "--js", TEST_JS, command);
            processBuilder.redirectErrorStream(true);

            Process process = processBuilder.start();
            String output = captureOutput(process.getInputStream());
            int exitCode = process.waitFor();

            // Assert no errors or warnings are produced
            assertTrue("Unexpected output for command: " + command + "\n" + output,
                    !output.contains("ERROR") && !output.contains("WARNING"));
            assertEquals(0, exitCode);
        }

        // Clean up temporary file
        jsFile.delete();
    }

    private String captureOutput(InputStream inputStream) throws IOException {
        StringBuilder output = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))) {
            String line;
            while ((line = reader.readLine()) != null) {
                output.append(line).append(System.lineSeparator());
            }
        }
        return output.toString();
    }

    public static void main(String[] args) throws IOException, InterruptedException {
        CompilerCommandLineTest test = new CompilerCommandLineTest();
        test.testCheckVarsUndefinedVars();
    }
}
