public void testRuntimeExceptionWithExternPrototype() {
    try {
        String externs = "function Str(key, holder, stack) {}";
        String jsCode = "(function() { console.log('Test'); })();";
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setCompilationLevel(CompilationLevel.ADVANCED_OPTIMIZATIONS);
        
        SourceFile externFile = SourceFile.fromCode("prototype.js", externs);
        SourceFile jsFile = SourceFile.fromCode("bootloader.js", jsCode);
        
        compiler.compile(externFile, jsFile, options);

        fail("Expected RuntimeException was not thrown");

    } catch (RuntimeException e) {
        String message = e.getMessage();
        assertNotNull("Expected a RuntimeException to be thrown", message);
        assertTrue("Expected message to contain 'INTERNAL COMPILER ERROR.' but was: " + message, 
                   message.contains("INTERNAL COMPILER ERROR."));
    }
}