
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class NumberUtilsTest {

    @Test
    public void testCreateNumberWithLargeFloat() {
        // This value is too large to be accurately represented as a Float
        String largeFloatStr = "3.4028235E39"; // A value larger than Float.MAX_VALUE
        Number result = NumberUtils.createNumber(largeFloatStr);
        
        // Check the type of the result
        assertTrue("Result should be a Double", result instanceof Double);
        
        // Ensure the value is parsed correctly as a Double
        assertEquals("The parsed value should match the original string as a Double",
                     Double.parseDouble(largeFloatStr), result);
    }

    @Test
    public void testCreateNumberWithPreciseDecimal() {
        // This value is precise and should ideally be a BigDecimal
        String preciseDecimalStr = "1234567890.0987654321";
        Number result = NumberUtils.createNumber(preciseDecimalStr);

        // Check the type of the result
        assertTrue("Result should be a BigDecimal", result instanceof BigDecimal);

        // Ensure the value is parsed correctly as a BigDecimal
        assertEquals("The parsed value should match the original string as a BigDecimal",
                     new BigDecimal(preciseDecimalStr), result);
    }
}
