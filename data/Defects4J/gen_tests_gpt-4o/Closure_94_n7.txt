
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertTrue;

public class ClosureCompilerTest {
    public static void main(String[] args) {
        new ClosureCompilerTest().testDefineAnnotationWithSplitString();
    }

    public void testDefineAnnotationWithSplitString() {
        String jsCode = "/** @define {string} */\n" +
                "var CONSTANT = \"some very long string name that I want to wrap \" +\n" +
                " \"and so break using a + since I don't want to \" +\n" +
                " \"introduce a newline into the string.\";";

        List<String> argList = new ArrayList<>();
        argList.add("--js");
        argList.add("input.js");
        argList.add("--js_output_file");
        argList.add("out.js");

        CompilerOptions options = new CompilerOptions();
        CommandLineRunner runner = new CommandLineRunner(argList.toArray(new String[0]), options);
        Result result = runner.doRun();

        assertTrue("Expected no errors, but got some.", result.success);
    }
}
