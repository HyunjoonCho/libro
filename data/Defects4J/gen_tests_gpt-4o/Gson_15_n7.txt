
import com.google.gson.stream.JsonWriter;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

public class JsonWriterTest {

    @Test(expected = IllegalArgumentException.class)
    public void testJsonWriterDoubleNaNStrictMode() throws IOException {
        StringWriter stringWriter = new StringWriter();
        JsonWriter jsonWriter = new JsonWriter(stringWriter);
        jsonWriter.setLenient(false);
        
        // This should throw IllegalArgumentException because NaN is not allowed in strict mode.
        jsonWriter.beginArray();
        jsonWriter.value(Double.NaN);
        jsonWriter.endArray();
    }

    @Test
    public void testJsonWriterDoubleNaNLenientMode() throws IOException {
        StringWriter stringWriter = new StringWriter();
        JsonWriter jsonWriter = new JsonWriter(stringWriter);
        jsonWriter.setLenient(true);
        
        // This should not throw an exception because lenient mode is enabled.
        jsonWriter.beginArray();
        jsonWriter.value((Number) Double.valueOf(Double.NaN));
        jsonWriter.endArray();

        // Verify that the output is as expected.
        // This will output a JSON array with a single element: NaN
        assertEquals("[NaN]", stringWriter.toString());
    }
    
    private void assertEquals(String expected, String actual) {
        if (!expected.equals(actual)) {
            throw new AssertionError("expected: \"" + expected + "\" but was: \"" + actual + "\"");
        }
    }
}
