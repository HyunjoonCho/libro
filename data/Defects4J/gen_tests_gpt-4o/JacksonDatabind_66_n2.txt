public void testCustomEnumKeyDeserializationWithTypeInfo() throws IOException {
    String jsonWithMissingTypeField = "{\"someMap\": {\"FOO\": \"bar\"}}";

    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addKeyDeserializer(SuperTypeEnum.class, new KeyDeserializer() {
        @Override
        public Object deserializeKey(String key, DeserializationContext ctxt) throws IOException {
            return SuperTypeEnum.valueOf(key);
        }
    });
    mapper.registerModule(module);

    try {
        SuperType superType = mapper.readValue(jsonWithMissingTypeField, SuperType.class);
        assertEquals("bar", superType.getSomeMap().get(SuperTypeEnum.FOO));
    } catch (Exception e) {
        fail("Deserialization should not fail for missing type info field with custom Enum Key Deserializer.");
    }
}