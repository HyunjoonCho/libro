public void testCMAESOptimizerWithWideBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer();
    MultivariateFunction fitnessFunction = new MultivariateFunction() {
        public double value(double[] point) {
            for (double p : point) {
                assertFalse("Parameter should not be NaN", Double.isNaN(p));
            }
            return 0;
        }
    };
    double[] startPoint = new double[] { 0.0, 0.0 };
    double[] lowerBounds = new double[] { -Double.MAX_VALUE, -Double.MAX_VALUE };
    double[] upperBounds = new double[] { Double.MAX_VALUE, Double.MAX_VALUE };

    try {
        optimizer.optimize(new MaxEval(1), new ObjectiveFunction(fitnessFunction), GoalType.MINIMIZE,
                new InitialGuess(startPoint), new SimpleBounds(lowerBounds, upperBounds));
        fail("Expected an exception due to wide bounds");
    } catch (Exception e) {
        // Expected behavior: check if NaN is ignored or exception is thrown
    }
}