
import org.junit.Test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import static org.junit.Assert.assertEquals;

public class CompilerOutputTest {

    private String compileUsingCommandLine(String jsCode) throws IOException, InterruptedException {
        ProcessBuilder builder = new ProcessBuilder(
                "java", "-jar", "compiler.jar", "--compilation_level", "SIMPLE_OPTIMIZATIONS", "--js_code", jsCode);
        
        Process process = builder.start();
        
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {
            StringBuilder commandLineOutput = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                commandLineOutput.append(line);
            }
            process.waitFor();
            return commandLineOutput.toString();
        }
    }

    private String compileUsingWebUI(String jsCode) {
        // Simulate the expected Web UI output as the bug report cannot be replicated online
        return "if(b){if(a=b.parentNode.parentNode,b=a.parentNode.parentNode,null!==b)";
    }

    @Test
    public void testCompilerOutputs() throws IOException, InterruptedException {
        String jsCode = "var foreignObject = gfx.parentNode.parentNode;\n" +
                        "var parentContainer = foreignObject.parentNode.parentNode;";
        
        String commandLineOutput = compileUsingCommandLine(jsCode);
        String webUiOutput = compileUsingWebUI(jsCode);
        
        assertEquals("Command line and Web UI outputs should be the same", webUiOutput, commandLineOutput);
    }
}
