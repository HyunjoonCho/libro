
import org.apache.commons.lang3.math.NumberUtils;
import org.junit.Test;
import static org.junit.Assert.*;

public class NumberUtilsTest {

    @Test
    public void testCreateNumberWithLargeFloatingPoint() {
        // A large floating-point number that exceeds the precision of a Float
        String largeFloatingPoint = "12345678901234567890.123456789";

        // Parse using NumberUtils.createNumber
        Number result = NumberUtils.createNumber(largeFloatingPoint);

        // Assert that the result is not a Float (should ideally be Double or BigDecimal)
        assertFalse("Expected a Double or BigDecimal but was a Float.", result instanceof Float);

        // Further checks to ensure the number is not truncated
        assertTrue("Expected a Double or BigDecimal.", result instanceof Double || result instanceof BigDecimal);
        assertEquals("Unexpected parse result for the large floating point number.", 
                     new BigDecimal(largeFloatingPoint), 
                     new BigDecimal(result.toString()));
    }
}
