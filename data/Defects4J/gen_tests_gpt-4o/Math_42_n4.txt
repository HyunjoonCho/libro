
import org.apache.commons.math.optimization.GoalType;
import org.apache.commons.math.optimization.linear.LinearConstraint;
import org.apache.commons.math.optimization.linear.LinearObjectiveFunction;
import org.apache.commons.math.optimization.linear.RealPointValuePair;
import org.apache.commons.math.optimization.linear.Relationship;
import org.apache.commons.math.optimization.linear.SimplexSolver;
import org.junit.Test;

import java.util.ArrayList;
import java.util.Collection;

import static org.junit.Assert.assertTrue;

public class SimplexSolverTest {

    @Test
    public void testRestrictToNonNegative() {
        // Create objective function: 1 * x + 1 * y
        LinearObjectiveFunction function = new LinearObjectiveFunction(new double[] {1, 1}, 0);

        // Create constraints: 1 * x + 0 * y = 1
        Collection<LinearConstraint> constraints = new ArrayList<>();
        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.EQ, 1));

        // Instantiate the SimplexSolver
        SimplexSolver solver = new SimplexSolver();

        // Optimize with non-negative restriction
        RealPointValuePair solution = solver.optimize(function, constraints, GoalType.MINIMIZE, true);

        // Retrieve variable values
        double x = solution.getPointRef()[0];
        double y = solution.getPointRef()[1];

        // Asserts that both variables are non-negative
        assertTrue("Variable x should be non-negative.", x >= 0);
        assertTrue("Variable y should be non-negative.", y >= 0);
    }
}
