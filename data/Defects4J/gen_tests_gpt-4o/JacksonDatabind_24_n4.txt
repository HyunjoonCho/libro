public void testObjectMapperDateFormatTimeZone() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(createJodaModule());
    mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);

    String initialTimeZone = mapper.getSerializationConfig().getTimeZone().getID();
    mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"));
    String timeZoneAfterFormatSet = mapper.getSerializationConfig().getTimeZone().getID();

    // Verify that setting DateFormat does not change the time zone from GMT/UTC
    assertEquals("GMT", initialTimeZone);
    assertEquals("GMT", timeZoneAfterFormatSet);

    DateTime dateTime = new DateTime(1988, 6, 25, 20, 30, DateTimeZone.UTC);
    String serializedDateTime = mapper.writeValueAsString(dateTime);

    // Verify the serialized DateTime string is correct (GMT/UTC)
    assertEquals("\"1988-06-25 20:30:00\"", serializedDateTime);
}

private SimpleModule createJodaModule() {
    SimpleModule module = new SimpleModule();
    module.addSerializer(DateTime.class, new DateTimeSerializer(
            new JacksonJodaDateFormat(DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss")
                    .withZoneUTC())));
    return module;
}