public void testBOBYQAOptimizerWithIncreasedInterpolationPoints() {
    int dim = 5; // Example dimension
    int numberOfInterpolationPoints = 2 * dim + 2;
    
    double[] startPoint = new double[dim];
    for (int i = 0; i < dim; i++) {
        startPoint[i] = 0.0;
    }

    MultivariateFunction func = new MultivariateFunction() {
        public double value(double[] point) {
            double sum = 0;
            for (double x : point) {
                sum += x * x;
            }
            return sum;
        }
    };
    
    SimpleBounds bounds = new SimpleBounds(new double[dim], new double[dim]);
    for (int i = 0; i < dim; i++) {
        bounds.getUpper()[i] = 1.0;
    }

    BOBYQAOptimizer optimizer = new BOBYQAOptimizer(numberOfInterpolationPoints);

    try {
        optimizer.optimize(
            new MaxEval(1000),
            new ObjectiveFunction(func),
            GoalType.MINIMIZE,
            new InitialGuess(startPoint),
            bounds
        );
        fail("Expected an exception due to the number of interpolation points exceeding the allowed limit.");
    } catch (Exception e) {
        // Test passes if an exception is thrown
        assertTrue(e instanceof MathIllegalArgumentException);
    }
}