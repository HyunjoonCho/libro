public void testDeserializationOfNestedNonWrappedListsWithEmptyInnerList() throws Exception {
    ObjectMapper mapper = new ObjectMapper();

    String json = "{ \"records\": [ { \"fields\": [] }, { \"fields\": [] } ] }";

    Definition result = mapper.readValue(json, Definition.class);

    assertNotNull(result);
    assertNotNull(result.getRecords());
    assertEquals(2, result.getRecords().size());

    for (Record record : result.getRecords()) {
        assertNotNull(record.getFields());
        assertEquals(0, record.getFields().size());
    }
}

// Assuming Definition and Record classes are defined as follows:
public static class Definition {
    private List<Record> records;

    public List<Record> getRecords() {
        return records;
    }

    public void setRecords(List<Record> records) {
        this.records = records;
    }
}

public static class Record {
    private List<Field> fields;

    public List<Field> getFields() {
        return fields;
    }

    public void setFields(List<Field> fields) {
        this.fields = fields;
    }
}

public static class Field {
    // Assuming some properties here
}