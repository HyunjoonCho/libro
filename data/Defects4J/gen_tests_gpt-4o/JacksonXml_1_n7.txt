
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class NestedListDeserializationTest {

    public static class Definition {
        @JsonUnwrapped
        @JsonProperty("records")
        public List<Record> records = new ArrayList<>();
    }

    public static class Record {
        @JsonUnwrapped
        @JsonProperty("fields")
        public List<Field> fields = new ArrayList<>();
    }

    public static class Field {
        public String name;
        public String value;
    }

    @Test
    public void testNestedNonWrappedListsWithEmptyInnerList() throws Exception {
        String json = "{\"records\":[{\"fields\":[]},{}]}"; // Inner list 'fields' is empty in the first record

        ObjectMapper objectMapper = new ObjectMapper();
        Definition definition = objectMapper.readValue(json, Definition.class);

        assertEquals(2, definition.records.size());
        assertEquals(0, definition.records.get(0).fields.size());
        assertEquals(0, definition.records.get(1).fields.size()); // Check that second record's fields are also treated correctly
    }
}
