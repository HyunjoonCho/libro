
import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class DerivativeStructureTest {

    @Test
    public void testAtan2SpecialCases() {
        double[] valuesX = {0.0, -0.0};
        double[] valuesY = {0.0, -0.0};
        
        for (double x : valuesX) {
            for (double y : valuesY) {
                DerivativeStructure dsY = new DerivativeStructure(1, 1, 0, y);
                DerivativeStructure dsX = new DerivativeStructure(1, 1, 1, x);
                
                double expected = Math.atan2(y, x);
                double actual = dsY.atan2(dsX).getValue();
                
                if (Double.isNaN(expected)) {
                    assertTrue("Expected NaN for atan2(" + y + ", " + x + ") but got " + actual, Double.isNaN(actual));
                } else {
                    assertEquals("Mismatch in atan2(" + y + ", " + x + ")", expected, actual, 1e-9);
                }
            }
        }
    }
}
