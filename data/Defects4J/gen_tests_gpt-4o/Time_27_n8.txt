
import org.joda.time.Period;
import org.joda.time.format.ISOPeriodFormat;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class PeriodFormatterTest {

    @Test
    public void testPeriodFormatterBehavior() {
        // Define a period
        Period period = new Period().withYears(1).withMonths(2).withWeeks(3).withDays(4)
                .withHours(5).withMinutes(6).withSeconds(7).withMillis(8);

        // Use ISOPeriodFormat.standard()
        PeriodFormatter pfmt1 = ISOPeriodFormat.standard();

        // Build a similar formatter manually using PeriodFormatterBuilder
        PeriodFormatter pfmt2 = new PeriodFormatterBuilder()
                .appendLiteral("P")
                .appendYears().appendSuffix("Y")
                .appendMonths().appendSuffix("M")
                .appendWeeks().appendSuffix("W")
                .appendDays().appendSuffix("D")
                .appendSeparatorIfFieldsAfter("T")
                .appendHours().appendSuffix("H")
                .appendMinutes().appendSuffix("M")
                .appendSecondsWithOptionalMillis().appendSuffix("S")
                .toFormatter();

        // Format the period using both formatters
        String formattedWithPfmt1 = pfmt1.print(period);
        String formattedWithPfmt2 = pfmt2.print(period);

        // Compare the results
        assertEquals("Formatted strings should be equivalent", formattedWithPfmt1, formattedWithPfmt2);
    }
}
