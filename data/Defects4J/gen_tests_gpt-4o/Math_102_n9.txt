
import org.apache.commons.math3.stat.inference.ChiSquareTest;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class ChiSquareTestBug107 {

    @Test
    public void testChiSquareRescaleIssue() {
        ChiSquareTest testStatistic = new ChiSquareTest();

        long[] observed1 = { 500, 623, 72, 70, 31 };
        double[] expected1 = { 485, 541, 82, 61, 37 };

        // Rescale expected values to match the sum of observed
        double totalObserved = sum(observed1);
        double totalExpected = sum(expected1);
        double scale = totalObserved / totalExpected;

        double[] rescaledExpected = new double[expected1.length];
        for (int i = 0; i < expected1.length; i++) {
            rescaledExpected[i] = expected1[i] * scale;
        }

        // Calculate chi-square statistic using rescaled expected values
        double chiSquareStat = testStatistic.chiSquare(rescaledExpected, observed1);

        // Verify the result against the correct chi-square statistic calculated with rescaled expected values
        assertEquals(9.0233, chiSquareStat, 1E-4);

        // Verify the p-value
        double pValue = testStatistic.chiSquareTest(rescaledExpected, observed1);
        assertEquals(0.06052, pValue, 1E-5);
    }

    private double sum(long[] values) {
        double sum = 0;
        for (long val : values) {
            sum += val;
        }
        return sum;
    }

    private double sum(double[] values) {
        double sum = 0;
        for (double val : values) {
            sum += val;
        }
        return sum;
    }
}
