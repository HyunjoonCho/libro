
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertTrue;

public class CharsetDetectionTest {

    @Test
    public void testRobustCharsetDetection() {
        String html = "<html lang=\"en-US\">" +
                      "<head>" +
                      "    <meta charset=\"UTF-8\">" +
                      "    <meta http-equiv=\"Content-Type\" content=\"text/html; \" />" +
                      "</head>" +
                      "</html>";

        try {
            // Parsing local HTML content to check charset handling
            Document doc = Jsoup.parse(html);
            // If parsing is successful, the document should not be null
            assertTrue(doc != null && doc.charset() != null);
        } catch (IllegalCharsetNameException ex) {
            // Test should fail if an IllegalCharsetNameException is thrown
            assertTrue("Failed due to IllegalCharsetNameException", false);
        }
    }

    @Test
    public void testWebPageParsing() {
        String[] urls = {
            "http://9kuhkep.net",
            "http://www.a-bright.org"
        };

        for (String url : urls) {
            try {
                // Attempt to connect and parse the webpage
                Document doc = Jsoup.connect(url).execute().parse();
                // If parsing is successful, the document should not be null
                assertTrue(doc != null);
            } catch (IOException e) {
                // Handle IOException or IllegalCharsetNameException if the URL fails
                assertTrue("Failed to parse URL: " + url, false);
            }
        }
    }
}
