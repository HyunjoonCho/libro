
import static org.junit.Assert.assertEquals;
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import org.junit.Test;

public class ClosureCompilerTest {

    @Test
    public void testCodepointU007fInOutput() {
        // Input JavaScript code with \x7f
        String jsCode = "alert('\\x7f');";
        
        // Expected output after compilation
        String expectedOutput = "alert(\"\\x7f\");";

        // Initialize the compiler
        Compiler compiler = new Compiler();

        // Set compiler options
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Compile the JavaScript source code
        JSSourceFile extern = JSSourceFile.fromCode("externs.js", "");
        JSSourceFile input = JSSourceFile.fromCode("input.js", jsCode);
        compiler.compile(extern, input, options);

        // Get the compiled output
        String compiledCode = compiler.toSource();

        // Assert that the compiled output matches the expected output
        assertEquals(expectedOutput, compiledCode);
    }
}
