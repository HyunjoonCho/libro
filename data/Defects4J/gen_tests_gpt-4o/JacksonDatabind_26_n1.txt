
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import org.junit.Test;

import java.io.*;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertEquals;

public class ObjectReaderSerializationTest {

    @Test
    public void testObjectReaderSerialization() throws IOException, ClassNotFoundException {
        ObjectMapper objectMapper = new ObjectMapper();
        ObjectReader objectReader = objectMapper.reader();

        // Serialize the ObjectReader
        byte[] serializedObjectReader = serialize(objectReader);

        // Deserialize the ObjectReader
        ObjectReader deserializedObjectReader = (ObjectReader) deserialize(serializedObjectReader);

        // Verify that the deserialized ObjectReader is not null
        assertNotNull(deserializedObjectReader);

        // Verify that the deserialized reader's configuration equals the original one
        assertEquals(objectReader.getFactory(), deserializedObjectReader.getFactory());
    }

    private byte[] serialize(Object obj) throws IOException {
        try (ByteArrayOutputStream byteOut = new ByteArrayOutputStream();
             ObjectOutputStream out = new ObjectOutputStream(byteOut)) {
            out.writeObject(obj);
            return byteOut.toByteArray();
        }
    }

    private Object deserialize(byte[] bytes) throws IOException, ClassNotFoundException {
        try (ByteArrayInputStream byteIn = new ByteArrayInputStream(bytes);
             ObjectInputStream in = new ObjectInputStream(byteIn)) {
            return in.readObject();
        }
    }
}
