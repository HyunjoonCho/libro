public void testIsSupportXxxInclusive() {
    RealDistribution distribution = new RealDistribution() {

        @Override
        public boolean isSupportLowerBoundInclusive() {
            double lowerBound = getSupportLowerBound();
            double density = density(lowerBound);
            return Double.isFinite(density) && !Double.isNaN(density);
        }

        @Override
        public boolean isSupportUpperBoundInclusive() {
            double upperBound = getSupportUpperBound();
            double density = density(upperBound);
            return Double.isFinite(density) && !Double.isNaN(density);
        }

        @Override
        public double density(double x) {
            // Example distribution: a simple uniform distribution between 0 and 1
            if (x >= 0 && x <= 1) {
                return 1.0;
            }
            return 0.0;
        }

        @Override
        public double cumulativeProbability(double x) {
            // Not necessary for the test
            return 0;
        }

        @Override
        public double getNumericalMean() {
            // Not necessary for the test
            return 0;
        }

        @Override
        public double getNumericalVariance() {
            // Not necessary for the test
            return 0;
        }

        @Override
        public double getSupportLowerBound() {
            return 0;
        }

        @Override
        public double getSupportUpperBound() {
            return 1;
        }

        @Override
        public boolean isSupportConnected() {
            // Not necessary for the test
            return true;
        }
    };

    assertTrue(distribution.isSupportLowerBoundInclusive());
    assertTrue(distribution.isSupportUpperBoundInclusive());
}