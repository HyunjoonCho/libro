
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.*;

public class JsonIncludeNonDefaultTest {

    @JsonInclude(JsonInclude.Include.NON_DEFAULT)
    static class TestClass {
        public String field1;
        public String field2 = "defaultValue";

        public TestClass() {
        }

        public TestClass(String field1, String field2) {
            this.field1 = field1;
            this.field2 = field2;
        }
    }
    
    @Test
    public void testJsonIncludeNonDefault() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();

        // Test where field1 is null and should not appear in the JSON
        TestClass testObject = new TestClass(null, "defaultValue");
        String jsonResult = objectMapper.writeValueAsString(testObject);

        assertFalse("JSON should not contain 'field1'", jsonResult.contains("\"field1\""));
        assertTrue("JSON should contain 'field2'", jsonResult.contains("\"field2\":\"defaultValue\""));
    }
}
