
import org.apache.commons.math3.fraction.Fraction;
import org.junit.Test;

public class FractionTest {

    @Test(timeout = 1000)  // Setting a timeout to prevent infinite loop in case of failure
    public void testReduceWithZeroNumerator() {
        Fraction fraction = new Fraction(0, 5);
        // Attempting to reduce a fraction with numerator 0 should not cause an infinite loop
        Fraction reducedFraction = fraction.reduce();
        // The reduced fraction should remain 0/1
        assertEquals(0, reducedFraction.getNumerator());
        assertEquals(1, reducedFraction.getDenominator());
    }

    private void assertEquals(int expected, int actual) {
        if (expected != actual) {
            throw new AssertionError("Expected " + expected + " but was " + actual);
        }
    }
}
