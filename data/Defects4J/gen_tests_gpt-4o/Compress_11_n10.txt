
import org.apache.commons.compress.archivers.ArchiveException;
import org.apache.commons.compress.archivers.ArchiveInputStream;
import org.apache.commons.compress.archivers.ArchiveStreamFactory;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;

import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

public class ArchiveStreamFactoryTest {

    @Test
    public void testShortTextFileNotDetectedAsTarArchive() {
        String shortText = "This is a short text file.";
        // Ensure the text is less than 100 bytes, including new lines and spaces.
        InputStream input = new ByteArrayInputStream(shortText.getBytes(StandardCharsets.UTF_8));

        try {
            ArchiveInputStream archiveInputStream = new ArchiveStreamFactory().createArchiveInputStream(input);
            fail("Expected an ArchiveException because the input should not be detected as an archive.");
        } catch (ArchiveException expected) {
            // We expect an ArchiveException here as it should not detect this text as a valid archive.
            assertNull("The text is wrongly detected as an archive", expected.getMessage());
        } catch (Exception ex) {
            fail("Expected an ArchiveException: " + ex.getMessage());
        }
    }
}
