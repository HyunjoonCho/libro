public void testBOBYQAOptimizerInterpolationPointsError() {
    int dim = 3;
    double[] startPoint = new double[dim];
    GoalType goal = GoalType.MINIMIZE;
    int maxEvaluations = 1000;
    MultivariateFunction func = new MultivariateFunction() {
        @Override
        public double value(double[] point) {
            return point[0] * point[0] + point[1] * point[1] + point[2] * point[2];
        }
    };
    
    BOBYQAOptimizer optim = new BOBYQAOptimizer(2 * dim + 2);
    try {
        optim.optimize(maxEvaluations, func, goal, new InitialGuess(startPoint),
                       new SimpleBounds(new double[] {-1, -1, -1}, new double[] {1, 1, 1}));
        fail("Expecting an exception when number of interpolation points is greater than 2 * dim + 1");
    } catch (Exception e) {
        // Expected result, handle exception if necessary
    }
}