
import org.apache.commons.cli.*;
import org.junit.Test;

import static org.junit.Assert.*;

public class PosixParserBugTest {

    @Test
    public void testUnrecognizedOptionWithStopAtNonOptionEnabled() {
        // Define the option 'a'
        Options options = new Options();
        options.addOption("a", false, "Option A");

        // Command line arguments with an unrecognized option 'z'
        String[] args = {"-z", "-a", "foo"};

        // Instantiate the PosixParser
        CommandLineParser parser = new PosixParser();

        CommandLine cmd = null;
        try {
            // Parse the command line arguments with stopAtNonOption enabled
            cmd = parser.parse(options, args, true);
        } catch (ParseException e) {
            fail("ParseException should not occur");
        }

        // Check if unrecognized option '-z' is ignored
        assertFalse("Unrecognized option '-z' should not be present", cmd.hasOption("z"));

        // Validate that recognized option 'a' is correctly parsed
        assertTrue("Option 'a' should be present", cmd.hasOption("a"));

        // Validate the remaining arguments
        String[] remainingArgs = cmd.getArgs();
        assertArrayEquals("Remaining arguments should match", new String[]{"foo"}, remainingArgs);
    }
}
