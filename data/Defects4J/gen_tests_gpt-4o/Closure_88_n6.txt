script
function testClosureCompilerIncorrectAssignmentRemoval() {
    function originalFunction(someNode) {
        var nodeId;
        return ((nodeId = someNode.id) && (nodeId = parseInt(nodeId.substr(1))) && nodeId > 0);
    }

    // Simulating the "compiled" version with the bug
    function compiledFunction(b) {
        var a;
        return b.id && (a = parseInt(a.substr(1))) && a > 0;
    }

    // Test node, assuming an id of format 's1' which should result in nodeId = 1
    const testNode = { id: 's1' };

    // Expected original behavior
    const expected = originalFunction(testNode);

    // Actual result from compiled function
    const actual = compiledFunction(testNode);

    // Assert the behavior is as expected
    console.assert(
        actual === expected,
        `Test failed: expected ${expected} but got ${actual}`
    );
}

// Run the test
testClosureCompilerIncorrectAssignmentRemoval();
