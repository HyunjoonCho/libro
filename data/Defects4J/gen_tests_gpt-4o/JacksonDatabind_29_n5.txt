
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeInfo.As;
import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidTypeIdException;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class ExternalTypeIdTest {

    @Test
    public void testHandleNullTypeIdWithExternalId() {
        String json = "{\"value\":\"test\", \"typeId\":null}";

        ObjectMapper mapper = new ObjectMapper();

        // Expecting an exception or default handling due to null type id
        assertThrows(InvalidTypeIdException.class, () -> {
            mapper.readValue(json, Wrapper.class);
        });
    }

    @JsonTypeInfo(use = Id.NAME, include = As.EXTERNAL_PROPERTY, property = "typeId", defaultImpl = DefaultSubType.class)
    public static class BaseType {
    }

    public static class SubTypeA extends BaseType {
        public String value;
    }

    public static class SubTypeB extends BaseType {
        public String value;
    }

    public static class DefaultSubType extends BaseType {
        public String value;
    }

    public static class Wrapper {
        public BaseType value;
        public String typeId;
    }
}
