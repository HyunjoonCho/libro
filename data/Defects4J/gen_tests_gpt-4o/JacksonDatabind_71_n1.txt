
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class CharSequenceKeyDeserializerTest {

    @Test
    public void testCharSequenceKeyDeserialization() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();

        // Optionally register a custom module if a custom deserializer is available
        // SimpleModule module = new SimpleModule();
        // module.addKeyDeserializer(CharSequence.class, new CharSequenceKeyDeserializer());
        // objectMapper.registerModule(module);

        Map<CharSequence, String> originalMap = new HashMap<>();
        originalMap.put("key1", "value1");
        originalMap.put("key2", "value2");

        // Serialize the map
        String json = objectMapper.writeValueAsString(originalMap);

        // Try to deserialize the map
        Map<CharSequence, String> deserializedMap = objectMapper.readValue(
                json,
                objectMapper.getTypeFactory().constructMapType(Map.class, CharSequence.class, String.class)
        );

        // This assertion might fail due to missing KeyDeserializer
        assertEquals(originalMap, deserializedMap);
    }
}
