
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipFile;
import org.apache.commons.io.IOUtils;
import org.junit.Test;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

public class WinZipUnicodeExtraFieldsTest {

    @Test
    public void testReadWinZipArchiveWithUnicodeExtraFields() throws IOException {
        // Hypothetical path to a zip file generated with WinZip having Unicode extra fields
        File zipFileWithUnicodeFields = new File("path/to/your/winzip-with-unicode.zip");

        try (ZipFile zipFile = new ZipFile(zipFileWithUnicodeFields)) {
            Enumeration<ZipArchiveEntry> entries = zipFile.getEntries();

            assertTrue("No entries found in the zip file.", entries.hasMoreElements());

            // Iterate through entries and attempt to read their input streams
            while (entries.hasMoreElements()) {
                ZipArchiveEntry entry = entries.nextElement();
                try (InputStream is = zipFile.getInputStream(entry)) {
                    assertNotNull("InputStream should not be null for entry: " + entry.getName(), is);

                    // Read the content of the entry to ensure it's accessible
                    byte[] content = IOUtils.toByteArray(is);
                    assertTrue("Content should not be empty for entry: " + entry.getName(), content.length > 0);
                }
            }
        }
    }
}
