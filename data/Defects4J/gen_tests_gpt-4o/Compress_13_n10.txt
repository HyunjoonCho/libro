
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.ArchiveInputStream;
import org.apache.commons.compress.archivers.ArchiveStreamFactory;
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.nio.charset.StandardCharsets;

import static org.junit.Assert.assertTrue;

public class UmlautDirectoryZipTest {

    @Test
    public void testWinZipUmlautDirectory() throws Exception {
        // Path to your WinZip-created test ZIP file with the umlaut directory
        File zipFile = new File("path/to/your/testfile.zip");

        try (FileInputStream fis = new FileInputStream(zipFile);
             ArchiveInputStream ais = new ArchiveStreamFactory()
                     .createArchiveInputStream(ArchiveStreamFactory.ZIP, fis)) {

            ArchiveEntry entry;
            boolean foundUmlautDirectory = false;

            while ((entry = ais.getNextEntry()) != null) {
                if (entry.getName().contains("Ã¤")) { // Look for directory and files with umlaut
                    foundUmlautDirectory = true;

                    if (entry instanceof ZipArchiveEntry) {
                        ZipArchiveEntry zipEntry = (ZipArchiveEntry) entry;

                        // Check if it's marked as a directory
                        boolean isDirectory = zipEntry.isDirectory();
                        assertTrue("Umlaut directory should be marked as a directory", isDirectory);

                        // Ensure paths use slashes
                        assertTrue("Umlaut directory should use slashes instead of backslashes",
                                !zipEntry.getName().contains("\\"));
                    }
                }
            }

            // Ensure that we have actually checked an entry
            assertTrue("Did not find any directory with an umlaut", foundUmlautDirectory);
        }
    }
}
