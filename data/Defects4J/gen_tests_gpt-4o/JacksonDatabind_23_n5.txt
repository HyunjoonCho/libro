public void testNonEmptyExclusionWithAfterburner() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);
    mapper.registerModule(new AfterburnerModule());

    TestClass testObject = new TestClass();
    
    String json = mapper.writeValueAsString(testObject);
    
    assertFalse(json.contains("stringField"));
    assertFalse(json.contains("intField"));
    assertFalse(json.contains("defaultString"));
}

static class TestClass {
    private String stringField = "";
    private int intField = 0;
    private String defaultString = "default";

    public String getStringField() {
        return stringField;
    }

    public int getIntField() {
        return intField;
    }

    public String getDefaultString() {
        return defaultString;
    }
}