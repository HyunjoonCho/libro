public void testArDeletion() throws Exception {
    // Setup: Create a test archive with two files
    File archiveFile = new File("/tmp/testArchive.ar");
    try (OutputStream fos = new FileOutputStream(archiveFile);
         ArArchiveOutputStream arOut = new ArArchiveOutputStream(fos)) {
         
        // Add test1.xml
        arOut.putArchiveEntry(new ArArchiveEntry("test1.xml", 100));
        arOut.write(new byte[100]);
        arOut.closeArchiveEntry();

        // Add test2.xml
        arOut.putArchiveEntry(new ArArchiveEntry("test2.xml", 100));
        arOut.write(new byte[100]);
        arOut.closeArchiveEntry();
    }

    // Test: Delete test2.xml from the archive
    try (ArArchiveOutputStream arOut = new ArArchiveOutputStream(new FileOutputStream(archiveFile, true))) {
        // Simulate deletion (actual deletion logic should be implemented here)
        // This may involve reading existing content and omitting the file to be deleted
    }

    // Verify: The ar command-line tool still shows test2.xml but API does not
    ProcessBuilder builder = new ProcessBuilder("ar", "-t", archiveFile.getAbsolutePath());
    Process process = builder.start();
    BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
    List<String> filesInArchive = reader.lines().collect(Collectors.toList());
    process.waitFor();

    assertTrue(filesInArchive.contains("test1.xml"));
    assertFalse(filesInArchive.contains("test2.xml"));

    // This check simulates the API call the user mentioned
    try (ArArchiveInputStream arIn = new ArArchiveInputStream(new FileInputStream(archiveFile))) {
        ArArchiveEntry entry;
        boolean foundTest1 = false;
        boolean foundTest2 = false;
        while ((entry = arIn.getNextEntry()) != null) {
            if ("test1.xml".equals(entry.getName())) {
                foundTest1 = true;
            } else if ("test2.xml".equals(entry.getName())) {
                foundTest2 = true;
            }
        }
        assertTrue(foundTest1);
        assertFalse(foundTest2);
    }
}