public void testAnonymousObjectTypeInference() {
    try {
        // First function call should be valid
        Record r1 = new Record("a", null);
        func(r1);
        
        // Second function call should also be valid but is causing an error
        Record r2 = new Record("a", null);
        func2(r2);
        
    } catch (Exception e) {
        fail("Exception should not have been thrown: " + e.getMessage());
    }
}

class Record {
    String prop;
    String prop2;

    Record(String prop, String prop2) {
        this.prop = prop;
        this.prop2 = prop2;
    }

    @Override
    public String toString() {
        return "Record{" +
                "prop='" + prop + '\'' +
                ", prop2='" + prop2 + '\'' +
                '}';
    }
}

public void func(Record record) {
    System.out.println(record.prop);
}

public void func2(Object record) {
    if (record instanceof String) {
        System.out.println(record);
    } else if (record instanceof Record) {
        System.out.println(((Record) record).prop);
    } else {
        fail("Unexpected type: " + record.getClass().getName());
    }
}