
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class TypeInferenceTest {

    /** 
     * @param record 
     * An object with properties 'prop' and an optional 'prop2', both being strings.
     */
    private void func(Object record) {
        if (record instanceof Record) {
            System.out.println(((Record) record).prop);
        } else {
            throw new IllegalArgumentException("Argument must be a Record.");
        }
    }

    /** 
     * @param record 
     * Either a string or an object with properties 'prop' and an optional 'prop2', both being strings.
     */
    private void func2(Object record) {
        if (record instanceof String) {
            System.out.println(record);
        } else if (record instanceof Record) {
            System.out.println(((Record) record).prop);
        } else {
            throw new IllegalArgumentException("Argument must be a String or a Record.");
        }
    }

    private static class Record {
        String prop;
        String prop2; // can also be null to represent undefined

        public Record(String prop) {
            this.prop = prop;
        }

        public Record(String prop, String prop2) {
            this.prop = prop;
            this.prop2 = prop2;
        }
    }

    @Test
    public void testTypeInference() {
        // Expecting no exceptions and printed output 'a'
        func(new Record("a"));
        func2(new Record("a"));
    }
}
