public void testOverflowInBitInputStream() {
    ByteArrayInputStream in = new ByteArrayInputStream(new byte[] {87, 45, 66, 15, 90, 29, 88, 61, 33, 74});
    BitInputStream bin = new BitInputStream(in, ByteOrder.LITTLE_ENDIAN);

    try {
        long firstRead = bin.readBits(5);
        long overflowRead = bin.readBits(63);
        long subsequentRead = bin.readBits(12);

        // Check for unexpected values due to overflow
        // The expected correct behaviors should be validated against the specification or fixed implementation
        assertEquals("Unexpected value due to overflow", expectedFirstRead, firstRead);
        assertNotEquals("Overflow leads to incorrect subsequent read", expectedSubsequentRead, subsequentRead);
    } catch (Exception e) {
        fail("Exception should not have occurred");
    }
}