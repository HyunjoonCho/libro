
import org.apache.commons.compress.archivers.ArchiveOutputStream;
import org.apache.commons.compress.archivers.ArchiveStreamFactory;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;

import static org.junit.jupiter.api.Assertions.assertTrue;

public class TarArchiveOutputStreamBugTest {

    @Test
    public void testGetBytesWrittenReturnsCorrectValue() throws Exception {
        String sourceFilePath = "path/to/your/source/file.txt"; // Update with your test file path
        String tarFilePath = "path/to/your/output/tartest.tar"; // Update with your tar file path

        FileOutputStream fos = new FileOutputStream(tarFilePath);

        ArchiveOutputStream archiveOutputStream = new ArchiveStreamFactory()
                .createArchiveOutputStream(ArchiveStreamFactory.TAR, fos);

        File sourceFile = new File(sourceFilePath);
        TarArchiveEntry entry = new TarArchiveEntry(sourceFile);
        entry.setSize(sourceFile.length());
        archiveOutputStream.putArchiveEntry(entry);

        FileInputStream fis = new FileInputStream(sourceFile);
        byte[] buffer = new byte[8192];

        int bytesRead;
        while ((bytesRead = fis.read(buffer)) > 0) {
            archiveOutputStream.write(buffer, 0, bytesRead);
        }

        fis.close();
        archiveOutputStream.closeArchiveEntry();

        // Check bytes written before closing the stream
        long bytesWrittenBeforeClose = ((TarArchiveOutputStream) archiveOutputStream).getBytesWritten();
        assertTrue(bytesWrittenBeforeClose > 0, "Bytes written before closing should be greater than zero.");

        archiveOutputStream.close();

        // Check bytes written after closing the stream
        long bytesWrittenAfterClose = ((TarArchiveOutputStream) archiveOutputStream).getBytesWritten();
        assertTrue(bytesWrittenAfterClose > 0, "Bytes written after closing should be greater than zero.");

        fos.close();
    }
}
