
import org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry;
import org.apache.commons.compress.archivers.sevenz.SevenZFile;
import org.junit.Test;

import java.io.File;
import java.io.IOException;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class SevenZFileTest {

    @Test
    public void testReadEmptySevenZArchiveEntry() {
        File file = new File("path/to/your/testfile.7z"); // Replace with the path to your test 7z file

        try (SevenZFile sevenZFile = new SevenZFile(file)) {
            SevenZArchiveEntry entry = sevenZFile.getNextEntry();
            if (entry != null) {
                // Assuming the first entry is empty for this test
                assertEquals(0, entry.getSize());

                byte[] buffer = new byte[1024];
                int bytesRead = sevenZFile.read(buffer);

                // Expecting -1 since the entry is empty
                assertEquals(-1, bytesRead);
            } else {
                fail("No entry found in 7z file.");
            }
        } catch (IOException e) {
            fail("IOException occurred: " + e.getMessage());
        } catch (IllegalStateException e) {
            fail("IllegalStateException occurred: " + e.getMessage());
        }
    }
}
