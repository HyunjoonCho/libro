
import org.apache.commons.text.ExtendedMessageFormat;

import java.text.Format;
import java.util.HashMap;
import java.util.Map;

public class ExtendedMessageFormatTest {

    private static Map<String, Format> formatRegistry = new HashMap<>();

    static {
        formatRegistry.put(DummyFormatFactory.DUMMY_FORMAT, new DummyFormatFactory());
    }

    public static void main(String[] args) {
        try {
            // This construction should cause an OutOfMemoryError due to the bug
            ExtendedMessageFormat mf = new ExtendedMessageFormat("it''s a {dummy} 'test'!", formatRegistry);
            String formattedPattern = mf.format(new String[] { "great" });
            System.out.println(formattedPattern);
        } catch (OutOfMemoryError e) {
            System.err.println("OutOfMemoryError occurred due to a bug in ExtendedMessageFormat handling of single quotes.");
        }
    }

    // DummyFormatFactory that mimics the behavior described, providing a simple placeholder Format
    public static class DummyFormatFactory extends Format {
        public static final String DUMMY_FORMAT = "dummy";
        
        @Override
        public StringBuffer format(Object obj, StringBuffer toAppendTo, java.text.FieldPosition pos) {
            return toAppendTo.append(obj.toString());
        }

        @Override
        public Object parseObject(String source, java.text.ParsePosition pos) {
            return source;
        }
    }
}
