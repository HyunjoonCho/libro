
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class SimpleTypeConstructTest {

    static class Sample {
        public int value;
    }

    @Test
    public void testSimpleTypeConstruct() throws Exception {
        // Creating a SimpleType using the deprecated construct() method
        JavaType type = SimpleType.construct(Sample.class);
        
        // Creating ObjectMapper
        ObjectMapper mapper = new ObjectMapper();
        
        // Serialize the object
        Sample sample = new Sample();
        sample.value = 42;
        String json = mapper.writeValueAsString(sample);

        // Deserialize the object using the deprecated type
        Sample deserialized = (Sample) mapper.readValue(json, type);

        // Check that the value was correctly serialized/deserialized
        assertEquals(42, deserialized.value);
    }
}
