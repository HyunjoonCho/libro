public void testPrivatePropertyRedeclarationWarning() {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticGroups.VISIBILITY, CheckLevel.ERROR);
    String code = ""
        + "/** @constructor */ function Foo() { /** @private */ this.x_ = 3; }\n"
        + "/** @constructor \n"
        + " * @extends {Foo} */ \n"
        + "function SubFoo() { /** @private */ this.x_ = 3; }\n";

    JSSourceFile extern = JSSourceFile.fromCode("externs", "");
    JSSourceFile input = JSSourceFile.fromCode("testcode", code);
    
    Result result = compiler.compile(extern, input, options);
    
    assertTrue(result.errors.length > 0);
    assertEquals("Visibility error expected", DiagnosticGroups.VISIBILITY.name, result.errors[0].getType().key);
}