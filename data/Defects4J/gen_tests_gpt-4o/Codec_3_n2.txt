
import org.apache.commons.codec.language.DoubleMetaphone;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DoubleMetaphoneTest {

    private DoubleMetaphone metaphone;

    @Before
    public void setUp() {
        metaphone = new DoubleMetaphone();
    }

    @Test
    public void testHandleGMethod_ErrorWithGAndIER() {
        // Bug 1: Test cases for 'G' followed by 'IER'
        assertEquals("ANJR", metaphone.doubleMetaphone("Angier", true));
        assertEquals("RJR", metaphone.doubleMetaphone("rogier", true));
    }

    @Test
    public void testHandleLMethod_L_InAlternativeEncoding() {
        // Bug 2: Test case for improper 'L' handling
        assertEquals("KPR", metaphone.doubleMetaphone("cabrillo", true));
    }

    @Test
    public void testConditionL0_BugWithASandOSAtEnd() {
        // Bug 3: Test case for words ending with 'AS' or 'OS'
        assertEquals("KKS", metaphone.doubleMetaphone("gallegos", true));
    }
}
