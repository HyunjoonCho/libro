
import org.apache.commons.lang3.SerializationUtils;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

// Serializable wrapper class that contains a reference to a primitive class
import java.io.Serializable;

public class SerializationUtilsPrimitiveClassTest {

    @Test
    public void testPrimitiveTypeClassSerialization() {
        // Wrapper class instance that holds a reference to int.class
        PrimitiveClassWrapper original = new PrimitiveClassWrapper(int.class);

        // Clone the object using SerializationUtils
        PrimitiveClassWrapper cloned = SerializationUtils.clone(original);

        // Verify that the cloned object contains the identical reference
        assertEquals(original.getPrimitiveClass(), cloned.getPrimitiveClass());
    }

    static class PrimitiveClassWrapper implements Serializable {
        private static final long serialVersionUID = 1L;
        private final Class<?> primitiveClass;

        public PrimitiveClassWrapper(Class<?> primitiveClass) {
            this.primitiveClass = primitiveClass;
        }

        public Class<?> getPrimitiveClass() {
            return primitiveClass;
        }
    }
}
