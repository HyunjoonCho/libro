
package TestBed;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;
import org.junit.Test;

import static org.junit.Assert.assertNotNull;

/**
 * Unit test for tar.gz files with null or empty usernames and group names.
 */
public class AppTest {

    @Test
    public void extractNoFileOwner() {
        TarArchiveInputStream tarInputStream = null;

        try {
            // Adjust the file path to the location of your test tar.gz file
            tarInputStream = new TarArchiveInputStream(
                    new GzipCompressorInputStream(
                            new FileInputStream(new File("path/to/redis-dist-2.8.3_1-linux.tar.gz"))));

            TarArchiveEntry entry;
            while ((entry = tarInputStream.getNextTarEntry()) != null) {
                // Print entry name
                System.out.println("Entry Name: " + entry.getName());

                // Print username/groupname
                String userName = entry.getUserName();
                String groupName = entry.getGroupName();
                System.out.println("User/Group: " 
                                   + (userName != null ? userName : "null") + "/" 
                                   + (groupName != null ? groupName : "null"));

                // Verify that username and groupName do not cause Illegal Argument Exception
                assertNotNull("Entry's username should be allowed to be null", userName);
                assertNotNull("Entry's group name should be allowed to be null", groupName);
            }

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (tarInputStream != null) {
                    tarInputStream.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
