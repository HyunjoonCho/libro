
import org.apache.commons.lang3.time.FastDateFormat;
import org.junit.Test;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Locale;

import static org.junit.Assert.assertEquals;

public class FastDateFormatTest {

    @Test
    public void testYearPatternFormat() {
        Calendar calendar = new GregorianCalendar(2003, Calendar.JANUARY, 1);

        // Using SimpleDateFormat
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("Y", Locale.US);
        String simpleDateFormatResult = simpleDateFormat.format(calendar.getTime());
        
        // Expected result according to Java 7 and later behavior
        String expected = "2003";
        assertEquals("SimpleDateFormat with 'Y'", expected, simpleDateFormatResult);

        // Using FastDateFormat
        FastDateFormat fastDateFormat = FastDateFormat.getInstance("Y", Locale.US);
        String fastDateFormatResult = fastDateFormat.format(calendar.getTime());

        // Test if FastDateFormat behaves similarly to SimpleDateFormat as per the JDK behavior change
        assertEquals("FastDateFormat with 'Y'", simpleDateFormatResult, fastDateFormatResult);

        // Repeat the test with "YYY" pattern
        simpleDateFormat = new SimpleDateFormat("YYY", Locale.US);
        simpleDateFormatResult = simpleDateFormat.format(calendar.getTime());

        fastDateFormat = FastDateFormat.getInstance("YYY", Locale.US);
        fastDateFormatResult = fastDateFormat.format(calendar.getTime());

        // Test if FastDateFormat behaves similarly for "YYY"
        assertEquals("FastDateFormat with 'YYY'", simpleDateFormatResult, fastDateFormatResult);
    }
}
