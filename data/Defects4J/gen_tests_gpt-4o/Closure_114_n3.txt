public void testClosureCompilerCrash() {
    String sourceCode = "var g=function(m){return m*Math.random()|0},d=document,h=d.getElementById('h'),c=d.getElementById('c'),l; "
                      + "(l=function(){requestAnimationFrame(l);h.style.textShadow=\"0 0 1px #000,\"+(g(10)-5)+\"px \"+(g(10)-5)+\"px 0 #888,0 0 180px rgb(\"+g(255)+\",\"+g(255)+\",\"+g(255)+\")\"})(); "
                      + "d.addEventListener('mousemove',function(v){c.style.marginTop=(v.pageY/10+15|0)+'px'});";
    
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    
    Compiler compiler = new Compiler();
    SourceFile extern = SourceFile.fromCode("externs.js", "");
    SourceFile input = SourceFile.fromCode("input.js", sourceCode);
    
    try {
        compiler.compile(extern, input, options);
        fail("Expected a RuntimeException due to the unexpected variable error.");
    } catch (RuntimeException e) {
        assertTrue(e.getMessage().contains("INTERNAL COMPILER ERROR."));
    }
}