
import org.apache.commons.math3.fitting.PolynomialCurveFitter;
import org.apache.commons.math3.fitting.WeightedObservedPoints;
import org.junit.Test;

public class OptimizerMemoryTest {

    @Test
    public void testLargeWeightArray() {
        WeightedObservedPoints obs = new WeightedObservedPoints();

        // Add 41200 points with weights
        for (int i = 0; i < 41200; i++) {
            obs.add(1.0, i, Math.sin(i));  // Adding some example function values
        }

        // Configure a polynomial curve fitter
        PolynomialCurveFitter fitter = PolynomialCurveFitter.create(2);  // Using a low-degree polynomial for simplicity

        try {
            // Attempt to fit the curve
            fitter.fit(obs.toList());
            fail("Expected an OutOfMemoryError due to large weight matrix creation.");
        } catch (OutOfMemoryError e) {
            System.out.println("OutOfMemoryError caught as expected: " + e.getMessage());
        }
    }
}
