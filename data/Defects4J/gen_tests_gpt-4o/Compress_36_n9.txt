
import org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry;
import org.apache.commons.compress.archivers.sevenz.SevenZFile;
import org.junit.Test;

import java.io.File;
import java.io.IOException;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

public class SevenZFileTest {

    @Test
    public void testEmptySevenZArchiveEntryRead() {
        File sevenZFile = new File("path/to/your/test.7z");

        try (SevenZFile sevenZ = new SevenZFile(sevenZFile)) {
            SevenZArchiveEntry entry;

            while ((entry = sevenZ.getNextEntry()) != null) {
                assertNotNull(entry);

                // Simulate an empty entry read attempt
                if (entry.getSize() == 0) {
                    try {
                        int bytesRead = sevenZ.read();
                        fail("Expected an IllegalStateException, but read() returned " + bytesRead);
                    } catch (IllegalStateException e) {
                        // Expected exception
                    }
                }
            }
        } catch (IOException e) {
            fail("Unexpected IOException: " + e.getMessage());
        }
    }
}
