
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertNotNull;

public class ObjectIdDeserializationTest {

    @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
    public static class EntityWithId {
        public Integer id;
        public String name;
    }

    @Test
    public void testDeserializationWithNullObjectId() throws Exception {
        String jsonWithNullId = "{\"name\":\"Test Entity\"}";

        ObjectMapper mapper = new ObjectMapper();
        // Enable feature that might allow null Object Ids
        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

        // Attempt to deserialize JSON without an 'id' field
        EntityWithId entity = mapper.readValue(jsonWithNullId, EntityWithId.class);

        // Verify the object is created and no exception is thrown
        assertNotNull(entity);
        // Optionally, further checks can be added
    }
}
