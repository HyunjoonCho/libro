public void testAssignmentInConditionalCausesTypeError() {
    Object resultWhenAIsTrueAndBIsTrue = func(true, true);
    assertNotNull(resultWhenAIsTrueAndBIsTrue);
    assertTrue(resultWhenAIsTrueAndBIsTrue instanceof Map);
    assertEquals(3, ((Map) resultWhenAIsTrueAndBIsTrue).get("prop1") != null ? ((Map) resultWhenAIsTrueAndBIsTrue).get("prop1").a : null);
    assertEquals("prop2", ((Map) resultWhenAIsTrueAndBIsTrue).get("prop2"));

    Object resultWhenAIsTrueAndBIsFalse = func(true, false);
    assertNotNull(resultWhenAIsTrueAndBIsFalse);
    assertTrue(resultWhenAIsTrueAndBIsFalse instanceof Map);
    assertEquals(3, ((Map) resultWhenAIsTrueAndBIsFalse).get("prop1") != null ? ((Map) resultWhenAIsTrueAndBIsFalse).get("prop1").a : null);
    assertEquals("prop3", ((Map) resultWhenAIsTrueAndBIsFalse).get("prop3"));

    Object resultWhenAIsFalseAndBIsTrue = func(false, true);
    assertNotNull(resultWhenAIsFalseAndBIsTrue);
    assertTrue(resultWhenAIsFalseAndBIsTrue instanceof Map);
    assertNull(((Map) resultWhenAIsFalseAndBIsTrue).get("prop1"));
    assertEquals("prop2", ((Map) resultWhenAIsFalseAndBIsTrue).get("prop2"));

    Object resultWhenAIsFalseAndBIsFalse = func(false, false);
    assertNotNull(resultWhenAIsFalseAndBIsFalse);
    assertTrue(resultWhenAIsFalseAndBIsFalse instanceof Map);
    assertNull(((Map) resultWhenAIsFalseAndBIsFalse).get("prop1"));
    assertEquals("prop3", ((Map) resultWhenAIsFalseAndBIsFalse).get("prop3"));
}