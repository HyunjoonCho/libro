
import org.junit.Test;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import static org.junit.Assert.assertEquals;

public class JavaScriptOptimizationTest {

    @Test
    public void testOverlyAggressiveCommaRemoval() throws ScriptException {
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("nashorn");

        // Original JavaScript code
        String originalCode = 
            "function Test(n) {\n" +
            "    var i = 0;\n" +
            "    return typeof n !== 'undefined' ? (i = n.length) : (n = 'foo'), i;\n" +
            "}\n" +
            "var dummy = '6chars';\n" +
            "var result = Test(dummy);\n" +
            "result;";

        // Simulating the optimized code result for comparison
        String optimizedCodeResult = "0";

        // Evaluate the original code
        Object originalResult = engine.eval(originalCode);

        // Assert that original code result is not equal to the overly aggressive optimized result
        assertEquals("Original code output should not match overly optimized output.", 7, originalResult);
    }
}
