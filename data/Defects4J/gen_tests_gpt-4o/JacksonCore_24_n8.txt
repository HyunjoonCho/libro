
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.exc.InputCoercionException;
import org.junit.Test;
import static org.junit.Assert.*;

import java.io.IOException;

public class InputCoercionExceptionTest {

    @Test
    public void testIntOverflowCausesInputCoercionException() {
        String jsonValue = "2147483648"; // One more than Integer.MAX_VALUE

        JsonFactory factory = new JsonFactory();
        try (JsonParser parser = factory.createParser(jsonValue)) {
            parser.nextToken();
            try {
                int value = parser.getIntValue();
                fail("Expected InputCoercionException was not thrown");
            } catch (InputCoercionException e) {
                assertTrue(e.getMessage().contains("out of range"));
                // We expect an InputCoercionException here
            } catch (JsonProcessingException e) {
                fail("Expected InputCoercionException but got JsonProcessingException: " + e.getMessage());
            } catch (IOException e) {
                fail("Unexpected IOException: " + e.getMessage());
            }
        } catch (IOException e) {
            fail("Failed to create parser: " + e.getMessage());
        }
    }
}
