
import org.apache.commons.lang3.time.FastDateFormat;
import org.junit.Test;

import java.util.Calendar;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class FastDateFormatTest {

    @Test
    public void testTimezonePatternRespectsCalendarTimezone() {
        // Set up the calendar with a specific timezone
        Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("US/Eastern"));
        calendar.set(2023, Calendar.MARCH, 14, 10, 0); // Specific date and time

        // Create the FastDateFormat instance
        FastDateFormat fastDateFormat = FastDateFormat.getInstance("h:mma z");

        // Format the calendar instance
        String formattedDate = fastDateFormat.format(calendar);

        // Assert that the timezone part of the formatted date matches the calendar's timezone
        // Calendar is set to US/Eastern timezone, so we expect "EDT" (Eastern Daylight Time) or "EST" (Eastern Standard Time)
        // depending on whether daylight saving time is in effect.
        boolean isDaylightTime = calendar.getTimeZone().inDaylightTime(calendar.getTime());
        String expectedTimezone = isDaylightTime ? "EDT" : "EST";

        assertEquals("Expected timezone does not match the formatted date", "10:00AM " + expectedTimezone, formattedDate);
    }
}
