public void testJscompFlagsPrecedence() {
    String[] flags = {"--jscomp_warning", "checkTypes", "--jscomp_error", "checkTypes", "--jscomp_off", "checkTypes"};
    CompilerOptions options = new CompilerOptions();
    CommandLineRunner runner = new CommandLineRunner(flags);
    runner.setOptionsForFlags(options);
    
    assertTrue(options.getWarningsGuard().disables(DiagnosticGroups.CHECK_TYPES));
    assertFalse(options.getWarningsGuard().enables(DiagnosticGroups.CHECK_TYPES));
    assertFalse(options.getWarningsGuard().errors(DiagnosticGroups.CHECK_TYPES));

    String[] flagsReversed = {"--jscomp_error", "checkTypes", "--jscomp_warning", "checkTypes", "--jscomp_off", "checkTypes"};
    CompilerOptions optionsReversed = new CompilerOptions();
    CommandLineRunner runnerReversed = new CommandLineRunner(flagsReversed);
    runnerReversed.setOptionsForFlags(optionsReversed);

    assertTrue(optionsReversed.getWarningsGuard().disables(DiagnosticGroups.CHECK_TYPES));
    assertFalse(optionsReversed.getWarningsGuard().enables(DiagnosticGroups.CHECK_TYPES));
    assertFalse(optionsReversed.getWarningsGuard().errors(DiagnosticGroups.CHECK_TYPES));
    
    String[] flagsWarningTakesPrecedence = {"--jscomp_off", "checkTypes", "--jscomp_warning", "checkTypes", "--jscomp_error", "checkTypes"};
    CompilerOptions optionsWarningPrecedence = new CompilerOptions();
    CommandLineRunner runnerWarningPrecedence = new CommandLineRunner(flagsWarningTakesPrecedence);
    runnerWarningPrecedence.setOptionsForFlags(optionsWarningPrecedence);
    
    assertFalse(optionsWarningPrecedence.getWarningsGuard().disables(DiagnosticGroups.CHECK_TYPES));
    assertTrue(optionsWarningPrecedence.getWarningsGuard().enables(DiagnosticGroups.CHECK_TYPES));
    assertFalse(optionsWarningPrecedence.getWarningsGuard().errors(DiagnosticGroups.CHECK_TYPES));
}