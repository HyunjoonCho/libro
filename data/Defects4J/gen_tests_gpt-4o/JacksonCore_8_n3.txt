
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.TextBuffer;
import org.junit.Test;
import static org.junit.Assert.*;

public class TextBufferTest {

    @Test
    public void testTextBufferConsistency() {
        TextBuffer buffer = new TextBuffer(new BufferRecycler());
        
        // Reset the buffer with an empty string
        buffer.resetWithEmpty();
        
        // First call to getTextBuffer
        char[] firstCallResult = buffer.getTextBuffer();
        // Expected behavior: it should return either consistently null or an empty array
        // Unless explicitly specified, this might depend on the library maintainers' decision, 
        // but for this test, we are expecting a consistent behavior regardless of implementation choice.
        
        // Convert contents to a String
        String contentAsString = buffer.contentsAsString();
        assertEquals("", contentAsString);
        
        // Second call to getTextBuffer
        char[] secondCallResult = buffer.getTextBuffer();
        
        // Assert consistent behavior
        // Both calls should have the same result, whether it's null or an empty array
        assertSame(firstCallResult, secondCallResult);
        
        // Additional check: if the result should not be null, it should be an empty array
        if (firstCallResult != null) {
            assertEquals(0, firstCallResult.length);
            assertEquals(0, secondCallResult.length);
        }
    }
}
