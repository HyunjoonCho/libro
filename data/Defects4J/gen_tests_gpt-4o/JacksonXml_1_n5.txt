public void testNestedNonWrappedListsDeserialization() throws IOException {
    ObjectMapper mapper = new ObjectMapper();

    String json = "{\"records\":[{\"fields\":[]},{\"fields\":[{\"name\":\"field1\"}]}]}";

    Definition definition = mapper.readValue(json, Definition.class);
    assertNotNull(definition);
    assertEquals(2, definition.getRecords().size());
    
    Record firstRecord = definition.getRecords().get(0);
    assertNotNull(firstRecord);
    assertTrue(firstRecord.getFields().isEmpty());

    Record secondRecord = definition.getRecords().get(1);
    assertNotNull(secondRecord);
    assertEquals(1, secondRecord.getFields().size());
    assertEquals("field1", secondRecord.getFields().get(0).getName());
}

// Supporting classes
public static class Definition {
    private List<Record> records;

    public List<Record> getRecords() {
        return records;
    }

    public void setRecords(List<Record> records) {
        this.records = records;
    }
}

public static class Record {
    private List<Field> fields;

    public List<Field> getFields() {
        return fields;
    }

    public void setFields(List<Field> fields) {
        this.fields = fields;
    }
}

public static class Field {
    private String name;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}