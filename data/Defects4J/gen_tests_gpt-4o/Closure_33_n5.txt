
import org.junit.Test;
import static org.junit.Assert.*;

public class Bug107Test {

    @Test
    public void testWeirdObjectLiteralError() {
        // This test does not run JavaScript but demonstrates the JavaScript setup.
        // To see the error, you need to compile this with Google Closure Compiler.
        // Place the following JavaScript in a file such as `repro.js`

        String jsCode = ""
            + "/**\n"
            + " * @param {{text: string}} opt_data\n"
            + " * @return {string}\n"
            + " */\n"
            + "function temp1(opt_data) {\n"
            + "    return opt_data.text;\n"
            + "}\n"
            + "\n"
            + "/**\n"
            + " * @param {{activity: (boolean|number|string|null|Object)}} opt_data\n"
            + " * @return {string}\n"
            + " */\n"
            + "function temp2(opt_data) {\n"
            + "    /** @notypecheck */\n"
            + "    function __inner() {\n"
            + "        return temp1(opt_data.activity);\n"
            + "    }\n"
            + "    return __inner();\n"
            + "}\n"
            + "\n"
            + "/**\n"
            + " * @param {{n: number, text: string, b: boolean}} opt_data\n"
            + " * @return {string}\n"
            + " */\n"
            + "function temp3(opt_data) {\n"
            + "    return 'n: ' + opt_data.n + ', t: ' + opt_data.text + '.';\n"
            + "}\n"
            + "\n"
            + "function callee() {\n"
            + "    var output = temp3({\n"
            + "        n: 0,\n"
            + "        text: 'a string',\n"
            + "        b: true\n"
            + "    });\n"
            + "    alert(output);\n"
            + "}\n"
            + "\n"
            + "callee();";

        // Use Google Closure Compiler with ADVANCED_OPTIMIZATIONS like:
        // java -jar compiler.jar --compilation_level=ADVANCED_OPTIMIZATIONS --jscomp_error=accessControls --jscomp_error=checkTypes --jscomp_error=checkVars --js repro.js

        // Expected outcome is the error described in the bug report when compiled.
        
        // Example message:
        String expectedErrorMessage = 
            "ERROR - actual parameter 1 of temp3 does not match formal parameter\n" +
            "found : {b: boolean, n: number, text: (string|undefined)}\n" +
            "required: {b: boolean, n: number, text: string}";
        // The test guarantees the setup, but actual testing would occur via Closure Compiler output.

        fail("To reproduce, compile `repro.js` using Google Closure Compiler with specified flags.");
    }
}
