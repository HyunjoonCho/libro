
import static org.mockito.Mockito.*;

import java.util.function.Supplier;

import org.junit.Test;

public class MockitoGenericsTest {

    interface I {
        <T> Supplier<T> m(Class<T> type);
    }

    @Test(expected = ClassCastException.class)
    public void testDeepStubsWithGenerics() throws Exception {
        I i = mock(I.class, RETURNS_DEEP_STUBS);
        when(i.m(Boolean.class).get()); // This line should trigger the ClassCastException
    }

    @Test
    public void testWithoutDeepStubs() throws Exception {
        I i = mock(I.class);
        Supplier<Boolean> s = mock(Supplier.class);
        when(i.m(Boolean.class)).thenReturn(s);
        when(i.m(Boolean.class).get()); // This should work without exception
    }
}
