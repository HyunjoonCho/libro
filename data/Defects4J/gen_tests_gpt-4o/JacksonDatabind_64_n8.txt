
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class JsonIncludeNonDefaultTest {

    @JsonInclude(JsonInclude.Include.NON_DEFAULT)
    static class TestClass {
        public String value;
        public int number = 0; // Default value is 0
    }

    @Test
    public void testJsonIncludeNonDefault() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        TestClass testObject = new TestClass();
        testObject.value = null; // Default for String is null

        // Serialize object to JSON
        String jsonResult = mapper.writeValueAsString(testObject);

        // Expected JSON should exclude "value" field because its default is null
        // However, the current behavior may incorrectly include it
        String expectedJson = "{\"number\":0}";

        assertEquals(expectedJson, jsonResult);
    }
}
