
import org.junit.Test;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintStream;

import static org.junit.Assert.assertTrue;

public class CompilerOutputTest {

    @Test
    public void testLastErrorTruncation() throws IOException {
        // Redirect System.out to capture the output for comparison
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        PrintStream originalOut = System.out;
        try {
            System.setOut(new PrintStream(outputStream));

            // Simulate the invocation of the compiler tool
            String[] args = {"--warning_level", "VERBOSE", "--js", "test.js"};
            Compiler.main(args); // Assume Compiler is the class that contains your main method for compiling

            // Capture output
            String output = outputStream.toString();

            // Assert that the last error message is not truncated
            assertTrue(output.contains("test.js:2: ERROR - variable bar is undefined"));
            assertTrue(output.contains("alert(bar);"));
            assertTrue(output.contains("^"));
        } finally {
            // Restore System.out
            System.setOut(originalOut);
        }
    }
}
