
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class TestPojoJsonPropertyTest {
    
    public static class TestPojo {
        private String firstName;
        private String lastName;

        @JsonProperty(access = JsonProperty.Access.READ_ONLY)
        public String getFullName() {
            return firstName + " " + lastName;
        }

        public String getFirstName() {
            return firstName;
        }

        public void setFirstName(String firstName) {
            this.firstName = firstName;
        }

        public String getLastName() {
            return lastName;
        }

        public void setLastName(String lastName) {
            this.lastName = lastName;
        }
    }

    @Test
    public void testJsonPropertyReadOnlyAccess() throws JsonProcessingException {
        String jsonInput = "{\"firstName\":\"John\", \"lastName\":\"Doe\", \"fullName\":\"ShouldNotDeserialize\"}";

        ObjectMapper objectMapper = new ObjectMapper();
        TestPojo pojo = objectMapper.readValue(jsonInput, TestPojo.class);

        // Verify that fullName is not deserialized
        // Since fullName is READ_ONLY, it should compute from firstName and lastName
        assertEquals("John Doe", pojo.getFullName());
        
        // Verify firstName and lastName
        assertEquals("John", pojo.getFirstName());
        assertEquals("Doe", pojo.getLastName());
    }
}
