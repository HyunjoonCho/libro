public void testSpyOnAbstractClass() {
    // Example 1
    FakeUserAccount userAccount = Mockito.mock(FakeUserAccount.class, Mockito.CALLS_REAL_METHODS);
    userAccount.addEmail("test@example.com");
    assertEquals(ImmutableList.of("test@example.com"), userAccount.getEmails());

    // Example 2
    MockAccountService service = Mockito.mock(MockAccountService.class, Mockito.CALLS_REAL_METHODS);
    UserAccount account = Mockito.mock(UserAccount.class);
    Mockito.when(service.getAccount("id")).thenReturn(account);
    AsyncCallback<UserAccount> callback = new AsyncCallback<UserAccount>() {
        @Override
        public void onSuccess(UserAccount result) {}
        @Override
        public void onFailure(Throwable caught) {}
    };
    service.getAccount("id", callback);
    assertNotNull(service.getAccount("id"));

    // Example 3
    MockAccountRpcService rpcService = Mockito.mock(MockAccountRpcService.class, Mockito.CALLS_REAL_METHODS);
    Future<Account> futureAccount = Mockito.mock(Future.class);
    Mockito.when(rpcService.getAccount("id")).thenReturn(futureAccount);
    RpcContext context = Mockito.mock(RpcContext.class);
    assertEquals(futureAccount, rpcService.getAccount(context, "id"));
}