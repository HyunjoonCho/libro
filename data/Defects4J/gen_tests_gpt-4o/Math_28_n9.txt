public void testSimplexSolverUnboundedSolutionException() {
    // Define the problem to be solved
    LinearObjectiveFunction f = new LinearObjectiveFunction(new double[]{1, 0}, 0);
    
    Collection<LinearConstraint> constraints = new ArrayList<>();
    constraints.add(new LinearConstraint(new double[]{-1, 1}, Relationship.GEQ, 0));
    constraints.add(new LinearConstraint(new double[]{1, -15}, Relationship.GEQ, 0));
    
    // Create the solver
    SimplexSolver solver = new SimplexSolver();
    
    try {
        // Solve the problem for a small number of entities
        PointValuePair solution = solver.optimize(new MaxIter(100), f, new LinearConstraintSet(constraints), GoalType.MINIMIZE, new NonNegativeConstraint(true));
        assertNotNull(solution); // Ensure we get a solution without exceptions
        
        // Now increase the number of entities and expect no exceptions
        for (int i = 0; i < 15; i++) {
            constraints.add(new LinearConstraint(new double[]{Math.random(), Math.random()}, Relationship.GEQ, Math.random()));
        }
        
        solution = solver.optimize(new MaxIter(1000), f, new LinearConstraintSet(constraints), GoalType.MINIMIZE, new NonNegativeConstraint(true));
        assertNotNull(solution); // Ensure we still get a solution
    } catch (UnboundedSolutionException e) {
        fail("Solver should not have thrown an UnboundedSolutionException");
    }
}