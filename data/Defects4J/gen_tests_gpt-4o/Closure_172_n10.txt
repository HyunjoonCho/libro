public void testPrototypePropertyTypeInference() {
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.WARNING);

    Compiler compiler = new Compiler();
    compiler.initOptions(options);

    String code = "/** @param {Object} a */ function f(a) { a.prototype = '__proto'; }" +
                  "/** @param {Object} a */ function g(a) { a.prototype = function(){}; }";

    SourceFile extern = SourceFile.fromCode("externs", "");
    SourceFile input = SourceFile.fromCode("input", code);

    compiler.compile(extern, input, options);
    JSError[] warnings = compiler.getWarnings();

    assertEquals(1, warnings.length);
    assertEquals("assignment to property prototype of Object\n" +
                 "found : function (): undefined\n" +
                 "required: string", warnings[0].description);
}