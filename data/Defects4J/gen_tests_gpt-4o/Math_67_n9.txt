public void testGetResult() {
    // Assuming this configuration and the mock setup of the optimizer 
    MultiStartUnivariateRealOptimizer optimizer = new MultiStartUnivariateRealOptimizer(new DummyOptimizer(), 5);
    
    // Perform optimization
    optimizer.optimize(new UnivariateFunction() {
        @Override
        public double value(double x) {
            return x * x;
        }
    }, GoalType.MINIMIZE, -1.0, 1.0);
    
    // The getResult() should return the best (smallest) one, not just the last
    double bestResult = Double.POSITIVE_INFINITY;
    for (double result : optimizer.getOptima()) {
        bestResult = Math.min(bestResult, result);
    }
    
    assertEquals(bestResult, optimizer.getResult(), 1e-9);
}