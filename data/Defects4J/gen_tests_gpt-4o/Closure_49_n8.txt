
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class ClosureCompilerTest {

    @Test
    public void testFunctionNameConflictClosureCompiler() {
        String jsCode = "var foo = function bar(){ var bar; alert(bar) };";

        // Expected output after simple optimization
        String expectedOutput = "var foo = function() { alert(void 0) };";

        // Set up the compiler
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setOptimizationLevel(CompilerOptions.OptimizationLevel.SIMPLE_OPTIMIZATIONS);

        // Compile the JavaScript code
        JSSourceFile jsInput = JSSourceFile.fromCode("input.js", jsCode);
        Result result = compiler.compile(JSSourceFile.fromCode("externs.js", ""), jsInput, options);

        // Get the compiled code
        String compiledCode = compiler.toSource();

        // Check if the compiled output matches expected output
        assertEquals(expectedOutput.trim(), compiledCode.trim());
    }
}
