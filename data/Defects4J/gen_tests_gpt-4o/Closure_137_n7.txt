
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class ClosureCompilerTest {

    @Test
    public void testJscDeterministicTestWarning() {
        // JavaScript code to test
        String jsCode = "var t = null;\n" +
                        "window.test = function() {\n" +
                        "  if (t != null) {\n" +
                        "    t = null;\n" +
                        "  }\n" +
                        "  t = 1;\n" +
                        "};";

        // Create a Compiler instance
        Compiler compiler = new Compiler();

        // Set Compiler options
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Create input and extern files
        JSSourceFile extern = JSSourceFile.fromCode("externs.js", "");
        JSSourceFile input = JSSourceFile.fromCode("input.js", jsCode);

        // Compile and get result
        Result result = compiler.compile(extern, input, options);

        // Check that there are no warnings related to JSC_DETERMINISTIC_TEST
        String warnings = compiler.getWarnings().toString();
        assertTrue("Unexpected warning: JSC_DETERMINISTIC_TEST", 
                   !warnings.contains("JSC_DETERMINISTIC_TEST"));
    }
}
