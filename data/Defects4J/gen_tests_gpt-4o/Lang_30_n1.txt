
import org.apache.commons.lang3.StringUtils;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;

public class StringUtilsUnicodeTest {

    private static final String CharU20000 = "\uD840\uDC00";
    private static final String CharU20001 = "\uD840\uDC01";

    @Test
    public void testJREIndexOf() {
        assertEquals("Expected -1 since the characters are different", -1, CharU20000.indexOf(CharU20001));
    }

    @Test
    public void testStringUtilsContainsAnyForSupplementaryChars() {
        assertFalse("StringUtils.containsAny should return false as the characters are different",
                StringUtils.containsAny(CharU20000, CharU20001));
        assertFalse("StringUtils.containsAny should return false as the characters are different",
                StringUtils.containsAny(CharU20001, CharU20000));
    }

    @Test
    public void testStringUtilsContainsForSupplementaryChars() {
        assertTrue("StringUtils.contains should return true as the composite string contains CharU20000",
                StringUtils.contains(CharU20000 + CharU20001, CharU20000));
        assertTrue("StringUtils.contains should return true as the composite string contains CharU20001",
                StringUtils.contains(CharU20000 + CharU20001, CharU20001));
        assertTrue("StringUtils.contains should return true as the string contains itself",
                StringUtils.contains(CharU20000, CharU20000));
        assertFalse("StringUtils.contains should return false as the character is not present",
                StringUtils.contains(CharU20000, CharU20001));
    }
}
