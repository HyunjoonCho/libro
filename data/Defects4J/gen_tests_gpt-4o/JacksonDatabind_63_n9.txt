
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import java.io.IOException;

import static com.google.common.truth.Truth.assertThat;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class ReferenceChainTest {

    @Test
    public void incorrectReferenceChain() throws IOException {
        ObjectMapper objectMapper = new ObjectMapper();
        
        JsonMappingException jsonMappingException = assertThrows(JsonMappingException.class, () -> {
            objectMapper.readValue(objectMapper.writeValueAsBytes(new Outer()), Outer.class);
        });

        JsonMappingException.Reference reference = jsonMappingException.getPath().get(0);
        // Check if the reference correctly identifies inner classes 
        assertThat(reference.toString()).isEqualTo("ReferenceChainTest$Outer[\"inner\"]");
    }

    static class Outer {
        public Inner inner = new Inner();
    }

    static class Inner {
        public int x;

        @JsonCreator
        public static Inner create(@JsonProperty("x") int x) {
            throw new RuntimeException("test-exception");
        }
    }
}
