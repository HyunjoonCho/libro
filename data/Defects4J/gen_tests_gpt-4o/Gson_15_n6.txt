
import com.google.gson.stream.JsonWriter;
import static org.junit.Assert.fail;
import java.io.IOException;
import java.io.StringWriter;
import org.junit.Test;

public class JsonWriterTest {

    @Test
    public void testJsonWriterLenientMode() {
        StringWriter stringWriter = new StringWriter();
        JsonWriter jsonWriter = new JsonWriter(stringWriter);
        jsonWriter.setLenient(true);

        try {
            jsonWriter.beginArray();

            // This should work in lenient mode
            try {
                jsonWriter.value((Number) Double.valueOf(Double.NaN));
            } catch (IllegalArgumentException e) {
                fail("Lenient mode should allow NaN with Number: " + e.getMessage());
            }

            // This should throw an IllegalArgumentException despite lenient mode
            try {
                jsonWriter.value(Double.NaN);
                fail("Expected IllegalArgumentException for NaN value(double) in lenient mode.");
            } catch (IllegalArgumentException e) {
                // Expected exception
            }

            jsonWriter.endArray();
        } catch (IOException e) {
            fail("IOException was thrown: " + e.getMessage());
        }
    }
}
