
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.exc.InvalidDefinitionException;
import org.junit.Test;

public class ReadTreeTest {

    @Test(expected = InvalidDefinitionException.class)
    public void testReadTreeWithDefaultTyping() throws IOException {
        ObjectMapper mapper = new ObjectMapper()
                .enableDefaultTyping() // Enabling default typing
                .enable(MapperFeature.AUTO_DETECT_GETTERS)
                .enable(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS)
                .disable(MapperFeature.USE_GETTERS_AS_SETTERS)
                .disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)
                .enable(SerializationFeature.INDENT_OUTPUT)
                .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        // Creating an instance of Foo
        Foo foo = new Foo("bar");

        // Serializing Foo to JSON
        String serialized = mapper.writeValueAsString(foo); // {"bar" : "bar"}

        // Attempting to read the JSON as a tree, expecting an exception
        mapper.readTree(serialized);
    }

    @Test(expected = InvalidDefinitionException.class)
    public void testValueToTreeWithDefaultTyping() throws IOException {
        ObjectMapper mapper = new ObjectMapper()
                .enableDefaultTyping() // Enabling default typing
                .enable(MapperFeature.AUTO_DETECT_GETTERS)
                .enable(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS)
                .disable(MapperFeature.USE_GETTERS_AS_SETTERS)
                .disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)
                .enable(SerializationFeature.INDENT_OUTPUT)
                .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        // Creating an instance of Foo
        Foo foo = new Foo("bar");

        // Attempting to convert Foo to a JsonNode, expecting an exception
        mapper.valueToTree(foo);
    }

    public static class Foo {
        private String bar;

        public Foo() {
        }

        public Foo(String bar) {
            this.bar = bar;
        }

        public String getBar() {
            return bar;
        }

        public void setBar(String bar) {
            this.bar = bar;
        }
    }
}
