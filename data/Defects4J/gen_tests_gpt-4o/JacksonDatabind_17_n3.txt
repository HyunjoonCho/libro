public void testReadTreeWithDefaultTyping() throws IOException {
    ObjectMapper mapper = new ObjectMapper()
            .enableDefaultTyping() // works fine with disableDefaultTyping()
            .enable(MapperFeature.AUTO_DETECT_GETTERS)
            .enable(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS)
            .disable(MapperFeature.USE_GETTERS_AS_SETTERS)
            .disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)
            .enable(SerializationFeature.INDENT_OUTPUT)
            .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

    Foo foo = new Foo("bar");
    String serialized = mapper.writeValueAsString(foo); // {"bar" : "bar"}

    // Attempt to read the tree throws an exception
    assertThrows(JsonMappingException.class, () -> {
        mapper.readTree(serialized);
    });

    // Attempt to do value-to-tree conversion also throws an exception
    assertThrows(JsonMappingException.class, () -> {
        mapper.valueToTree(foo);
    });
}