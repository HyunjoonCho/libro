
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathException;
import org.junit.Test;
import org.w3c.dom.Document;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import static org.junit.Assert.fail;

public class NamespaceHandlingTest {

    @Test
    public void testNamespaceAttributeHandling() {
        String xmlContent = "<ElementA xmlns:A=\"http://example.com/A\" xmlns:B=\"http://example.com/B\" A:myAttr=\"Mytype\">" +
                "<B:ElementB>MY VALUE</B:ElementB>" +
                "</ElementA>";
        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            factory.setNamespaceAware(true);
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document document = builder.parse(new java.io.ByteArrayInputStream(xmlContent.getBytes("UTF-8")));
            
            // Create JXPathContext and register namespaces
            JXPathContext context = JXPathContext.newContext(document);
            context.registerNamespace("A", "http://example.com/A");
            context.registerNamespace("B", "http://example.com/B");

            // Try accessing the attribute with namespace
            try {
                context.getValue("/ElementA/@A:myAttr");
            } catch (JXPathException e) {
                // If the exception is related to unknown namespace prefix, the test successfully reproduces the issue
                fail("Failed due to unknown namespace prefix for attributes: " + e.getMessage());
            }
        } catch (Exception e) {
            // Handle any unexpected exceptions
            fail("Exception occurred during test setup or execution: " + e.getMessage());
        }
    }
}
