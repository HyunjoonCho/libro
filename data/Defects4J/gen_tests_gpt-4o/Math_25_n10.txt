public void testHarmonicFitterParameterGuesser() {
    // Sample data that is known to cause the issue
    double[] x = {1, 2, 3, 4, 5, 6, 7};
    double[] y = {0.1, 0.2, -0.2, -0.1, 0.1, 0.2, -0.2};
    
    HarmonicFitter fitter = new HarmonicFitter(new GaussNewtonOptimizer());
    for (int i = 0; i < x.length; ++i) {
        fitter.addObservedPoint(1, x[i], y[i]);
    }
    
    try {
        HarmonicFitter.ParameterGuesser guesser = new HarmonicFitter.ParameterGuesser(fitter.getObservations());
        double[] guess = guesser.guess();
        // Verify that the amplitude guess is positive and sensible
        assertTrue("Amplitude should be positive", guess[0] > 0);
    } catch (Exception e) {
        fail("Exception should not occur: " + e.getMessage());
    }
}