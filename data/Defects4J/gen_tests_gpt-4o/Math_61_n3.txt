
import org.apache.commons.math3.distribution.NormalDistribution;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

// Assuming PoissonDistributionImpl is part of the package org.apache.commons.math3.distribution
public class PoissonDistributionImplTest {

    // A subclass that overrides setNormal method to track setter call during construction
    private static class TestPoissonDistributionImpl extends PoissonDistributionImpl {
        private boolean setNormalCalled;

        public TestPoissonDistributionImpl(double p, NormalDistribution z) {
            super(p, z);
        }

        @Override
        protected void setNormal(NormalDistribution z) {
            setNormalCalled = true;
            super.setNormal(z);
        }

        public boolean isSetNormalCalled() {
            return setNormalCalled;
        }
    }

    @Test
    public void testConstructorCallsOverridableMethods() {
        NormalDistribution normalDist = new NormalDistribution(0, 1);

        TestPoissonDistributionImpl poissonDist = new TestPoissonDistributionImpl(1.0, normalDist);

        // Expect that the problematic overridable method setNormal has been called during construction
        assertEquals(true, poissonDist.isSetNormalCalled());
    }
}
