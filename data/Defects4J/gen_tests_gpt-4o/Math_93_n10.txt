
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class MathUtilsTest {

    @Test
    public void testFactorial() {
        assertEquals(1, MathUtils.factorial(1));
        assertEquals(2, MathUtils.factorial(2));
        assertEquals(6, MathUtils.factorial(3));
        assertEquals(24, MathUtils.factorial(4));
        assertEquals(120, MathUtils.factorial(5));
        assertEquals(720, MathUtils.factorial(6));
        assertEquals(5040, MathUtils.factorial(7));
        assertEquals(40320, MathUtils.factorial(8));
        assertEquals(362880, MathUtils.factorial(9));
        assertEquals(3628800, MathUtils.factorial(10));
        assertEquals(39916800, MathUtils.factorial(11));
        assertEquals(479001600, MathUtils.factorial(12));
        assertEquals(6227020800L, MathUtils.factorial(13));
        assertEquals(87178291200L, MathUtils.factorial(14));
        assertEquals(1307674368000L, MathUtils.factorial(15));
        assertEquals(20922789888000L, MathUtils.factorial(16));
        assertEquals(355687428096000L, MathUtils.factorial(17));
        assertEquals(6402373705728000L, MathUtils.factorial(18));
        assertEquals(121645100408832000L, MathUtils.factorial(19));
        assertEquals(2432902008176640000L, MathUtils.factorial(20));
    }
}

// Note: Make sure the MathUtils.factorial method is updated to handle 
// these large numbers accurately, likely by using a long[] or looping with a long.
