
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.fail;

public class JsonParserTest {

    @Test
    public void testEagerParsingWithMissingSpace() {
        JsonFactory jsonFactory = new JsonFactory();

        try (JsonParser parser = jsonFactory.createParser("123true")) {
            // Attempt to parse the input
            if (parser.nextToken() == JsonToken.VALUE_NUMBER_INT) {
                // Should fail before reaching here
                parser.nextToken();
                fail("Expected a JsonParseException due to missing space");
            }
        } catch (IOException e) {
            // Ensure IOException is specifically due to parsing error
            if (!e.getMessage().contains("Unexpected character")) {
                fail("Expected a JSON parsing exception, got: " + e.getMessage());
            }
        }
    }
}
