
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.jscomp.WarningLevel;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.assertTrue;

public class ThisTypeCheckingTest {

    @Test
    public void testDifferentThisTypesProduceWarning() {
        // JavaScript code snippet from the bug report
        String javascriptCode = "/** @constructor */\n" +
            "function F() {}\n" +
            "F.prototype.bar = function() { this.baz(); };\n" +
            "F.prototype.baz = function() { };\n" +
            "\n" +
            "/** @constructor */\n" +
            "function G() {}\n" +
            "G.prototype.bar = F.prototype.bar;";

        // Creating a Closure Compiler instance
        Compiler compiler = new Compiler();

        // Setting compiler options
        CompilerOptions options = new CompilerOptions();
        WarningLevel.VERBOSE.setOptionsForWarningLevel(options);

        // Compile the JavaScript code
        compiler.compile(
            SourceFile.fromCode("externs.js", ""),
            SourceFile.fromCode("test.js", javascriptCode),
            options
        );

        // Retrieve compilation results and errors
        Result result = compiler.getResult();
        List<JSError> warnings = result.warnings;

        // Assert there is at least one warning related to 'this' type discrepancy
        assertTrue("Expected a warning about differing 'this' types.", warnings.stream()
            .anyMatch(warning -> warning.getDescription().contains("this")));
    }
}
