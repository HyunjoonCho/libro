
import org.jaxen.dom.DOMXPath;
import org.jaxen.JaxenException;
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import static org.junit.Assert.assertNotNull;

public class NamespaceWildcardTest {

    @Test
    public void testNamespaceWildcardAttributeSelection() throws Exception {
        // Build the XML document
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        
        // Parse the XML string
        String xmlContent = "<xml xmlns:x='foo' x:pop='a'/>";
        Document document = builder.parse(new java.io.ByteArrayInputStream(xmlContent.getBytes()));

        // Create XPath to select attributes with wildcard
        try {
            DOMXPath xpath = new DOMXPath("xml/@*");
            Object result = xpath.selectSingleNode(document);
            
            // Assert that an attribute is selected
            assertNotNull("Expected to find an attribute but found none.", result);
        } catch (JaxenException e) {
            e.printStackTrace();
        }
    }
}
