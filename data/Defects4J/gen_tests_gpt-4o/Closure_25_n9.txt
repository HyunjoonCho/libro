public void testAnonymousObjectTypeInference() {
    // Function call compiles fine
    try {
        callz(new PropObject("hi"));
    } catch (Exception e) {
        fail("Function call should not throw an exception: " + e.getMessage());
    }

    // Constructor call should fail with missing prop2
    Exception exception = null;
    try {
        new CallzConst(new PropObject("hi"));
    } catch (Exception e) {
        exception = e;
    }
    assertNotNull("Constructor call should throw an exception due to missing prop2", exception);
    assertTrue(exception instanceof SomeSpecificExceptionType); // Replace with actual exception type
}

// Mocking example classes similar to what would be in JavaScript
class PropObject {
    String prop1;

    PropObject(String prop1) {
        this.prop1 = prop1;
    }
}

class CallzConst {
    CallzConst(PropObject obj) {
        if (obj.prop1 == null || obj.prop1.isEmpty()) {
            throw new IllegalArgumentException("prop1 is required");
        }
    }
}