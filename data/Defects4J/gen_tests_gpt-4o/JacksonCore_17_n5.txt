
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.core.JsonGenerator;

import java.io.StringWriter;
import java.io.Writer;

public class SplitSurrogateBugTest {

    public static void main(String[] args) {
        try {
            // Create a JSON factory
            JsonFactory factory = new JsonFactory();

            // Create a Writer to capture the JSON output
            Writer writer = new StringWriter();

            // Create a JSON generator
            JsonGenerator jsonGen = factory.createGenerator(writer);

            // Start writing JSON
            jsonGen.writeStartObject();

            // This string needs to include a surrogate pair character
            // Adjust the number of 'x' characters to reproduce the bug
            String problematicString = "xxxxxx... more x's to adjust position ..." + "\uD83D\uDE00"; // Smiley emoji

            // Write raw JSON value, which would trigger the buffering issue
            jsonGen.writeRawValue(problematicString);

            // End JSON object
            jsonGen.writeEndObject();

            // Close the generator
            jsonGen.close();

            // Print the generated JSON (won't reach here if exception occurs)
            System.out.println(writer.toString());
        } catch (JsonGenerationException e) {
            // Catch and print the JsonGenerationException
            System.err.println("JsonGenerationException: " + e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
