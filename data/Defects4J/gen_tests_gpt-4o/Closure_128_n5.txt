
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;
import static org.junit.Assert.*;

public class CompilerTest {

    @Test
    public void testObjectLiteralKeyQuoting() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // JavaScript source to be compiled
        String jsCode = "alert({0:0, 1:1});";

        // Compile the JavaScript code
        Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test.js", jsCode), options);

        // Check for compilation errors
        assertTrue("Compilation should be successful", result.success);

        // Get the compiled output
        String compiledCode = compiler.toSource();

        // The expected output should not quote the numeric key "0"
        String expectedOutput = "alert({0:0, 1:1});";

        // Validate the compiled output
        assertEquals("Compiled code should match the expected output", expectedOutput, compiledCode);
    }
}
