public void testPolymorphicTypeLostWithJsonValue() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
    mapper.enableDefaultTyping();

    CommandAPDU message = new CommandAPDU(new byte[]{0x01, 0x02, 0x03});
    String json = mapper.writeValueAsString(message);

    //Deserialize JSON back into CommandAPDU type
    CommandAPDU deserializedMessage = mapper.readValue(json, CommandAPDU.class);
    
    assertArrayEquals(message.getBytes(), deserializedMessage.getBytes());
}

public static class CommandAPDU {
    private byte[] apdu;

    @JsonCreator
    public CommandAPDU(@JsonProperty("bytes") byte[] apdu) {
        this.apdu = apdu.clone();
    }

    @JsonValue
    public byte[] getBytes() {
        return apdu.clone();
    }
}