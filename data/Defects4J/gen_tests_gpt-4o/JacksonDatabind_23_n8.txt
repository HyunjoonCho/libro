
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.module.afterburner.AfterburnerModule;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;

public class JacksonNonEmptyTest {

    static class TestObject {
        public String value = "";
        public int number = 0;
    }

    @Test
    public void testNonEmptySerialization() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);

        TestObject obj = new TestObject();

        // Serialize without Afterburner
        String jsonWithoutAfterburner = mapper.writeValueAsString(obj);
        assertEquals("{\"number\":0}", jsonWithoutAfterburner, "Expected JSON serialization to exclude empty String fields");

        // Enable Afterburner module
        mapper.registerModule(new AfterburnerModule());

        // Serialize with Afterburner
        String jsonWithAfterburner = mapper.writeValueAsString(obj);
        assertEquals("{\"number\":0}", jsonWithAfterburner, "Expected JSON serialization to exclude empty String fields with Afterburner");
    }
}
