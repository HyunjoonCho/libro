public void testZipFileCreationWithHashCollisions() throws IOException {
    // Create a large number of files with similar names to cause hash collisions
    List<ZipArchiveEntry> entries = new ArrayList<>();
    for (int i = 0; i < 10000; i++) {
        ZipArchiveEntry entry = new ZipArchiveEntry("file" + (i % 10) + ".txt");
        entry.setName("file" + i + ".txt");
        entries.add(entry);
    }

    // Create a zip file in memory
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    try (ZipArchiveOutputStream zos = new ZipArchiveOutputStream(baos)) {
        for (ZipArchiveEntry entry : entries) {
            zos.putArchiveEntry(entry);
            byte[] data = ("content of " + entry.getName()).getBytes(StandardCharsets.UTF_8);
            zos.write(data, 0, data.length);
            zos.closeArchiveEntry();
        }
    }

    // Verify that we can successfully read the zip entries back
    try (ZipInputStream zis = new ZipInputStream(new ByteArrayInputStream(baos.toByteArray()))) {
        ZipEntry entry;
        int count = 0;
        while ((entry = zis.getNextEntry()) != null) {
            count++;
            byte[] buffer = new byte[1024];
            while (zis.read(buffer) != -1);
        }
        assertEquals(10000, count);  // There should be 10000 entries
    }
}