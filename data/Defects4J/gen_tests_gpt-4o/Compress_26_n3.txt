public void testIOUtilsSkipWithCipherInputStream() throws Exception {
    byte[] key = "1234567812345678".getBytes();
    SecretKeySpec secretKey = new SecretKeySpec(key, "AES");
    Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
    cipher.init(Cipher.ENCRYPT_MODE, secretKey);

    byte[] inputBytes = new byte[1024];
    for (int i = 0; i < inputBytes.length; i++) {
        inputBytes[i] = (byte) i;
    }

    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
    CipherOutputStream cipherOutputStream = new CipherOutputStream(byteArrayOutputStream, cipher);
    cipherOutputStream.write(inputBytes);
    cipherOutputStream.close();

    byte[] encryptedBytes = byteArrayOutputStream.toByteArray();
    CipherInputStream cipherInputStream = new CipherInputStream(new ByteArrayInputStream(encryptedBytes), cipher);

    long numToSkip = 500;
    long skippedBytes = IOUtils.skip(cipherInputStream, numToSkip);
    
    // The failure condition: skippedBytes should be equal to numToSkip
    assertEquals(numToSkip, skippedBytes);
}