
import org.apache.commons.cli.*;

public class CommonsCLITest {

    public void testStripLeadingAndTrailingQuotes() {
        // Prepare the command line options
        Options options = new Options();
        options.addOption(Option.builder("b")
                .longOpt("balloo")
                .hasArg()
                .argName("value")
                .desc("A parameter with a quoted string")
                .build());

        // Parse the command line
        CommandLineParser parser = new DefaultParser();
        String[] args = {"--balloo", "this is a \"test\""};
        
        try {
            CommandLine cmd = parser.parse(options, args);

            // Check if the 'balloo' option value retains its quotes correctly
            String ballooValue = cmd.getOptionValue("balloo");
            assertEquals("this is a \"test\"", ballooValue);

            System.out.println("Value of argument balloo is: '" + ballooValue + "'");
        } catch (ParseException e) {
            fail("Parsing failed: " + e.getMessage());
        }
    }

    // Mini assertion methods for demonstration
    private void assertEquals(String expected, String actual) {
        if (!expected.equals(actual)) {
            throw new AssertionError("Expected: " + expected + ", but was: " + actual);
        }
    }

    private void fail(String message) {
        throw new AssertionError(message);
    }

    // Main method to run the test standalone
    public static void main(String[] args) {
        CommonsCLITest test = new CommonsCLITest();
        test.testStripLeadingAndTrailingQuotes();
    }
}
