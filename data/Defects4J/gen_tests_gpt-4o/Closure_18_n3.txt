public void testDependencySortingWithoutClosurePass() {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();

    // Set closurePass to false
    options.setClosurePass(false);

    // Set dependency sorting on
    DependencyOptions dependencyOptions = new DependencyOptions();
    dependencyOptions.setDependencySorting(true);
    options.setDependencyOptions(dependencyOptions);

    // Mock JS inputs
    String jsInput1 = "goog.provide('example.dependency');";
    String jsInput2 = "goog.require('example.dependency');";

    JSSourceFile input1 = JSSourceFile.fromCode("input1.js", jsInput1);
    JSSourceFile input2 = JSSourceFile.fromCode("input2.js", jsInput2);

    // Compile
    compiler.compile(Collections.emptyList(), Arrays.asList(input1, input2), options);

    // Since closure pass is false and dependency sorting should work, we expect input1 followed by input2
    String compiledCode = compiler.toSource();
    assertTrue(compiledCode.indexOf(jsInput1) < compiledCode.indexOf(jsInput2));
}