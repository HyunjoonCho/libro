public void testTypeIdResolverWithGenericType() throws IOException {
    // Assuming the setup is done to use custom TypeIdResolver
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new SimpleModule().addDeserializer(MyType.class, new MyTypeDeserializer()));

    String json = "{\"type\":\"customType\",\"data\":{\"value\":\"test\"}}";
    try {
        MyType<SpecificType> result = mapper.readValue(json, new TypeReference<MyType<SpecificType>>() {});
        assertNotNull(result.getData());
        assertEquals("test", result.getData().getValue());
    } catch (JsonMappingException e) {
        fail("Generic type information was erased: " + e.getMessage());
    }
}