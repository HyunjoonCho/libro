
import static org.junit.Assert.fail;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.GnuParser;
import org.apache.commons.cli.MissingOptionException;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.junit.Test;

public class CommandLineParseTest {

    @Test
    public void testMissingOptionException() {
        Options options = new Options();
        options.addOption(Option.builder("v").required(true).build());

        String[] firstArgs = {"-v"};
        String[] secondArgs = {};

        GnuParser parser = new GnuParser();
        
        try {
            // First parse should succeed
            CommandLine firstCL = parser.parse(options, firstArgs);

            // Second parse should throw MissingOptionException
            CommandLine secondCL = parser.parse(options, secondArgs);

            // If no exception is thrown, the test should fail
            fail("Expected MissingOptionException was not thrown.");
        } catch (MissingOptionException e) {
            // Expected exception for the second parse
        } catch (ParseException e) {
            // If any other parse exception occurs, the test should fail
            fail("Unexpected ParseException: " + e.getMessage());
        }
    }
}
