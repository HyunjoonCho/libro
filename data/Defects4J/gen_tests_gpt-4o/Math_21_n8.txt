
import org.apache.commons.math3.linear.Array2DRowRealMatrix;
import org.apache.commons.math3.linear.Covariance;
import org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;
import org.apache.commons.math3.random.GaussianRandomGenerator;
import org.apache.commons.math3.random.JDKRandomGenerator;
import org.apache.commons.math3.random.Well19937c;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class CorrelatedRandomVectorGeneratorTest {

    @Test
    public void testRankFourMatrix() {
        double[][] covarianceMatrix1 = {
            {0.0, 0.0, 0.0, 0.0, 0.0},
            {0.0, 0.013445532, 0.01039469, 0.009881156, 0.010499559},
            {0.0, 0.01039469, 0.023006616, 0.008196856, 0.010732709},
            {0.0, 0.009881156, 0.008196856, 0.019023866, 0.009210099},
            {0.0, 0.010499559, 0.010732709, 0.009210099, 0.019107243}
        };

        double[][] covarianceMatrix2 = {
            {0.013445532, 0.01039469, 0.0, 0.009881156, 0.010499559},
            {0.01039469, 0.023006616, 0.0, 0.008196856, 0.010732709},
            {0.0, 0.0, 0.0, 0.0, 0.0},
            {0.009881156, 0.008196856, 0.0, 0.019023866, 0.009210099},
            {0.010499559, 0.010732709, 0.0, 0.009210099, 0.019107243}
        };

        double[][] covarianceMatrix3 = {
            {0.013445532, 0.01039469, 0.009881156, 0.010499559},
            {0.01039469, 0.023006616, 0.008196856, 0.010732709},
            {0.009881156, 0.008196856, 0.019023866, 0.009210099},
            {0.010499559, 0.010732709, 0.009210099, 0.019107243}
        };

        testCovarianceMatrix(covarianceMatrix1, 5);
        testCovarianceMatrix(covarianceMatrix2, 3);  // Here is where the issue appears.
        testCovarianceMatrix(covarianceMatrix3, 4);
    }

    private void testCovarianceMatrix(double[][] covarianceMatrix, int expectedRank) {
        Array2DRowRealMatrix matrix = new Array2DRowRealMatrix(covarianceMatrix);
        JDKRandomGenerator rng = new JDKRandomGenerator();

        GaussianRandomGenerator generator = new GaussianRandomGenerator(rng);
        CorrelatedRandomVectorGenerator vectorGenerator =
            new CorrelatedRandomVectorGenerator(matrix.getRowDimension(), new Covariance(matrix).getCovarianceMatrix(), 0.01, generator);

        assertEquals(expectedRank, vectorGenerator.getRank());
    }
}
