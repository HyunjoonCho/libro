
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;

public class TarArchiveInputStreamTest {

    @Test(expected = IllegalArgumentException.class)
    public void testReadEntryWithLargeUserId() throws IOException {
        // Create a sample TAR entry with a large user ID
        byte[] tarHeader = new byte[512];
        String largeUserId = "62410554"; // This is the user ID causing the issue
        // Manually set the relevant parts of the header byte array
        System.arraycopy(largeUserId.getBytes(), 0, tarHeader, 108, largeUserId.length());
        
        // Create a TAR file (in-memory) with the problematic entry
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        out.write(tarHeader);
        out.close();

        // Attempt to read the TAR entry, expecting an IllegalArgumentException
        ByteArrayInputStream in = new ByteArrayInputStream(out.toByteArray());
        TarArchiveInputStream tarInput = new TarArchiveInputStream(in);
        
        TarArchiveEntry entry = tarInput.getNextTarEntry();
    }
}
