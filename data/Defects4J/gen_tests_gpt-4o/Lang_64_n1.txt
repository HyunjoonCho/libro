
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.apache.commons.lang.enums.ValuedEnum;

public class ValuedEnumTest {

    private static class TestEnumOne extends ValuedEnum {
        public static final TestEnumOne ENUM_A = new TestEnumOne("EnumA", 1);
        public static final TestEnumOne ENUM_B = new TestEnumOne("EnumB", 2);

        private TestEnumOne(String name, int value) {
            super(name, value);
        }
    }

    private static class TestEnumTwo extends ValuedEnum {
        public static final TestEnumTwo ENUM_C = new TestEnumTwo("EnumC", 1);
        public static final TestEnumTwo ENUM_D = new TestEnumTwo("EnumD", 2);

        private TestEnumTwo(String name, int value) {
            super(name, value);
        }
    }

    @org.junit.Test
    public void testCompareToNotTypeSafe() {
        try {
            // This should not be equal as they are from different ValuedEnum subclasses
            int comparisonResult = TestEnumOne.ENUM_A.compareTo(TestEnumTwo.ENUM_C);
            
            assertEquals("Expected non-zero comparison for different enum types with same value", 0, comparisonResult);
        } catch (ClassCastException e) {
            fail("compareTo should be type-safe and not throw ClassCastException: " + e.getMessage());
        }
    }
}
