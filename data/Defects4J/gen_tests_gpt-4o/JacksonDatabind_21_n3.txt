
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class TestEnumSerialization {

    public enum TestEnum {
        VALUE_ONE("value1");

        private final String valueInJson;

        private TestEnum(String valueInJson) {
            this.valueInJson = valueInJson;
        }
        
        @JsonValue
        public String getValueInJson() {
            return valueInJson;
        }

        @JsonCreator
        public static TestEnum forValue(String value) {
            for (TestEnum testEnum : values()) {
                if (testEnum.valueInJson.equals(value)) {
                    return testEnum;
                }
            }
            throw new IllegalArgumentException();
        }
    }

    @Test
    public void testEnumSerializationDeserialization() throws Exception {
        ObjectMapper mapper = new ObjectMapper();

        // Serialization
        String json = mapper.writeValueAsString(TestEnum.VALUE_ONE);
        assertEquals("\"value1\"", json);

        // Deserialization
        TestEnum result = mapper.readValue("\"value1\"", TestEnum.class);
        assertEquals(TestEnum.VALUE_ONE, result);
    }
}
