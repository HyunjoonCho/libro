
import javax.script.*;

public class CompilerShadowingTest {

    // Function to test the output of the JavaScript code
    private Object executeJavaScript(String script) throws ScriptException {
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("JavaScript");
        return engine.eval(script);
    }

    @Test
    public void testArgumentsShadowing() throws ScriptException {
        // Original JavaScript code
        String originalCode = 
            "function name() { " +
            "  var arguments = Array.prototype.slice.call(arguments, 0);" +
            "  return arguments;" +
            "}" +
            "name(1, 2, 3);"; 
            
        // Hypothetical transformed/minified JavaScript code
        String transformedCode = 
            "function name(){ " +
            "  var c=Array.prototype.slice.call(c,0);" +
            "  return c;" +
            "}" +
            "name(1, 2, 3);";

        // Execute both scripts and compare their outputs
        Object originalResult = executeJavaScript(originalCode);
        Object transformedResult = executeJavaScript(transformedCode);
        
        // Check that the transformation did not change the functionality
        assertEquals(originalResult, transformedResult);
    }
}
