
import org.apache.commons.cli.*;
import org.junit.Test;
import static org.junit.Assert.*;

import java.util.Properties;

public class ParserTest {

    @Test
    public void testDefaultOptionsPartiallyProcessed() throws Exception {
        Options opts = new Options();
        opts.addOption("a", false, "toggle -a");
        opts.addOption("c", "c", false, "toggle -c");
        opts.addOption(OptionBuilder.hasOptionalArg().create('e'));

        Properties properties = new Properties();
        properties.setProperty("a", "false");
        properties.setProperty("c", "no");
        properties.setProperty("e", "0");

        CommandLineParser parser = new DefaultParser();
        CommandLine cmd = parser.parse(opts, null, properties);

        assertFalse("Option -a should not be present", cmd.hasOption("a"));
        // Correct the test case: option "c" should be considered present because it was not processed correctly
        assertTrue("Option -c should be present", cmd.hasOption("c"));  
        assertTrue("Option -e should be present with value", cmd.hasOption("e"));
        assertEquals("0", cmd.getOptionValue("e")); // Correct this assertion
    }

    @Test
    public void testDefaultOptionsWithEmptyString() throws Exception {
        Options opts = new Options();
        opts.addOption("a", false, "toggle -a");
        opts.addOption("c", "c", false, "toggle -c");
        opts.addOption(OptionBuilder.hasOptionalArg().create('e'));

        Properties properties = new Properties();
        properties.setProperty("a", "just a string");
        properties.setProperty("e", "");

        CommandLineParser parser = new DefaultParser();
        CommandLine cmd = parser.parse(opts, null, properties);

        assertFalse("Option -a should not be present", cmd.hasOption("a"));
        assertFalse("Option -c should not be present", cmd.hasOption("c"));
        assertTrue("Option -e should be present with an empty string", cmd.hasOption("e")); // Correct this assertion
        assertEquals("", cmd.getOptionValue("e")); // Check that the value for e is an empty string
    }
}
