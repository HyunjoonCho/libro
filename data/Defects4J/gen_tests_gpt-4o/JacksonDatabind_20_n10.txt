
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.PropertyNamingStrategy;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.junit.Test;
import static org.junit.Assert.*;

public class TestPropertyNamingStrategyIssue {

    public static class ClassWithObjectNodeField {
        public String id;
        public ObjectNode json;
    }

    @Test
    public void testPropertyNamingStrategyDeserialization() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.setPropertyNamingStrategy(PropertyNamingStrategy.LOWER_CASE);

        String jsonString = "{ \"id\": \"1\", \"json\": { \"foo\": \"bar\", \"baz\": \"bing\" } }";

        try {
            ClassWithObjectNodeField deserialized = mapper.readValue(jsonString, ClassWithObjectNodeField.class);
            assertNotNull(deserialized);
            assertEquals("1", deserialized.id);
            assertNotNull(deserialized.json);
            assertEquals("bar", deserialized.json.get("foo").asText());
            assertEquals("bing", deserialized.json.get("baz").asText());
        } catch (Exception e) {
            fail("Deserialization failed with exception: " + e.getMessage());
        }
    }
}
