
import static org.mockito.Mockito.*;

import org.junit.Test;
import org.mockito.invocation.Invocation;
import org.mockito.verification.VerificationMode;

class FirstInvocationVerificationMode implements VerificationMode {
    @Override
    public void verify(Invocation actualInvocation, Invocation wantedInvocation) {
        // Custom logic to verify if the method was the first invocation on a mock
        // For simplicity, we will assume the custom logic is implemented here
    }

    @Override
    public boolean equals(Object obj) {
        return obj instanceof FirstInvocationVerificationMode;
    }

    @Override
    public int hashCode() {
        return 1;
    }
}

public class DelegatingMethodEqualsTest {

    @Test
    public void testCustomVerificationModeEquality() {
        VerificationMode mode1 = new FirstInvocationVerificationMode();
        VerificationMode mode2 = new FirstInvocationVerificationMode();

        // Test equality of custom verification modes
        assertEquals(mode1, mode2);
    }

    @Test
    public void testMockitoDelegatingMethodEquals() {
        // Create a mock
        List<String> mockList = mock(List.class);

        // Use custom verification mode with the mock
        mockList.add("test");
        verify(mockList, new FirstInvocationVerificationMode()).add("test");

        // Validate that the verification mode is functioning correctly with DelegatingMethod
        verify(mockList, times(1)).add("test");
    }
}
