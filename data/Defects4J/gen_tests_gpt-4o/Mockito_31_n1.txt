
import static org.mockito.Mockito.*;

import org.junit.Test;
import org.mockito.MockSettings;
import org.mockito.internal.util.MockUtil;

import java.util.List;
import java.util.Observer;

public class MockingBehaviorTest {

    public interface Foo {}
    public interface Bar {}

    @Test
    public void should_get_extra_interfaces() {
        // Change Bar initialization with extra interfaces as suggested in the bug report
        Bar bar = mock(Bar.class, withSettings().extraInterfaces(List.class, Observer.class));
        
        // Check if the mock object has the extra interfaces
        MockSettings settings = MockUtil.getMockSettings(bar);
        Class<?>[] extraInterfaces = settings.getExtraInterfaces();
        
        assertNotNull("Extra interfaces should not be null", extraInterfaces);
        assertTrue("Extra interfaces should contain List", 
                   containsInterface(extraInterfaces, List.class));
        assertTrue("Extra interfaces should contain Observer", 
                   containsInterface(extraInterfaces, Observer.class));
    }

    private boolean containsInterface(Class<?>[] interfaces, Class<?> targetInterface) {
        for (Class<?> iface : interfaces) {
            if (iface.equals(targetInterface)) {
                return true;
            }
        }
        return false;
    }
}
