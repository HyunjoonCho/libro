
import org.apache.commons.lang3.SerializationUtils;
import org.junit.Test;
import java.io.Serializable;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class SerializationUtilsPrimitiveClassTest {

    private static class ContainerWithPrimitiveClass implements Serializable {
        private static final long serialVersionUID = 1L;
        // This field contains a reference to a primitive class
        private final Class<?> primitiveClass;

        public ContainerWithPrimitiveClass(Class<?> primitiveClass) {
            this.primitiveClass = primitiveClass;
        }

        public Class<?> getPrimitiveClass() {
            return primitiveClass;
        }
    }

    @Test
    public void testCloneWithPrimitiveClassReference() {
        ContainerWithPrimitiveClass original = new ContainerWithPrimitiveClass(int.class);

        try {
            ContainerWithPrimitiveClass clone = SerializationUtils.clone(original);
            assertEquals(original.getPrimitiveClass(), clone.getPrimitiveClass());
        } catch (ClassNotFoundException e) {
            fail("SerializationUtils.clone() threw ClassNotFoundException: " + e.getMessage());
        }
    }
}
