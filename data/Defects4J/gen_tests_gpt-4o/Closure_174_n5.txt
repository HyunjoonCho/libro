
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

import static org.junit.Assert.assertFalse;

public class CompilerCrashTest {

    @Test
    public void testGoogleScopeCrash() {
        Compiler compiler = new Compiler();

        // Warning levels are configurable, but to reproduce the crash,
        // we can keep the default options or set them as needed
        CompilerOptions options = new CompilerOptions();

        // Use simple test-execution options
        options.setCheckSymbols(true);  // useful to catch missing variables

        // The code that is causing the issue
        String jsCode = "goog.provide('main');\n" +
                        "goog.scope(function() {\n" +
                        "  var a = foo, b, c = 1;\n" +
                        "});";

        // Compile the JavaScript code
        Result result = compiler.compile(
                JSSourceFile.fromCode("externs.js", ""), // No externs needed for this test
                JSSourceFile.fromCode("test.js", jsCode),
                options);

        // Ensure that the compilation did not cause a crash
        assertFalse(result.success); // The bug report implies an error should occur, but not a crash
    }
}
