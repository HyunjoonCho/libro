public void testRedefinitionOfFunction() {
    Object result1 = null;
    Object result2 = null;
    boolean exceptionThrown = false;
    
    // Simulate the described behavior
    try {
        Function<Object[], Object> assertFunction = args -> {
            if (!Boolean.TRUE.equals(args[0])) throw new RuntimeException("error");
            return null;
        };

        Function<Object[], Object> f;
        assertFunction.apply(new Object[]{((Function<Object[], Object>) (__ -> 1)).apply(null).equals(1)});
        f = __ -> 2;
        assertFunction.apply(new Object[]{f.apply(null).equals(2)});
        
        f = __ -> 1; // Redefinition
        result1 = assertFunction.apply(new Object[]{f.apply(null).equals(1)});
    } catch (RuntimeException e) {
        exceptionThrown = true;
    }

    assertTrue(exceptionThrown);
}