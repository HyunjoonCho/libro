
import org.apache.commons.cli.*;
import org.junit.Test;
import java.util.Properties;
import static org.junit.Assert.*;

public class OptionGroupStateTest {

    @Test
    public void testOptionGroupWithDefaultValues() {
        Options options = new Options();

        OptionGroup group = new OptionGroup();
        Option optionA = new Option("a", "optionA", false, "Option A");
        Option optionB = new Option("b", "optionB", false, "Option B");
        group.addOption(optionA);
        group.addOption(optionB);
        group.setRequired(true);

        options.addOptionGroup(group);

        // Simulate default properties
        Properties defaultProps = new Properties();
        defaultProps.setProperty("b", "true");

        CommandLineParser parser = new DefaultParser();

        try {
            // Parse with the command line containing option 'a'
            CommandLine cmd = parser.parse(options, new String[]{"-a"}, defaultProps);

            // Verify if both options are present, which should not be allowed
            boolean optionAPresent = cmd.hasOption("a");
            boolean optionBPresent = cmd.hasOption("b");

            assertTrue("Option A should be present", optionAPresent);
            assertFalse("Option B should not be present due to exclusivity", optionBPresent);

        } catch (ParseException e) {
            fail("Parsing failed: " + e.getMessage());
        }
    }
}
