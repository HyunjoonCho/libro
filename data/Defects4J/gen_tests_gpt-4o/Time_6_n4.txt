
import org.junit.Test;
import org.joda.time.Chronology;
import org.joda.time.LocalDate;
import org.joda.time.Period;
import org.joda.time.chrono.GJChronology;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

public class GJChronologyTest {

    @Test
    public void testBCYearHandling() {
        Chronology chronology = GJChronology.getInstance();

        LocalDate start = new LocalDate(2013, 5, 31, chronology);
        LocalDate expectedEnd = new LocalDate(-1, 5, 31, chronology); // 1 BC

        try {
            assertThat(start.minusYears(2013), is(equalTo(expectedEnd)));
        } catch (org.joda.time.IllegalFieldValueException e) {
            System.err.println("Caught IllegalFieldValueException for minusYears: " + e.getMessage());
        }

        try {
            assertThat(start.plus(Period.years(-2013)), is(equalTo(expectedEnd)));
        } catch (org.joda.time.IllegalFieldValueException e) {
            System.err.println("Caught IllegalFieldValueException for plus years: " + e.getMessage());
        }
    }
}
