
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.select.Elements;
import org.junit.Test;
import static org.junit.Assert.fail;

import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;

public class RemoveIgnoreCaseTest {

    class MockAttributes {
        private LinkedHashMap<String, String> attributes = new LinkedHashMap<>();

        public void addAttribute(String key, String value) {
            attributes.put(key, value);
        }

        public void removeIgnoreCase(String key) {
            // Original buggy implementation that uses foreach loop
            for (Map.Entry<String, String> entry : attributes.entrySet()) {
                if (entry.getKey().equalsIgnoreCase(key)) {
                    attributes.remove(entry.getKey()); // This line will cause ConcurrentModificationException
                }
            }
        }

        /*
        Fixed implementation with iterator
        public void removeIgnoreCase(String key) {
            Iterator<Map.Entry<String, String>> iter = attributes.entrySet().iterator();
            while (iter.hasNext()) {
                Map.Entry<String, String> entry = iter.next();
                if (entry.getKey().equalsIgnoreCase(key)) {
                    iter.remove();
                }
            }
        }
        */
    }

    @Test
    public void testRemoveIgnoreCase() {
        MockAttributes attributes = new MockAttributes();
        attributes.addAttribute("attr1", "value1");
        attributes.addAttribute("attr2", "value2");

        try {
            attributes.removeIgnoreCase("attr1");
            fail("Expected ConcurrentModificationException to be thrown");
        } catch (ConcurrentModificationException e) {
            // Expected exception
        }
    }
}
