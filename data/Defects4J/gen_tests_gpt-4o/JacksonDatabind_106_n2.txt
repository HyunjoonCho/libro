public void testTreeTraversingParserIntBounds() throws IOException {
    ObjectMapper mapper = new ObjectMapper();

    // Test handling of values that should throw exceptions when parsed as IntClass
    JsonNode node = mapper.readTree("{\"x\": 1e10}");
    try {
        mapper.readerFor(IntClass.class).readValue(node);
        fail("Expected JsonMappingException not thrown");
    } catch (JsonMappingException e) {
        // Expected exception
    }

    node = mapper.readTree("{\"x\": 2147483648}");
    try {
        mapper.readerFor(IntClass.class).readValue(node);
        fail("Expected JsonMappingException not thrown");
    } catch (JsonMappingException e) {
        // Expected exception
    }

    node = mapper.readTree("{\"x\": -2147483649}");
    try {
        mapper.readerFor(IntClass.class).readValue(node);
        fail("Expected JsonMappingException not thrown");
    } catch (JsonMappingException e) {
        // Expected exception
    }

    node = mapper.readTree("{\"x\": true}");
    try {
        mapper.readerFor(IntClass.class).readValue(node);
        fail("Expected MismatchedInputException not thrown");
    } catch (MismatchedInputException e) {
        // Expected exception
    }

    node = mapper.readTree("{\"x\": \"invalid-int\"}");
    try {
        mapper.readerFor(IntClass.class).readValue(node);
        fail("Expected InvalidFormatException not thrown");
    } catch (InvalidFormatException e) {
        // Expected exception
    }
}