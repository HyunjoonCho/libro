public void testLastWarningOrErrorTruncation() throws IOException {
    // Preparing a mock JS file with content that will produce errors
    Path filePath = Files.createTempFile("test", ".js");
    try {
        Files.write(filePath, Arrays.asList("alert(foo);", "alert(bar);"));

        // Using ProcessBuilder to simulate running the compiler with the test file
        ProcessBuilder processBuilder = new ProcessBuilder(
                "java", "-jar", "compiler.jar", "--warning_level", "VERBOSE", "--js", filePath.toString());
        processBuilder.redirectErrorStream(true);
        
        Process process = processBuilder.start();
        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
        StringBuilder compilationOutput = new StringBuilder();
        String line;

        while ((line = reader.readLine()) != null) {
            compilationOutput.append(line).append(System.lineSeparator());
        }

        process.waitFor();

        String output = compilationOutput.toString();

        // Verifying that the final error in the output contains location information
        assertTrue("Output should contain line information for all errors",
                output.contains("test.js:2: ERROR - variable bar is undefined") &&
                        output.contains("alert(bar);") &&
                        output.contains("^"));
        
    } finally {
        Files.deleteIfExists(filePath);
    }
}