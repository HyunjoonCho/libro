public void testUnboundedSolutionException() {
    final int ENTITIES_COUNT = 15;
    LinearObjectiveFunction objectiveFunction = new LinearObjectiveFunction(new double[]{1, 0}, 0);

    Collection<LinearConstraint> constraints = new ArrayList<>();
    Random random = new Random();
    for (int r = 0; r < ENTITIES_COUNT; r++) {
        double q = random.nextDouble();
        double[] qRow = new double[ENTITIES_COUNT];
        qRow[r] = 1;
        constraints.add(new LinearConstraint(qRow, Relationship.LEQ, q));

        double x = random.nextDouble();
        double[] xRow = new double[ENTITIES_COUNT];
        xRow[r] = 1;
        constraints.add(new LinearConstraint(xRow, Relationship.LEQ, x));
    }

    SimplexSolver solver = new SimplexSolver();
    try {
        PointValuePair solution = solver.optimize(
                new MaxIter(1000),
                objectiveFunction,
                new LinearConstraintSet(constraints),
                GoalType.MINIMIZE,
                new NonNegativeConstraint(true)
        );
        assertNotNull("Solution should not be null", solution);
    } catch (UnboundedSolutionException e) {
        fail("Unexpected UnboundedSolutionException for ENTITIES_COUNT = " + ENTITIES_COUNT);
    } catch (Exception e) {
        fail("Unexpected exception: " + e.getMessage());
    }
}