
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.renderer.category.AbstractCategoryItemRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.chart.LegendItemCollection;
import org.junit.Test;

import static org.mockito.Mockito.*;
import static org.junit.Assert.*;

public class AbstractCategoryItemRendererTest {

    @Test
    public void testGetLegendItemsWithNullDataset() {
        // Mock the plot and renderer
        CategoryPlot mockPlot = mock(CategoryPlot.class);
        AbstractCategoryItemRenderer renderer = new AbstractCategoryItemRenderer() {
            @Override
            public void drawItem(Graphics2D g2, 
                                 CategoryItemRendererState state, 
                                 Rectangle2D dataArea, CategoryPlot plot, 
                                 CategoryAxis domainAxis, ValueAxis rangeAxis, 
                                 CategoryDataset dataset, int row, int column, int pass) {
                // No implementation needed for this test
            }
        };
        
        // Set up the renderer with the mocked plot
        renderer.setPlot(mockPlot);

        // Mock behavior of the plot to return null for the dataset
        when(mockPlot.getIndexOf(any())).thenReturn(0);
        when(mockPlot.getDataset(anyInt())).thenReturn(null);

        // Attempt to get legend items, which should not throw an NPE
        LegendItemCollection legendItems = renderer.getLegendItems();
        
        // Ensure that a valid LegendItemCollection is returned, even when dataset is null
        assertNotNull("LegendItemCollection should not be null", legendItems);
    }
}
