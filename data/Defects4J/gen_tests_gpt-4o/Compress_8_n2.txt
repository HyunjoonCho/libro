
import static org.junit.Assert.assertEquals;
import java.nio.charset.StandardCharsets;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.junit.Test;

public class TarArchiveEntryTest {

    @Test
    public void testParseTarHeaderSizeWithTrailingSpace() throws Exception {
        // Prepare a header with a size of 644 (octal) with a trailing space
        byte[] header = new byte[512];
        String sizeOctal = "00000001234 "; // '1234' octal which is 668 in decimal
        byte[] sizeBytes = sizeOctal.getBytes(StandardCharsets.US_ASCII);
        System.arraycopy(sizeBytes, 0, header, 124, sizeBytes.length);

        TarArchiveEntry entry = new TarArchiveEntry(header);
        // The expected size should be 668, but if the trailing space is not handled correctly,
        // the parsed size might be incorrect.
        assertEquals(668, entry.getSize());
    }

    @Test
    public void testParseTarHeaderSizeWithTrailingNUL() throws Exception {
        // Prepare a header with a size of 644 (octal) with a trailing NUL byte
        byte[] header = new byte[512];
        String sizeOctal = "00000001234\0"; // '1234' octal which is 668 in decimal
        byte[] sizeBytes = sizeOctal.getBytes(StandardCharsets.US_ASCII);
        System.arraycopy(sizeBytes, 0, header, 124, sizeBytes.length);

        TarArchiveEntry entry = new TarArchiveEntry(header);
        // The expected size should be 668, but if the trailing NUL is not handled correctly,
        // the parsed size might be incorrect.
        assertEquals(668, entry.getSize());
    }
}
