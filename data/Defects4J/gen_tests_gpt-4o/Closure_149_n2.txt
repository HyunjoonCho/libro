
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

import java.nio.charset.StandardCharsets;

import static org.junit.Assert.assertTrue;

public class ClosureCompilerTest {

    @Test
    public void testStringEscapingIncreasesFileSize() {
        // Simulate the original JS content with non-ASCII characters
        String originalJs = "var patterns = 'смартфон';";

        // Minify the original JS using Closure Compiler with default string escaping
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        // By default, Closure Compiler escapes strings
        Result result = compiler.compile(
                JSSourceFile.fromCode("externs.js", ""),
                JSSourceFile.fromCode("input.js", originalJs),
                options
        );

        // Check if the minified output is unexpectedly larger than the original
        String minifiedJs = compiler.toSource();
        byte[] originalBytes = originalJs.getBytes(StandardCharsets.UTF_8);
        byte[] minifiedBytes = minifiedJs.getBytes(StandardCharsets.UTF_8);

        System.out.println("Original size: " + originalBytes.length);
        System.out.println("Minified size: " + minifiedBytes.length);

        // The test assertion: expect the minified size to be greater due to escaping
        assertTrue("Minified size should be larger due to string escaping", minifiedBytes.length > originalBytes.length);
    }
}
