
import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class HtmlParsingTest {

    @Test
    public void testJavaScriptSingleQuoteHandling() {
        String inputHtml = "<HTML>\n"
                + "<body>\n"
                + " <div>\n"
                + "  <script language=\"JavaScript1.1\"> \n"
                + "    document.write('</scr' + 'ipt>');\n"
                + "  </script>\n"
                + " </div>\n"
                + "</body>\n"
                + "</HTML>";

        // Assuming `processHtml` is the method/function that processes the HTML
        String processedHtml = processHtml(inputHtml);

        String expectedSnippet = "document.write('</scr' + 'ipt>');";
        
        assertTrue("Processed HTML should contain the correct JavaScript string.",
                processedHtml.contains(expectedSnippet));
    }

    private String processHtml(String inputHtml) {
        // Simulate the processing of the HTML which introduces the bug.
        // This would typically be a call to the method or library you are testing.

        // For demonstration, mimicking the bug by wrongly transforming the input.
        return inputHtml.replace("</scr' + 'ipt>", "</scr + 'ipt>");
    }
}
