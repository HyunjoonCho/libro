
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.ParseException;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;

public class CommandLineTest {

    @Test
    public void testGetOptionValueWithLongOptionName() throws ParseException {
        // Arrange: create an option
        final String debugOpt = "debug";
        Option debug = Option.builder("d")
            .longOpt(debugOpt)
            .desc("turn on debugging")
            .hasArg()
            .argName("debugOpt")
            .build();

        // Create options and add the debug option
        Options options = new Options();
        options.addOption(debug);

        // Simulate command line arguments
        String[] args = new String[] {"--debug", "true"};

        // Parse the command line
        CommandLine commandLine = new DefaultParser().parse(options, args);

        // Act: Attempt to fetch the option value using the long name
        String dbg = commandLine.getOptionValue(debugOpt);

        // Assert: Check if the option value is retrieved correctly using the long option name
        assertEquals("true", dbg);

        // Additionally, check using the short option name as per the original method
        String dbgShort = commandLine.getOptionValue('d');
        assertEquals("true", dbgShort);
    }

    @Test
    public void testGetOptionValueWithUnknownOption() throws ParseException {
        // Arrange
        Options options = new Options();
        CommandLine commandLine = new DefaultParser().parse(options, new String[]{});

        // Act: Attempt to fetch the value of a non-existing option
        String dbg = commandLine.getOptionValue("nonexistent");

        // Assert: The result should be null
        assertNull(dbg);
    }
}
