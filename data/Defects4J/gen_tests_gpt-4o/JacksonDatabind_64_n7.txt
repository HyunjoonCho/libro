
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class JsonIncludeNonDefaultTest {

    @JsonInclude(JsonInclude.Include.NON_DEFAULT)
    static class TestClass {
        public String value;
        
        public TestClass() {
            this.value = null; // default for String
        }
    }

    @Test
    public void testJsonIncludeNonDefault() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        TestClass instance = new TestClass();
        
        // Serialize the object to JSON
        String jsonString = objectMapper.writeValueAsString(instance);
        
        // Check if 'value' field is not present in the serialized JSON
        assertFalse(jsonString.contains("value"));
        
        // Set value to a non-default
        instance.value = "non-default";
        
        // Serialize again
        jsonString = objectMapper.writeValueAsString(instance);
        
        // Check if 'value' field is now present in the serialized JSON
        assertTrue(jsonString.contains("value"));
    }
}
