
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.exc.MismatchedInputException;
import org.junit.Test;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class Iso8601DateParsingTest {

    @Test
    public void testParseIso8601Dates() {
        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);

        String[] dateStrings = {
            "2014-10-03T18:00:00.6-05:00",
            "2014-10-03T18:00:00.61-05:00",
            "1997-07-16T19:20+01:00",
            "1997-07-16T19:20:30.45+01:00"
        };

        String[] expectedDates = {
            "2014-10-03T18:00:00.600-05:00",
            "2014-10-03T18:00:00.610-05:00",
            "1997-07-16T19:20:00.000+01:00",
            "1997-07-16T19:20:30.450+01:00"
        };

        SimpleDateFormat iso8601Format = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX");

        for (int i = 0; i < dateStrings.length; i++) {
            try {
                Date date = objectMapper.readValue("\"" + dateStrings[i] + "\"", Date.class);
                assertEquals(iso8601Format.parse(expectedDates[i]), date);
            } catch (MismatchedInputException | ParseException e) {
                fail("Failed to parse date string: " + dateStrings[i] + ". Error: " + e.getMessage());
            }
        }
    }
}
