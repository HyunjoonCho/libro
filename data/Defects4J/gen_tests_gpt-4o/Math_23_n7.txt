public void testBrentOptimizerBestPoint() {
    UnivariateFunction function = new UnivariateFunction() {
        public double value(double x) {
            return (x - 2) * (x - 2);
        }
    };
    BrentOptimizer optimizer = new BrentOptimizer(1e-10, 1e-14);
    UnivariatePointValuePair result = optimizer.optimize(new MaxEval(1000),
            new UnivariateObjectiveFunction(function),
            GoalType.MINIMIZE,
            new SearchInterval(-1, 5));

    double bestX = result.getPoint();
    double bestValue = result.getValue();

    // Manually check the previous point to ensure it is not better than the returned bestX
    double previousX = bestX - 1e-10;
    double previousValue = function.value(previousX);

    assertTrue(bestValue <= previousValue, "Optimizer did not return the best point.");
}