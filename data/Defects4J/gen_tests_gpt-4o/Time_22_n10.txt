
import org.joda.time.DateTimeConstants;
import org.joda.time.DateTimeZone;
import org.joda.time.Duration;
import org.joda.time.Period;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DurationToPeriodTest {

    @Test
    public void testDurationToPeriodWithFixedTimezone() {
        // Set the default time zone to GMT
        DateTimeZone.setDefault(DateTimeZone.forID("Etc/GMT"));

        // Duration of more than 24 hours
        Duration duration = new Duration(
                DateTimeConstants.MILLIS_PER_HOUR * 30 +
                DateTimeConstants.MILLIS_PER_MINUTE * 50 +
                DateTimeConstants.MILLIS_PER_SECOND * 14
        );

        // Convert duration to period
        Period period = duration.toPeriod();

        // Assert that the period is correctly split into days, hours, minutes, and seconds
        assertEquals("P1DT6H50M14S", period.toString());
    }

    @Test
    public void testDurationToPeriodWithDSTTimezone() {
        // Set the default time zone to a DST zone (e.g., America/Chicago)
        DateTimeZone.setDefault(DateTimeZone.forID("America/Chicago"));

        // Duration of more than 24 hours
        Duration duration = new Duration(
                DateTimeConstants.MILLIS_PER_HOUR * 30 +
                DateTimeConstants.MILLIS_PER_MINUTE * 50 +
                DateTimeConstants.MILLIS_PER_SECOND * 14
        );

        // Convert duration to period
        Period period = duration.toPeriod();

        // Assert that the period is incorrectly represented just in hours, minutes, and seconds
        assertEquals("PT30H50M14S", period.toString());
    }
}
