
import static org.junit.Assert.assertThrows;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import org.apache.commons.compress.archivers.ArchiveOutputStream;
import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;
import org.junit.Test;

public class ArchiveOutputStreamTest {

    @Test
    public void testPublicFinishMethodNotAllowed() throws IOException {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        ArchiveOutputStream archiveOutputStream = new TarArchiveOutputStream(byteArrayOutputStream);

        // Since finish() is public, a user can attempt to call it directly.
        // This test checks if calling finish() directly leads to any undesired behavior.

        // Expect an IOException or any relevant exception if the implementation changes to
        // prevent direct calling of finish().
        assertThrows(IOException.class, archiveOutputStream::finish);
    }
}
