
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidTypeIdException;
import org.junit.Test;
import static org.junit.Assert.*;

public class SecurityTest {

    @Test
    public void testBlockedJDKTypeDeserialization() {
        ObjectMapper objectMapper = new ObjectMapper();
        String maliciousJson = "{\"@type\":\"java.util.logging.FileHandler\",\"pattern\":\"maliciousPattern\"}";

        try {
            objectMapper.readValue(maliciousJson, Object.class);
            fail("Expected InvalidTypeIdException was not thrown");
        } catch (InvalidTypeIdException e) {
            // Success: the exception should indicate that the type is blocked
            assertTrue(e.getMessage().contains("blocked for security reasons"));
        } catch (Exception e) {
            // Fail the test if any other exception is thrown
            fail("Unexpected exception: " + e.getMessage());
        }
    }
}
