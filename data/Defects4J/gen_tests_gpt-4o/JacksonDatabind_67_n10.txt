
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.deser.BeanDeserializerModifier;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
import com.fasterxml.jackson.databind.deser.KeyDeserializer;
import com.fasterxml.jackson.datatype.guava.GuavaModule;
import com.google.common.collect.ImmutableMap;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

// Sample Enum for testing
enum Color {
    RED, GREEN, BLUE;
}

public class EnumKeyDeserializationTest {

    private ObjectMapper configureMapper() {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new GuavaModule());

        SimpleModule testModule = new SimpleModule();
        testModule.setDeserializerModifier(new BeanDeserializerModifier() {
            @Override
            public KeyDeserializer modifyKeyDeserializer(
                    DeserializationConfig config,
                    JavaType type,
                    KeyDeserializer deserializer) {
                if (type.isEnumType()) {
                    return new KeyDeserializer() {
                        @Override
                        @SuppressWarnings("unchecked")
                        public Object deserializeKey(String key, DeserializationContext ctxt)
                                throws IOException, JsonProcessingException {
                            Class<? extends Enum> rawClass = (Class<Enum<?>>) type.getRawClass();
                            return Enum.valueOf(rawClass, key.toUpperCase());
                        }
                    };
                }
                return super.modifyKeyDeserializer(config, type, deserializer);
            }
        });

        mapper.registerModule(testModule);
        return mapper;
    }

    @Test
    public void testEnumKeyDeserialization() throws IOException {
        ObjectMapper mapper = configureMapper();

        String json = "{\"red\":\"value1\", \"green\":\"value2\"}";

        ImmutableMap<Color, String> map = mapper.readValue(
                json, mapper.getTypeFactory().constructMapLikeType(ImmutableMap.class, Color.class, String.class));

        assertEquals("value1", map.get(Color.RED));
        assertEquals("value2", map.get(Color.GREEN));
    }
}
