
import org.junit.Test;
import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.List;

public class ElitisticListPopulationTest {

    @Test(expected = IllegalArgumentException.class)
    public void testElitismRateAboveOneInConstructor() {
        List<Object> populationList = new ArrayList<>();
        // Here we are assuming there is a constructor like:
        // ElitisticListPopulation(List<Object> population, int populationLimit, double elitismRate)
        new ElitisticListPopulation(populationList, 10, 1.5);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testElitismRateBelowZeroInConstructor() {
        List<Object> populationList = new ArrayList<>();
        // Same constructor assumption as above
        new ElitisticListPopulation(populationList, 10, -0.1);
    }

    // A successful case for comparison
    @Test
    public void testValidElitismRateInConstructor() {
        List<Object> populationList = new ArrayList<>();
        try {
            // Valid elitismRate
            ElitisticListPopulation population = new ElitisticListPopulation(populationList, 10, 0.5);
            assertNotNull(population);
        } catch (IllegalArgumentException e) {
            fail("Constructor threw exception with a valid elitism rate");
        }
    }
}
