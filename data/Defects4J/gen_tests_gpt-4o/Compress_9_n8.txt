
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.ArchiveException;
import org.apache.commons.compress.archivers.ArchiveOutputStream;
import org.apache.commons.compress.archivers.ArchiveStreamFactory;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;

import static org.junit.Assert.assertTrue;

public class TarArchiveOutputStreamTest {

    @Test
    public void testGetBytesWritten() throws IOException, ArchiveException {
        // Setup a small temporary file for testing
        File tempFile = File.createTempFile("tempTestFile", ".txt");
        tempFile.deleteOnExit();

        // Write some data to the temp file
        OutputStream out = new java.io.FileOutputStream(tempFile);
        byte[] data = new byte[1024];  // 1 KB of data
        out.write(data);
        out.close();

        // Create a byte array output stream to simulate writing to a tar file
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        ArchiveOutputStream archiveOutputStream = new ArchiveStreamFactory()
                .createArchiveOutputStream(ArchiveStreamFactory.TAR, byteArrayOutputStream);

        // Add the temp file to the tar archive
        TarArchiveEntry entry = new TarArchiveEntry(tempFile);
        archiveOutputStream.putArchiveEntry(entry);

        FileInputStream fileInputStream = new FileInputStream(tempFile);
        byte[] buffer = new byte[1024];
        int bytesRead;
        while ((bytesRead = fileInputStream.read(buffer)) != -1) {
            archiveOutputStream.write(buffer, 0, bytesRead);
        }

        archiveOutputStream.closeArchiveEntry();
        archiveOutputStream.close();
        fileInputStream.close();

        // Verify that the bytes written are greater than 0
        long bytesWritten = ((TarArchiveOutputStream) archiveOutputStream).getBytesWritten();
        assertTrue("Bytes written should be greater than 0, but was " + bytesWritten, bytesWritten > 0);
    }
}
