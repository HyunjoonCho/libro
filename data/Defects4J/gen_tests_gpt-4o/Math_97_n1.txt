
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolver;

import junit.framework.TestCase;

public class BrentSolverTest extends TestCase {

    private static class TestFunction implements UnivariateRealFunction {
        public double value(double x) {
            if (x == -100000.0) {
                return 0.0;
            } else {
                return -101945.04630982173;
            }
        }
    }

    public void testBrentSolverThrowsIllegalArgumentException() {
        UnivariateRealSolver solver = new BrentSolver();
        UnivariateRealFunction function = new TestFunction();

        try {
            double result = solver.solve(function, -100000.0, Double.MAX_VALUE);
            assertEquals(0.0, result, 1e-6);
        } catch (IllegalArgumentException e) {
            fail("Solver should not throw IllegalArgumentException for endpoints with one zero value.");
        } catch (Exception e) {
            fail("Unexpected exception: " + e);
        }
    }
}
