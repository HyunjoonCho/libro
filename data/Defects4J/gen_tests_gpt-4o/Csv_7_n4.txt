public void testHeaderMapWithDuplicateColumns() {
    CSVFormat myFormat = CSVFormat.RFC4180.withDelimiter(',')
                                          .withQuoteChar('"')
                                          .withQuotePolicy(Quote.MINIMAL)
                                          .withIgnoreSurroundingSpaces(true)
                                          .withHeader()
                                          .withSkipHeaderRecord(true);

    String csvData = "Col1,Col2,Col2,Col3,Col4\n"
                   + "1,2,3,4,5\n"
                   + "4,5,6,7,8";

    try {
        CSVParser parser = CSVParser.parse(csvData, myFormat);
        Map<String, Integer> headerMap = parser.getHeaderMap();
        // The test will reproduce the issue if accessing by duplicate header name results in missing entries
        // Check if the header map size doesn't match the number of unique headers in the data
        assertEquals(4, headerMap.size());
        assertTrue(headerMap.containsKey("Col1"));
        assertTrue(headerMap.containsKey("Col2"));
        assertTrue(headerMap.containsKey("Col3"));
        assertTrue(headerMap.containsKey("Col4"));
    } catch (IOException e) {
        fail("Parsing CSV failed with an IOException.");
    }
}