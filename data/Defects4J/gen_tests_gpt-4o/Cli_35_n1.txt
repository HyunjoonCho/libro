public void testLongOptAmbiguity() {
    Options options = new Options();
    options.addOption(Option.builder().longOpt("importToOpen").hasArg().argName("FILE").build());
    options.addOption(Option.builder("i").longOpt("import").hasArg().argName("FILE").build());

    DefaultParser parser = new DefaultParser();
    try {
        parser.parse(options, new String[]{"--import=FILE"});
        fail("Expected AmbiguousOptionException to be thrown");
    } catch (AmbiguousOptionException e) {
        // Expected exception due to ambiguity between --import and --importToOpen
        assertEquals("The option '--import' is ambiguous. Options: [import, importToOpen].", e.getMessage());
    } catch (ParseException e) {
        fail("Expected AmbiguousOptionException, but got: " + e.getClass().getSimpleName());
    }
}