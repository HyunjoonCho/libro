public void testLongDirectoryNameInTarArchive() throws IOException {
    File tempDir = Files.createTempDirectory("testLongDirectoryName").toFile();
    try {
        String longDirName = "a".repeat(101); // create a directory name longer than 100 bytes
        File longDir = new File(tempDir, longDirName);
        assertTrue(longDir.mkdirs());

        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        TarArchiveOutputStream tarOut = new TarArchiveOutputStream(baos);
        try {
            TarArchiveEntry entry = new TarArchiveEntry(longDir, "./" + longDir.getName() + "/");
            tarOut.putArchiveEntry(entry);
            tarOut.closeArchiveEntry();
        } catch (IOException e) {
            // Expected failure due to the long directory name
            assertEquals("request to write '" + longDir.getName().length() + "' bytes exceeds size in header of '0' bytes for entry './PaxHeaders.X/" + longDir.getName() + "/'", e.getMessage());
        } finally {
            tarOut.close();
        }
    } finally {
        // Clean up the temporary directory
        Files.walk(tempDir.toPath())
            .sorted(Comparator.reverseOrder())
            .map(Path::toFile)
            .forEach(File::delete);
    }
}