script
function testRedefinitionMiscompilation() {
    function assert(b) {
        if (!b) throw new Error("Assertion failed");
    }

    // Test case to reproduce the miscompilation bug
    assert(f() === 1);  // First use of 'f', expecting the function declaration
    var f = function() { return 2; };  // Redefinition with function expression
    assert(f() === 2);  // Second use of 'f', expecting the function expression

    function f() { return 1; } // Function declaration that should be hoisted

    // If the bug is present, the first assert will mistakenly reference the function expression
    // due to incorrect hoisting behavior, causing an assertion failure.
}

try {
    testRedefinitionMiscompilation();
    console.log("Test passed, no error encountered.");
} catch (error) {
    console.error("Test failed:", error);
}
