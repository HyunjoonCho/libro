
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.rhino.head.CompilerEnvirons;
import org.junit.Test;
import static org.junit.Assert.assertFalse;

public class JscDeterministicTest {

    @Test
    public void testInvalidJscDeterministicTest() {
        Compiler compiler = new Compiler();

        // Define the JavaScript source
        SourceFile input = SourceFile.fromCode("input.js",
                "var t = null;\n" +
                "\n" +
                "window.test = function() {\n" +
                "  if (t != null) {\n" +
                "    t = null;\n" +
                "  }\n" +
                "  t = 1;\n" +
                "};"
        );

        // Create the externs file to satisfy the window object reference
        SourceFile externs = JSSourceFile.fromCode("externs.js", "var window = {};");

        // Set the compilation level to ADVANCED_OPTIMIZATIONS
        CompilerEnvirons env = new CompilerEnvirons();
        env.setOptimizationLevel(9);

        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(compiler.getOptions());

        // Compile the source with externs
        Result result = compiler.compile(externs, input, compiler.getOptions());

        // Check for warnings
        assertFalse("Expected no warnings, but found some.", result.warnings.length > 0);
    }
}
