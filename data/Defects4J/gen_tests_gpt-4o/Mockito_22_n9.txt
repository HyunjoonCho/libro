
import static org.mockito.Mockito.*;
import static org.junit.Assert.*;
import org.junit.Test;
import java.util.function.Supplier;

public class GenericDeepStubsTest {

    interface I {
        <T> Supplier<T> m(Class<T> type);
    }

    @Test(expected = ClassCastException.class)
    public void testDeepStubsWithGenerics() {
        I i = mock(I.class, RETURNS_DEEP_STUBS);
        // This should throw a ClassCastException as described in the bug report
        when(i.m(Boolean.class).get());
    }

    @Test
    public void testWithoutDeepStubs() {
        I i = mock(I.class);
        Supplier<Boolean> supplierMock = mock(Supplier.class);
        when(i.m(Boolean.class)).thenReturn(supplierMock);
        when(supplierMock.get()).thenReturn(true);

        // Validate behavior without deep stubbing
        assertEquals(true, i.m(Boolean.class).get());
    }
}
