
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipFile;
import org.junit.Test;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

public class UnicodeZipFileTest {

    @Test
    public void testReadZipFileWithUnicodeExtraFields() throws IOException {
        // You would need an actual ZIP file with Unicode extra fields created by WinZip.
        // For this test to work, ensure "unicode-winzip.zip" is such a file.
        File zipFile = new File("unicode-winzip.zip");

        try (ZipFile zf = new ZipFile(zipFile)) {
            Enumeration<ZipArchiveEntry> entries = zf.getEntries();
            assertTrue("The zip file should contain entries.", entries.hasMoreElements());

            while (entries.hasMoreElements()) {
                ZipArchiveEntry entry = entries.nextElement();
                InputStream inputStream = zf.getInputStream(entry);

                // This assertion checks the bug - if inputStream is null, the bug is present.
                assertNotNull("Input stream should not be null for entry: " + entry.getName(), inputStream);
                
                // Optionally, you could read the stream to ensure it's readable
                // byte[] buffer = new byte[1024];
                // while (inputStream.read(buffer) != -1) {
                //     // Do nothing, just read through the stream
                // }
                inputStream.close();
            }
        }
    }
}
