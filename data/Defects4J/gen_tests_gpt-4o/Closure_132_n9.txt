
import org.junit.Test;
import static org.junit.Assert.*;

public class IfStatementTest {

    @Test
    public void testIfStatementTransformation() {
        int[][] es = {
            {0, 1, 0},
            {1, 0, 1},
            {1, 1, 1}
        };
        int esi = 2;

        // Original INPUT logic
        if (es[--esi][es[esi + 1]] == 1) {
            es[esi] = 0;
        } else {
            es[esi] = 1;
        }

        // After applying the transformation, the expected OUTPUT
        int[][] expectedEs = {
            {0, 1, 0},
            {0, 0, 1}, // es[1][1] == 1, thus es[1] should be set to 0
            {1, 1, 1}
        };

        assertArrayEquals(expectedEs, es);

        // This should correctly simulate: es[--esi] = es[esi][es[esi + 1]] == 1 ? 0 : 1;
        esi = 2; // Reset esi
        es = new int[][] {
            {0, 1, 0},
            {1, 0, 1},
            {1, 1, 1}
        };
        es[--esi] = es[esi][es[esi + 1]] == 1 ? 0 : 1;

        expectedEs = new int[][] {
            {0, 1, 0},
            {0, 0, 1}, // After transformation, es[1] should be 0 again
            {1, 1, 1}
        };
        
        assertArrayEquals(expectedEs, es);
    }
}
