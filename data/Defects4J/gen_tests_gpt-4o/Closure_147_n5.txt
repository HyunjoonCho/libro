public void testUsedGlobalThisWarning() {
    CompilerOptions options = new CompilerOptions();
    options.setCheckGlobalThisLevel(CheckLevel.WARNING);

    Compiler compiler = new Compiler();
    compiler.initOptions(options);

    String code = ""
        + "var NS = {\n"
        + "  read: function() {\n"
        + "    return this.foo;\n"
        + "  },\n"
        + "  write: function() {\n"
        + "    this.foo = 123;\n"
        + "  }\n"
        + "};\n"
        + "NS.write2 = function() {\n"
        + "  this.foo = 123;\n"
        + "};";

    Result result = compiler.compile(
        SourceFile.fromCode("externs.js", ""), 
        SourceFile.fromCode("test.js", code), 
        options);

    List<JSError> warnings = result.warnings;
    long globalThisWarnings = warnings.stream()
        .filter(w -> w.getType().key.equals("JSC_USED_GLOBAL_THIS"))
        .count();

    assertEquals(3, globalThisWarnings);
}