
import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;
import org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream;
import org.apache.commons.io.IOUtils;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class CpioArchiveInputStreamTest {

    @Test
    public void testCpioUnpack() {
        File dir = new File("target/unpack");
        if (!dir.exists()) {
            dir.mkdirs();
        }

        final File input = new File("src/test/resources/cmdcreated.cpio");

        try (InputStream in = new FileInputStream(input);
             CpioArchiveInputStream cin = new CpioArchiveInputStream(in)) {

            CpioArchiveEntry entry = null;

            while ((entry = (CpioArchiveEntry) cin.getNextCPIOEntry()) != null) {
                File target = new File(dir, entry.getName());
                try (OutputStream out = new FileOutputStream(target)) {
                    IOUtils.copy(cin, out);
                }
            }

            fail("Expected EOFException was not thrown.");
        } catch (java.io.EOFException e) {
            // Verify the exception is thrown as expected
            assertTrue(e.getMessage().contains("EOF"));
        } catch (Exception e) {
            e.printStackTrace();
            fail("Unexpected exception: " + e.getMessage());
        }
    }
}
