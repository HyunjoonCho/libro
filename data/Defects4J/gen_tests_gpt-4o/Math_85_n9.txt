
import org.apache.commons.math.distribution.NormalDistribution;
import org.apache.commons.math.distribution.NormalDistributionImpl;
import org.apache.commons.math.MathException;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class NormalDistributionTest {

    @Test
    public void testInverseCumulativeProbability_bug() {
        NormalDistribution normal = new NormalDistributionImpl();
        
        try {
            // Test the probability that should approximately return a z-score of 2.0
            double result = normal.inverseCumulativeProbability(0.9772498680518209);
            assertEquals(2.0, result, 1e-4);
        } catch (MathException e) {
            fail("MathException was thrown: " + e.getMessage());
        }

        try {
            // Test the probability that should approximately return a z-score of 3.0
            double result = normal.inverseCumulativeProbability(0.9986501019683698);
            assertEquals(3.0, result, 1e-4);
        } catch (MathException e) {
            fail("MathException was thrown: " + e.getMessage());
        }

        try {
            // Test the probability that should approximately return a z-score of 4.0
            double result = normal.inverseCumulativeProbability(0.9999683287581673);
            assertEquals(4.0, result, 1e-4);
        } catch (MathException e) {
            fail("MathException was thrown: " + e.getMessage());
        }
    }
}
