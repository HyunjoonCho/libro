
import org.apache.commons.math3.optimization.univariate.BrentOptimizer;
import org.apache.commons.math3.optimization.GoalType;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.exception.NullArgumentException;
import org.junit.Test;

import static org.junit.Assert.assertThrows;

public class BrentOptimizerTest {

    @Test
    public void testBrentOptimizerWithoutConvergenceChecker() {
        // Create a simple univariate function
        UnivariateFunction parabola = x -> (x - 2) * (x - 2);

        // Create a BrentOptimizer without setting a ConvergenceChecker
        BrentOptimizer optimizer = new BrentOptimizer(1e-10, 1e-14);

        // Ensure that a NullPointerException is thrown when trying to optimize
        assertThrows(NullPointerException.class, () -> {
            optimizer.optimize(100, parabola, GoalType.MINIMIZE, -10.0, 10.0);
        });
    }
}
