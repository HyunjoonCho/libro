public void testWithHourOfDayOnDSTTransition() {
    Chronology chronUTC = GregorianChronology.getInstance(DateTimeZone.UTC);

    // Create dates for the US/Central timezone transition
    DateTime usCentralStandardInUTC = new DateTime(2008, 11, 2, 7, 0, 0, 0, chronUTC);
    DateTime usCentralDaylightInUTC = new DateTime(2008, 11, 2, 6, 0, 0, 0, chronUTC);

    Chronology chronUSCentral = GregorianChronology.getInstance(DateTimeZone.forID("US/Central"));

    DateTime usCentralStandardInUSCentral = usCentralStandardInUTC.toDateTime(chronUSCentral);
    DateTime usCentralDaylightInUSCentral = usCentralDaylightInUTC.toDateTime(chronUSCentral);

    // Create dates for the Australia/NSW timezone transition
    DateTime australiaNSWStandardInUTC = new DateTime(2008, 4, 5, 16, 0, 0, 0, chronUTC);
    DateTime australiaNSWDaylightInUTC = new DateTime(2008, 4, 5, 15, 0, 0, 0, chronUTC);

    Chronology chronAusNSW = GregorianChronology.getInstance(DateTimeZone.forID("Australia/NSW"));

    DateTime australiaNSWStandardInAustraliaNSW = australiaNSWStandardInUTC.toDateTime(chronAusNSW);
    DateTime australiaNSWDaylightInAusraliaNSW = australiaNSWDaylightInUTC.toDateTime(chronAusNSW);

    // Verify setting the hour of day on the DST boundary results in daylight time for both zones
    assertEquals(usCentralDaylightInUSCentral, usCentralStandardInUSCentral.withHourOfDay(1));
    assertEquals(australiaNSWDaylightInAusraliaNSW, australiaNSWStandardInAustraliaNSW.withHourOfDay(2));
}