
import org.junit.Test;
import static org.junit.Assert.*;

public class ClosureCompilerTest {

    public boolean closureCompilerTest(Object someNode) {
        int nodeId;
        try {
            return ((nodeId = Integer.parseInt(someNode.toString())) && (nodeId = Integer.parseInt(someNode.toString().substring(1))) && nodeId > 0);
        } catch (NumberFormatException e) {
            return false;
        }
    }

    @Test
    public void testClosureCompilerIncorrectAssignment() {
        // Mock object with id field
        class Node {
            String id;

            Node(String id) {
                this.id = id;
            }

            @Override
            public String toString() {
                return this.id;
            }
        }

        Node node = new Node("123");
        boolean result = closureCompilerTest(node);

        // Based on the unoptimized JS function, this should return true. 
        // However, due to the reported bug, it might return false if the Closure Compiler 
        // incorrectly optimizes the code.
        assertTrue("The closureCompilerTest did not return the expected result.", result);
    }
}
