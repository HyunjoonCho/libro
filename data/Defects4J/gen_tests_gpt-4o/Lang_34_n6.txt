public void testThreadLocalMemoryLeakInToStringStyle() {
    final int initialThreadCount = Thread.activeCount();
    ToStringStyle style = ToStringStyle.DEFAULT_STYLE;
    String result = new ToStringBuilder(this, style).append("test", 123).toString();

    // Force garbage collection and allow some time for threads to terminate
    System.gc();
    try {
        Thread.sleep(1000);
    } catch (InterruptedException e) {
        Thread.currentThread().interrupt();
    }

    // Verify thread count to detect leaked threads due to ThreadLocal
    assertTrue("Potential thread leak detected", Thread.activeCount() <= initialThreadCount);
}