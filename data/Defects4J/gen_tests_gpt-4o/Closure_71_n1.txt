public void testPrivatePropertyRedeclarationWarning() {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticGroups.VISIBILITY, CheckLevel.ERROR);

    String foo = "/** @constructor */ function Foo() { /** @private */ this.x_ = 3; }";
    String subFoo = "/** @constructor \n * @extends {Foo} */ function SubFoo() { /** @private */ this.x_ = 3; }";
    
    compiler.init(
        ImmutableList.of(SourceFile.fromCode("externs", "")),
        ImmutableList.of(SourceFile.fromCode("Foo", foo), SourceFile.fromCode("SubFoo", subFoo)),
        options);

    compiler.parseAndTypeCheck();

    JSError[] warnings = compiler.getWarnings();
    boolean hasError = false;
    for (JSError warning : warnings) {
        if (warning.getType() == CheckPrivateProperties.COLLISION) {
            hasError = true;
            break;
        }
    }
    assertTrue("Expected to find a @private property redeclaration error", hasError);
}