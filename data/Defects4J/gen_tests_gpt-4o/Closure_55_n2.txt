public void testExceptionWhenEmittingCodeWithGetters() {
    String code = "var obj = { get name() { return 'value'; } };";
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    
    try {
        compiler.initOptions(options);
        compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test.js", code), options);
        fail("Expected RuntimeException due to getter but didn't happen");
    } catch (RuntimeException e) {
        assertTrue(e.getCause() instanceof IllegalStateException);
        assertEquals("Expected function but was call Reference node CALL 128 [free_call: 1] [source_file: Settings.js]",
                     e.getCause().getMessage());
    }
}