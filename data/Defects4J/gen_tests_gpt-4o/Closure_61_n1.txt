
import static org.junit.Assert.assertEquals;
import com.google.javascript.jscomp.CommandLineRunner;
import org.junit.Before;
import org.junit.Test;

public class ClosureCompilerTest {
    
    private String codeWithMath;
    private String codeWithN;

    @Before
    public void setUp() {
        codeWithMath = "Math.blah = function(test) { test.a = 5; }; var test = new Object(); Math.blah(test);";
        codeWithN = "var n = {}; n.blah = function(test) { test.a = 5; }; var test = new Object(); n.blah(test);";
    }

    @Test
    public void testMathBlahCodeRetention() throws Exception {
        String[] args = {
            "--js", "input.js",
            "--compilation_level", "SIMPLE_OPTIMIZATIONS"
        };
        CommandLineRunner runner = new CommandLineRunner(args);
        
        // Using Math, the call to Math.blah(test) should be retained
        assertEquals(
            "Math.blah=function(a){a.a=5;};var test={};Math.blah(test);",
            runner.runForStringResult(codeWithMath)
        );
    }
    
    @Test
    public void testNBlahCodeRetention() throws Exception {
        String[] args = {
            "--js", "input.js",
            "--compilation_level", "SIMPLE_OPTIMIZATIONS"
        };
        CommandLineRunner runner = new CommandLineRunner(args);
        
        // Using n, the call to n.blah(test) should be retained
        assertEquals(
            "var n={};n.blah=function(a){a.a=5;};var test={};n.blah(test);",
            runner.runForStringResult(codeWithN)
        );
    }
}
