
import org.apache.commons.lang3.time.FastDateFormat;
import org.junit.Test;

import java.io.*;

import static org.junit.Assert.assertEquals;

// Test case to reproduce issue with FastDateFormat serialization
public class FastDateFormatSerializationTest {

    @Test
    public void testFastDateFormatSerialization() throws IOException, ClassNotFoundException {
        // Create a FastDateFormat instance
        FastDateFormat format = FastDateFormat.getInstance("yyyy-MM-dd");

        // Serialize the FastDateFormat instance to a byte array
        byte[] serializedFormat;
        try (ByteArrayOutputStream bos = new ByteArrayOutputStream();
             ObjectOutputStream out = new ObjectOutputStream(bos)) {
            out.writeObject(format);
            out.flush();
            serializedFormat = bos.toByteArray();
        }

        // Deserialize the FastDateFormat instance from the byte array
        FastDateFormat deserializedFormat;
        try (ByteArrayInputStream bis = new ByteArrayInputStream(serializedFormat);
             ObjectInputStream in = new ObjectInputStream(bis)) {
            deserializedFormat = (FastDateFormat) in.readObject();
        }

        // Test if the serialized and deserialized object produces the same format
        String originalFormattedDate = format.format(System.currentTimeMillis());
        String deserializedFormattedDate = deserializedFormat.format(System.currentTimeMillis());

        assertEquals(originalFormattedDate, deserializedFormattedDate);
    }
}
