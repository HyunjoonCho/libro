
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import java.util.Arrays;

import static org.junit.Assert.fail;

public class ClosureCompilerTest {

    @Test
    public void testIllegalStateExceptionInFunctionType() {
        String jsCode = "var test = {};\n" +
                "/**\n" +
                " * @interface\n" +
                " */\n" +
                "test.T = function() {};\n" +
                "/**\n" +
                " * @constructor\n" +
                " * @implements {test.T}\n" +
                " */\n" +
                "test.A = function() {};\n" +
                "/**\n" +
                " * @constructor\n" +
                " * @implements {test.T}\n" +
                " */\n" +
                "test.B = function() {};\n" +
                "/**\n" +
                " * @constructor\n" +
                " */\n" +
                "test.X = function() {\n" +
                "    this.type = test.A;\n" +
                "    this.t = this.f();\n" +
                "};\n" +
                "/**\n" +
                " * @return {test.T}\n" +
                " */\n" +
                "test.X.prototype.f = function() {\n" +
                "    if (this.type === test.A) {\n" +
                "        return new test.A();\n" +
                "    } else if (this.type === test.B) {\n" +
                "        return new test.B();\n" +
                "    }\n" +
                "};";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setWarningLevel(CompilerOptions.Warnings.ALL, CompilerOptions.FORCE_ASUTION_LEVEL);

        // Add appropriate options
        options.setWarningLevel(CompilerOptions.LINT_CHECKS, CompilerOptions.Warnings.ON);

        // Compile the JavaScript code
        Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("crash.js", jsCode), options);

        if (result.success) {
            fail("Expected compiler to throw an IllegalStateException, but it succeeded.");
        } else {
            // Ensure that an IllegalStateException is in the error logs
            for (JSError error : result.errors) {
                if (error.getType().key.equals("JSC_INTERNAL_ERROR")) {
                    return; // Found the expected error
                }
            }
            fail("Expected an internal compiler error, but didn't find it in the logs.");
        }
    }
}
