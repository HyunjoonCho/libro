
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;
import org.junit.Test;

public class TarGzUserGroupTest {

    @Test
    public void testExtractNoFileOwner() {
        TarArchiveInputStream tarInputStream = null;

        try {
            // Assuming the file is downloaded and located in a local path
            String filePath = "/path/to/redis-dist-2.8.3_1-linux.tar.gz";
            tarInputStream = new TarArchiveInputStream(new GzipCompressorInputStream(new FileInputStream(new File(filePath))));

            TarArchiveEntry entry;
            while ((entry = tarInputStream.getNextTarEntry()) != null) {
                System.out.println("Entry Name: " + entry.getName());
                System.out.println("User/Group: " + entry.getUserName() + "/" + entry.getGroupName());
            }
        } catch (FileNotFoundException e) {
            fail("File not found: " + e.getMessage());
        } catch (IOException e) {
            fail("IOException occurred: " + e.getMessage());
        } finally {
            if (tarInputStream != null) {
                try {
                    tarInputStream.close();
                } catch (IOException e) {
                    // ignoring exceptions during close
                }
            }
        }
    }

    private void fail(String message) {
        throw new AssertionError(message);
    }
}
