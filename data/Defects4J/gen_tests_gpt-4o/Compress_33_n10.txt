
import org.apache.commons.compress.compressors.CompressorException;
import org.apache.commons.compress.compressors.CompressorInputStream;
import org.apache.commons.compress.compressors.CompressorStreamFactory;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.Base64;

import static org.junit.Assert.fail;

public class CompressorStreamFactoryTest {

    @Test
    public void testZlibHeaderHandling() {
        // Base64 encoded zlib compressed data (header included)
        // Note: Replace this with actual zlib compressed data with a valid header
        String base64ZlibData = "eJzNzjEOwjAMBuC7Z+hSIGVIq+KET3v4ZmBSEJxQbX6/TiBG9zNZudlZ6rcOfk04XPJ8mBuDdaxC" +
                                "jlksZAkKjeogSCQrZPVnIJLRUPZic7SRMuqnmKLXSals7m5ydfBX3YBPWcDKRiso+gBde5d2UYY3" +
                                "b6453d+/APAO9Vp";

        byte[] zlibData = Base64.getDecoder().decode(base64ZlibData);
        
        try (InputStream is = new ByteArrayInputStream(zlibData)) {
            CompressorInputStream cis = new CompressorStreamFactory().createCompressorInputStream(is);
            fail("Expected a CompressorException due to unrecognized zlib header");
        } catch (CompressorException e) {
            // Expected exception since zlib headers are not handled
            System.out.println("Caught expected exception: " + e.getMessage());
        } catch (Exception e) {
            fail("Unexpected exception: " + e.getMessage());
        }
    }
}
