script
import static org.junit.Assert.fail;

import com.google.javascript.jscomp.CommandLineRunner;
import org.junit.Test;

public class ClosureCompilerDefineTest {

    @Test
    public void testDefineAnnotationWithSplitString() {
        String jsCode = ""
            + "/** @define {string} */\n"
            + "var CONSTANT = \"some very long string name that I want to wrap \" +\n"
            + "\"and so break using a + since I don't want to \" +\n"
            + "\"introduce a newline into the string.\";";

        String[] args = {
            "--js", "input.js"
        };

        try {
            CommandLineRunner runner = new CommandLineRunner(args) {
                @Override
                protected int doRun() throws Exception {
                    // Use the in-memory code
                    setJsCode(jsCode);
                    return super.doRun();
                }
            };
            runner.doRun();
            fail("Expected compilation error due to multiline string with @define.");
        } catch (Exception e) {
            // Expected behavior, verify the error message is related to the '+' issue
            if (!e.getMessage().contains("ERROR")) {
                fail("Unexpected error message: " + e.getMessage());
            }
        }
    }
}
