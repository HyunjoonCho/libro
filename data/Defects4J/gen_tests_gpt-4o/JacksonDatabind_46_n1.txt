
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;
import java.util.concurrent.atomic.AtomicReference;
import static org.junit.Assert.assertEquals;

public class SignatureTest {

    @Test
    public void testGenericSignatureForAtomicReference() {
        ObjectMapper mapper = new ObjectMapper();
        TypeFactory typeFactory = mapper.getTypeFactory();

        // Construct JavaType for AtomicReference<String>
        JavaType type = typeFactory.constructParametricType(AtomicReference.class, String.class);

        // Obtain the generic signature
        String genericSignature = type.getGenericSignature();

        // Verify the signature matches the expected pattern
        assertEquals("()Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/String;>;", genericSignature);
    }
}
