public void testTypeHierarchyAdapterRuntimeCheck() {
    GsonBuilder builder = new GsonBuilder();
    builder.registerTypeHierarchyAdapter(Vehicle.class, new JsonDeserializer<Vehicle>() {
        @Override
        public Vehicle deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
            if (json.getAsJsonObject().has("type")) {
                String type = json.getAsJsonObject().get("type").getAsString();
                if ("car".equals(type)) {
                    return new Car();
                } else if ("truck".equals(type)) {
                    return new Truck();
                }
            }
            throw new JsonParseException("Unknown type");
        }
    });

    Gson gson = builder.create();
    String json = "{\"type\":\"truck\"}";

    try {
        Car car = gson.fromJson(json, Car.class);
        fail("Expected JsonParseException to be thrown");
    } catch (JsonParseException e) {
        assertTrue(e.getMessage().contains("Unknown type"));
    }
}