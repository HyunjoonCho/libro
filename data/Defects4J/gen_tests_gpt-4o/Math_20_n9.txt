public void testCMAESOptimizerBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer(10000, 1e-9, true, 0, 10, null, false);
    MultivariateFunction fitnessFunction = new MultivariateFunction() {
        public double value(double[] point) {
            return point[0] * point[0] + point[1] * point[1];
        }
    };
    double[] startPoint = new double[] {2.0, 2.0};
    double[] lowerBound = new double[] {-1.0, -1.0};
    double[] upperBound = new double[] {1.0, 1.0};
    PointValuePair result = optimizer.optimize(new MaxEval(1000),
                                               new ObjectiveFunction(fitnessFunction),
                                               GoalType.MINIMIZE,
                                               new InitialGuess(startPoint),
                                               new SimpleBounds(lowerBound, upperBound));
    double[] solution = result.getPoint();
    for (int i = 0; i < solution.length; i++) {
        assertTrue("Solution exceeds the lower bound", solution[i] >= lowerBound[i]);
        assertTrue("Solution exceeds the upper bound", solution[i] <= upperBound[i]);
    }
}