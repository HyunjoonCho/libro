
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator;
import org.junit.Test;

import static org.junit.Assert.*;

public class DefaultTypingTest {

    @Test
    public void testReadTreeWithDefaultTyping() {
        try {
            ObjectMapper mapper = new ObjectMapper()
                    .activateDefaultTyping(
                            LaissezFaireSubTypeValidator.instance, 
                            ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE) 
                    .enable(MapperFeature.AUTO_DETECT_GETTERS)
                    .enable(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS)
                    .disable(MapperFeature.USE_GETTERS_AS_SETTERS)
                    .disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)
                    .enable(SerializationFeature.INDENT_OUTPUT)
                    .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

            Foo foo = new Foo("bar");
            String serialized = mapper.writeValueAsString(foo);

            // Attempt to read the serialized JSON as a tree
            JsonNode jsonNode = mapper.readTree(serialized);
            assertNotNull(jsonNode);
            assertEquals("bar", jsonNode.get("bar").asText());

            // Attempt to convert the object to a tree
            JsonNode node = mapper.valueToTree(foo);
            assertNotNull(node);
            assertEquals("bar", node.get("bar").asText());

        } catch (Exception e) {
            fail("Exception occurred: " + e.getMessage());
        }
    }

    public static class Foo {
        private String bar;

        public Foo() {
        }

        public Foo(String bar) {
            this.bar = bar;
        }

        public String getBar() {
            return bar;
        }

        public void setBar(String bar) {
            this.bar = bar;
        }
    }
}
