script
var goog = goog || {};

goog.isDef = function(val) {
    return val !== undefined;
};

goog.isFunction = function(val) {
    return typeof val === 'function';
};

goog.isBoolean = function(val) {
    return typeof val === 'boolean';
};

goog.isString = function(val) {
    return typeof val === 'string';
};

goog.isArray = function(val) {
    return Array.isArray(val);
};

// The function that has the problem
test.isMatched = function(object) {
    if (goog.isDef(object)) {
        if (goog.isFunction(object)) {
            // return object();
        } else if (goog.isBoolean(object)) {
            // return object;
        } else if (goog.isString(object)) {
            // return test.isDef(object);
        } else if (goog.isArray(object)) {
            var i = object.length;
        }
    }
    return false;
};

// Test case to trigger the bug
function testBadTypeInference() {
    var numberObject = 456; // Number, not an array
    console.log(test.isMatched(numberObject));
    // In the actual environment, this usage should lead to a warning as described in the bug report
}

testBadTypeInference();
