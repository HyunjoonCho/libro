
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolver;
import org.junit.Test;

public class BrentSolverBugTest {

    @Test(expected = IllegalArgumentException.class)
    public void testBrentSolverWithWrongSignInitialGuess() {
        // Define a simple function where the root is known.
        UnivariateRealFunction function = new UnivariateRealFunction() {
            @Override
            public double value(double x) {
                return x * x - 4; // Function with a root at x = 2 and x = -2
            }
        };

        // Create a Brent solver instance
        UnivariateRealSolver solver = new BrentSolver();

        // Define the interval with min and max where the root lies, but provide an initial guess with inappropriate sign
        double min = 0;  // Function is positive here
        double max = 3;  // Function is positive here
        double initial = -3;  // Function is also positive here (contradicting the expected behavior)

        // Since all function values at min, max, and initial have the same sign, 
        // this should throw an IllegalArgumentException according to the Javadoc
        solver.solve(100, function, min, max, initial);
    }
}
