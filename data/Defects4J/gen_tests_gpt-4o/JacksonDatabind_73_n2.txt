
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.*;

public class TestPojoTest {

    public static class TestPojo {
        private String firstName;
        private String lastName;

        @JsonProperty(access = JsonProperty.Access.READ_ONLY)
        public String getFullName() {
            return firstName + " " + lastName;
        }

        public String getFirstName() {
            return firstName;
        }

        public void setFirstName(String firstName) {
            this.firstName = firstName;
        }

        public String getLastName() {
            return lastName;
        }

        public void setLastName(String lastName) {
            this.lastName = lastName;
        }
    }

    @Test
    public void testReadOnlyJsonPropertyDeserialization() throws Exception {
        String json = "{\"firstName\":\"John\", \"lastName\":\"Doe\", \"fullName\":\"This should be ignored\"}";

        ObjectMapper objectMapper = new ObjectMapper();
        TestPojo pojo = objectMapper.readValue(json, TestPojo.class);

        assertEquals("John", pojo.getFirstName());
        assertEquals("Doe", pojo.getLastName());
        assertEquals("John Doe", pojo.getFullName());

        // The deserialization should not modify the fullName, as it is a READ_ONLY property
        // Check that fullName is computed correctly, not deserialized
        assertEquals("John Doe", pojo.getFullName());
    }
}
