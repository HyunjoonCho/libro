
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import org.junit.Test;

import java.io.StringWriter;
import java.io.IOException;

import static org.junit.Assert.fail;

public class JsonGeneratorTest {

    @Test
    public void testWriteStringUnexpected() {
        JsonFactory jsonFactory = new JsonFactory();
        StringWriter writer = new StringWriter();

        try {
            JsonGenerator jsonGenerator = jsonFactory.createGenerator(writer);
            jsonGenerator.writeStartObject();
            // Here, we should call writeFieldName() to specify the field name, 
            // but we incorrectly call writeString() directly.
            jsonGenerator.writeString("value");
            jsonGenerator.writeEndObject();
            jsonGenerator.close();
            fail("Expected an IOException due to incorrect state, but none was thrown.");
        } catch (IOException e) {
            // An exception is expected, indicating that writeString() was improperly called.
        }
    }
}
