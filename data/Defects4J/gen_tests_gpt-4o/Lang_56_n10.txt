
import org.apache.commons.lang3.time.FastDateFormat;
import org.junit.Test;

import java.io.*;

import static org.junit.Assert.*;

public class FastDateFormatSerializationTest {

    @Test
    public void testFastDateFormatSerialization() {
        FastDateFormat dateFormat = FastDateFormat.getInstance("yyyy-MM-dd");

        try {
            // Serialize the FastDateFormat instance
            ByteArrayOutputStream byteOutStream = new ByteArrayOutputStream();
            ObjectOutputStream outStream = new ObjectOutputStream(byteOutStream);
            outStream.writeObject(dateFormat);
            outStream.close();

            // Deserialize the FastDateFormat instance
            ByteArrayInputStream byteInStream = new ByteArrayInputStream(byteOutStream.toByteArray());
            ObjectInputStream inStream = new ObjectInputStream(byteInStream);
            FastDateFormat deserializedDateFormat = (FastDateFormat) inStream.readObject();
            inStream.close();

            // Verify that the deserialized object is not null
            assertNotNull(deserializedDateFormat);
            
            // Optionally, you can also verify if it works correctly
            assertEquals("2023-10-15", deserializedDateFormat.format(new java.util.Date(2023 - 1900, 9, 15)));

        } catch (IOException | ClassNotFoundException e) {
            fail("Serialization or deserialization failed: " + e.getMessage());
        }
    }
}
