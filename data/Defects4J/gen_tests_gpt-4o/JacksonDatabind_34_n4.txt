
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.jsonSchema.JsonSchema;
import com.fasterxml.jackson.databind.jsonSchema.factories.SchemaFactoryWrapper;
import com.fasterxml.jackson.module.jsonSchema.JsonSchemaGenerator;
import org.junit.Test;

import java.math.BigDecimal;

import static org.junit.Assert.*;

public class BigDecimalSchemaTest {

    static class TestClass {
        public BigDecimal value;
    }

    @Test
    public void testBigDecimalSchemaType() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        JsonSchemaGenerator schemaGen = new JsonSchemaGenerator(mapper);
        
        // Generate JSON schema for a class with a BigDecimal field
        JsonSchema schema = schemaGen.generateSchema(TestClass.class);

        // Retrieve the schema type for the BigDecimal field
        JsonNode valueType = schema.getSchemaNode().get("properties").get("value").get("type");

        // Assert that the type is correctly identified as "number"
        assertNotNull(valueType);
        assertEquals("number", valueType.asText());
    }
}
