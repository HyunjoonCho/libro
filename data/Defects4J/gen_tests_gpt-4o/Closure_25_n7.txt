public void testAnonymousObjectTypeInference() {
    try {
        // This should compile without errors
        callz(new CallzParam("hi"));
        // Simulating the error by constructing with a constructor
        new callz(new CallzParam("hi")); // This is expected to throw an error
        fail("Expected a compilation error due to missing 'prop2' in constructor call");
    } catch (Exception e) {
        assertTrue(e.getMessage().contains("does not match formal parameter"));
    }
}

// Mock classes and methods for testing
private void callz(CallzParam parry) {
    if (parry.getProp2() != null && parry.getProp2() < 5) {
        System.out.println("alright!");
    }
    System.out.println(parry.getProp1());
}

private static class CallzParam {
    private final String prop1;
    private final Integer prop2;

    public CallzParam(String prop1) {
        this.prop1 = prop1;
        this.prop2 = null;
    }

    public String getProp1() {
        return prop1;
    }

    public Integer getProp2() {
        return prop2;
    }
}