
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.util.Iterator;

import static org.junit.Assert.assertEquals;

public class JXPathNamespaceTest {
    
    @Test
    public void testIteratePointersWithMultiplePrefixesForSameNamespace() throws Exception {
        // Create a simple XML Document with two elements in the same namespace but different prefixes
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.newDocument();

        Element root = doc.createElementNS("ns", "a:doc");
        Element elem1 = doc.createElementNS("ns", "a:elem");
        Element elem2 = doc.createElementNS("ns", "b:elem");

        doc.appendChild(root);
        root.appendChild(elem1);
        root.appendChild(elem2);

        // Create JXPathContext with the XML Document
        JXPathContext context = JXPathContext.newContext(doc);

        // Iterate over elements with specified local name and namespace
        Iterator<Pointer> pointers = context.iteratePointers("//*:elem");

        // Check if both elements are iterated over
        int count = 0;
        while (pointers.hasNext()) {
            count++;
            pointers.next();
        }

        // We expect to iterate over two elements
        assertEquals(2, count);
    }
}
