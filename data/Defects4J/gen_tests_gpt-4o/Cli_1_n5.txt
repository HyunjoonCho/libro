
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.Option;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;

public class CommandLineTest {

    @Test
    public void testGetOptionValueUsingLongOpt() {
        // Setup the options for the command line
        final String debugOpt = "debug";
        Option debug = Option.builder("d")
            .longOpt(debugOpt)
            .desc("turn on debugging")
            .hasArg()
            .build();

        Options options = new Options();
        options.addOption(debug);

        // Simulate the command line input
        String[] args = {"-d", "true"};

        // Parse the command line arguments
        CommandLineParser parser = new DefaultParser();
        CommandLine commandLine = null;
        try {
            commandLine = parser.parse(options, args);
        } catch (ParseException e) {
            e.printStackTrace();
        }

        // Test the retrieval of the option value using the full string long name
        String dbgLongOpt = commandLine.getOptionValue(debugOpt);
        assertNull("Expected null when retrieving option value using full string long name", dbgLongOpt);

        // Test the retrieval of the option value using the short character name
        String dbgShortOpt = commandLine.getOptionValue('d');
        assertEquals("true", dbgShortOpt);
    }
}
