
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import java.io.IOException;
import java.util.Arrays;

import static org.junit.Assert.assertTrue;

public class WritingModeTest {

    @Test
    public void testWritingModeInAdvancedCompilation() throws IOException {
        // JavaScript code using writingMode
        String jsCode = "var element = {};\n" +
                        "element.style = {};\n" +
                        "element.style.writingMode = 'tb';\n";

        // Compile the JS code in advanced mode
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        SourceFile extern = SourceFile.fromCode("externs.js", "");
        SourceFile input = SourceFile.fromCode("input.js", jsCode);

        com.google.javascript.jscomp.Compiler compiler = new com.google.javascript.jscomp.Compiler();
        Result result = compiler.compile(Arrays.asList(extern), Arrays.asList(input), options);

        // Get compiled code
        String compiledCode = compiler.toSource();

        // Check if 'writingMode' is preserved
        assertTrue("writingMode property should be preserved", compiledCode.contains("writingMode"));
    }
}
