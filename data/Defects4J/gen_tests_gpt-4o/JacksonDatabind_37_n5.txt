
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.*;

public class JsonDeserializationTest {

    // Base class with field 'name'
    public static class JsonSchema {
        public String name;
    }

    // Derived class for specific schema which should inherit 'name'
    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", defaultImpl = JsonMapSchema.class)
    public static class JsonMapSchema extends JsonSchema {
        public List<String> tables;
        public List<String> functions;
    }

    // Class to hold the root JSON structure for deserialization
    public static class JsonRoot {
        public List<JsonSchema> schemas;
    }

    @Test
    public void testJsonDeserialization() {
        String json = "{\n" +
                "  \"schemas\": [\n" +
                "     {\n" +
                "       \"name\": \"FoodMart\",\n" +
                "       \"tables\": [\n" +
                "         {\n" +
                "           \"name\": \"time_by_day\"\n" +
                "         },\n" +
                "         {\n" +
                "           \"name\": \"sales_fact_1997\"\n" +
                "         }\n" +
                "       ]\n" +
                "     }\n" +
                "   ]\n" +
                "}";

        ObjectMapper objectMapper = new ObjectMapper();

        try {
            JsonRoot root = objectMapper.readValue(json, JsonRoot.class);
            assertNotNull(root.schemas);
            assertFalse(root.schemas.isEmpty());
            assertEquals("FoodMart", root.schemas.get(0).name);
        } catch (UnrecognizedPropertyException e) {
            fail("UnrecognizedPropertyException occurred: " + e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
            fail("An unexpected exception occurred: " + e.getMessage());
        }
    }
}
