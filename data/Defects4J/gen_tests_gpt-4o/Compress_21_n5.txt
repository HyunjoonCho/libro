public void testSevenEmptyFilesArchive() throws IOException {
    File tempDir = Files.createTempDirectory("sevenEmptyFiles").toFile();
    try {
        // Create 7 empty files
        for (int i = 0; i < 7; i++) {
            new File(tempDir, "emptyFile" + i + ".txt").createNewFile();
        }
        
        // Create the 7z archive
        File archiveFile = new File(tempDir, "testArchive.7z");
        create7zArchive(tempDir, archiveFile);
        
        // Verify the archive contents
        List<String> archiveContents = read7zArchiveContents(archiveFile);
        assertEquals(7, archiveContents.size());
    } finally {
        // Clean up
        for (File file : tempDir.listFiles()) {
            file.delete();
        }
        tempDir.delete();
    }
}

public void testEightEmptyFilesArchive() throws IOException {
    File tempDir = Files.createTempDirectory("eightEmptyFiles").toFile();
    try {
        // Create 8 empty files
        for (int i = 0; i < 8; i++) {
            new File(tempDir, "emptyFile" + i + ".txt").createNewFile();
        }
        
        // Create the 7z archive
        File archiveFile = new File(tempDir, "testArchive.7z");
        create7zArchive(tempDir, archiveFile);
        
        // Verify the archive is not corrupt
        try {
            List<String> archiveContents = read7zArchiveContents(archiveFile);
            fail("Expected an exception due to corrupt archive");
        } catch (IOException e) {
            assertTrue(e.getMessage().contains("Cannot open file"));
        }
    } finally {
        // Clean up
        for (File file : tempDir.listFiles()) {
            file.delete();
        }
        tempDir.delete();
    }
}

// Mock methods for demonstration purposes
private void create7zArchive(File sourceDir, File targetArchive) {
    // This method should contain logic to create a 7z archive from the source directory
    // It's a placeholder here to demonstrate the test setup
}

private List<String> read7zArchiveContents(File archiveFile) throws IOException {
    // This method should contain logic to read the contents of a 7z archive
    // It's a placeholder here to demonstrate the test setup
    return Collections.emptyList();
}