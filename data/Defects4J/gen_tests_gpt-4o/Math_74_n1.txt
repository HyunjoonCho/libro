public void testWrongInitialStepSize() {
    double[] y0 = {0.0, 0.0};
    double[] yDot0 = {0.0, 0.0};
    double t0 = 0.0;
    double tEnd = 1.0;
    double absTolerance = 1e-5;
    double relTolerance = 1e-5;
  
    OrdinaryDifferentialEquation equations = new SimpleEquation();
    DormandPrince853Integrator integrator = new DormandPrince853Integrator(1e-8, 100.0, absTolerance, relTolerance);
  
    double[] y = new double[y0.length];
    try {
        integrator.integrate(equations, t0, y0, tEnd, y);
    } catch (DerivativeException | IntegratorException e) {
        fail("Integration failed due to incorrect initial step size.");
    }
}

class SimpleEquation implements FirstOrderDifferentialEquations {
    public int getDimension() {
        return 2;
    }

    public void computeDerivatives(double t, double[] y, double[] yDot) {
        yDot[0] = 1.0;
        yDot[1] = 1.0;
    }
}