
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertEquals;

@JsonIgnoreProperties(value = {"password"}, ignoreUnknown = true, allowSetters = true)
class JsonTest {
    private String username;
    private String password;

    public JsonTest() {
        super();
    }

    public JsonTest(String username, String password) {
        super();
        this.username = username;
        this.password = password;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
}

public class JsonIgnorePropertiesTest {

    @Test
    public void testAllowSetters() {
        ObjectMapper mapper = new ObjectMapper();
        JsonTest json = new JsonTest("user", "password");

        try {
            String jsonString = mapper.writeValueAsString(json);
            System.out.println("Serialized JSON: " + jsonString);

            assertEquals("{\"username\":\"user\"}", jsonString);
        } catch (JsonProcessingException e) {
            e.printStackTrace();
        }

        String jsonString = "{ \"username\":\"username\",\"password\":\"password\" }";
        try {
            json = mapper.readValue(jsonString, JsonTest.class);
            System.out.println("Deserialized Password: " + json.getPassword());

            // Assert that allowSetters works and password is deserialized
            assertEquals("password", json.getPassword());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
