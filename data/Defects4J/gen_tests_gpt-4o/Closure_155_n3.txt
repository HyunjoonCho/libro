script
function testOverzealousArgumentsOptimization() {
    function d3_call(callback) {
        var f = callback;
        arguments[0] = this;
        f.apply(this, arguments);
        return this;
    }

    function mockFunction(a) {
        console.log(a);
    }

    // Creating an object to bind as `this`
    var obj = { name: "test" };

    // Binding obj as `this` and passing the mockFunction as an argument
    d3_call.call(obj, mockFunction, "originalArgument");

    // Expected output:
    // [Object: { name: 'test' }, 'originalArgument']
    // 
    // The optimization should not break this by replacing the first argument.
}

// Run the test case
testOverzealousArgumentsOptimization();
