
import org.apache.commons.lang3.time.DateUtils;
import org.junit.Test;

import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class DateUtilsRoundTest {

    @Test
    public void testRoundToMinute() {
        // Set up the calendar instance using GMT for consistency
        Calendar testCalendar = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        testCalendar.set(2007, Calendar.JULY, 2, 8, 9, 50);  // Notice that months are 0-based, so July is 6

        Date date = testCalendar.getTime();

        // Round the date to the nearest minute
        Date roundedDate = DateUtils.round(date, Calendar.MINUTE);

        // Set up the expected date after rounding
        Calendar expectedCalendar = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        expectedCalendar.set(2007, Calendar.JULY, 2, 8, 10, 0);
        expectedCalendar.set(Calendar.MILLISECOND, 0);
        Date expectedDate = expectedCalendar.getTime();

        // Assert that the rounded date matches the expected date
        assertEquals("Rounding to the nearest minute failed", expectedDate, roundedDate);
    }
}
