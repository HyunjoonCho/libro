
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import org.junit.Test;

import java.io.StringWriter;
import java.io.IOException;

import static org.junit.Assert.fail;

public class JsonGeneratorTest {

    @Test
    public void testWriteStringWithoutFieldName() {
        JsonFactory factory = new JsonFactory();
        StringWriter writer = new StringWriter();
        
        try {
            JsonGenerator generator = factory.createGenerator(writer);
            generator.writeStartObject();
            generator.writeString("valueWithoutFieldName");
            fail("Expected an exception when writing a string without field name.");
        } catch (IOException e) {
            // Expecting an exception here as writeString() should not be called without writeFieldName()
            assertTrue(e.getMessage().contains("field name"));
        }
    }
}
