public void testAdvancedOptimizations() throws IOException {
    // Prepare a test script as input.js
    String inputJs = 
        "window['anchor'] = function (obj, modifiesProp) {\n" +
        "    return (function (saved) {\n" +
        "        return modifiesProp(obj) + saved;\n" +
        "    })(obj['prop']);\n" +
        "};";

    // Define expected output after optimization
    String expectedOutputJs =
        "window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD};";

    // Run the closure compiler with ADVANCED_OPTIMIZATIONS
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

    // Mock external environment - as needed for testing
    SourceFile extern = SourceFile.fromCode("externs.js", "var window;");
    SourceFile input = SourceFile.fromCode("input.js", inputJs);

    // Compile the code
    compiler.compile(extern, input, options);

    // Assert the compiled code matches the expected output
    String compiledOutput = compiler.toSource();
    assertEquals(expectedOutputJs.replaceAll("\\s+", ""), compiledOutput.replaceAll("\\s+", ""));
}