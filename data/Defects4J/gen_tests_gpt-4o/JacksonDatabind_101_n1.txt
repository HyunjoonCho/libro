
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class JsonUnwrappedTest {

    static class Bean {
        int x;
        int y;

        @JsonUnwrapped
        UnwrappedBean w;

        public Bean(@JsonProperty("x") int x, @JsonProperty("y") int y) {
            this.x = x;
            this.y = y;
        }

        public void setW(UnwrappedBean w) {
            this.w = w;
        }
    }

    static class UnwrappedBean {
        int a;
        int b;

        public UnwrappedBean(@JsonProperty("a") int a, @JsonProperty("b") int b) {
            this.a = a;
            this.b = b;
        }
    }

    @Test
    public void testJsonUnwrappedWithPropertyBasedCreator() throws Exception {
        String json = "{\"x\": 1, \"a\": 2, \"y\": 3, \"b\": 4}";

        ObjectMapper objectMapper = new ObjectMapper();
        Bean bean = objectMapper.readValue(json, Bean.class);

        assertEquals(1, bean.x);
        assertEquals(3, bean.y);
        assertEquals(2, bean.w.a);
        assertEquals(4, bean.w.b); // This is the value that gets skipped in the bug
    }
}
