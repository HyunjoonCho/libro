public void testCompilerCrashOnAssignStatement() {
    String code = ""
        + "/** @constructor\n"
        + " * @param {...Object} params\n"
        + " */\n"
        + "dojox.gfx.shape.Shape = function(params) {};\n"
        + "dojox.gfx.shape.Shape = dojo.declare(\"dojox.gfx.shape.Shape\", null, /** @lends dojox.gfx.shape.Shape.prototype */ {});\n";
    
    try {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        SourceFile extern = SourceFile.fromCode("externs", "var dojo; var dojox;");
        SourceFile input = SourceFile.fromCode("test", code);
        compiler.compile(extern, input, options);
        fail("Expected RuntimeException due to INTERNAL COMPILER ERROR, but compilation succeeded.");
    } catch (RuntimeException e) {
        String expectedMessage = "INTERNAL COMPILER ERROR. Please report this problem.";
        assertTrue(e.getMessage().contains(expectedMessage));
    }
}