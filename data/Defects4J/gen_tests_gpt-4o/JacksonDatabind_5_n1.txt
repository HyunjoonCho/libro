
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.MapperFeature;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class MixinAnnotationTest {

    public interface Contact {
        String getCity();
    }

    public static class ContactImpl implements Contact {
        @Override
        public String getCity() {
            return "Sample City";
        }
    }

    public static abstract class ContactMixin implements Contact {
        @Override
        @JsonProperty
        public abstract String getCity();
    }

    public interface Person extends Contact {}

    public static class PersonImpl extends ContactImpl implements Person {}

    public static abstract class PersonMixin extends ContactMixin implements Person {}

    @Test
    public void testMixinAnnotationsAreRetained() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        
        SimpleModule module = new SimpleModule();
        module.setMixInAnnotation(Person.class, PersonMixin.class);
        
        // Disabling certain features to match the original configuration
        mapper.configure(MapperFeature.ALLOW_FINAL_FIELDS_AS_MUTATORS, false);
        mapper.configure(MapperFeature.AUTO_DETECT_FIELDS, false);
        mapper.configure(MapperFeature.AUTO_DETECT_GETTERS, false);
        mapper.configure(MapperFeature.AUTO_DETECT_IS_GETTERS, false);
        mapper.configure(MapperFeature.INFER_PROPERTY_MUTATORS, false);

        mapper.registerModule(module);

        PersonImpl person = new PersonImpl();
        String jsonResult = mapper.writeValueAsString(person);
        
        // Check if the serialized JSON contains the 'city' property,
        // which means the @JsonProperty annotation was respected.
        assertTrue("Serialized JSON should contain 'city' property",
                   jsonResult.contains("\"city\":\"Sample City\""));
    }
}
