
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;
import static org.junit.Assert.*;

public class PosixParserBugTest {

    private static final String OPTION_TARGET = "t";
    private static final String OPTION_TARGET_LONG = "target";

    @Test
    public void testPosixParserWithShortAndLongOption() {
        Options cmdLineOpts = new Options();
        Option generateTarget = new Option(OPTION_TARGET, OPTION_TARGET_LONG, true, "Generate files for the specified target machine");
        cmdLineOpts.addOption(generateTarget);

        CommandLineParser parser = new PosixParser();

        String[] argsWithDashT = {"-t", "foobar.com"};
        String[] argsWithDashTarget = {"-target", "foobar.com"};

        try {
            // Test with '-t foobar.com'
            CommandLine parsedLine = parser.parse(cmdLineOpts, argsWithDashT);
            assertTrue(parsedLine.hasOption(OPTION_TARGET));
            assertEquals("foobar.com", parsedLine.getOptionValue(OPTION_TARGET));

            // Test with '-target foobar.com'
            parsedLine = parser.parse(cmdLineOpts, argsWithDashTarget);
            assertTrue(parsedLine.hasOption(OPTION_TARGET));
            assertEquals("foobar.com", parsedLine.getOptionValue(OPTION_TARGET));  // This should pass, but due to the bug, it fails.

        } catch (ParseException pe) {
            fail("ParseException should not occur: " + pe.getMessage());
        }
    }
}
