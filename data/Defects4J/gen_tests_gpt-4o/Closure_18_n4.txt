public void testDependencySortingWithClosurePassFalse() {
    CompilerOptions compilerOptions = new CompilerOptions();
    compilerOptions.setClosurePass(false);

    DependencyOptions dependencyOptions = new DependencyOptions();
    dependencyOptions.setDependencySorting(true);
    compilerOptions.setDependencyOptions(dependencyOptions);

    Compiler compiler = new Compiler();
    SourceFile externs = SourceFile.fromCode("externs.js", "");
    SourceFile input1 = SourceFile.fromCode("input1.js", "goog.provide('example');");
    SourceFile input2 = SourceFile.fromCode("input2.js", "goog.require('example');");

    Result result = compiler.compile(externs, Arrays.asList(input1, input2), compilerOptions);

    assertTrue(result.success);
    String compiledCode = compiler.toSource();
    
    // Expect input2.js (which requires 'example') to be after input1.js (which provides 'example')
    assertTrue(compiledCode.indexOf("goog.provide('example');") < compiledCode.indexOf("goog.require('example');"));
}