
import static org.junit.Assert.*;
import org.apache.commons.lang3.math.NumberUtils;
import java.math.BigDecimal;
import org.junit.Test;

public class NumberUtilsTest {

    @Test
    public void testCreateNumberWithLargeDouble() {
        // Test with a number that cannot be accurately represented as a Float
        String largeDoubleString = "1.7976931348623157E308"; // The maximum Double value
        Number result = NumberUtils.createNumber(largeDoubleString);

        // The result should be a Double, and it should match the Double value represented by the String
        assertTrue("Expected a Double", result instanceof Double);
        assertEquals(Double.valueOf(largeDoubleString), result);
    }

    @Test
    public void testCreateNumberWithBigDecimal() {
        // Test with a large BigDecimal number string
        String bigDecimalString = "12345678901234567890.12345678901234567890";
        Number result = NumberUtils.createNumber(bigDecimalString);

        // The result should be a BigDecimal, and it should accurately represent the BigDecimal value
        assertTrue("Expected a BigDecimal", result instanceof BigDecimal);
        assertEquals(new BigDecimal(bigDecimalString), result);
    }
}
