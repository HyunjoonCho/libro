
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.junit.Test;
import static org.junit.Assert.fail;

public class NamespaceHandlingTest {

    @Test
    public void testIncompleteNamespaceHandling() {
        try {
            // Create a DOM Document with a root Element.
            Document document = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();
            Element root = document.createElementNS("http://example.com", "ElementA");
            root.setAttributeNS("http://example.com/a", "A:myAttr", "MyType");
            root.appendChild(document.createElementNS("http://example.com/b", "B:ElementB"));
            document.appendChild(root);

            // Create a JXPathContext. 
            JXPathContext context = JXPathContext.newContext(document);
            
            // Register namespaces.
            context.registerNamespace("A", "http://example.com/a");
            context.registerNamespace("B", "http://example.com/b");

            // This call should work without throwing an exception.
            // Retrieve the attribute with namespaced prefix 'A'
            Object attributeValue = context.getValue("ElementA/@A:myAttr");
            if (!"MyType".equals(attributeValue)) {
                fail("Expected MyType but got: " + attributeValue);
            }
            
        } catch (ParserConfigurationException e) {
            fail("ParserConfigurationException: " + e.getMessage());
        } catch (JXPathException e) {
            fail("JXPathException encountered: " + e.getMessage());
        }
    }
}
