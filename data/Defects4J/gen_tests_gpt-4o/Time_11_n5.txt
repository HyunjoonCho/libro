
import org.joda.time.tz.DateTimeZoneBuilder;
import org.junit.Test;

public class DateTimeZoneBuilderTest {

    @Test
    public void testDateTimeZoneBuilderNPE() throws Exception {
        // Build the DateTimeZone in the main thread
        getTestDataTimeZoneBuilder().toDateTimeZone("TestDTZ1", true);

        // Start a new thread that performs the same build process
        Thread t = new Thread(() -> {
            try {
                getTestDataTimeZoneBuilder().toDateTimeZone("TestDTZ2", true);
            } catch (Exception e) {
                e.printStackTrace(); // Print any exceptions, which should include an NPE if the bug is present
            }
        });

        t.start();
        t.join();
    }

    private DateTimeZoneBuilder getTestDataTimeZoneBuilder() {
        return new DateTimeZoneBuilder()
            .addCutover(1601, 'w', 1, 1, 1, false, 7200000)
            .setStandardOffset(3600000)
            .addRecurringSavings("", 3600000, 1601, Integer.MAX_VALUE, 'w', 3, -1, 1, false, 7200000)
            .addRecurringSavings("", 0, 1601, Integer.MAX_VALUE, 'w', 10, -1, 1, false, 10800000);
    }
}
