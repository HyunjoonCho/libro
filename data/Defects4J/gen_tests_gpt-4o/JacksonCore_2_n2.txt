
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class JsonParserTest {

    @Test
    public void testEagerNumberParsing() {
        JsonFactory factory = new JsonFactory();
        String jsonInput = "123true";

        try (JsonParser parser = factory.createParser(jsonInput)) {
            JsonToken token = parser.nextToken();
            assertEquals(JsonToken.VALUE_NUMBER_INT, token);
            assertEquals(123, parser.getIntValue());

            token = parser.nextToken();
            assertEquals("Parsing should have failed due to the lack of separation between number and boolean", JsonToken.VALUE_FALSE, token);
        } catch (IOException e) {
            fail("IO exception occurred: " + e.getMessage());
        } catch (Exception e) {
            // The exception is expected due to incorrect input format
            assertEquals("Unexpected character ('t' (code 116)): was expecting comma to separate " +
                         "Object entries\n at [Source: (String)\"123true\"; line: 1, column: 4]", e.getMessage());
        }
    }
}
