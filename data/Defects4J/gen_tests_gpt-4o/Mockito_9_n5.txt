
import org.junit.Test;
import org.mockito.Mockito;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.spy;

public class AbstractClassSpyTest {

    // Abstract class with an abstract method
    abstract class AbstractClass {
        abstract String getMessage();
        
        // Concrete method that calls the abstract method
        String getFullMessage() {
            return "Full: " + getMessage();
        }
    }

    @Test
    public void testSpyingOnAbstractClass() {
        // Spy on an anonymous implementation of the abstract class
        AbstractClass abstractSpy = spy(new AbstractClass() {
            @Override
            String getMessage() {
                return "Hello, World!";
            }
        });

        // Define behavior for the abstract method
        doReturn("Spied Message").when(abstractSpy).getMessage();

        // Call the concrete method which calls the abstract method internally
        String fullMessage = abstractSpy.getFullMessage();

        // Assert the expected behavior
        assertEquals("Full: Spied Message", fullMessage);
    }
}
