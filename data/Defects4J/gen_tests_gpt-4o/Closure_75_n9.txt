
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class SwfObjectTest {

    @Test
    public void testClosureCompilationError() {
        String sourceCode = 
                "function urlEncodeIfNecessary(s) {\n" +
                "    var regex = /[\\\"<>\.;]/;\n" +
                "    var hasBadChars = regex.exec(s) != null;\n" +
                "    return hasBadChars && typeof encodeURIComponent != UNDEF ? encodeURIComponent(s) : s;\n" +
                "}";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        Result result = compiler.compile(com.google.javascript.jscomp.CommandLineRunner.getDefaultExterns(), 
                                         com.google.javascript.jscomp.SourceFile.fromCode("input.js", sourceCode),
                                         options);

        // Check for compilation errors
        for (JSError warning : result.warnings) {
            System.err.println("WARNING: " + warning.toString());
        }

        for (JSError error : result.errors) {
            System.err.println("ERROR: " + error.toString());
        }
        
        assertTrue("The compilation should not have errors", result.success);
    }
}
