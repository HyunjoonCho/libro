
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.exception.NullArgumentException;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BrentOptimizer;
import org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction;
import org.junit.Test;

public class BrentOptimizerTest {

    @Test(expected = NullPointerException.class)
    public void testMissingConvergenceChecker() {
        // Define a simple quadratic function
        UnivariateFunction function = x -> (x - 3) * (x - 3);

        // Create a BrentOptimizer without a convergence checker
        BrentOptimizer optimizer = new BrentOptimizer(1e-10, 1e-14);

        // Attempt to optimize without setting a convergence checker
        // This should cause a NullPointerException.
        optimizer.optimize(new UnivariateObjectiveFunction(function),
                           org.apache.commons.math3.optim.univariate.GoalType.MINIMIZE,
                           new org.apache.commons.math3.optim.univariate.SearchInterval(0, 6));
    }
}
