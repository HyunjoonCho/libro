script
/**
 * @param {{prop1: string, prop2: (number|undefined)}} parry
 */
function callz(parry) {
    if (parry.prop2 && parry.prop2 < 5) alert('alright!');
    alert(parry.prop1);
}

function testFunctionInvocation() {
    // This should work without errors
    try {
        callz({prop1: 'hi'});
        console.log("Function call succeeded");
    } catch (e) {
        console.error("Function call failed: ", e);
    }
}

/**
 * @param {{prop1: string, prop2: (number|undefined)}} parry
 * @constructor
 */
function CallzConstructor(parry) {
    if (parry.prop2 && parry.prop2 < 5) alert('alright!');
    alert(parry.prop1);
}

function testConstructorInvocation() {
    // This should demonstrate the issue
    try {
        new CallzConstructor({prop1: 'hi'});
        console.log("Constructor call succeeded");
    } catch (e) {
        console.error("Constructor call failed: ", e);
    }
}

testFunctionInvocation();
testConstructorInvocation();
