public void testCMAESOptimizerResolution() {
    CMAESOptimizer optimizer = new CMAESOptimizer(1000, 1e-9, true, 0, 0, new MersenneTwister(), false, new SimpleValueChecker(1e-9, 1e-9));
    MultivariateFunction function = new MultivariateFunction() {
        @Override
        public double value(double[] point) {
            return point[0] * point[0];
        }
    };
    
    double[] lowerBound = {0.0};
    double[] upperBound = {1e6};
    double[] startPoint = {0.1 * upperBound[0]};
    
    PointValuePair result = optimizer.optimize(
        new MaxEval(1000),
        new ObjectiveFunction(function),
        GoalType.MINIMIZE,
        new InitialGuess(startPoint),
        new SimpleBounds(lowerBound, upperBound)
    );
    
    assertTrue(result.getPoint()[0] <= upperBound[0] * 0.1 + 1e-9);
}