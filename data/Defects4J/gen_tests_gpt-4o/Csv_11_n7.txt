
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.junit.Test;
import java.io.StringReader;
import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class CSVFormatTest {

    @Test
    public void testNullPointerExceptionWithEmptyHeaderAndNullString() {
        String csvContent = ",header2\nvalue1,value2";
        
        try {
            // CSVFormat with an empty nullString and a header
            CSVFormat format = CSVFormat.DEFAULT.withHeader().withNullString("");

            // Parse the CSV content
            CSVParser parser = CSVParser.parse(new StringReader(csvContent), format);

            List<CSVRecord> records = parser.getRecords();
            assertEquals("value1", records.get(0).get(0));
            assertEquals("value2", records.get(0).get("header2"));

        } catch (NullPointerException e) {
            fail("NullPointerException was thrown due to an empty header value.");
        } catch (Exception e) {
            fail("An unexpected exception was thrown: " + e.getMessage());
        }
    }
}
