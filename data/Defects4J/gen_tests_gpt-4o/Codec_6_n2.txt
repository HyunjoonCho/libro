
import org.apache.commons.codec.binary.Base64InputStream;
import org.junit.Test;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import static org.junit.Assert.assertEquals;

public class Base64InputStreamTest {

    @Test
    public void testReadReturnsZeroAtEndOfStreamWhenMultipleOfThree() throws IOException {
        // Given a Base64 input stream with length multiple of 3
        byte[] inputData = "TWFu".getBytes(); // Base64 encoded string "Man"
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(inputData);
        Base64InputStream base64InputStream = new Base64InputStream(byteArrayInputStream, true);
        byte[] buffer = new byte[3];

        // Read till the end of the stream
        while (base64InputStream.read(buffer) != -1) {
            // Do nothing, just consume the stream
        }

        // Last read should return -1 but not 0
        int bytesRead = base64InputStream.read(buffer);
        assertEquals("Expected -1 at the end of stream, but was " + bytesRead, -1, bytesRead);
    }
}
