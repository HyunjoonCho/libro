public void testErroneousOptimizationInAdvancedMode() throws IOException {
    // Setup for the Java Compiler to mimic the steps described
    String inputJs = "window[\"anchor\"] = function (obj, modifiesProp) {" +
                     " return (function (saved) {" +
                     " return modifiesProp(obj) + saved;" +
                     " })(obj[\"prop\"]);" +
                     " };";

    // Expected output after compiling
    String expectedOutput = "window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD};";

    try {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
        
        SourceFile extern = SourceFile.fromCode("externs", "var window;");
        SourceFile input = SourceFile.fromCode("input.js", inputJs);
        
        // Compile the script
        Result result = compiler.compile(extern, input, options);
        
        // Get the compiled code
        String compiledCode = compiler.toSource();
        
        // Assert the compiled code is as expected
        assertEquals(expectedOutput, compiledCode);
        
    } catch (Exception e) {
        fail("Compilation failed: " + e.getMessage());
    }
}