public void testUnexpectedTypedCoverage() throws Exception {
    String jsSource = "/*global window*/\n"
                    + "/*jslint sub: true*/\n"
                    + "/**\n"
                    + " * @constructor\n"
                    + " * @param {!Element} element\n"
                    + " */\n"
                    + "function Example(element) {\n"
                    + "    /**\n"
                    + "     * @param {!string} ns\n"
                    + "     * @param {!string} name\n"
                    + "     * @return {undefined}\n"
                    + "     */\n"
                    + "    this.appendElement = function appendElement(ns, name) {\n"
                    + "        var e = element.ownerDocument.createElementNS(ns, name);\n"
                    + "        element.appendChild(e);\n"
                    + "    };\n"
                    + "}\n"
                    + "window[\"Example\"] = Example;";

    File tempJsFile = File.createTempFile("test", ".js");
    FileUtils.writeStringToFile(tempJsFile, jsSource, StandardCharsets.UTF_8);

    ProcessBuilder processBuilder = new ProcessBuilder(
        "java", "-jar", "compiler.jar",
        "--jscomp_error", "checkTypes",
        "--summary_detail_level", "3",
        "--js", tempJsFile.getAbsolutePath(),
        "--js_output_file", "compiled.js"
    );

    Process process = processBuilder.start();
    ByteArrayOutputStream errorOutput = new ByteArrayOutputStream();
    IOUtils.copy(process.getErrorStream(), errorOutput);
    process.waitFor();

    String output = errorOutput.toString(StandardCharsets.UTF_8).trim();
    assertTrue("Expected 100% typed but found: " + output, output.contains("100% typed"));
}