
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.junit.Test;
import static org.junit.Assert.*;

public class CommandLineTest {

    @Test
    public void testParsedOptionValueDefaultsToString() throws Exception {
        // Setup options
        Options options = new Options();
        options.addOption(Option.builder("f")
                                .longOpt("file")
                                .hasArg()
                                .desc("The file to process")
                                .build());

        // Simulate command line input
        String[] args = {"-f", "example.txt"};

        // Parse command line arguments
        DefaultParser parser = new DefaultParser();
        CommandLine cmd = parser.parse(options, args);

        // The expected default return type for getParsedOptionValue should be String
        // But the current bug suggests it might return null unless the type is explicitly set,
        // which we're testing here.
        Object parsedValue = cmd.getParsedOptionValue("f");
        
        assertNotNull("The parsed option value should not be null", parsedValue);
        assertTrue("The parsed option value should be a String by default",
                   parsedValue instanceof String);
        assertEquals("example.txt", parsedValue);
    }
}
