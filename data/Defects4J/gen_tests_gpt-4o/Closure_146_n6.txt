script
/**
 * Function g should accept only strings.
 * @param {string} x
 */
function g(x) {
  console.log("g was called with:", x);
}

/**
 * Function f represents the test case, where we expect that it should not call g.
 * @param {undefined} x
 */
function f(x) {
  // The condition always evaluates to false, since x is always undefined.
  if (x != undefined) {
    g(x); // This should cause a type mismatch if called, but it should not be called.
  } else {
    console.log("x is undefined, g should not be called.");
  }
}

// Test scenario running function f with undefined to reproduce issue according to bug report
f(undefined); // This represents the test run, expecting no call to g and no errors in actual execution

/*
Expected output: "x is undefined, g should not be called."
However, the original bug report describes a tool warning related to Closure Compiler;
you should replicate using the specific tool/environment to see those warnings.
*/
