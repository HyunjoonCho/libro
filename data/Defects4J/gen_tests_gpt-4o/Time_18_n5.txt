
import org.joda.time.DateTime;
import org.joda.time.chrono.GJChronology;
import org.joda.time.chrono.JulianChronology;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class ChronologyTest {
    
    @Test
    public void testJulianDateValid() {
        DateTime jdt = new DateTime(1500, 2, 29, 0, 0, 0, 0, JulianChronology.getInstanceUTC());
        assertEquals(1500, jdt.getYear());
        assertEquals(2, jdt.getMonthOfYear());
        assertEquals(29, jdt.getDayOfMonth());
    }
    
    @Test
    public void testGJDateInvalid() {
        try {
            DateTime gjdt = new DateTime(1500, 2, 29, 0, 0, 0, 0, GJChronology.getInstanceUTC());
            // The above line should throw an exception, so if we reach here, the test should fail
            fail("Expected IllegalFieldValueException for invalid GJChronology date");
        } catch (org.joda.time.IllegalFieldValueException e) {
            assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
        }
    }
}
