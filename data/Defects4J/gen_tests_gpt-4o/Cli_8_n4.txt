
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.junit.Test;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;

import static org.junit.Assert.assertTrue;

public class HelpFormatterTest {

    @Test
    public void testLongDescriptionWrapsCorrectly() {
        Options options = new Options();

        // Adding an option with a long description.
        options.addOption(Option.builder("a")
                .longOpt("argument")
                .desc("This is a long description argument that is supposed to exceed the default wrapping width of the help formatter and showcase if line wrapping for subsequent lines is handled correctly.")
                .build());

        HelpFormatter formatter = new HelpFormatter();
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        PrintWriter pw = new PrintWriter(out);

        // Print help using HelpFormatter
        formatter.printHelp(pw, 40, "commandLineSyntax", null, options, 1, 2, null, true);
        pw.flush();

        String output = out.toString();

        // Print output for manual validation (this can be commented out in the actual test)
        System.out.println(output);

        // Verifying that each line beyond the first does not exceed the desired wrap width of 40 characters.
        for (String line : output.split("\n")) {
            // Ignore the first line and ensure others have a length of at most 40
            if (!line.contains("Usage")) {
                assertTrue("Line exceeded 40 characters: " + line, line.length() <= 40);
            }
        }
    }
}
