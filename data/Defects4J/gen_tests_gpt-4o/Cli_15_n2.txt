
import org.apache.commons.cli2.CommandLine;
import org.apache.commons.cli2.Option;
import org.apache.commons.cli2.Parser;
import org.apache.commons.cli2.builder.ArgumentBuilder;
import org.apache.commons.cli2.builder.DefaultOptionBuilder;
import org.apache.commons.cli2.builder.GroupBuilder;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class DefaultArgumentsTest {

    @Test
    public void testSingleOptionSingleArgument() throws Exception {
        String defaultValue1 = "100";
        String defaultValue2 = "1000";

        final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
        final ArgumentBuilder abuilder = new ArgumentBuilder();
        final GroupBuilder gbuilder = new GroupBuilder();

        // Set up the option with two expected arguments and two default values
        Option bOption = obuilder.withShortName("b")
            .withLongName("b")
            .withArgument(abuilder.withName("b")
                .withMinimum(0)
                .withMaximum(2)
                .withDefault(defaultValue1)
                .withDefault(defaultValue2)
                .create())
            .create();

        // Create a group with the option
        org.apache.commons.cli2.Group options = gbuilder
            .withName("options")
            .withOption(bOption)
            .create();

        // Setup the parser with the defined options group
        Parser parser = new Parser();
        parser.setHelpTrigger("--help");
        parser.setGroup(options);

        // Provide a single argument
        String enteredValue1 = "1";
        String[] args = new String[]{"-b", enteredValue1};

        // Parse the command line arguments
        CommandLine cl = parser.parse(args);
        assertNotNull(cl);

        // Retrieve the values for the option
        List values = cl.getValues("-b");

        // Assert that the default value for the second argument is used
        assertEquals("[1, 1000]", values.toString());
    }
}
