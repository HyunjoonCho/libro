
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolver;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class BrentSolverTest {

    @Test
    public void testBrentSolverIllegalArgumentException() {
        UnivariateRealFunction function = new UnivariateRealFunction() {
            @Override
            public double value(double x) {
                // Define a function for which f(min) = 0 and f(max) = -101945.04630982173
                return x == -100000.0 ? 0.0 : -101945.04630982173;
            }
        };

        UnivariateRealSolver solver = new BrentSolver();
        double min = -100000.0;
        double max = Double.MAX_VALUE;

        try {
            double root = solver.solve(100, function, min, max);
            // According to the bug report, the root should be 0 when one endpoint value is 0
            assertEquals(0.0, root, 1e-6);
        } catch (IllegalArgumentException e) {
            fail("IllegalArgumentException should not have been thrown: " + e.getMessage());
        }
    }
}
