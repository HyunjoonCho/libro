
import com.google.javascript.jscomp.*;

public class ClosureCompilerTest {

    public static void main(String[] args) {
        String jsCode = "var variable = confirm('value from user');" +
                        "var array = ['constant', variable];" +
                        "alert(array.join(','));";

        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        SourceFile extern = SourceFile.fromCode("externs.js", "function confirm(x) {} function alert(x) {}");
        SourceFile input = SourceFile.fromCode("input.js", jsCode);

        Compiler compiler = new Compiler();
        compiler.compile(extern, input, options);

        String output = compiler.toSource();
        // Testing whether compiled output matches the expected less-optimized code
        String expectedOutput = "var a=[\"constant\",confirm(\"value from user\")];alert(a.join(\",\"));";

        System.out.println("Compiled Output: " + output);
        assert expectedOutput.equals(output) : "Optimization not performed as expected!";
    }
}
