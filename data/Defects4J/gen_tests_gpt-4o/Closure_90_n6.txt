
import com.google.javascript.jscomp.*;
import com.google.javascript.jscomp.Compiler;
import org.junit.Test;

import static org.junit.Assert.*;

public class ClosureCompilerTest {

    @Test
    public void testThisEmitsWarningWithTypedef() {
        String jsCode = ""
            + "goog.provide('bug');\n"
            + "/**\n"
            + " * @this {bug.Thing}\n"
            + " */\n"
            + "bug.sharedMethod = function() {};\n"
            + "/**\n"
            + " * @constructor\n"
            + " */\n"
            + "bug.A = function() {};\n"
            + "/**\n"
            + " * @constructor\n"
            + " */\n"
            + "bug.B = function() {};\n"
            + "/**\n"
            + " * @type {bug.A|bug.B}\n"
            + " */\n"
            + "bug.Thing = goog.typedef;\n";

        CompilerOptions options = new CompilerOptions();
        options.setWarningLevel(DiagnosticGroups.TYPES, CheckLevel.WARNING);

        Compiler compiler = new Compiler();
        compiler.compile(
            CompilerTestCase.EXTERNS,
            SourceFile.fromCode("test.js", jsCode),
            options
        );

        boolean warningFound = compiler.getWarnings().stream()
            .anyMatch(warning -> warning.getType().equals(DiagnosticGroups.TYPES)
                && warning.description.contains("@this type of a function must be an object"));

        assertTrue("Expected a specific warning about @this type with typedef.", warningFound);
    }
}
