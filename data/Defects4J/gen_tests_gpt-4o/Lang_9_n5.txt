
import java.text.ParseException;
import java.text.SimpleDateFormat;

import org.apache.commons.lang3.time.FastDateParser;
import org.junit.Test;
import static org.junit.Assert.*;

public class FastDateParserTest {

    @Test(expected = ParseException.class)
    public void testUnterminatedQuoteInFormat() throws ParseException {
        // Setting up DateFormat with unterminated quote
        String dateFormatPattern = "'d'd'";
        String dateStr = "d3";

        // SimpleDateFormat should throw a ParseException
        SimpleDateFormat sdf = new SimpleDateFormat(dateFormatPattern);
        sdf.parse(dateStr);
    }

    @Test
    public void testFastDateParserUnterminatedQuoteBehavior() {
        // Setting up FastDateParser with unterminated quote
        String dateFormatPattern = "'d'd'";
        String dateStr = "d3";

        try {
            // FastDateParser does not currently throw a ParseException
            FastDateParser fdp = new FastDateParser(dateFormatPattern, null, null);
            fdp.parse(dateStr);
            fail("FastDateParser should throw ParseException due to unterminated quote in pattern.");
        } catch (ParseException e) {
            // Expected behavior
        }
    }
}
