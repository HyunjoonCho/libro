public void testIdentifierMinusNegativeNumberNeedsSpace() throws Exception {
    String inputJs = "var g = 5; var result = g--0.0;";
    String compiledJs = compileJavaScript(inputJs, CompilationLevel.ADVANCED_OPTIMIZATIONS);
    assertTrue("Output should contain 'g- -0.0'", compiledJs.contains("g- -0.0"));
}

private String compileJavaScript(String inputJs, CompilationLevel level) throws Exception {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    level.setOptionsForCompilationLevel(options);
    SourceFile input = SourceFile.fromCode("input.js", inputJs);
    SourceFile externs = SourceFile.fromCode("externs.js", "");
    compiler.compile(externs, input, options);

    if (compiler.hasErrors()) {
        throw new RuntimeException("Compilation error: " + compiler.getErrors());
    }

    return compiler.toSource();
}