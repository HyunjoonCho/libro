public void testJsonParserSequenceSkipsToken() throws IOException {
    JsonFactory jsonFactory = new JsonFactory();

    String json1 = "{\"key1\":\"value1\"}";
    String json2 = "{\"key2\":\"value2\"}";

    JsonParser parser1 = jsonFactory.createParser(json1);
    JsonParser parser2 = jsonFactory.createParser(json2);

    JsonParserSequence parserSequence = JsonParserSequence.createFlattened(parser1, parser2);

    // Advance to the first token
    assertEquals(JsonToken.START_OBJECT, parserSequence.nextToken());
    
    // Advance through parser 1
    assertEquals(JsonToken.FIELD_NAME, parserSequence.nextToken());
    assertEquals("key1", parserSequence.getCurrentName());
    assertEquals(JsonToken.VALUE_STRING, parserSequence.nextToken());
    assertEquals("value1", parserSequence.getText());
    assertEquals(JsonToken.END_OBJECT, parserSequence.nextToken());

    // Switch to parser 2, expected: not skip the START_OBJECT token
    assertEquals(JsonToken.START_OBJECT, parserSequence.nextToken());
    assertEquals(JsonToken.FIELD_NAME, parserSequence.nextToken());  // This was being skipped
    assertEquals("key2", parserSequence.getCurrentName());
    assertEquals(JsonToken.VALUE_STRING, parserSequence.nextToken());
    assertEquals("value2", parserSequence.getText());
    assertEquals(JsonToken.END_OBJECT, parserSequence.nextToken());
}