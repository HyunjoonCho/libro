
import org.apache.commons.math3.optim.linear.LinearConstraint;
import org.apache.commons.math3.optim.linear.LinearConstraintSet;
import org.apache.commons.math3.optim.linear.LinearObjectiveFunction;
import org.apache.commons.math3.optim.linear.NonNegativeConstraint;
import org.apache.commons.math3.optim.linear.Relationship;
import org.apache.commons.math3.optim.linear.SimplexSolver;
import org.apache.commons.math3.optim.linear.GoalType;
import org.apache.commons.math3.optim.PointValuePair;
import org.junit.Test;
import java.util.ArrayList;
import java.util.Collection;

import static org.junit.Assert.assertEquals;

public class SimplexSolverTest {

    @Test
    public void testSimplexSolverWithSimpleProblem() {
        // Objective function: Maximize 3x + 5y
        LinearObjectiveFunction objectiveFunction = new LinearObjectiveFunction(new double[]{3, 5}, 0);
        
        // Constraints:
        // 2x + y <= 14
        // 4x + 3y <= 35
        // x <= 4
        Collection<LinearConstraint> constraints = new ArrayList<>();
        constraints.add(new LinearConstraint(new double[]{2, 1}, Relationship.LEQ, 14));
        constraints.add(new LinearConstraint(new double[]{4, 3}, Relationship.LEQ, 35));
        constraints.add(new LinearConstraint(new double[]{1, 0}, Relationship.LEQ, 4));
        
        // Create SimplexSolver and solve the problem
        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(
                new org.apache.commons.math3.optim.MaxIter(100),
                objectiveFunction,
                new LinearConstraintSet(constraints),
                GoalType.MAXIMIZE,
                new NonNegativeConstraint(true)
        );

        // Validate the solution
        // Expected: maximum value is found at (x=4, y=3) which gives the value 29
        assertEquals(29, solution.getValue(), 0.0001);
        assertEquals(4, solution.getPoint()[0], 0.0001);
        assertEquals(3, solution.getPoint()[1], 0.0001);
    }
}
