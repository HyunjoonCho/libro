
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.junit.Test;

public class ToStringStyleMemoryLeakTest {

    @Test
    public void testPotentialMemoryLeakDueToThreadLocal() throws Exception {
        // Simulated loop for multiple "web application reloads"
        for (int i = 0; i < 10000; i++) {
            simulateWebAppReload();
        }
    }

    private void simulateWebAppReload() throws Exception {
        // Simulating loading and using ToStringStyle
        ToStringBuilder.reflectionToString(this, ToStringStyle.DEFAULT_STYLE);

        // Usually, the memory leak would be checked using a profiling tool or visual VM.
        // In a test case, it's not easy to assert because it's a 'leak' problem that's runtime/environment specific.

        // If you have access to profiling tools, you could check for retained memory by ThreadLocal.
    }
}
