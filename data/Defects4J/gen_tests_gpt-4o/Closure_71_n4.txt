public void testNoWarningOnPrivatePropertyRedeclare() {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticGroups.VISIBILITY, CheckLevel.ERROR);

    String parentClassCode = 
        "/** @constructor */ function Foo() { /** @private */ this.x_ = 3; }";
    String childClassCode = 
        "/** @constructor @extends {Foo} */ function SubFoo() { /** @private */ this.x_ = 3; }";

    SourceFile parent = SourceFile.fromCode("Foo.js", parentClassCode);
    SourceFile child = SourceFile.fromCode("SubFoo.js", childClassCode);

    Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), 
                                     ImmutableList.of(parent, child), 
                                     options);

    assertFalse("Expected a visibility error due to private property redeclaration", result.success);
    assertTrue("Expected error count to be greater than zero", result.errors.length > 0);
}