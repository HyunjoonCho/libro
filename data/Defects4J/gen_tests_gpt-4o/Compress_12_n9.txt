
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;

import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;

import static org.junit.Assert.fail;
import static org.junit.Assert.assertTrue;

public class TarArchiveInputStreamTest {

    @org.junit.Test
    public void testInvalidTarFileShouldThrowIOException() {
        // Create a byte array of invalid TAR file data
        byte[] invalidTarData = { 0, 1, 2, 3, 4, 5, 6, -1 };
        InputStream byteArrayInputStream = new ByteArrayInputStream(invalidTarData);
        
        try (TarArchiveInputStream tarInputStream = new TarArchiveInputStream(byteArrayInputStream)) {
            // Attempting to get the next entry should throw an IOException
            tarInputStream.getNextTarEntry();
            fail("Expected an IOException to be thrown due to invalid TAR data.");
        } catch (IOException e) {
            // Check if the exception is wrapped as expected
            assertTrue(e.getCause() instanceof IllegalArgumentException);
        }
    }
}
