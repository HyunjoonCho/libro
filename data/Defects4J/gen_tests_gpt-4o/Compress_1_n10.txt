
import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;
import org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream;
import org.apache.commons.io.IOUtils;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

import static org.junit.Assert.fail;

public class CpioArchiveInputStreamTest {

    @Test
    public void testCpioUnpack() {
        File dir = new File("outputDir");
        if (!dir.exists()) {
            dir.mkdirs();
        }
        
        try {
            final File input = getFile("cmdcreated.cpio");
            final InputStream in = new FileInputStream(input);
            
            // Wrap the InputStream with CpioArchiveInputStream
            CpioArchiveInputStream cin = new CpioArchiveInputStream(in);

            CpioArchiveEntry entry;
            while ((entry = (CpioArchiveEntry) cin.getNextCPIOEntry()) != null) {
                File target = new File(dir, entry.getName());
                if (entry.isDirectory()) {
                    target.mkdirs();
                } else {
                    final OutputStream out = new FileOutputStream(target);
                    IOUtils.copy(cin, out);
                    out.close();
                }
            }

            cin.close();
        } catch (java.io.EOFException e) {
            fail("Unexpected EOFException while reading CPIO archive: " + e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
            fail("Exception occurred while unpacking CPIO: " + e.getMessage());
        }
    }

    private File getFile(String fileName) {
        // Adjust the file path as needed.
        return new File("path/to/test/resources/" + fileName);
    }
}
