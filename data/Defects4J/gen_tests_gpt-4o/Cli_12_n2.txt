
import org.apache.commons.cli.*;
import org.junit.Test;
import static org.junit.Assert.*;

public class PosixParserTest {

    @Test
    public void testPosixParserBehavior() throws Exception {
        final String OPTION_TARGET = "t";
        final String OPTION_TARGET_LONG = "target";

        // Create an option with a short and long name expecting an argument
        Option generateTarget = new Option(OPTION_TARGET, OPTION_TARGET_LONG, true, "Generate files for the specified target machine");

        // Add the option to an Options object
        Options options = new Options();
        options.addOption(generateTarget);

        // Create a PosixParser
        CommandLineParser parser = new PosixParser();

        // Prepare arguments simulating the command line input "-target foobar.com"
        String[] args = new String[]{"-target", "foobar.com"};

        try {
            // Parse the arguments
            CommandLine parsedLine = parser.parse(options, args);

            // Check if the 'target' option was detected
            assertTrue(parsedLine.hasOption(OPTION_TARGET));

            // Check the value associated with the 'target' option, demonstrating the bug
            String parsedValue = parsedLine.getOptionValue(OPTION_TARGET);
            assertEquals("foobar.com", parsedValue);  // This is what we expect to be the correct behavior
        } catch (ParseException pe) {
            fail("Parsing failed: " + pe.getMessage());
        }
    }
}
