
import static org.junit.Assert.assertEquals;

import org.apache.commons.lang3.StringUtils;
import org.junit.Test;

public class StringUtilsTest {

    @Test
    public void testReplaceEachWithNullReplacement() {
        String original = "Hello World!";
        String[] searchList = {"Hello", "World"};
        String[] replacementList = {"Greetings", null};
        
        try {
            String result = StringUtils.replaceEach(original, searchList, replacementList);
            // One of the following assertions should be met, based on the desired behavior:

            // If null means no replacement occurs:
            // assertEquals("Greetings World!", result);

            // If null should be ignored and result in empty string replacement:
            assertEquals("Greetings !", result);

            // If null is intended to replace with "null" as text:
            // assertEquals("Greetings null!", result);
            
        } catch (NullPointerException e) {
            // If the behavior should be to throw a NullPointerException, document it
            System.err.println("Caught NullPointerException as expected.");
        }
    }
}
