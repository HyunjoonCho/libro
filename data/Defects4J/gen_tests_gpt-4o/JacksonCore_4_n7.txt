
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.fail;
import java.io.IOException;

public class JacksonKeyLengthTest {

    @Test
    public void testLongJsonKey() {
        // Create a very long key (262145 "a" characters)
        StringBuilder longKeyBuilder = new StringBuilder();
        for (int i = 0; i < 262145; i++) {
            longKeyBuilder.append("a");
        }
        String longKey = longKeyBuilder.toString();

        // Create a JSON object using the long key
        String jsonWithLongKey = String.format("{\"%s\": \"value\"}", longKey);

        ObjectMapper objectMapper = new ObjectMapper();
        JsonFactory jsonFactory = objectMapper.getFactory();

        try (JsonParser jsonParser = jsonFactory.createParser(jsonWithLongKey)) {
            // Attempt to parse the JSON
            while (jsonParser.nextToken() != null) {
                // Just parsing through the JSON to trigger the bug
            }
            fail("Expected an ArrayIndexOutOfBoundsException due to a very long key.");
        } catch (ArrayIndexOutOfBoundsException e) {
            // Expected exception
            System.out.println("Caught expected ArrayIndexOutOfBoundsException: " + e.getMessage());
        } catch (IOException e) {
            fail("An unexpected IOException occurred: " + e.getMessage());
        }
    }
}
