public void testConfiguringObjectMapperDateFormatChangesTimeZone() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(createJodaModule());
    mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);
    
    // Ensure initial timezone is set to UTC
    assertEquals(TimeZone.getTimeZone("GMT"), mapper.getSerializationConfig().getTimeZone());
    
    mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"));
    
    // After setting the DateFormat, the timezone changes in 2.6.0
    DateTime dateTime = new DateTime(1988, 6, 25, 20, 30, DateTimeZone.UTC);
    String json = mapper.writeValueAsString(dateTime);
    
    // Expected output differs between versions
    assertEquals("\"1988-06-25 20:30:00\"", json); // Expected in 2.5.4
    
    // Uncomment below expected result if running the test on 2.6.0
    // assertEquals("\"1988-06-25 21:30:00\"", json); 
}

private SimpleModule createJodaModule() {
    SimpleModule module = new SimpleModule();
    module.addSerializer(DateTime.class, new DateTimeSerializer(
            new JacksonJodaDateFormat(DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss")
            .withZoneUTC())));
    return module;
}