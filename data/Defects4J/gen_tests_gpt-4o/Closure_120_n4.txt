public void testOverzealousOptimization() {
    // Mock the doStuff and reset functions to replicate the scenario
    uid = Math.random(); // Initial UID
    double[] uids = new double[1];
    uids[0] = uid;

    Runnable reset = () -> uids[0] = Math.random();
    Runnable doStuff = new Runnable() {
        @Override
        public void run() {
            reset.run();
            double _uid = uids[0];

            if (uids[0] < 0.5) {
                run();
            }

            try {
                if (_uid != uids[0]) {
                    throw new RuntimeException("reset() was called");
                }
                assertFalse(_uid != uids[0]);
            } catch (RuntimeException e) {
                assertEquals("reset() was called", e.getMessage());
            }
        }
    };

    // The initial call to doStuff
    doStuff.run();
}