
import com.google.javascript.jscomp.*;
import com.google.javascript.rhino.head.*;

import java.util.ArrayList;
import java.util.List;

public class ClosureCompilerTest {

    @org.junit.Test
    public void testUnreachableCodeWarning() {
        String code = "function instanceOf(value, type) {\n" +
                      " try {\n" +
                      " if (value instanceof type) {\n" +
                      " return true;\n" +
                      " }\n" +
                      " } catch (exception) {\n" +
                      " if (exception instanceof TypeError) {\n" +
                      " throw exception;\n" +
                      " }\n" +
                      " return (type === Object);\n" +
                      " }\n" +
                      "}";
        
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // Set the compilation level
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
        
        // Run the compiler
        SourceFile extern = SourceFile.fromCode("externs.js", "");
        SourceFile input = SourceFile.fromCode("test.js", code);
        List<SourceFile> externs = new ArrayList<>();
        externs.add(extern);
        List<SourceFile> inputs = new ArrayList<>();
        inputs.add(input);
        
        compiler.compile(externs, inputs, options);
        
        // Check for reported issues
        boolean hasUnreachableCodeWarning = false;
        for (JSError error : compiler.getWarnings()) {
            if (error.getDescription().contains("unreachable code")) {
                hasUnreachableCodeWarning = true;
                break;
            }
        }
        
        if (hasUnreachableCodeWarning) {
            System.out.println("Test failed: Unreachable code warning was issued.");
        } else {
            System.out.println("Test passed: No unreachable code warning was issued.");
        }
        
        assertFalse("Expected no unreachable code warning", hasUnreachableCodeWarning);
    }
}
