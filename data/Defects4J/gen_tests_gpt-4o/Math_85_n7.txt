
import org.apache.commons.math3.distribution.NormalDistribution;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class NormalDistributionTest {

    @Test
    public void testInverseCumulativeProbability() {
        NormalDistribution normal = new NormalDistribution(0, 1);

        // Test for cumulative probability 0.9772498680518209 which is supposed to be approx 2.0000
        try {
            double result = normal.inverseCumulativeProbability(0.9772498680518209);
            assertEquals("Expected value: 2.0", 2.0, result, 1e-4);
        } catch (Exception e) {
            e.printStackTrace();
            assert false : "Exception encountered for input probability 0.9772498680518209";
        }

        // Test for cumulative probability 0.9986501019683698 which is supposed to be approx 3.0000
        try {
            double result = normal.inverseCumulativeProbability(0.9986501019683698);
            assertEquals("Expected value: 3.0", 3.0, result, 1e-4);
        } catch (Exception e) {
            e.printStackTrace();
            assert false : "Exception encountered for input probability 0.9986501019683698";
        }

        // Test for cumulative probability 0.9999683287581673 which is supposed to be approx 4.0000
        try {
            double result = normal.inverseCumulativeProbability(0.9999683287581673);
            assertEquals("Expected value: 4.0", 4.0, result, 1e-4);
        } catch (Exception e) {
            e.printStackTrace();
            assert false : "Exception encountered for input probability 0.9999683287581673";
        }
    }
}
