
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
import org.apache.commons.compress.archivers.zip.ZipFile;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import static org.junit.Assert.*;

public class ZipEntryEqualityTest {

    // Helper method to create a basic zipped file for testing
    private File createTestZipFile() throws Exception {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ZipOutputStream zos = new ZipOutputStream(baos);
        ZipEntry entry = new ZipEntry("test.txt");
        entry.setComment(""); // setting an empty comment
        zos.putNextEntry(entry);
        zos.write("Sample Content".getBytes());
        zos.closeEntry();
        zos.close();

        // Write to a temporary file
        File tempFile = File.createTempFile("test", ".zip");
        FileOutputStream fos = new FileOutputStream(tempFile);
        fos.write(baos.toByteArray());
        fos.close();
        return tempFile;
    }

    @Test
    public void testZipArchiveEntryEquality() throws Exception {
        // Create a test zip file
        File zipFile = createTestZipFile();
        
        // Read entry using ZipArchiveInputStream
        ZipArchiveEntry entryFromInputStream = null;
        try (ZipArchiveInputStream zis = new ZipArchiveInputStream(new ByteArrayInputStream(zipFile.toPath().toUri().toString().getBytes()))) {
            entryFromInputStream = zis.getNextZipEntry();
        }

        // Read entry using ZipFile
        ZipArchiveEntry entryFromZipFile = null;
        try (ZipFile zf = new ZipFile(zipFile)) {
            Enumeration<ZipArchiveEntry> entries = zf.getEntries();
            if (entries.hasMoreElements()) {
                entryFromZipFile = entries.nextElement();
            }
        }

        // Verify entryFromInputStream and entryFromZipFile are not equals due to comment differences
        assertNotNull(entryFromInputStream);
        assertNotNull(entryFromZipFile);
        assertNotEquals(entryFromInputStream, entryFromZipFile);

        // Compare the comments specifically
        assertNull(entryFromInputStream.getComment());
        assertEquals("", entryFromZipFile.getComment());
    }
}
