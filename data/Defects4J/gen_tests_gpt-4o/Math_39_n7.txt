public void testTooLargeFirstStepWithDormandPrince853Integrator() {
    double[] y = {0.0};
    FirstOrderDifferentialEquations ode = new FirstOrderDifferentialEquations() {
        public int getDimension() {
            return 1;
        }
        public void computeDerivatives(double t, double[] y, double[] yDot) {
            yDot[0] = -0.5 * y[0];
        }
    };
  
    DormandPrince853Integrator integrator = new DormandPrince853Integrator(1.0e-8, 1.0, 1.0e-10, 1.0e-10);
    
    try {
        integrator.integrate(ode, 0.0, y, 1.0e-10, y);
        fail("Exception was expected due to large initial step size with small integration range.");
    } catch (Exception e) {
        // expected behavior
    }
}