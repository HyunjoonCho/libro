public void testBreakInFinallyBlock() {
    Object result = null;
    try {
        result = evaluateCodeBlockWithBreakInFinally();
    } catch (RuntimeException e) {
        fail("Exception should not be thrown");
    }
    assertEquals("ok then...", result);
}

private Object evaluateCodeBlockWithBreakInFinally() {
    Object[] result = {"not ok"};
    // Simulate a labelled block with try-finally
    boolean broken = false;
    label:
    try {
        throw new RuntimeException("throw me");
    } finally {
        // Fake catcher and break
        result[0] = "ok then...";
        broken = true;
        break label;
    }
    if (!broken) {
        throw new IllegalStateException("The break did not occur as expected");
    }
    return result[0];
}