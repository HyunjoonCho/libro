
import org.apache.commons.math3.fraction.BigFraction;
import org.junit.Test;
import static org.junit.Assert.*;

import java.math.BigInteger;

public class BigFractionTest {

    @Test
    public void testDoubleValueForLargeFractions() {
        // Large numerator and denominator in a ratio that should not be NaN
        BigInteger largeNumerator = new BigInteger("1").shiftLeft(310); // 2^310
        BigInteger largeDenominator = new BigInteger("2"); // 2
        
        BigFraction bigFraction = new BigFraction(largeNumerator, largeDenominator);
        double doubleValue = bigFraction.doubleValue();

        // The expected value should still be a finite double within range
        assertFalse("The double value should not be NaN", Double.isNaN(doubleValue));
        
        // For 2^310 / 2 the expected value would be 2^309
        double expectedValue = Math.pow(2, 309);
        assertEquals("The double value is incorrect", expectedValue, doubleValue, 0.0);
    }
}
