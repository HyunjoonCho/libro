
import static org.junit.Assert.*;
import org.junit.Test;

public class TemplateTypeInferenceTest {

    /**
     * A generic class with a template type CLASS.
     * @param <CLASS> The template type.
     */
    static class MyClass<CLASS> {
        /**
         * A method that takes a function parameter.
         * @param a A function taking/returning type CLASS.
         * @param <T> The template type for method.
         * @return A string.
         */
        public <T> String foo(Function<CLASS, CLASS> a) {
            return "string";
        }
    }
    
    @FunctionalInterface
    interface Function<I, O> {
        O apply(I input);
    }
    
    /**
     * Test case for incorrect template type inference.
     */
    @Test
    public void testTemplateTypeInference() {
        MyClass<Integer> myClassInstance = new MyClass<>();
        
        Function<Integer, Integer> func = (Integer a) -> a;
        
        String result = myClassInstance.foo(func);
        
        assertEquals("string", result);
    }
}
