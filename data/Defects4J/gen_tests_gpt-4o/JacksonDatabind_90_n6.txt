public void testValueInstantiatorWithArrayDelegate() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    MyType thing = mapper.readValue("[]", MyType.class);
    assertNotNull("The returned object should not be null", thing);
    assertTrue("The values list should be empty", thing.getValues().isEmpty());
}

public static class MyTypeImpl implements MyType {
    private final List<Integer> values;

    MyTypeImpl(List<Integer> values) {
        this.values = values;
    }

    @Override
    public List<Integer> getValues() {
        return values;
    }
}

public interface MyType {
    @JsonValue
    List<Integer> getValues();

    @JsonCreator
    static MyType of(List<Integer> values) {
        return new MyTypeImpl(values);
    }
}