
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.util.EnumMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class EnumMapJsonPropertyTest {

    private enum MyEnum {
        @JsonProperty("value_one")
        VALUE_ONE,
        
        @JsonProperty("value_two")
        VALUE_TWO
    }

    @Test
    public void testEnumMapSerializationWithJsonProperty() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.enable(SerializationFeature.INDENT_OUTPUT); // For pretty print, optional

        EnumMap<MyEnum, String> enumMap = new EnumMap<>(MyEnum.class);
        enumMap.put(MyEnum.VALUE_ONE, "First");
        enumMap.put(MyEnum.VALUE_TWO, "Second");

        String jsonString = objectMapper.writeValueAsString(enumMap);

        // The expected JSON should use the @JsonProperty values for keys
        String expectedJson = "{\n" +
                              "  \"value_one\" : \"First\",\n" +
                              "  \"value_two\" : \"Second\"\n" +
                              "}";

        assertEquals(expectedJson.replaceAll("\\s+",""), jsonString.replaceAll("\\s+",""));
    }
}
