
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.module.afterburner.AfterburnerModule;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class NonEmptyExclusionTest {

    static class TestClass {
        public String stringValue;
        public int intValue;

        public TestClass(String stringValue, int intValue) {
            this.stringValue = stringValue;
            this.intValue = intValue;
        }
    }

    @Test
    public void testNonEmptyExclusion() throws Exception {
        ObjectMapper defaultMapper = new ObjectMapper();
        defaultMapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);

        TestClass testObj = new TestClass("", 0);

        String defaultJson = defaultMapper.writeValueAsString(testObj);
        // Expect both fields to be excluded as they are "empty"
        assertEquals("{}", defaultJson);

        ObjectMapper afterburnerMapper = new ObjectMapper();
        afterburnerMapper.registerModule(new AfterburnerModule());
        afterburnerMapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);

        String afterburnerJson = afterburnerMapper.writeValueAsString(testObj);
        // Expect the behavior to match the default behavior
        assertEquals("{}", afterburnerJson);
    }
}
