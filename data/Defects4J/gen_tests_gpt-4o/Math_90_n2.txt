
import org.apache.commons.math3.stat.Frequency;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class FrequencyTest {

    @Test
    public void testAddNonComparableObject() {
        Frequency frequency = new Frequency();
        final Object OBJ = new Object();

        try {
            // This should fail according to the bug report
            frequency.addValue(OBJ);
            fail("Expected IllegalArgumentException when adding a non-Comparable object to Frequency");
        } catch (IllegalArgumentException e) {
            // Expected behavior, non-Comparable objects shouldn't be allowed
        }
    }

    @Test
    public void testNonComparableObjectCountAndPct() {
        Frequency frequency = new Frequency();
        final Object OBJ = new Object();

        frequency.addValue(OBJ); // Assuming this line should actually not be here as it should fail, but added to represent the behavior
        assertEquals("Count should be 0 for a non-Comparable object", 0, frequency.getCount(OBJ));
        assertEquals("Percentage should be 0.0 for a non-Comparable object", 0.0, frequency.getPct(OBJ), 0.0);
    }
}
