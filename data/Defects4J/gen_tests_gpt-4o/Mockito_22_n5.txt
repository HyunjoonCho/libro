
import static org.mockito.Mockito.*;

import java.util.function.Supplier;

import org.junit.Test;

interface I {
    <T> Supplier<T> m(Class<T> type);
}

public class DeepStubWithGenericsTest {

    @Test(expected = ClassCastException.class)
    public void testDeepStubWithGenerics() {
        I i = mock(I.class, RETURNS_DEEP_STUBS);
        
        // This line is expected to throw a ClassCastException
        when(i.m(Boolean.class).get());
    }
    
    @Test
    public void testWithoutDeepStub() {
        I i = mock(I.class);
        Supplier<Boolean> s = mock(Supplier.class);
        
        when(i.m(Boolean.class)).thenReturn(s);
        when(i.m(Boolean.class).get());
        
        // This test does not throw an exception
    }
}
