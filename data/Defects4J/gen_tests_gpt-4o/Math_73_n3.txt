
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.junit.Test;

import static org.junit.Assert.fail;

public class BrentSolverTest {

    @Test
    public void testInitialGuessSignCheck() {
        try {
            BrentSolver solver = new BrentSolver();
            UnivariateFunction function = new UnivariateFunction() {
                @Override
                public double value(double x) {
                    // A simple function with a root between 1 and 2
                    return x - 1.5;
                }
            };
            
            // These values should bracket the root, but the initial guess has the wrong sign
            double min = 1.0;
            double max = 2.0;
            double initialGuess = 2.5; // This is outside the bracket and would not have the correct sign
            
            // Attempt to solve, expecting an IllegalArgumentException to be thrown
            solver.solve(100, function, min, max, initialGuess);
            fail("Expected IllegalArgumentException due to same sign values at min, max, and initialGuess.");
        } catch (IllegalArgumentException e) {
            // Exception expected: do nothing
        }
    }
}
