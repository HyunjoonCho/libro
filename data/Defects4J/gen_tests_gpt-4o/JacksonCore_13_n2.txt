
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.ByteArrayOutputStream;

import static org.junit.Assert.assertEquals;

public class UTF8JsonGeneratorTest {

    @Test
    public void testQuoteFieldNamesEnabled() throws Exception {
        // Prepare
        JsonFactory jsonFactory = new JsonFactory();
        ObjectMapper objectMapper = new ObjectMapper(jsonFactory);
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();

        // Generate JSON with QUOTE_FIELD_NAMES enabled (default behavior)
        try (JsonGenerator jsonGenerator = jsonFactory.createGenerator(outputStream)) {
            jsonGenerator.writeStartObject();
            jsonGenerator.writeStringField("field", "value");
            jsonGenerator.writeEndObject();
        }
        
        String resultingJson = outputStream.toString("UTF-8");
        assertEquals("{\"field\":\"value\"}", resultingJson);
    }

    @Test
    public void testQuoteFieldNamesDisabled() throws Exception {
        // Prepare
        JsonFactory jsonFactory = new JsonFactory();
        ObjectMapper objectMapper = new ObjectMapper(jsonFactory);
        jsonFactory.configure(JsonGenerator.Feature.QUOTE_FIELD_NAMES, false);
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();

        // Generate JSON with QUOTE_FIELD_NAMES disabled
        try (JsonGenerator jsonGenerator = jsonFactory.createGenerator(outputStream)) {
            jsonGenerator.writeStartObject();
            jsonGenerator.writeStringField("field", "value");
            jsonGenerator.writeEndObject();
        }
        
        String resultingJson = outputStream.toString("UTF-8");
        // Verify that the field names are not quoted in the output
        assertEquals("{field:\"value\"}", resultingJson);
    }
}
