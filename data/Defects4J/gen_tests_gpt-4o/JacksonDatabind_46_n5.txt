
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.util.concurrent.atomic.AtomicReference;

import static org.junit.Assert.assertEquals;

public class GenericSignatureTest {

    @Test
    public void testGenericSignatureProduction() {
        ObjectMapper objectMapper = new ObjectMapper();
        TypeFactory typeFactory = objectMapper.getTypeFactory();
        JavaType javaType = typeFactory.constructType(new AtomicReference<String>(){}.getClass().getGenericSuperclass());

        String expectedSignature = "()Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/String;>;";
        String actualSignature = javaType.getGenericSignature();

        // Assert that the actualSignature matches the expectedSignature
        assertEquals("The generic signature should match the expected format", expectedSignature, actualSignature);
    }
}
