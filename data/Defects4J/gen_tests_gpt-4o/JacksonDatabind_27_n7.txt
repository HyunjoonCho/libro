
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class ExternalTypeIdTest {

    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXTERNAL_PROPERTY, property = "type")
    public static class Base {
        public String name;
    }

    @JsonTypeName("foo")
    public static class Foo extends Base {
        public int fooField;
    }

    public static class Wrapper {
        public String type;

        @JsonDeserialize(as = Foo.class)
        public Base value;
    }

    @Test
    public void testExternalTypeIdDeserialization() throws Exception {
        String json = "{\"type\":\"foo\",\"value\":{\"name\":\"test\",\"fooField\":42}}";

        ObjectMapper mapper = new ObjectMapper();
        JsonParser parser = mapper.createParser(json);

        Wrapper result = mapper.readValue(parser, Wrapper.class);

        assertEquals("foo", result.type);
        assertEquals("test", result.value.name);
        assertEquals(Foo.class, result.value.getClass());
        Foo foo = (Foo) result.value;
        assertEquals(42, foo.fooField);
    }
}
