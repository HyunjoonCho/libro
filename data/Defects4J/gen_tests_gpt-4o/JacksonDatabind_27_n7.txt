public void testDeserializingExternalTypeIdBeforePojo() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerSubtypes(MyType.class);
    
    String json = "{\"type\":\"CUSTOM\",\"value\":{\"name\":\"testName\"}}";

    MyWrapper result = mapper.readValue(json, MyWrapper.class);

    assertEquals("testName", result.getValue().getName());
    assertEquals("CUSTOM", result.getType());
}

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXTERNAL_PROPERTY, property = "type")
@JsonSubTypes({
    @JsonSubTypes.Type(value = MyType.class, name = "CUSTOM")
})
static class MyType {
    private String name;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}

static class MyWrapper {
    private String type;
    private MyType value;

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public MyType getValue() {
        return value;
    }

    public void setValue(MyType value) {
        this.value = value;
    }
}