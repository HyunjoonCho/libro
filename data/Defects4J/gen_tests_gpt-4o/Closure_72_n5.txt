
import com.google.javascript.jscomp.CommandLineRunner;
import org.junit.Test;
import static org.junit.Assert.fail;

public class CompilerTest {

    @Test
    public void testInternalCompilerErrorOnLabels() {
        String jsCode = "var __label__ = 0;\n" +
                        "$for_body$5: while(1) {\n" +
                        "  if (__label__ == 0) {\n" +
                        "    // Simulating complex conditions\n" +
                        "    break $for_body$5;\n" +
                        "  }\n" +
                        "}\n";

        try {
            CommandLineRunner runner = new CommandLineRunner(new String[] {
                "--compilation_level", "ADVANCED_OPTIMIZATIONS",
                "--js", "-", // Read from stdin
                // Using a mock output to prevent actual file creation for test purpose
                "--js_output_file", "/dev/null"
            });
            runner.setRunOptions(new RuntimeOptions(System.in, System.out, System.err));
            runner.run();
        } catch (Exception e) {
            if (e.getMessage().contains("INTERNAL COMPILER ERROR")) {
                fail("Internal compiler error encountered with labels.");
            }
        }
    }
}
