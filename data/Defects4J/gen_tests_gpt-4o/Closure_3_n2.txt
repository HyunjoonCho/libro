public void testOptimizationFailsWithCatchVar() {
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    options.setCheckTypes(true);
    
    String originalCode =
        "function getStack() {" +
        "  var getErrorObject = function() {" +
        "    try {" +
        "      throw Error('');" +
        "    } catch(err) {" +
        "      return err;" +
        "    }" +
        "  };" +
        "  return getErrorObject().stack;" +
        "}" +
        "window['getStackTrace'] = getStack;";

    String expectedError = "JSC_REFERENCE_BEFORE_DECLARE";
    
    try {
        compileAndRun(originalCode, options);
        fail("Expected an error due to illegal reference of catch variable outside its scope.");
    } catch (RuntimeException e) {
        if (!e.getMessage().contains(expectedError)) {
            fail("Unexpected error: " + e.getMessage());
        }
    }
}