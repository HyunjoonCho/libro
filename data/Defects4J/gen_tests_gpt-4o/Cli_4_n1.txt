
import org.apache.commons.cli.*;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class PosixParserBugTest {

    private static final String OPTION_TARGET = "t";
    private static final String OPTION_TARGET_LONG = "target";

    @Test
    public void testPosixParser() {
        // Setting up command line options
        Options cmdLineOpts = new Options();
        Option generateTarget = new Option(OPTION_TARGET, OPTION_TARGET_LONG, true, "Generate files for the specified target machine");
        cmdLineOpts.addOption(generateTarget);

        // Simulating the argument input: "-target foobar.com"
        String[] args = new String[]{"-target", "foobar.com"};

        // Using PosixParser
        CommandLineParser parser = new DefaultParser();
        try {
            CommandLine parsedLine = parser.parse(cmdLineOpts, args);
            assertTrue("Option 'target' should be present", parsedLine.hasOption(OPTION_TARGET));

            // Expect that the value should be "foobar.com", but due to the bug it will be "arget"
            String selectedTarget = parsedLine.getOptionValue(OPTION_TARGET);
            assertEquals("foobar.com", selectedTarget);
        } catch (ParseException e) {
            // This should not happen in this test case as we're testing for incorrect parsing behavior
            System.out.println("Invalid command: " + e.getMessage());
        }
    }
}
