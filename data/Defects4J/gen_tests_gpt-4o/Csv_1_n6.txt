
import org.junit.Test;
import java.io.IOException;
import java.io.StringReader;

import static org.junit.Assert.assertEquals;

public class ExtendedBufferReaderTest {

    // Hypothetical ExtendedBufferReader implementation
    static class ExtendedBufferReader extends java.io.BufferedReader {
        private int lineCount = 0;
        private boolean lastWasCR = false;

        public ExtendedBufferReader(StringReader reader) {
            super(reader);
        }

        @Override
        public int read() throws IOException {
            int ch = super.read();
            if (ch == '\n' && !lastWasCR) {
                lineCount++;
            }
            lastWasCR = (ch == '\r');
            return ch;
        }

        @Override
        public String readLine() throws IOException {
            String line = super.readLine();
            if (line != null) {
                lineCount++;
            }
            return line;
        }

        public int getLineCount() {
            return lineCount;
        }
    }

    @Test
    public void testExtendedBufferReaderEOLHandling() throws IOException {
        String input = "Line1\rLine2\nLine3\r\nLine4\n\rLine5";
        ExtendedBufferReader reader = new ExtendedBufferReader(new StringReader(input));

        // Read all lines to increment the lineCount
        while (reader.readLine() != null) {
            // Just reading to trigger line count increment
        }

        // Expecting 5 lines with CR, LF, CRLF as default line endings
        int expectedLineCount = 5; // Correct line count
        assertEquals(expectedLineCount, reader.getLineCount());
    }
}
