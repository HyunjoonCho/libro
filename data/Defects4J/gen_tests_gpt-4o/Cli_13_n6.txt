
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class CliArgumentDefaultsTest {

    @Test
    public void testOverrideDefaultArgument() throws ParseException {
        // Create an Option with a default value
        Option option = Option.builder("o")
                .longOpt("option")
                .hasArg()
                .desc("An option with a default value")
                .build();

        // Create Options and add the defined option
        Options options = new Options();
        options.addOption(option);

        // Default value before any parsing
        String defaultValue = "default";
        String suppliedValue = "override";

        // Create a command line parser
        DefaultParser parser = new DefaultParser();

        // Parse the command line with the default value
        CommandLine initialCmd = parser.parse(options, new String[]{});
        initialCmd.getOptionValue("o", defaultValue);

        // Now parse the command line with the argument intended to override
        CommandLine cmd = parser.parse(options, new String[]{"-o", suppliedValue});

        // Assert that the value reflects the supplied command line argument
        assertTrue(cmd.hasOption("o"));
        assertEquals(suppliedValue, cmd.getOptionValue("o"));
    }
}
