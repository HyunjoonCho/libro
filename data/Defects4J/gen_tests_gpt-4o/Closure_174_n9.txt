
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;
import static org.junit.Assert.*;

public class GoogScopeCompilerTest {

    @Test
    public void testGoogScopeCompilerCrash() {
        // Sample JavaScript with goog.scope
        String jsCode = "goog.provide('main');\n" +
                        "goog.scope(function() {\n" +
                        "  var a = foo, b, c = 1;\n" +
                        "});";

        // Setup Google Closure Compiler
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // Compile and catch any exceptions
        try {
            JSSourceFile input = JSSourceFile.fromCode("test.js", jsCode);

            // Use an empty externs file for simplicity
            JSSourceFile extern = JSSourceFile.fromCode("externs.js", "");
            
            // Compile
            Result result = compiler.compile(extern, input, options);

            // Check that the compilation did not succeed
            assertFalse("Compiler should not crash and return errors", result.success);
        } catch (Exception e) {
            fail("Compiler crashed with exception: " + e.getMessage());
        }
    }
}
