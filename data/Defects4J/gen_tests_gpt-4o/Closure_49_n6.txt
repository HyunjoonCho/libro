
import static org.junit.Assert.assertEquals;
import com.google.javascript.jscomp.*;

public class CompilerTest {

    @org.junit.Test
    public void testFunctionAssignmentWithSameNameVariable() {
        String jsCode = "var foo = function bar(){ var bar; alert(bar); };";
        String compiledCode = compileJs(jsCode);

        // Expected compiled output
        String expectedCompiledCode = "var foo=function(){alert(void 0)};";

        assertEquals(expectedCompiledCode, compiledCode);
    }

    private String compileJs(String jsCode) {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
        
        SourceFile extern = SourceFile.fromCode("externs", "");
        SourceFile input = SourceFile.fromCode("test", jsCode);
        compiler.compile(extern, input, options);

        return compiler.toSource();
    }
}
