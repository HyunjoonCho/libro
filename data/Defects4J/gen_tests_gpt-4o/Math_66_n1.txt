public void testBrentOptimizer() {
    // Assume BrentOptimizer is a class that finds the minimum of a univariate function
    BrentOptimizer optimizer = new BrentOptimizer(1e-10, 1e-14);
    UnivariateFunction parabola = new UnivariateFunction() {
        public double value(double x) {
            return Math.pow(x - 3, 2);
        }
    };
    // The minimum of the function x^2 at x=3 is 0
    UnivariatePointValuePair result = optimizer.optimize(new MaxEval(1000), parabola, GoalType.MINIMIZE, new SearchInterval(0, 6));
    double expected = 3.0;
    double tolerance = 1e-8;
    assertEquals(expected, result.getPoint(), tolerance);
}