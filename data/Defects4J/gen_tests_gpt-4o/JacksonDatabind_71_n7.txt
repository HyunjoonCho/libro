
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;
import org.junit.Test;

import java.io.IOException;
import java.util.Map;
import java.util.HashMap;

import static org.junit.Assert.assertEquals;

public class CharSequenceKeyDeserializerTest {

    @Test
    public void testCharSequenceKeyDeserialization() {
        ObjectMapper objectMapper = new ObjectMapper();

        // Create a Map with CharSequence as key
        Map<CharSequence, String> originalMap = new HashMap<>();
        originalMap.put("key1", "value1");
        originalMap.put("key2", "value2");

        try {
            // Serialize the map to JSON
            String json = objectMapper.writeValueAsString(originalMap);

            // Attempt to deserialize the JSON back into a Map with CharSequence keys
            Map<CharSequence, String> resultMap = objectMapper.readValue(json, objectMapper.getTypeFactory().constructMapType(Map.class, CharSequence.class, String.class));

            // Verify that the deserialized map is equivalent to the original one
            assertEquals("Deserialized map should be equal to original", originalMap, resultMap);

        } catch (JsonProcessingException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
