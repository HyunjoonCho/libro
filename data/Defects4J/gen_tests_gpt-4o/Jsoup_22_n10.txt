
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.TextNode;
import org.jsoup.Jsoup;
import org.junit.Test;
import static org.junit.Assert.*;

public class SiblingElementsTest {

    @Test
    public void testSiblingMethodsWithoutParent() {
        // Create an element without a parent
        Element elementWithoutParent = new Element("div");

        // Attempt to get nextSibling, previousSibling, and siblingElements
        try {
            Element next = elementWithoutParent.nextElementSibling();
            assertNull("Next sibling should be null", next);
        } catch (NullPointerException e) {
            fail("nextElementSibling should not throw NullPointerException");
        }

        try {
            Element previous = elementWithoutParent.previousElementSibling();
            assertNull("Previous sibling should be null", previous);
        } catch (NullPointerException e) {
            fail("previousElementSibling should not throw NullPointerException");
        }

        try {
            List<Element> siblings = elementWithoutParent.siblingElements();
            assertTrue("Sibling elements should be empty", siblings.isEmpty());
        } catch (NullPointerException e) {
            fail("siblingElements should not throw NullPointerException");
        }
    }
}
