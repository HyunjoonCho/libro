
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class JsonIdentityReferenceTest {

    @JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class, property = "id")
    @JsonIdentityReference(alwaysAsId = true)
    static class ReallyAlwaysAsId {
        public int value;

        public ReallyAlwaysAsId() {
            this(0);
        }

        public ReallyAlwaysAsId(int v) {
            value = v;
        }
    }

    @JsonPropertyOrder(alphabetic = true)
    static class ReallyAlwaysContainer {
        public ReallyAlwaysAsId b = new ReallyAlwaysAsId(13);
    }

    private static final ObjectMapper MAPPER = new ObjectMapper();

    @Test
    public void testReallyAlwaysAsId() throws Exception {
        String json = MAPPER.writeValueAsString(new ReallyAlwaysContainer());
        assertEquals("{\"b\":1}", json);  // Expected output when issue is fixed
    }
}
