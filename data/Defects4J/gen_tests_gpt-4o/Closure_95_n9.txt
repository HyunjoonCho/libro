
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class GlowTest {

    @Test
    public void testPublicTagPreventsCompression() {
        // Simulating the behavior of the compiler with ADVANCED_OPTIMIZATIONS on
        GlowTest.Glow glow = new GlowTest.Glow();
        
        // Script-level code that accesses Glow object
        // Directly modifying the versions and checking if the method reflects the change
        glow.versions = new int[]{4, 5, 6};
        
        // Capture the output of showVersions
        String result = glow.showVersions();
        
        // Assert that the output is as expected with the @public tag preventing name compression
        assertEquals("[4, 5, 6]", result);
    }

    // Simulating the JavaScript structure and behavior
    public static class Glow {
        public int[] versions;
        public Glow() {
            // @public
            versions = new int[]{1, 2, 3};
        }
        
        public String showVersions() {
            StringBuilder sb = new StringBuilder("[");
            for (int i = 0; i < versions.length; i++) {
                sb.append(versions[i]);
                if (i < versions.length - 1) sb.append(", ");
            }
            sb.append("]");
            return sb.toString();
        }
    }
}
