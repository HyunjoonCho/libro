
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class ClosureCompilerTest {

    @Test
    public void testSingleUseStrictInsertion() throws Exception {
        Compiler compiler = new Compiler();

        // Setup compiler options
        CompilerOptions options = new CompilerOptions();
        options.setLanguageIn(CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT);
        options.setLanguageOut(CompilerOptions.LanguageMode.ECMASCRIPT5);
        options.setWarningLevel(com.google.javascript.jscomp.DiagnosticGroups.ALL, com.google.javascript.jscomp.CheckLevel.WARNING);
        options.setCompilationLevel(CompilerOptions.CompilationLevel.ADVANCED_OPTIMIZATIONS);

        // Input files as specified in the bug report
        SourceFile input1 = SourceFile.fromCode("get_num.js", "var getNum = function() { return 5; };");
        SourceFile input2 = SourceFile.fromCode("alert.js", "alert(getNum());");

        // Compile the input files
        compiler.compile(CommandLineRunner.getDefaultExterns(), ImmutableList.of(input1, input2), options);

        // Get the compiled output
        String compiledCode = compiler.toSource();

        // Expected output
        String expectedOutput1 = "'use strict';alert(5);";
        String expectedOutput2 = "alert(5);"; // If the compiler can optimize further

        // Check if compiled code matches either expected output
        assertEquals(expectedOutput1, compiledCode);
    }
}
