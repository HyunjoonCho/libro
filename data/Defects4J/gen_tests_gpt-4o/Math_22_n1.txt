
import org.apache.commons.math3.distribution.NormalDistribution;
import org.apache.commons.math3.distribution.RealDistribution;
import org.junit.Test;
import static org.junit.Assert.*;

public class RealDistributionTest {

    @Test
    public void testIsSupportXxxInclusive() {
        // Assuming NormalDistribution as a concrete implementation
        RealDistribution distribution = new NormalDistribution();

        // Test the lower bound
        double lowerBound = distribution.getSupportLowerBound();
        boolean lowerInclusive = distribution.isSupportLowerBoundInclusive();
        double lowerDensity = distribution.density(lowerBound);

        if (lowerInclusive) {
            assertTrue("Expected finite density for inclusive lower bound", 
                Double.isFinite(lowerDensity) && !Double.isNaN(lowerDensity));
        }

        // Test the upper bound
        double upperBound = distribution.getSupportUpperBound();
        boolean upperInclusive = distribution.isSupportUpperBoundInclusive();
        double upperDensity = distribution.density(upperBound);

        if (upperInclusive) {
            assertTrue("Expected finite density for inclusive upper bound", 
                Double.isFinite(upperDensity) && !Double.isNaN(upperDensity));
        }
    }
}
