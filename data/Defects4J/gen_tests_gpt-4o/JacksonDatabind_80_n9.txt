public void testExtraneousTypeIdMapping() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);
    BaseType input = new DerivedType("example");

    try {
        String json = mapper.writeValueAsString(input);
        BaseType result = mapper.readValue(json, BaseType.class);
        fail("should fail with extraneous type id mapping; deserialized to: " + result);
    } catch (JsonMappingException e) {
        assertTrue(e.getMessage().contains("extraneous type id"));
    } catch (IOException e) {
        fail("Unexpected IO exception: " + e.getMessage());
    }
}

public static class BaseType {
}

public static class DerivedType extends BaseType {
    private String name;

    public DerivedType(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }
}