
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.OptionGroup;
import org.junit.Test;

import java.util.Properties;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class OptionGroupBugTest {

    @Test
    public void testMutuallyExclusiveOptionsWithDefault() throws ParseException {
        // Create options
        Options options = new Options();
        OptionGroup group = new OptionGroup();

        Option optionA = new Option("a", "optionA", false, "Option A");
        Option optionB = new Option("b", "optionB", false, "Option B");

        group.addOption(optionA);
        group.addOption(optionB);
        options.addOptionGroup(group);
        
        // Set default options via Properties
        Properties defaultProps = new Properties();
        defaultProps.setProperty("b", "true"); // Set default for 'b'

        // Parse command line arguments with default options
        String[] args = {"-a"};
        DefaultParser parser = new DefaultParser();
        CommandLine cmd = parser.parse(options, args, defaultProps);

        // Check that both options 'a' and 'b' are present, which indicates a failure in mutually exclusivity
        assertTrue(cmd.hasOption("a"));
        assertFalse("Mutually exclusive option 'b' should not be present", cmd.hasOption("b"));
    }
}
