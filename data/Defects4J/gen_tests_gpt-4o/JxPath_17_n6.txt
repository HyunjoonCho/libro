
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.xml.sax.InputSource;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.StringReader;

import static org.junit.Assert.assertNotNull;

public class XPathNamespaceWildcardTest {

    @Test
    public void testNamespacedAttributeWithWildcard() throws Exception {
        String xmlContent = "<xml xmlns:x='foo' x:pop='a'/>";
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document document = builder.parse(new InputSource(new StringReader(xmlContent)));

        XPathFactory xpathFactory = XPathFactory.newInstance();
        XPath xpath = xpathFactory.newXPath();

        // Use XPath expression to select namespaced attributes with wildcard
        XPathExpression expr = xpath.compile("/xml/@*");
        Node result = (Node) expr.evaluate(document, XPathConstants.NODE);
        
        // Assert that the result is not null (i.e., an attribute was selected)
        assertNotNull("Expected to select an attribute, but none was found.", result);
    }
}
