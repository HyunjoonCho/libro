public void testIllegalReflectiveAccessWarning() {
    RestTemplate restTemplate = new RestTemplate();
    String requestUrl = "http://example.com/api/resource";
    HttpHeaders authHeaders = new HttpHeaders();
    authHeaders.set("Authorization", "Bearer some-token");
    CustomDTO dto = new CustomDTO();

    // Capture the console output
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    PrintStream originalOut = System.out;
    System.setOut(new PrintStream(baos));

    try {
        ResponseEntity<Void> response = restTemplate.exchange(
                requestUrl,
                HttpMethod.PATCH,
                new HttpEntity<>(dto, authHeaders),
                Void.class
        );
    } catch (Exception e) {
        // Handle exception or fail the test accordingly
        fail("Exception occurred during the exchange");
    }

    // Restore the original System.out
    System.setOut(originalOut);

    String consoleOutput = baos.toString();
    assertTrue("Unexpected illegal reflective access warning", consoleOutput.contains("illegal reflective access"));
}