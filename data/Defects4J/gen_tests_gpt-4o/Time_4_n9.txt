public void testInvalidPartialConstruction() {
    try {
        new Partial(new DateTimeFieldType[] { DateTimeFieldType.clockhourOfDay(), DateTimeFieldType.hourOfDay() }, new int[] { 1, 1 });
        fail("Expected IllegalArgumentException due to duplicate field types");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }

    Partial invalidPartial = new Partial(DateTimeFieldType.clockhourOfDay(), 1).with(DateTimeFieldType.hourOfDay(), 1);
    Partial reversedPartial = new Partial(DateTimeFieldType.hourOfDay(), 1).with(DateTimeFieldType.clockhourOfDay(), 1);
    
    try {
        assertFalse(invalidPartial.isEqual(reversedPartial));
        fail("Expected IllegalArgumentException due to mismatched field types");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }
}