script
goog.provide('foo.Foo');
goog.provide('foo.Foo.Bar');

goog.scope(function() {
    /**
     * @param {Foo.Bar} bar
     * @constructor
     */
    foo.Foo = function(bar) {
        this.bar = bar;
    };
    var Foo = foo.Foo;

    /** @type {Foo.Bar} */
    Foo.prototype.bar = null;

    /** @constructor */
    Foo.Bar = function() {};
});

// In your test environment: run type checking using Closure Compiler and look for expected error
try {
    // Here you would normally invoke the Closure Compiler with a command or script
    console.log("Compilation succeeded");
} catch (error) {
    console.error("Compilation failed with error:", error.message);
}

// Expected behavior: prints an error message about "Unknown type Foo.Bar"
