
import static org.junit.Assert.*;
import org.junit.Test;

public class GlowTest {

    @Test
    public void testGlowPublicTagBehavior() {
        // Simulating the initial setup in the uncompiled code
        Glow glow = new Glow();
        glow.versions = new int[]{1, 2, 3};
        glow.showVersions();

        // Simulating user code that interacts with the compiled code
        glow.versions = new int[]{4, 5, 6};
        String output = glow.showVersions();

        // Expected behavior is that it should alert "4,5,6"
        assertEquals("4,5,6", output);
    }

    // Mock class to simulate the behavior of the uncompiled and compiled JS structure
    class Glow {
        // This simulates the property marked with @public
        public int[] versions;

        public String showVersions() {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < versions.length; i++) {
                sb.append(versions[i]);
                if (i < versions.length - 1) {
                    sb.append(",");
                }
            }
            // In real JS, this would be a side effect like alert.
            // Here we return it just to be able to assert in tests.
            return sb.toString();
        }
    }
}
