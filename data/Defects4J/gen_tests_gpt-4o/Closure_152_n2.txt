public void testResolveTypesCastException() {
    CompilerOptions options = new CompilerOptions();
    options.setCreateNameMapFiles(true);
    options.setWarningLevel(DiagnosticGroups.MISSING_PROPERTIES, CheckLevel.WARNING);
    options.setWarningLevel(DiagnosticGroups.UNDEFINED_VARIABLES, CheckLevel.WARNING);
    options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.WARNING);
    options.setWarningLevel(WarningLevel.VERBOSE);
    options.setSummaryDetailLevel(3);
    options.setProcessClosurePrimitives(true);
    options.setStrictModeInput(true);
    options.setCheckGlobalThisLevel(CheckLevel.ERROR, true);
    options.setLanguageIn(LanguageMode.ECMASCRIPT5);
    options.setLanguageOut(LanguageMode.ECMASCRIPT5);
    
    List<SourceFile> inputs = ...; // Code to load the JavaScript files
    List<SourceFile> externs = new ArrayList<>(); // Assume no externs for simplicity

    Compiler compiler = new Compiler();
    try {
        compiler.compile(externs, inputs, options);
        fail("Expected a RuntimeException due to ClassCastException");
    } catch (RuntimeException e) {
        assertTrue(e.getCause() instanceof ClassCastException);
        assertTrue(e.getCause().getMessage().contains("UnionType cannot be cast to"));
    }
}