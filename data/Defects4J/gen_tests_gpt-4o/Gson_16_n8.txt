
import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;
import com.google.gson.TypeAdapter;
import org.junit.Test;

public class GsonTypeVariableTest {

    private static class TestType<T> {
        TestType<? super T> superType;
    }

    @Test(expected = StackOverflowError.class)
    public void testTypeVariableRecursion() {
        try {
            Gson gson = new Gson();
            TypeAdapter<TestType> adapter = gson.getAdapter(TestType.class);

            // Optionally, perform some operation with the adapter if needed:
            // adapter.toJson(new TestType());
        } catch (JsonSyntaxException e) {
            // You may catch and rethrow to provide additional logging or differentiation
            // if the library's update changes the behavior to throw a different exception
            e.printStackTrace();
            throw e;
        }
    }
}
