
import static org.junit.jupiter.api.Assertions.assertTrue;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidFormatException;
import com.fasterxml.jackson.databind.exc.JsonMappingException;
import org.junit.jupiter.api.Test;

import java.io.IOException;

public class JsonMappingExceptionTest {

    static class TestBean {
        public int value;
    }

    @Test
    public void testDoubleLocationInJsonMappingException() {
        String json = "{\"value\":\"notAnInt\"}";
        ObjectMapper objectMapper = new ObjectMapper();

        try {
            objectMapper.readValue(json, TestBean.class);
        } catch (JsonMappingException e) {
            String message = e.getMessage();
            
            // Check if the message contains " at [source]" twice
            String search = " at [source]";
            int firstOccurrence = message.indexOf(search);
            int secondOccurrence = message.indexOf(search, firstOccurrence + 1);

            assertTrue(firstOccurrence != -1 && secondOccurrence != -1, 
                       "Exception message should contain location information twice. Found message: " + message);

            System.out.println("Test passed: " + message);
        } catch (IOException e) {
            // Handle other IO exceptions if they arise
            e.printStackTrace();
        }
    }
}
