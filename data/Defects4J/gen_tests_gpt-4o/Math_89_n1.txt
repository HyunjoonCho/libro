
import org.apache.commons.math3.stat.Frequency;
import org.junit.Test;
import static org.junit.Assert.*;

public class FrequencyTest {

    @Test
    public void testAddNonComparableObject() {
        Frequency f = new Frequency();
        final Object OBJ = new Object();

        try {
            // This should fail according to the bug report
            f.addValue(OBJ);
            // If no exception occurs, the object has been added, now test the behavior
            assertEquals(0, f.getCount(OBJ));
            assertEquals(0.0, f.getPct(OBJ), 0.001);
        } catch (IllegalArgumentException e) {
            // If the method throws an exception, it is the expected behavior we want to achieve with a fix
            assertTrue(e.getMessage().contains("Object must be a Comparable"));
        }
    }

    @Test
    public void testAddComparableObject() {
        Frequency f = new Frequency();
        String comparableObj = "test";

        // Adding a Comparable object should work fine
        f.addValue(comparableObj);
        assertEquals(1, f.getCount(comparableObj));
        assertEquals(1.0, f.getPct(comparableObj), 0.001);
    }
}
