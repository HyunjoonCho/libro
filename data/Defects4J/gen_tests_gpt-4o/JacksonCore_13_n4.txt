
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

import static org.junit.Assert.assertEquals;

public class JsonGeneratorTest {

    @Test
    public void testQuoteFieldNamesToggle() throws IOException {
        // Setup a JsonFactory and ObjectMapper with QUOTE_FIELD_NAMES toggled off
        JsonFactory jsonFactory = new JsonFactory();
        jsonFactory.configure(JsonGenerator.Feature.QUOTE_FIELD_NAMES, false);
        ObjectMapper objectMapper = new ObjectMapper(jsonFactory);

        // Use a ByteArrayOutputStream to capture the JSON output
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        JsonGenerator jsonGenerator = jsonFactory.createGenerator(outputStream);

        // Create a test JSON object
        jsonGenerator.writeStartObject();
        jsonGenerator.writeStringField("field", "value");
        jsonGenerator.writeEndObject();
        jsonGenerator.close();

        // Get the JSON output as a string
        String jsonOutput = outputStream.toString("UTF-8");

        // Verify that the field names are not quoted when QUOTE_FIELD_NAMES is false
        assertEquals("{field:\"value\"}", jsonOutput.trim());
    }
}
