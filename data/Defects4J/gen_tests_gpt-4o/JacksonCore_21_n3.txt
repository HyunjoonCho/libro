public void testFilteringParserDelegateMissingEndObject() throws IOException {
    String jsonInput = "{ \"a\":123, \"array\":[1,2], \"ob\": { \"value0\":2, \"value\":3, \"value2\":4 }, \"b\":true }";
    
    JsonParser p0 = new JsonFactory().createParser(jsonInput);
    FilteringParserDelegate parser = new FilteringParserDelegate(p0, 
            new NameMatchFilter("value"), true, false);

    // Read past the initial objects and collect the output
    StringWriter sw = new StringWriter();
    JsonGenerator generator = new JsonFactory().createGenerator(sw);
    while (parser.nextToken() != null) {
        generator.copyCurrentEvent(parser);
    }
    generator.close();

    // Verify the output is as expected
    String expectedOutput = "{\"ob\":{\"value\":3}}"; // Note the fully closed braces
    assertEquals(expectedOutput, sw.toString());
}