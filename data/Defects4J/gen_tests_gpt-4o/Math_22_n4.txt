
import org.apache.commons.math3.distribution.RealDistribution;
import org.apache.commons.math3.distribution.NormalDistribution;
import org.junit.Test;
import static org.junit.Assert.*;

public class RealDistributionTest {

    @Test
    public void testSupportXxxInclusive() {
        RealDistribution distribution = new NormalDistribution(0, 1);

        // Test lower bound
        double lowerBound = distribution.getSupportLowerBound();
        double densityAtLowerBound = distribution.density(lowerBound);
        assertTrue("Density at lower bound should be finite and not NaN.", 
            Double.isFinite(densityAtLowerBound) && !Double.isNaN(densityAtLowerBound));

        // Test upper bound
        double upperBound = distribution.getSupportUpperBound();
        double densityAtUpperBound = distribution.density(upperBound);
        assertTrue("Density at upper bound should be finite and not NaN.", 
            Double.isFinite(densityAtUpperBound) && !Double.isNaN(densityAtUpperBound));

        // Check if inclusive methods are deprecated appropriately
        assertTrue("isSupportLowerBoundInclusive() should be deprecated.", 
            distribution.getClass().isAnnotationPresent(Deprecated.class));

        assertTrue("isSupportUpperBoundInclusive() should be deprecated.", 
            distribution.getClass().isAnnotationPresent(Deprecated.class));
    }
}
