
import static org.mockito.Mockito.*;

import org.junit.Test;
import org.mockito.invocation.InvocationOnMock;
import org.mockito.stubbing.Answer;

public class MockingTest {

    @Test(expected = ClassCastException.class)
    public void testMockWithDefaultAnswerThrowsClassCastException() {
        // Create a mock with a default answer that causes a ClassCastException
        MyClass myMock = mock(MyClass.class, new Answer<Object>() {
            @Override
            public Object answer(InvocationOnMock invocation) {
                // Returning an instance of Class instead of a String to induce the ClassCastException
                return MyClass.class;
            }
        });

        // Invoke a method on the mock (any method will do, this is just to setup the interactions)
        myMock.someMethod();

        // Verify that there are zero interactions, expecting a ClassCastException
        verifyZeroInteractions(myMock);
    }

    // An example class to be used for the mock
    public static class MyClass {
        public String someMethod() {
            return "Hello";
        }
    }
}
