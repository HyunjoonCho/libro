
import org.apache.commons.math3.stat.inference.ChiSquareTest;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class ChiSquareTestImplTest {

    @Test
    public void testChiSquareIncorrectValue() {
        ChiSquareTest testStatistic = new ChiSquareTest();

        long[] observed1 = { 500, 623, 72, 70, 31 };
        double[] expected1 = { 485, 541, 82, 61, 37 };

        double chiSquareResult = testStatistic.chiSquare(expected1, observed1);

        // Correct calculation after rescaling expected values
        double[] correctedExpected = rescaleExpected(expected1, observed1);
        double correctChiSquareResult = testStatistic.chiSquare(correctedExpected, observed1);
        
        // This will fail as chiSquareResult is expected to be incorrect per the bug description.
        assertEquals("chi-square test statistic", correctChiSquareResult, chiSquareResult, 1E-10);
    }

    private double[] rescaleExpected(double[] expected, long[] observed) {
        double sumObserved = 0;
        for (long obs : observed) {
            sumObserved += obs;
        }

        double sumExpected = 0;
        for (double exp : expected) {
            sumExpected += exp;
        }

        double scale = sumObserved / sumExpected;
        double[] rescaledExpected = new double[expected.length];
        
        for (int i = 0; i < expected.length; i++) {
            rescaledExpected[i] = expected[i] * scale;
        }

        return rescaledExpected;
    }
}
