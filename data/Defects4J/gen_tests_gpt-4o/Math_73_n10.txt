
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolver;
import org.junit.Test;
import static org.junit.Assert.*;

public class BrentSolverTest {

    @Test(expected = IllegalArgumentException.class)
    public void testSolveIllegalInitialGuess() {
        UnivariateRealFunction function = new UnivariateRealFunction() {
            @Override
            public double value(double x) {
                return x * x + 1; // Always positive function
            }
        };

        // Create a solver instance
        UnivariateRealSolver solver = new BrentSolver();

        // The function f(x) = x^2 + 1 is always positive, so providing any initial guess
        // along with a min and max where f(min), f(max), and f(initial) are all > 0
        // should result in an IllegalArgumentException as specified in the javadoc.
        solver.solve(function, -2.0, 2.0, 0.0);
    }
}
