public void testScriptTagParsing() {
    String inputHtml = "<html><body><div class=vsc sig=Uga><div class=before></div><script type=\"text/javascript\">"
            + "header = jQuery('#header\\_features');"
            + "if(header.length){"
            + "header.prepend('<a class=\"prevPage browse left \" />').append('<a class=\"nextPage browse right\" />');"
            + "items.wrapAll('<div class=\"scrollable\"/>').wrapAll('<ul class=\"items\"/>').wrap('<li/>');"
            + "}</script><div class=after></div></div></body></html>";

    // Assume parseHtml is the method that parses the HTML input.
    Document document = parseHtml(inputHtml);

    // Check that the script content has not been altered by treating inner tags as real elements
    Element scriptElement = document.selectFirst("script");

    assertNotNull("Script element should be found", scriptElement);
    String scriptContent = scriptElement.data();

    // Original script content to compare with
    String originalScriptContent = "header = jQuery('#header\\_features');"
            + "if(header.length){"
            + "header.prepend('<a class=\"prevPage browse left \" />').append('<a class=\"nextPage browse right\" />');"
            + "items.wrapAll('<div class=\"scrollable\"/>').wrapAll('<ul class=\"items\"/>').wrap('<li/>');"
            + "}";

    assertEquals("Script content should match original", originalScriptContent, scriptContent);

    // Ensure <div class=after> is not inside <script>
    Element afterDiv = scriptElement.nextElementSibling();
    assertNotNull("After <div> should not be null", afterDiv);
    assertEquals("After <div> should have class 'after'", "after", afterDiv.className());
}