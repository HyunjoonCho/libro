
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.junit.Test;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

public class ScriptTagParsingTest {

    @Test
    public void testScriptTagParsingWithInnerTags() {
        String htmlInput = "<html><body>"
                + "<div class='vsc' sig='Uga'>"
                + "<div class='before'></div>"
                + "<script type='text/javascript'>"
                + "header = jQuery('#header_features');"
                + "if(header.length){"
                + "header.prepend('<a class=\"prevPage browse left \"/>')"
                + ".append('<a class=\"nextPage browse right\" />');"
                + "items.wrapAll('<div class=\"scrollable\"/>')"
                + ".wrapAll('<ul class=\"items\"/>')"
                + ".wrap('<li/>');"
                + "}"
                + "</script>"
                + "<div class='after'></div>"
                + "</div>"
                + "</body></html>";

        Document doc = Jsoup.parse(htmlInput);
        
        // Check that the <script> tag is not corrupted and contains the expected JavaScript code
        Element scriptTag = doc.selectFirst("script");
        assertNotNull("Script tag should not be null", scriptTag);
        String scriptContent = scriptTag.html();
        
        // Verify that the script content includes the JavaScript logic as a string, not as nested tags
        assertTrue("Script content should contain JavaScript without being incorrectly parsed as nested HTML tags",
                scriptContent.contains("header = jQuery('#header_features');") &&
                scriptContent.contains(".prepend('<a class=\"prevPage browse left \"/>')") &&
                scriptContent.contains(".append('<a class=\"nextPage browse right\" />');"));

        // Ensure the div after the script is correctly recognized
        Element afterDiv = doc.selectFirst("div.after");
        assertNotNull("The <div class='after'> should be present", afterDiv);
    }
}
