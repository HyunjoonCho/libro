
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

public class ReflectiveAccessWarningTest {

    @Test
    public void testVoidTypeWarning() {
        ObjectMapper objectMapper = new ObjectMapper();
        
        try {
            // Simulating deserialization with Void as the target type
            // This is where the illegal reflective access warning occurs
            objectMapper.readValue("null", Void.class);
        } catch (Exception e) {
            // Assert failure if any unanticipated exception occurs
            fail("Unexpected exception: " + e.getMessage());
        }
    }

    private void fail(String message) {
        throw new AssertionError(message);
    }
}
