
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.module.afterburner.AfterburnerModule;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class NonEmptyExclusionTest {

    static class TestClass {
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public int number;
        
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        public String text;

        public TestClass(int number, String text) {
            this.number = number;
            this.text = text;
        }
    }

    @Test
    public void testNonEmptyExclusionWithoutAfterburner() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        String result = mapper.writeValueAsString(new TestClass(0, ""));

        // Expecting empty JSON as both fields should be excluded
        assertEquals("{}", result);
    }

    @Test
    public void testNonEmptyExclusionWithAfterburner() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new AfterburnerModule());
        String result = mapper.writeValueAsString(new TestClass(0, ""));
        
        // Expecting empty JSON as both fields should be excluded
        assertEquals("{}", result);
    }
}
