public void testTypeCheckerWithInnerFunction() {
    // Set up context similar to the Closure Compiler environment
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticGroups.STRICT_MISSING_REQUIRE, CheckLevel.WARNING);
    options.setWarningLevel(DiagnosticGroups.LINT_CHECKS, CheckLevel.WARNING);
    options.setCheckTypes(true);

    // Source code with inline function
    String code = "var ns = {};"
                + "(function() {"
                + "  /** @param {string=} b */"
                + "  ns.a = function(b) {}"
                + "})();"
                + "function d() {"
                + "  ns.a();"
                + "  ns.a(123);"
                + "}";

    // Compile the code
    compiler.initOptions(options);
    Node root = compiler.parseInputs(SourceFile.fromCode("input.js", code));
    compiler.check(root);

    // Get warnings and assertions
    List<JSError> warnings = compiler.getWarnings();
    assertTrue(warnings.stream().anyMatch(w -> w.getDescription().contains("actual parameter 1 must be a string")));
}