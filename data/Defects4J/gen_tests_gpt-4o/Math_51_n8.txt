
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.junit.Test;

public class RegulaFalsiSolverTest {

    @Test(expected = org.apache.commons.math3.exception.MaxCountExceededException.class)
    public void testBug() {
        UnivariateFunction f = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return Math.exp(x) - Math.pow(Math.PI, 3.0);
            }
        };

        UnivariateSolver solver = new RegulaFalsiSolver();
        // This should throw a MaxCountExceededException when the solution is not found within 100 evaluations.
        double root = solver.solve(100, f, 1, 10);
    }
}
