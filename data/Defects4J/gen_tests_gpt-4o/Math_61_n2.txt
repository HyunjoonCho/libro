
import org.apache.commons.math3.distribution.NormalDistribution;
import org.apache.commons.math3.distribution.PoissonDistribution;
import org.junit.Test;
import static org.junit.Assert.*;

public class PoissonDistributionImplTest {

    @Test
    public void testConstructorDoesNotUseOverridableMethods() {
        try {
            PoissonDistributionImpl poissonDistribution = new PoissonDistributionImpl(4.0, new NormalDistribution(0, 1)) {
                @Override
                protected void setNormal(NormalDistribution z) {
                    throw new UnsupportedOperationException("Overridable method called within constructor");
                }
                
                @Override
                protected void setMean(double p) {
                    throw new UnsupportedOperationException("Overridable method called within constructor");
                }
            };
            // If constructor doesn't call the overridable method, no exception will be thrown
        } catch (UnsupportedOperationException e) {
            fail("Constructor uses overridable methods");
        }
    }
}

class PoissonDistributionImpl extends PoissonDistribution {
    
    private NormalDistribution normalDistribution;
    private double mean;
    
    public PoissonDistributionImpl(double p, NormalDistribution z) {
        super(p);
        setNormal(z);
        setMean(p);
    }

    protected void setNormal(NormalDistribution z) {
        this.normalDistribution = z;
    }

    protected void setMean(double p) {
        this.mean = p;
    }
}
