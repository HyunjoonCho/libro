public void testAllowMultipleMatches() {
    String json = "{\"items\": [{\"type\": \"A\"}, {\"type\": \"B\"}, {\"type\": \"A\"}]}";
    JsonNodeFactory nodeFactory = new JsonNodeFactory(false);
    ObjectMapper mapper = new ObjectMapper();
    
    TokenFilter filter = new TokenFilter() {
        @Override
        public TokenFilter includeElement(int index) {
            return null;
        }
        
        @Override
        public boolean includeProperty(String name) {
            return "A".equals(name);
        }
    };

    try (JsonParser parser = mapper.readerFor(JsonNode.class)
                                   .with(new FilteringParserDelegate(mapper.createParser(json), filter, false, true))
                                   .createParser(json)) {
        JsonNode filteredNode = mapper.readTree(parser);
        int count = filteredNode.get("items").size();
        assertEquals("Unexpected number of matched items", 2, count);
    } catch (IOException e) {
        fail("Exception during parsing: " + e.getMessage());
    }
}