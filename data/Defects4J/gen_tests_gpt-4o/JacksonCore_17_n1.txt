
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonGenerationException;
import org.junit.Test;

import java.io.IOException;
import java.io.StringWriter;

public class JsonGenerationExceptionTest {

    @Test(expected = JsonGenerationException.class)
    public void testSplitSurrogateOnWriteRaw() throws IOException {
        // String includes a supplementary Unicode character (an emoji)
        // and enough 'x' characters to trigger the buffer issue.
        String problematicInput = "xxxxx xxxxx \uD83D\uDE00"; // Smiling face emoji character as a surrogate pair

        StringWriter writer = new StringWriter();
        JsonFactory jsonFactory = new JsonFactory();
        JsonGenerator jsonGenerator = jsonFactory.createGenerator(writer);

        jsonGenerator.writeStartObject();
        jsonGenerator.writeRawValue(problematicInput);
        jsonGenerator.writeEndObject();
        jsonGenerator.close();
    }
}
