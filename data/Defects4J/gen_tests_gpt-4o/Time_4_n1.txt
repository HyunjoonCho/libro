public void testInvalidPartialConstruction() {
    // Test case for exception when using duplicate DateTimeFieldType in constructor
    try {
        new Partial(new DateTimeFieldType[] { DateTimeFieldType.clockhourOfDay(), DateTimeFieldType.hourOfDay() }, new int[] { 1, 1 });
        fail("Expected IllegalArgumentException due to duplicate DateTimeFieldType");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }
    
    // Test case for isEqual method failing with non-matching field types
    Partial partial1 = new Partial(DateTimeFieldType.clockhourOfDay(), 1).with(DateTimeFieldType.hourOfDay(), 1);
    Partial partial2 = new Partial(DateTimeFieldType.hourOfDay(), 1).with(DateTimeFieldType.clockhourOfDay(), 1);
    try {
        partial1.isEqual(partial2);
        fail("Expected IllegalArgumentException due to non-matching field types");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }
}