
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import org.junit.Test;
import static org.junit.Assert.fail;

public class CompilerErrorTest {

    @Test
    public void testCompilerError() {
        String script = 
            "function temp1(opt_data) {\n" +
            "  return opt_data.text;\n" +
            "}\n" +
            "function temp2(opt_data) {\n" +
            "  function __inner() {\n" +
            "    return temp1(opt_data.activity);\n" +
            "  }\n" +
            "  return __inner();\n" +
            "}\n" +
            "function temp3(opt_data) {\n" +
            "  return 'n: ' + opt_data.n + ', t: ' + opt_data.text + '.';\n" +
            "}\n" +
            "function callee() {\n" +
            "  var output = temp3({\n" +
            "    n: 0,\n" +
            "    text: 'a string',\n" +
            "    b: true\n" +
            "  });\n" +
            "  print(output);\n" +
            "}\n" +
            "callee();";
        
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("JavaScript");

        try {
            engine.eval(script);
        } catch (ScriptException e) {
            fail("Script execution failed: " + e.getMessage());
        }
    }
}
