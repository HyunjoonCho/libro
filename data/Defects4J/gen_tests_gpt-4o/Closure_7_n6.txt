
import static org.junit.Assert.*;
import org.junit.Test;
import com.google.common.base.Objects;  // assumes Google's Closure Library or similar is used

public class TypeInferenceTest {

    // Mock equivalents of Closure Library functions used in the report
    // These functions are just simplified stand-ins

    public static boolean googIsDef(Object object) {
        return object != null;
    }

    public static boolean googIsFunction(Object object) {
        return object instanceof Runnable;
    }

    public static boolean googIsBoolean(Object object) {
        return object instanceof Boolean;
    }

    public static boolean googIsString(Object object) {
        return object instanceof String;
    }

    public static boolean googIsArray(Object object) {
        return object instanceof Object[] || object instanceof int[];
    }

    /** 
     * The function based on the bug report that we want to test 
     * @param object Any object
     * @return boolean
     */
    public static boolean isMatched(Object object) {
        if (googIsDef(object)) {
            if (googIsFunction(object)) {
                // Simulate returning object();
            } else if (googIsBoolean(object)) {
                // Simulate return object;
            } else if (googIsString(object)) {
                // Simulate return test.isDef(object);
            } else if (googIsArray(object)) {
                int length = ((Object[]) object).length; // Potential error site
                return true;
            }
        }
        return false;
    }

    @Test
    public void testTypeInferenceWithArray() {
        Object[] testArray = new Object[]{1, 2, 3};
        assertTrue(isMatched(testArray)); // Should not throw an error

        int[] testIntArray = new int[]{1, 2, 3};
        assertTrue(isMatched(testIntArray)); // Should not throw an error
    }

    @Test
    public void testTypeInferenceWithNumber() {
        Number testNumber = 10;
        assertFalse(isMatched(testNumber)); // Should remain false, as Number is not an array
    }
}
