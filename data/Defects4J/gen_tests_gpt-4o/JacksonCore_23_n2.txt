
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
import com.fasterxml.jackson.core.util.Instantiatable;
import org.junit.Test;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class DefaultPrettyPrinterTest {

    private static class MyPrettyPrinter extends DefaultPrettyPrinter {
        // Intentionally does not override createInstance()
    }

    @Test
    public void testCreateInstanceFromSubclass() {
        MyPrettyPrinter customPrinter = new MyPrettyPrinter();

        try {
            // This should either fail or return an instance of DefaultPrettyPrinter,
            // but not MyPrettyPrinter
            DefaultPrettyPrinter newInstance = (DefaultPrettyPrinter)customPrinter.createInstance();
            assertTrue("Expected instance of DefaultPrettyPrinter",
                    newInstance instanceof DefaultPrettyPrinter);
            assertTrue("Did not expect instance of subclass MyPrettyPrinter",
                    !(newInstance instanceof MyPrettyPrinter));
        } catch (Exception e) {
            fail("createInstance() should not throw an exception: " + e.getMessage());
        }
    }
}
