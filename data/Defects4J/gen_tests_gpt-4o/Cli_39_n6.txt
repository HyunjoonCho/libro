
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;

import static org.junit.Assert.*;

public class OptionParserTest {

    @Test
    public void testExistingFileValueType() throws Exception {
        // Create a temporary file to use in the test
        File tempFile = File.createTempFile("testExistingFileValue", ".txt");
        tempFile.deleteOnExit(); // Ensure the file is deleted after the test

        String[] args = {"-f", tempFile.getAbsolutePath()};

        Options options = new Options();
        options.addOption(Option.builder("f").hasArg().type(FileInputStream.class).build());

        CommandLine cline = new DefaultParser().parse(options, args);

        // Attempt to cast the parsed option value to FileInputStream
        Object parsedValue = cline.getParsedOptionValue("f");
        assertNotNull("The parsed value should not be null", parsedValue);

        // The actual bug: parsedValue is a File object, not a FileInputStream object
        assertTrue("The parsed value should be an instance of FileInputStream",
                parsedValue instanceof FileInputStream);

        // Check if the file actually exists
        try (FileInputStream fileInputStream = (FileInputStream) parsedValue) {
            // If the cast is successful, check if the file can be opened
            assertNotNull("FileInputStream should be created from existing file", fileInputStream);
        } catch (FileNotFoundException e) {
            fail("The file should exist, but was reported as not found");
        }
    }
}
