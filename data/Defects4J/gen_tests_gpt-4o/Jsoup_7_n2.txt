
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class JsoupParsingTest {

    @Test
    public void testMalformedTreeWithTwoBodyElements() throws IOException {
        // Load the HTML content from the file
        String filePath = "path/to/your/jsoup-tc/malformedPage.html";
        String htmlContent = new String(Files.readAllBytes(Paths.get(filePath)));

        // Parse the HTML content using Jsoup
        Document document = Jsoup.parse(htmlContent);

        // Check for the number of body elements
        int bodyCount = 0;
        for (Element element : document.getAllElements()) {
            if (element.tagName().equals("body")) {
                bodyCount++;
            }
        }

        // Validate the parsing result
        assertEquals(1, bodyCount, "The parsed document should have exactly one body element.");

        // Additionally, ensure the body element is a child of the html element
        Element htmlElement = document.selectFirst("html");
        assertTrue(htmlElement.children().stream().anyMatch(e -> e.tagName().equals("body")),
                "The body element should be a direct child of the html element.");
    }
}
