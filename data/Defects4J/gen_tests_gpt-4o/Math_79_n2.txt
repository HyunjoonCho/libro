
import static org.junit.Assert.assertEquals;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import org.apache.commons.math.stat.clustering.Cluster;
import org.apache.commons.math.stat.clustering.EuclideanIntegerPoint;
import org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer;
import org.junit.Test;

public class ClusterAnalysisTest {

    @Test
    public void testNPEInKMeansPlusPlusClusterer() {
        // Initialize the KMeansPlusPlusClusterer with a specific seed for reproducibility
        KMeansPlusPlusClusterer<EuclideanIntegerPoint> transformer = new KMeansPlusPlusClusterer<>(
                new Random(1746432956321L)
        );

        // Create an array of points for clustering
        EuclideanIntegerPoint[] points = new EuclideanIntegerPoint[] {
                new EuclideanIntegerPoint(new int[] { 1959, 325100 }),
                new EuclideanIntegerPoint(new int[] { 1960, 373200 })
        };

        // Attempt to cluster the points, expecting the NPE to occur here
        List<Cluster<EuclideanIntegerPoint>> clusters = transformer.cluster(Arrays.asList(points), 1, 1);

        // Validate the size of the resulting clusters
        assertEquals(1, clusters.size());
    }
}
