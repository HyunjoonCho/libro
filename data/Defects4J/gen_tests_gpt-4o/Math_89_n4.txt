
import org.apache.commons.math3.stat.Frequency;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class FrequencyTest {

    @Test
    public void testAddNonComparableObject() {
        Frequency frequency = new Frequency();
        final Object nonComparableObject = new Object();
        
        try {
            // The first add should fail, but it doesn't according to the bug report
            frequency.addValue(nonComparableObject);
            
            // These calls return 0, which is unexpected behavior
            assertEquals("Count for non-comparable object should be 0", 0, frequency.getCount(nonComparableObject));
            assertEquals("Percentage for non-comparable object should be 0.0", 0.0, frequency.getPct(nonComparableObject), 0.1);
        } catch (IllegalArgumentException e) {
            fail("Adding non-comparable object should not throw IllegalArgumentException initially");
        }
    }
}
