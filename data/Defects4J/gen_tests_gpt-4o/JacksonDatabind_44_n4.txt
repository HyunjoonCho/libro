public void testPolymorphicTypesWithDefaultImpl() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    
    // Setting up default implementation
    JsonTypeInfo typeInfo = JsonTypeInfo.Id.NAME.asTypeInfo();
    PolymorphicType1 defaultImpl = new PolymorphicType1() {
        {
            setType("default");
            setBaseProperty("baseDefault");
        }
    };
    
    Map<String, Class<?>> subTypes = new HashMap<>();
    subTypes.put("subtype1", PolymorphicType1.class);
    TypeResolverBuilder<?> typer = new ObjectMapper.DefaultTypeResolverBuilder(
            ObjectMapper.DefaultTyping.NON_FINAL, typeInfo, defaultImpl, subTypes);

    typer.init(typeInfo, null);
    typer.inclusion(JsonTypeInfo.As.WRAPPER_OBJECT);
    mapper.setDefaultTyping(typer);
    
    // JSON without type property, should use defaultImpl
    String json = "{\"baseProperty\":\"baseValue\"}";
    
    PolymorphicType result = mapper.readValue(json, PolymorphicType.class);
    
    assertEquals("default", result.getType());
    assertEquals("baseValue", result.getBaseProperty());
}