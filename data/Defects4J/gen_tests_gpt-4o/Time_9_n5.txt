
import org.joda.time.DateTimeZone;
import org.junit.Test;

import static org.junit.Assert.*;

public class DateTimeZoneTest {

    @Test
    public void testMaxOffset() {
        try {
            DateTimeZone.forOffsetHoursMinutes(23, 59);
            DateTimeZone.forOffsetHoursMinutes(23, 59, 59, 999); // Should be valid if max is 23:59:59.999
        } catch (IllegalArgumentException e) {
            fail("Offset 23:59:59.999 should be a valid maximum value.");
        }
        
        try {
            DateTimeZone.forOffsetHoursMinutes(24, 0);
            fail("Offset 24:00 should not be valid.");
        } catch (IllegalArgumentException e) {
            // Expected exception
        }
    }
    
    @Test
    public void testMinOffset() {
        try {
            DateTimeZone.forOffsetHoursMinutes(-23, -59);
            DateTimeZone.forOffsetHoursMinutes(-23, -59, -59, -999); // Should be valid if min is -23:59:59.999
        } catch (IllegalArgumentException e) {
            fail("Offset -23:59:59.999 should be a valid minimum value.");
        }

        try {
            DateTimeZone.forOffsetHoursMinutes(-24, 0);
            fail("Offset -24:00 should not be valid.");
        } catch (IllegalArgumentException e) {
            // Expected exception
        }
    }
}
