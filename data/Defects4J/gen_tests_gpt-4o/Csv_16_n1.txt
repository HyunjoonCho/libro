
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.StringReader;
import java.util.Iterator;

import static org.junit.Assert.assertEquals;

public class CSVParserTest {

    @Test
    public void testMultiIteratorWithPeek() throws Exception {

        String fiveRows = "1\n2\n3\n4\n5\n";
        CSVParser parser = new CSVParser(new BufferedReader(new StringReader(fiveRows)), CSVFormat.DEFAULT);

        // Initial parse and break after two records
        int recordNumber = 0;
        Iterator<CSVRecord> iter = parser.iterator();
        while (iter.hasNext()) {
            CSVRecord record = iter.next();
            recordNumber++;
            assertEquals(String.valueOf(recordNumber), record.get(0));
            if (recordNumber >= 2) {
                break;
            }
        }

        // New iterator created here
        iter = parser.iterator();
        // Peek with hasNext
        boolean hasNext = iter.hasNext();
        assertEquals("Expected true as there are more elements", true, hasNext);

        // Now iterate and check if we skipped the correct value
        int expectedNumber = 3;
        while (iter.hasNext()) {
            CSVRecord record = iter.next();
            assertEquals(String.valueOf(expectedNumber), record.get(0));
            expectedNumber++;
        }

        // Assert we checked all records correctly up to 5
        assertEquals(6, expectedNumber);
    }
}
