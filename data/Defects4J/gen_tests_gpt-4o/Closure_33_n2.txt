public void testWeirdObjectLiteralInvalidPropertyError() {
    // The below code replicates the function and structure of original JavaScript.
    // JavaScript is not type-safe and requires testing at runtime based on behavior.
    // Since we're simulating the expected behavior, we'll structure this analogous to function scripts in JS.

    Object activity = new Object() {
        String text = "sample text";
    };

    assertEquals("sample text", temp2(new Object() {
        Object activityField = activity;
    }));

    assertEquals("n: 0, t: a string.", temp3(new Object() {
        int n = 0;
        String text = "a string";
        boolean b = true;
    }));
}

// Example method to simulate JavaScript logic for temp1
private String temp1(Object opt_data) {
    try {
        return (String) opt_data.text;
    } catch (Exception e) {
        return null;
    }
}

// Example method to simulate JavaScript logic for temp2
private String temp2(Object opt_data) {
    return temp1(new Object() {
        Object activity = opt_data.activityField;
    });
}

// Example method to simulate JavaScript logic for temp3
private String temp3(Object opt_data) {
    try {
        return "n: " + ((int) opt_data.n) + ", t: " + ((String) opt_data.text) + ".";
    } catch (Exception e) {
        return null;
    }
}