
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InputCoercionException;
import org.junit.Test;

public class InputCoercionExceptionTest {

    @Test(expected = InputCoercionException.class)
    public void testNumberOverflowCausesInputCoercionException() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        String jsonString = "{\"value\": 2147483648}"; // 2147483648 is greater than Integer.MAX_VALUE

        try {
            // Attempting to map a JSON number that exceeds the range of an `int`
            objectMapper.readValue(jsonString, TestValue.class);
        } catch (JsonMappingException e) {
            Throwable cause = e.getCause();
            if (cause instanceof InputCoercionException) {
                throw (InputCoercionException) cause;
            } else {
                throw e;
            }
        }
    }

    static class TestValue {
        public int value;  // `int` type cannot hold 2147483648
    }
}
