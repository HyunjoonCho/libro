
import com.google.javascript.jscomp.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.rhino.Node;

public class CompilerCrashTest {

    public static void main(String[] args) {
        testGoogProvideWithNonString();
    }

    public static void testGoogProvideWithNonString() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setWarningLevel(DiagnosticGroups.DEPRECATED, CheckLevel.OFF);
        options.setWarningLevel(DiagnosticGroups.NON_STANDARD_JSDOC, CheckLevel.OFF);

        String code = "goog.provide(mine.Spike);";

        SourceFile input = SourceFile.fromCode("test.js", code);
        
        try {
            compiler.compile(SourceFile.fromCode("externs.js", ""), input, options);
            System.out.println("Test failed: An error was expected.");
        } catch (RuntimeException e) {
            if (e.getMessage().contains("INTERNAL COMPILER ERROR")) {
                System.out.println("Test passed: Caught expected internal compiler error.");
            } else {
                System.out.println("Test failed: Unexpected exception message.");
                e.printStackTrace();
            }
        }
    }
}
