public void testDefaultMockingDetails_shouldGetExtraInterfaces() {
    Bar bar = mock(Bar.class, withSettings().extraInterfaces(List.class, Observer.class));
    Object[] extraInterfaces = new DefaultMockingDetails(bar).getExtraInterfaces();
    assertTrue(Arrays.asList(extraInterfaces).contains(List.class));
    assertTrue(Arrays.asList(extraInterfaces).contains(Observer.class));
}

public void testNoJUnitDependencies_pureMockitoShouldNotDependJUnitByteBuddy() {
    try {
        Class.forName("org.mockito.configuration.MockitoConfiguration");
        fail("Should not have found the class");
    } catch (ClassNotFoundException e) {
        // expected as the class should not exist in the test classpath
    }
}

public void testClassLoaders_excludingClassLoaderCannotLoadClassesWhenNoCorrectSourceUrlSet() {
    try {
        ClassLoader loader = new ClassLoaders.LocalExcludingURLClassLoader(
            new URL[]{}, "junit", "org.junit");
        loader.loadClass("junit.framework.Assert");
        fail("Should not be able to load junit classes");
    } catch (ClassNotFoundException e) {
        // expected
    }
}