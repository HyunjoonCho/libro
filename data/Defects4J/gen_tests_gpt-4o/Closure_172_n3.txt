
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

public class TypeInferenceTest {

    @Test
    public void testPrototypePropertyTypeInference() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        // Enable warnings for type checking
        options.setWarningLevel(
            com.google.javascript.jscomp.DiagnosticGroups.CHECK_TYPES,
            com.google.javascript.jscomp.CheckLevel.WARNING
        );

        String code = ""
            + "/** @param {Object} a */\n"
            + "function f(a) {\n"
            + "  a.prototype = '__proto';\n"
            + "}\n"
            + "/** @param {Object} a */\n"
            + "function g(a) {\n"
            + "  a.prototype = function(){};\n"
            + "}";

        // For a self-contained test, compile the code without any additional externs
        Result result = compiler.compile(
            SourceFile.fromCode("externs", ""), // Empty externs
            SourceFile.fromCode("test", code),
            options
        );

        // The expected output is that there should be no warnings
        assertTrue("Expected no type warnings, but found some.", result.warnings.isEmpty());

        // Check that the compilation was successful
        assertEquals("Expected zero errors", 0, result.errors.length);
    }
}
