
import com.google.javascript.jscomp.CommandLineRunner;
import org.junit.Test;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.Assert.assertTrue;

public class CompilerWarningTest {

    @Test
    public void testCheckVarsWarningNotTriggered() {
        String[] args = {
            "--js", "test.js",
            "--jscomp_warning", "checkVars"
        };
        
        String jsCode = "foo = {};\n" +
                        "foo.bar = function() { alert(this.baz); };";

        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        PrintStream printStream = new PrintStream(outputStream);
        
        CommandLineRunner runner = new CommandLineRunner(args) {
            @Override
            protected PrintStream createErrorPrintStream() {
                return printStream;
            }

            @Override
            protected PrintStream createOutputPrintStream() {
                return printStream;
            }

            @Override
            protected String getJavaScriptSource() {
                return jsCode;
            }
        };

        runner.run();

        String output = outputStream.toString();
        assertTrue(output.contains("variable foo is undefined"));
    }

    @Test
    public void testUndefinedVarsWarningNotTriggered() {
        String[] args = {
            "--js", "test.js",
            "--jscomp_warning", "undefinedVars"
        };
        
        String jsCode = "foo = {};\n" +
                        "foo.bar = function() { alert(this.baz); };";

        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        PrintStream printStream = new PrintStream(outputStream);

        CommandLineRunner runner = new CommandLineRunner(args) {
            @Override
            protected PrintStream createErrorPrintStream() {
                return printStream;
            }

            @Override
            protected PrintStream createOutputPrintStream() {
                return printStream;
            }

            @Override
            protected String getJavaScriptSource() {
                return jsCode;
            }
        };

        runner.run();

        String output = outputStream.toString();
        assertTrue(output.contains("variable foo is undefined"));
    }
}
