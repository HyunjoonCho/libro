
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class ColumnCaretTestCase {

    public static void main(String[] args) {
        testCaretInErrorOutput();
    }

    public static void testCaretInErrorOutput() {
        String jsCodeWithoutCaret = "alert(1;";
        String jsCodeWithCaret = "alert(1;\n";

        String outputWithoutCaret = runCompiler(jsCodeWithoutCaret);
        String outputWithCaret = runCompiler(jsCodeWithCaret);

        // Assert that the output for the first case does not contain a caret '^'
        if (outputWithoutCaret.contains("^")) {
            System.out.println("Test Failed: Caret was not expected but found in output for code without newline.");
        } else {
            System.out.println("Test Passed: No caret found in output for code without newline.");
        }

        // Assert that the output for the second case contains a caret '^'
        if (!outputWithCaret.contains("^")) {
            System.out.println("Test Failed: Caret was expected but not found in output for code with newline.");
        } else {
            System.out.println("Test Passed: Caret found in output for code with newline.");
        }
    }

    private static String runCompiler(String jsCode) {
        try {
            // Create a temporary JS file for testing
            java.nio.file.Path jsFile = java.nio.file.Files.createTempFile("test", ".js");
            java.nio.file.Files.write(jsFile, jsCode.getBytes());

            // Run the JavaScript compiler
            ProcessBuilder pb = new ProcessBuilder("java", "-jar", "compiler.jar", "--js", jsFile.toString());
            Process process = pb.start();

            // Capture the error output from the compiler
            BufferedReader stdError = new BufferedReader(new InputStreamReader(process.getErrorStream()));
            StringBuilder output = new StringBuilder();
            String s;
            while ((s = stdError.readLine()) != null) {
                output.append(s).append("\n");
            }

            // Delete the temporary file
            jsFile.toFile().delete();

            return output.toString();

        } catch (IOException e) {
            e.printStackTrace();
            return "";
        }
    }
}
