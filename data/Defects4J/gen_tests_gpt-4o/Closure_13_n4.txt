script
public class BooleanReplacementTest {
    
    public void testTrueFalseReplacement() {
        // Simulating a setup that would replace true/false with !0/!1
        SomeFunction someFunction = new SomeFunction(() -> externalRef());
        
        // Print out the values returned from the methods
        // These assert statements simulate checking if minified results convert true to !0 and false to !1
        assertTrue(someFunction.method1());  // Expected to be replaced with !0 in minified code
        assertFalse(someFunction.method2()); // Expected to be replaced with !1 in minified code
    }

    private boolean externalRef() {
        return true; // Assume this external reference just returns a boolean value
    }
    
    // Inner class simulating the function described in the bug report
    class SomeFunction {
        private Runnable fn1;
        private Runnable fn2;
        
        public SomeFunction(Runnable externalRef) {
            if (anyExpression()) {
                fn2 = externalRef;
                fn1 = () -> fn2.run();
            }
        }
        
        private boolean anyExpression() {
            // This function simulates any complex condition
            return true; // For testing, we simply return true
        }
        
        public boolean method1() {
            if (fn1 != null) fn1.run();
            return true; 
        }
        
        public boolean method2() {
            return false;
        }
    }
}
