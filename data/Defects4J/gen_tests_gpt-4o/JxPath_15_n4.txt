
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Node;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;

import static org.junit.Assert.assertEquals;

public class XPathUnionTest {

    @Test
    public void testXPathUnionOrder() throws Exception {
        // Create an XML Document from the string representation
        String xml = "<MAIN><A>avalue</A><B>bvalue</B></MAIN>";
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));

        // Create an XPath instance
        XPath xPath = XPathFactory.newInstance().newXPath();

        // Define the XPath expression
        XPathExpression expr = xPath.compile("string(/MAIN/B | /MAIN/A)");

        // Evaluate the expression
        String result = (String) expr.evaluate(doc, javax.xml.xpath.XPathConstants.STRING);

        // Check the result
        assertEquals("avalue", result);
    }
}
