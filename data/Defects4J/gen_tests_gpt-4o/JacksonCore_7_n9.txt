
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import org.junit.Test;
import java.io.IOException;
import java.io.StringWriter;

public class JsonGeneratorTest {

    @Test(expected = IllegalStateException.class)
    public void testInvalidWriteStringAfterFieldName() throws IOException {
        JsonFactory jsonFactory = new JsonFactory();
        StringWriter writer = new StringWriter();
        
        JsonGenerator jsonGenerator = jsonFactory.createGenerator(writer);
        jsonGenerator.writeStartObject(); // Start a JSON object
        jsonGenerator.writeFieldName("fieldName"); // Write a field name
        
        // This should throw an IllegalStateException since a field name was expected, not a value directly
        jsonGenerator.writeString("value");
        
        jsonGenerator.writeEndObject(); // End the JSON object
        jsonGenerator.close();
    }
}
