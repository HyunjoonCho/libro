
import org.apache.commons.lang3.time.DateUtils;
import org.junit.Test;

import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class DateUtilsDSTTest {

    @Test
    public void testTruncateDSTSwitchingHour() {
        // Set the time zone to a DST-observing one that includes transition on the tested date
        TimeZone mdtTimezone = TimeZone.getTimeZone("America/Denver"); // MDT/MST
        
        // Create a calendar instance for October 31, 2004, 01:00:00 MDT
        Calendar calendar = Calendar.getInstance(mdtTimezone);
        calendar.clear();  // Clearing to set precise date without interference
        calendar.set(2004, Calendar.OCTOBER, 31, 1, 0, 0);

        // Get the date object representing the exact time in milliseconds since epoch
        Date oct31_01MDT = calendar.getTime();

        // Truncate the date by the hour
        Date result = DateUtils.truncate(oct31_01MDT, Calendar.HOUR_OF_DAY);

        // Verify that the truncated result matches the original date
        assertEquals("Truncated date should match the original during DST transition.", oct31_01MDT, result);
    }
}
