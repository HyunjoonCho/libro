
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;
import static org.junit.Assert.assertTrue;

@JacksonXmlRootElement(localName = "myname")
public class XMLTest {
    
    @Test
    public void testJacksonXmlRootElementWithMultipleXmlMappers() throws Exception {
        final ObjectMapper xmlMapper = new XmlMapper();
        final ObjectMapper noAnnotationsXmlMapper = xmlMapper.copy()
                .configure(MapperFeature.USE_ANNOTATIONS, false)
                .configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);

        String outputNoAnnotations = noAnnotationsXmlMapper.writeValueAsString(new XMLTest());
        String outputWithAnnotations = xmlMapper.writeValueAsString(new XMLTest());

        // Test without annotations
        assertTrue("Unexpected output without annotations",
                   outputNoAnnotations.contains("<XMLTest/>"));

        // Test with annotations
        assertTrue("Unexpected output with annotations",
                   outputWithAnnotations.contains("<myname/>"));
    }
}
