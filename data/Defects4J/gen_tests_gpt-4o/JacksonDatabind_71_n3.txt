
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.util.Map;

import static org.junit.Assert.assertEquals;

public class CharSequenceKeyDeserializerTest {

    @Test
    public void testCharSequenceKeyDeserialization() {
        ObjectMapper objectMapper = new ObjectMapper();
        String json = "{\"key\":\"value\"}";

        try {
            Map<CharSequence, String> map = objectMapper.readValue(json, Map.class);
            // Assuming the bug, the deserialization might not correctly handle CharSequence as a key
            // If the fix is needed, the correct map should be created and assertions updated accordingly.
            CharSequence key = map.keySet().iterator().next();
            assertEquals("key", key.toString());
            assertEquals("value", map.get(key));
        } catch (JsonProcessingException e) {
            e.printStackTrace();
            // Failing the test if exception occurs, indicating the deserialization issue
            fail("Deserialization failed: " + e.getMessage());
        }
    }
}
