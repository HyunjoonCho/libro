public void testJsonIdentityInfoDeserialization() throws IOException {
    ObjectMapper mapper = new ObjectMapper();

    String jsonString = "{ \"id\": 1, \"name\": \"Parent\", \"child\": { \"@id\": 2, \"name\": \"Child\", \"parent\": 1 } }";

    Parent parent = mapper.readValue(jsonString, Parent.class);

    assertNotNull(parent);
    assertEquals(1, parent.getId());
    assertEquals("Parent", parent.getName());
    assertNotNull(parent.getChild());
    assertEquals(2, parent.getChild().getId());
    assertEquals("Child", parent.getChild().getName());
    assertSame(parent, parent.getChild().getParent());
}

@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public static class Parent {
    private int id;
    private String name;
    private Child child;
    
    @JsonCreator
    public Parent(@JsonProperty("id") int id, 
                  @JsonProperty("name") String name, 
                  @JsonProperty("child") Child child) {
        this.id = id;
        this.name = name;
        this.child = child;
    }

    // Getters and Setters
}

@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public static class Child {
    private int id;
    private String name;
    private Parent parent;

    @JsonCreator
    public Child(@JsonProperty("id") int id, 
                 @JsonProperty("name") String name, 
                 @JsonProperty("parent") Parent parent) {
        this.id = id;
        this.name = name;
        this.parent = parent;
    }

    // Getters and setters
}