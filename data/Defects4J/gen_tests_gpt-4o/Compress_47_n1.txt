
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;

import static org.junit.Assert.*;

public class ZipArchiveInputStreamTest {

    @Test
    public void testZipEntryWithUnknownCompressedSize() {
        byte[] zipData = {/* ... ZIP data with an unknown compressed size entry ... */};

        try (ByteArrayInputStream bais = new ByteArrayInputStream(zipData);
             ZipArchiveInputStream zipInputStream = new ZipArchiveInputStream(bais)) {

            ZipArchiveEntry entry;
            while ((entry = zipInputStream.getNextZipEntry()) != null) {
                // Check if the compressed size is unknown
                if (entry.getCompressedSize() == ZipArchiveEntry.SIZE_UNKNOWN) {
                    try {
                        int byteData = zipInputStream.read();
                        fail("Expected an exception due to unknown compressed size, but read succeeded: " + byteData);
                    } catch (IOException e) {
                        // Verify that the exception message is informative
                        assertTrue(e.getMessage().contains("compressed size is unknown"));
                    }
                }
            }

        } catch (IOException e) {
            fail("Test setup failure: " + e.getMessage());
        }
    }
}
