
import org.junit.Assert;
import org.junit.Test;

import java.lang.reflect.Type;
import java.util.Map;
import org.apache.commons.lang3.reflect.TypeUtils;

public class TypeUtilsTest {

    public interface This<K, V> {}

    public class Other<T> implements This<String, T> {}

    @Test
    public void testGetTypeArgumentsForPartiallyAssignedClasses() {
        Map<Type, Type> typeVarAssigns = TypeUtils.getTypeArguments(Other.class, This.class);
        
        Assert.assertEquals("Size of type variable assignments map is incorrect", 2, typeVarAssigns.size());
        Assert.assertEquals("Type argument for first type parameter is incorrect", 
                            String.class, 
                            typeVarAssigns.get(This.class.getTypeParameters()[0]));
        Assert.assertEquals("Type argument for second type parameter is incorrect", 
                            Other.class.getTypeParameters()[0], 
                            typeVarAssigns.get(This.class.getTypeParameters()[1]));
    }
}
