public void testCloseEventsDetection() {
    double t1 = 90.0;
    double t2 = 135.0;
    
    // Define a simple trigger for the event based on provided scenario
    EventHandler closeEvent = new EventHandler() {
        public double g(double t, double[] y) {
            if (t < t1) {
                return t - t1; // First event at t = 90
            } else {
                return t2 - t; // Second event at t = 135
            }
        }

        public Action eventOccurred(double t, double[] y, boolean increasing) {
            return Action.STOP;
        }

        public double getInitialCondition() {
            return 1.0; // Initial condition
        }
    };

    // ODE integrator setup
    double[] y = {0.0}; // dummy initial state
    DormandPrince54Integrator integrator = new DormandPrince54Integrator(1.0e-8, 10.0, 1.0e-10, 1.0e-10);
    integrator.addEventHandler(closeEvent, 1.0e-10, 1.0e-10, 100);
    
    integrator.integrate(new ODE(), 0.0, y, 200.0, y);

    // Test to ensure both events are detected
    // This assumes that the eventOccurred method modifies an internal state or is verifiable
    // Here, you might need to mock or track calls to `eventOccurred` to validate
    assertTrue(eventDetectedAt(90.0));
    assertTrue(eventDetectedAt(135.0));
}