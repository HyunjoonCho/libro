
import org.junit.Test;
import java.io.*;

public class CompilerCrashTest {

    @Test
    public void testSwitchStatementCompilerCrash() {
        String jsCode = "function a(b) {\n" +
                        "  switch (b.v) {\n" +
                        "    case 'SWITCH':\n" +
                        "      if (b.i >= 0) {\n" +
                        "        return b.o;\n" +
                        "      } else {\n" +
                        "        return undefined;\n" +
                        "      }\n" +
                        "      break;\n" +
                        "  }\n" +
                        "}\n";

        File jsFile = null;
        try {
            // Create a temporary JavaScript file
            jsFile = File.createTempFile("test", ".js");
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(jsFile))) {
                writer.write(jsCode);
            }

            // Call the compiler with the created file
            ProcessBuilder processBuilder = new ProcessBuilder(
                    "java",
                    "-jar", "compiler.jar", "--js", jsFile.getAbsolutePath()
            );

            Process process = processBuilder.start();

            // Capture the error stream to check the compiler output
            StringWriter errors = new StringWriter();
            new Thread(() -> {
                try (BufferedReader errorReader = new BufferedReader(
                        new InputStreamReader(process.getErrorStream()))) {
                    String line;
                    while ((line = errorReader.readLine()) != null) {
                        errors.write(line);
                        errors.write(System.lineSeparator());
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }).start();

            int exitCode = process.waitFor();

            if (exitCode != 0) {
                String errorOutput = errors.toString();
                // Check if the specific internal compiler error message is present
                assertTrue("Expected compiler internal error not found.",
                        errorOutput.contains("INTERNAL COMPILER ERROR"));
            } else {
                fail("Compiler did not produce an expected crash.");
            }
        } catch (IOException | InterruptedException e) {
            e.printStackTrace();
            fail("Test failed due to an unexpected exception: " + e.getMessage());
        } finally {
            if (jsFile != null) {
                jsFile.delete();
            }
        }
    }
}
