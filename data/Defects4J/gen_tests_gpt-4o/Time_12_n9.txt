
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Calendar;
import org.joda.time.LocalDate;

public class CalendarEraTest {

    @Test
    public void testLocalDateFromCalendarFieldsWithEra() {
        // Create a Gregorian calendar instance and set a historical date
        Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.YEAR, 1900);
        calendar.set(Calendar.MONTH, Calendar.JANUARY);
        calendar.set(Calendar.DAY_OF_MONTH, 1);
        calendar.set(Calendar.ERA, Calendar.AD);

        // Convert Calendar fields to LocalDate
        LocalDate localDate = LocalDate.fromCalendarFields(calendar);

        // Verify the LocalDate contents match the expected Calendar fields
        assertEquals(1900, localDate.getYear());
        assertEquals(1, localDate.getMonthOfYear());
        assertEquals(1, localDate.getDayOfMonth());

        // Change era to BC and verify the behavior
        calendar.set(Calendar.ERA, Calendar.BC);
        localDate = LocalDate.fromCalendarFields(calendar);

        // The expectation in handling BC dates may depend on the library handling.
        // For instance, the year might be negated or adjusted based on era.
        // Adjust assertions based on expected behavior of LocalDate when era is BC.
        assertEquals(-1899, localDate.getYear());
    }
}
