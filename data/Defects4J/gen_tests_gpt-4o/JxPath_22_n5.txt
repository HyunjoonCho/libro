
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.xml.Dom4JParser;
import org.dom4j.Document;
import org.dom4j.io.SAXReader;
import org.junit.Test;

import java.io.StringReader;

import static org.junit.Assert.assertEquals;

public class XPathNamespaceTest {

    @Test
    public void testNamespaceResetLoop() throws Exception {
        String xml = "<root xmlns=\"test111\" xmlns:b=\"bla\">" +
                "<b:foo>" +
                "<b:bar>a</b:bar>" +
                "<test xmlns=\"\"></test>" +
                "</b:foo>" +
                "</root>";

        SAXReader reader = new SAXReader();
        Document document = reader.read(new StringReader(xml));
        JXPathContext context = JXPathContext.newContext(new Dom4JParser(document));

        // Get the 'test' node
        Pointer pointer = context.getPointer("/b:foo/test");

        // This should not produce an endless loop and should return the expected XPath path
        String actualPath = pointer.asPath();
        
        // Verify the output; as per bug, this might end up being "//b:foo/null:test", indicating the issue
        assertEquals("/b:foo/test", actualPath);
    }
}
