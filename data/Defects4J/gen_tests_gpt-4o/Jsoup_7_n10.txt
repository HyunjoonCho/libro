
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.io.IOException;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class JsoupMalformedTreeTest {

    @Test
    public void testMultipleBodyElements() throws IOException {
        // Load the HTML file
        File input = new File("jsoup-tc/malformed_page.html");
        Document doc = Jsoup.parse(input, "UTF-8");

        // Check the structure of the DOM tree
        Elements bodyElements = doc.getElementsByTag("body");

        // Assert that there should only be one <body> element directly under <html>
        // This will fail because of the bug that results in two <body> elements 
        assertEquals(1, bodyElements.size(), "Document has multiple <body> elements");

        // Further assert the structure to see where the <body> elements reside
        for (Element body : bodyElements) {
            assertTrue(body.parent().tagName().equals("html"), "Body element is not a direct child of html");
        }
    }
}
