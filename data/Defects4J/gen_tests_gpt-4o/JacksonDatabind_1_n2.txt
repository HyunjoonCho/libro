
import static org.junit.jupiter.api.Assertions.assertEquals;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;

public class JsonFormatArraySerializationTest {

    @Test
    public void testNullSerializationInArrayFormat() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.enable(SerializationFeature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED);

        TestOuter testOuter = new TestOuter();
        String expectedJson = "{\"array\":[[1,\"one\"],[0,null]]}";

        String jsonResult = objectMapper.writeValueAsString(testOuter);

        // Assert that the JSON output matches the expected output
        assertEquals(expectedJson, jsonResult);
    }

    public static class TestOuter {
        @JsonFormat(shape = JsonFormat.Shape.ARRAY)
        public ArrayList<TestInner> array;

        public TestOuter() {
            this.array = new ArrayList<>();
            this.array.add(new TestInner(1, "one"));
            this.array.add(new TestInner(0, null));
        }
    }

    private static class TestInner {
        public int i;
        public String mayBeNull;

        public TestInner(int i, String s) {
            this.i = i;
            this.mayBeNull = s;
        }
    }
}
