
import com.fasterxml.jackson.annotation.JsonRootName;
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import org.junit.Test;
import static org.junit.Assert.assertTrue;

@JacksonXmlRootElement(localName = "myname")
public class XmlRootElementTest {

    @Test
    public void testJacksonXmlRootElementWithMultipleXmlMappers() throws Exception {
        final ObjectMapper xmlMapper = new XmlMapper();
        final ObjectMapper noAnnotationsXmlMapper = xmlMapper.copy()
                .configure(MapperFeature.USE_ANNOTATIONS, false)
                .configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);

        String outputWithoutAnnotations = noAnnotationsXmlMapper.writeValueAsString(new XmlRootElementTest());
        String outputWithAnnotations = xmlMapper.writeValueAsString(new XmlRootElementTest());

        // Expect the second output to have the root element name as specified by the @JacksonXmlRootElement annotation
        assertTrue(outputWithoutAnnotations.contains("<XMLTest/>"));
        assertTrue(outputWithAnnotations.contains("<myname/>"));
    }
}
