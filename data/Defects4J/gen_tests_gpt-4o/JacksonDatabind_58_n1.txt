
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.DeserializationFeature;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

@JsonIgnoreProperties({"cause", "stackTrace", "suppressed", "localizedMessage"})
class MyException extends RuntimeException {
    private String message;

    public MyException() {}

    public MyException(String message) {
        super(message);
        this.message = message;
    }

    public String getCustomMessage() {
        return message;
    }

    public void setCustomMessage(String message) {
        this.message = message;
    }
}

public class MyExceptionTest {

    @Test
    public void testDeserializeException() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

        String json = "{\"customMessage\":\"This is a custom exception message.\"}";

        MyException deserializedException = mapper.readValue(json, MyException.class);

        assertEquals("This is a custom exception message.", deserializedException.getCustomMessage());
    }
}
