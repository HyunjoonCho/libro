
import org.junit.Before;
import org.junit.Test;
import org.mockito.Captor;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.ArgumentCaptor;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.verify;

// Class under test
class MyService {
    private MyRepository repository;

    public MyService(MyRepository repository) {
        this.repository = repository;
    }

    public void performAction(String input) {
        repository.save(input);
    }
}

// Mocked collaborator
interface MyRepository {
    void save(String data);
}

public class CaptorExampleTest {

    @Mock
    private MyRepository repository;

    @InjectMocks
    private MyService service;

    @Captor
    private ArgumentCaptor<String> stringCaptor;

    @Before
    public void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testVerifyCaptorUsage() {
        // Act
        service.performAction("test data");

        // Verify the interaction and capture the argument
        verify(repository).save(stringCaptor.capture());

        // Assert the captured value
        assertEquals("test data", stringCaptor.getValue());
    }
}
