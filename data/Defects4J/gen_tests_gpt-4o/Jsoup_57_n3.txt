
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Element;
import org.jsoup.parser.Tag;
import org.junit.Test;

import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;

import static org.junit.Assert.fail;

public class RemoveIgnoreCaseTest {

    @Test
    public void testRemoveIgnoreCaseConcurrentModificationException() {
        // Create an element with some attributes
        Attributes attributes = new Attributes();
        attributes.put("Attr1", "value1");
        attributes.put("Attr2", "value2");
        
        Element element = new Element(Tag.valueOf("div"), "", attributes);

        try {
            // Attempt to remove attributes in a case-insensitive way using a foreach loop
            for (Attribute attribute : element.attributes()) {
                if (attribute.getKey().equalsIgnoreCase("attr1")) {
                    element.removeAttr(attribute.getKey());
                }
                if (attribute.getKey().equalsIgnoreCase("attr2")) {
                    element.removeAttr(attribute.getKey());
                }
            }
            fail("Expected ConcurrentModificationException not thrown");
        } catch (ConcurrentModificationException e) {
            // Test passes
        }

        // Correct approach using iterator to avoid ConcurrentModificationException
        for (Iterator<Map.Entry<String, Attribute>> iter = element.attributes().asList().iterator(); iter.hasNext();) {
            Map.Entry<String, Attribute> entry = iter.next();
            if (entry.getKey().equalsIgnoreCase("attr1") || entry.getKey().equalsIgnoreCase("attr2")) {
                iter.remove();
            }
        }

        // Verify that both attributes have been removed
        assert element.attributes().size() == 0;
    }
}
