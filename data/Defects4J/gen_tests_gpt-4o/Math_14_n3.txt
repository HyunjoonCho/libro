
import org.apache.commons.math3.fitting.WeightedObservedPoints;
import org.apache.commons.math3.fitting.PolynomialCurveFitter;
import org.junit.Test;

import static org.junit.Assert.assertNotNull;

public class LargeNumberWeightsTest {

    @Test
    public void testLargeNumberOfWeights() {
        // Setup with large number of data points
        WeightedObservedPoints obs = new WeightedObservedPoints();
        int numPoints = 41200;

        for (int i = 0; i < numPoints; i++) {
            obs.add(i, Math.pow(i, 2) + Math.random());  // Using a quadratic with noise
        }

        // Initialize a polynomial fitter of degree 2 (quadratic)
        PolynomialCurveFitter fitter = PolynomialCurveFitter.create(2);

        // Attempt to fit the points with the curve fitter
        double[] coeffs = fitter.fit(obs.toList());

        // Check that coefficients are returned (not null)
        assertNotNull(coeffs);
    }
}
