
import org.apache.commons.math3.fitting.WeightedObservedPoints;
import org.apache.commons.math3.fitting.polynomial.PolynomialCurveFitter;
import org.apache.commons.math3.fitting.PolynomialCurveFitter;
import org.junit.Test;
import static org.junit.Assert.*;

public class LargeWeightCurveFittingTest {

    @Test
    public void testLargeWeightCurveFitting() {
        try {
            // Create observed points
            WeightedObservedPoints obs = new WeightedObservedPoints();

            // Add 41200 points with arbitrary values
            for (int i = 0; i < 41200; i++) {
                obs.add(i, Math.sin(i));
            }

            // Polynomial fitting with degree 3
            PolynomialCurveFitter fitter = PolynomialCurveFitter.create(3);

            // Perform the fit
            double[] coeff = fitter.fit(obs.toList());

            // Check the length of coefficients (should be degree + 1)
            assertEquals(4, coeff.length);

        } catch (OutOfMemoryError e) {
            fail("OutOfMemoryError occurred, which indicates the issue with handling large number of weights.");
        }
    }
}
