
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;

import static org.junit.Assert.assertTrue;

public class HelpFormatterWrapTest {

    @Test
    public void testHelpFormatterWrapsCorrectly() {
        Options options = new Options();
        // Create an option with a long description to verify wrapping
        options.addOption(Option.builder("d")
                .longOpt("description")
                .desc("This is a long description that should wrap correctly without exceeding the specified width " +
                      "on subsequent lines. The description is intentionally verbose to test this behavior " +
                      "and demonstrate any wrapping issues that may occur.")
                .build());

        HelpFormatter formatter = new HelpFormatter();
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        PrintWriter writer = new PrintWriter(out);
        
        int width = 60; // Set wrap width
        formatter.setWidth(width);

        // Print the options
        formatter.printHelp(writer, formatter.getWidth(),
                            "testapp", "header", options, formatter.getLeftPadding(),
                            formatter.getDescPadding(), "footer");
        writer.flush();
        
        String helpOutput = new String(out.toByteArray());

        // Split each line of the output
        String[] lines = helpOutput.split(System.lineSeparator());

        // Check that each line (beyond the first) does not exceed the specified wrap width
        for (int i = 1; i < lines.length; i++) {
            assertTrue("Line exceeded wrap width: " + lines[i], lines[i].length() <= width);
        }
    }
}
