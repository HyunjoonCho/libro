
import org.apache.commons.compress.archivers.ArchiveInputStream;
import org.apache.commons.compress.archivers.ArchiveStreamFactory;
import org.apache.commons.compress.archivers.arj.ArjArchiveInputStream;
import org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream;
import org.apache.commons.compress.archivers.dump.DumpArchiveInputStream;
import org.apache.commons.compress.archivers.jar.JarArchiveInputStream;
import org.apache.commons.compress.archivers.jar.JarArchiveOutputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.nio.charset.StandardCharsets;

import static org.junit.Assert.assertEquals;

public class ArchiveStreamFactoryTest {

    @Test
    public void testArjArchiveInputStreamEncoding() throws Exception {
        String encoding = "UTF-8";
        ArchiveStreamFactory factory = new ArchiveStreamFactory();
        ByteArrayInputStream bais = new ByteArrayInputStream(new byte[0]);

        ArchiveInputStream ais = factory.createArchiveInputStream(ArchiveStreamFactory.ARJ, bais, encoding);
        assertEquals(ArjArchiveInputStream.class, ais.getClass());
        // Add any specific validation to check if encoding is applied correctly
    }
    
    @Test
    public void testCpioArchiveInputStreamEncoding() throws Exception {
        String encoding = "UTF-8";
        ArchiveStreamFactory factory = new ArchiveStreamFactory();
        ByteArrayInputStream bais = new ByteArrayInputStream(new byte[0]);

        ArchiveInputStream ais = factory.createArchiveInputStream(ArchiveStreamFactory.CPIO, bais, encoding);
        assertEquals(CpioArchiveInputStream.class, ais.getClass());
        // Add any specific validation to check if encoding is applied correctly
    }

    @Test
    public void testDumpArchiveInputStreamEncoding() throws Exception {
        String encoding = "UTF-8";
        ArchiveStreamFactory factory = new ArchiveStreamFactory();
        ByteArrayInputStream bais = new ByteArrayInputStream(new byte[0]);

        ArchiveInputStream ais = factory.createArchiveInputStream(ArchiveStreamFactory.DUMP, bais, encoding);
        assertEquals(DumpArchiveInputStream.class, ais.getClass());
        // Add any specific validation to check if encoding is applied correctly
    }

    @Test
    public void testJarArchiveInputStreamEncoding() throws Exception {
        String encoding = "UTF-8";
        ArchiveStreamFactory factory = new ArchiveStreamFactory();
        ByteArrayInputStream bais = new ByteArrayInputStream(new byte[0]);

        ArchiveInputStream ais = factory.createArchiveInputStream(ArchiveStreamFactory.JAR, bais, encoding);
        assertEquals(JarArchiveInputStream.class, ais.getClass());
        // Add any specific validation to check if encoding is applied correctly
    }
    
    @Test
    public void testJarArchiveOutputStream() throws Exception {
        String encoding = "UTF-8";
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        JarArchiveOutputStream jaos = new JarArchiveOutputStream(baos, encoding);

        jaos.putArchiveEntry(jaos.createArchiveEntry(new byte[0], "test"));

        jaos.close();

        String resultEncoding = jaos.getEncoding();
        assertEquals(encoding, resultEncoding);
    }
}
