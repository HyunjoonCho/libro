
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.junit.Test;

import static org.junit.Assert.*;

public class RegulaFalsiSolverTest {

    @Test
    public void testBug() {
        // Define the function f(x) = e^x - Ï€^3
        UnivariateFunction f = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return Math.exp(x) - Math.pow(Math.PI, 3.0);
            }
        };

        // Initialize RegulaFalsiSolver
        UnivariateSolver solver = new RegulaFalsiSolver();
        
        try {
            // Attempt to find the root between 1 and 10
            double root = solver.solve(100, f, 1, 10);
            fail("Expected an exception due to maximum evaluations exceeded.");
        } catch (org.apache.commons.math3.exception.MaxCountExceededException e) {
            // Expected exception for evaluations being exceeded
        }
    }
}
