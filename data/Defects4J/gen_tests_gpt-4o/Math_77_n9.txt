
import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.OpenMapRealVector;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class VectorNormTest {

    @Test
    public void testArrayRealVectorGetLInfNorm() {
        double[] data = {-3.0, -4.0, 2.0, 5.0};
        ArrayRealVector vector = new ArrayRealVector(data);
        
        // Expected L_infinity norm is max of absolute values: max(3.0, 4.0, 2.0, 5.0) == 5.0
        double expectedNorm = 5.0;
        double actualNorm = vector.getLInfNorm();
        
        assertEquals("ArrayRealVector LInfNorm computation is incorrect.", expectedNorm, actualNorm, 1e-10);
    }

    @Test
    public void testOpenMapRealVectorGetLInfNorm() {
        OpenMapRealVector vector = new OpenMapRealVector(4);
        vector.setEntry(0, -3.0);
        vector.setEntry(1, -4.0);
        vector.setEntry(2, 2.0);
        vector.setEntry(3, 5.0);

        // Expected L_infinity norm is max of absolute values: max(3.0, 4.0, 2.0, 5.0) == 5.0
        double expectedNorm = 5.0;
        double actualNorm = vector.getLInfNorm();

        assertEquals("OpenMapRealVector LInfNorm computation is incorrect.", expectedNorm, actualNorm, 1e-10);
    }
}
