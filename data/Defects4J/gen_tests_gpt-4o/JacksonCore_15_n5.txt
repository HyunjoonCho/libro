public void testAllowMultipleMatchesNotUtilized() throws IOException {
    String json = "{\"name\":\"John\", \"age\":30}";
    JsonFactory factory = new JsonFactory();
    ObjectCodec codec = new ObjectMapper();
    
    try (JsonParser parser = factory.createParser(json)) {
        FilteringParserDelegate delegate = new FilteringParserDelegate(
                parser, 
                new TokenFilter() {
                    @Override
                    public TokenFilter includeProperty(String name) {
                        return name.equals("name") ? TokenFilter.INCLUDE_ALL : null;
                    }
                }, 
                Inclusion.INCLUDE_ALL_AND_PATH, 
                false // currently ignoring `_allowMultipleMatches`
        );
        
        delegate.setCodec(codec);

        // Check that only one 'name' field is included
        JsonNode rootNode = codec.readTree(delegate);
        assertEquals("John", rootNode.get("name").asText());
        assertTrue(rootNode.has("name"));
        assertFalse(rootNode.has("age"));
    }
}