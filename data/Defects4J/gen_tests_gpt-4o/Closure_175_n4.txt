public void testErroneousOptimizationInAdvancedMode() {
    // Setup: define the function in a script as it would be compiled
    String inputJs = "window['anchor'] = function (obj, modifiesProp) {" +
                     "  return (function (saved) {" +
                     "    return modifiesProp(obj) + saved;" +
                     "  })(obj['prop']);" +
                     "};";

    // Execute the simulated compiled script
    ScriptEngineManager mgr = new ScriptEngineManager();
    ScriptEngine engine = mgr.getEngineByName("JavaScript");

    try {
        engine.eval(inputJs);

        Object result = engine.eval("(function() { " +
                "var obj = {prop: 5}; " +
                "var modifiesProp = function(o) { o.prop = 10; return 1; }; " +
                "return window['anchor'](obj, modifiesProp);" +
                "})();");

        // Assert that the result matches the expected output
        assertEquals(6, ((Number) result).intValue());
    } catch (ScriptException e) {
        fail("Script execution failed: " + e.getMessage());
    }
}