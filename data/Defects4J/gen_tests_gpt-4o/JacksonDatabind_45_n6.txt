public void testJsonShapeNumberNotAffectedByLocale() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(DeserializationFeature.ACCEPT_FLOAT_AS_INT, true);
    String json = "{ \"value\" : 123456789 }";
    
    ObjectReader reader = mapper.readerFor(MyNumberWrapper.class)
                                .with(Locale.FRENCH);
    
    MyNumberWrapper result = reader.readValue(json);
    assertEquals(123456789, result.value);
    
    // Ensure explicit shape NUMBER prevents locale influence
    String expectedJson = "{\"value\":123456789}";
    assertEquals(expectedJson, mapper.writeValueAsString(result));
}

static class MyNumberWrapper {
    @JsonFormat(shape = JsonFormat.Shape.NUMBER)
    public int value;
}