public void testRefinementWithPrimitiveAndWrapper() {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    
    module.setMixInAnnotation(BaseClass.class, RefinementMixIn.class);
    mapper.registerModule(module);
    
    BaseClass input = new BaseClass();
    input.value = 42;

    // Serialize with int
    String json = mapper.writeValueAsString(input);
    
    // Deserialize with Integer refinement
    SubClass result = mapper.readValue(json, SubClass.class);

    assertEquals(Integer.valueOf(42), result.value);
}

@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = "@class")
static class BaseClass {
    public int value;
}

abstract class RefinementMixIn {
    public Integer value;
}

static class SubClass extends BaseClass {
    public Integer value;
}