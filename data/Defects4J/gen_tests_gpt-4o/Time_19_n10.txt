
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DSTIssueTest {

    @Test
    public void testDSTInconsistency() {
        DateTime britishDate = new DateTime(2011, 10, 30, 1, 59, 0, 0, DateTimeZone.forID("Europe/London"));
        DateTime norwDate = new DateTime(2011, 10, 30, 2, 59, 0, 0, DateTimeZone.forID("Europe/Oslo"));
        DateTime finnishDate = new DateTime(2011, 10, 30, 3, 59, 0, 0, DateTimeZone.forID("Europe/Helsinki"));

        // Expecting the British date time to represent 01:59 with +01:00 offset
        assertEquals("2011-10-30T01:59:00.000+01:00", britishDate.toString());

        // Expecting the Norwegian date time to represent 02:59 with +01:00 offset (which is correct for Norway)
        assertEquals("2011-10-30T02:59:00.000+01:00", norwDate.toString());

        // Expecting the Finnish date time to represent 03:59 with +02:00 offset (which is correct for Finland)
        assertEquals("2011-10-30T03:59:00.000+02:00", finnishDate.toString());
    }
}
