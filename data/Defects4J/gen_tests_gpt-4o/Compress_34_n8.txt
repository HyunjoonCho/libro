
import org.apache.commons.compress.archivers.zip.*;
import org.apache.tika.Tika;
import org.junit.Test;

import static org.junit.Assert.assertThrows;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

public class ZipParsingTest {

    @Test
    public void testParseSmallUxLocalEntry() throws IOException {
        // Preparing a byte array output stream to create a zip file in-memory
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        ZipOutputStream zipOutputStream = new ZipOutputStream(byteArrayOutputStream);

        // Add a fake image entry with an extra field of 'ux' with size zero
        ZipEntry entry = new ZipEntry("image.jpg");
        // Zero-sized 'ux' extra field, starts with the 'UT' part described
        byte[] extra = new byte[]{85, 84, 5, 0, 7, -112, -108, 51, 85, 117, 120, 0, 0};
        entry.setExtra(extra);
        zipOutputStream.putNextEntry(entry);
        zipOutputStream.write("fakeimagecontent".getBytes(StandardCharsets.UTF_8));
        zipOutputStream.closeEntry();
        zipOutputStream.close();

        // Convert the byte array output stream to a byte array that represents the ZIP file
        byte[] zipContent = byteArrayOutputStream.toByteArray();

        // Tika instance to detect content type
        Tika tika = new Tika();

        // Expecting ArrayIndexOutOfBoundsException based on the bug report
        assertThrows(ArrayIndexOutOfBoundsException.class, () -> {
            tika.detect(zipContent, "fakefile.zip");
        });
    }
}
