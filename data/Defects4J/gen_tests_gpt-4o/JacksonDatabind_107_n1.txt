public void testHandleUnknownTypeIdReturningVoidClass() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping();
    mapper.addHandler(new DeserializationProblemHandler() {
        @Override
        public JavaType handleUnknownTypeId(DeserializationContext ctxt, 
                                            JavaType baseType,
                                            String subTypeId,
                                            TypeIdResolver idResolver,
                                            String failureMsg) {
            return ctxt.constructType(Void.class);
        }
    });

    String json = "\"test\"";
    
    try {
        mapper.readValue(json, Object.class);
        fail("Expected an exception due to Void.class return");
    } catch (JsonProcessingException e) {
        assertTrue(e.getCause() instanceof NullPointerException);
    }
}