public void testClosureCompiledSwfObjectError() {
    String pattern = "[\\\"<>.;]";
    String testString = "\"<>.;";
    
    boolean hasBadCharsBefore = testString.matches(".*" + pattern + ".*");
    String result = urlEncodeIfNecessary(testString);
    boolean hasBadCharsAfter = result.matches(".*" + pattern + ".*");
    
    assertEquals(true, hasBadCharsBefore);
    assertEquals(false, hasBadCharsAfter);

    // Helper method
    String urlEncodeIfNecessary(String s) {
        boolean hasBadChars = Pattern.compile(pattern).matcher(s).find();
        return hasBadChars && encodeURIComponentAvailable() ? encodeURIComponent(s) : s;
    }

    // Simulate check for encodeURIComponent availability
    boolean encodeURIComponentAvailable() {
        try {
            return encodeURIComponent("test") != null;
        } catch (Exception e) {
            return false;
        }
    }

    // Mock of encodeURIComponent function since it's JavaScript specific
    String encodeURIComponent(String value) {
        // Attempting a simple character replacement just for test simulation
        try {
            return java.net.URLEncoder.encode(value, "UTF-8")
                    .replace("+", "%20")
                    .replace("%21", "!")
                    .replace("%27", "'")
                    .replace("%28", "(")
                    .replace("%29", ")")
                    .replace("%7E", "~");
        } catch (java.io.UnsupportedEncodingException e) {
            return value;
        }
    }
}