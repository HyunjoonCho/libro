public void testJSC_USED_GLOBAL_THIS_Warning() {
    String code = "var NS = {" +
                  "  read: function() {" +
                  "    return this.foo;" +
                  "  }," +
                  "  write: function() {" +
                  "    this.foo = 123;" +
                  "  }" +
                  "};" +
                  "NS.write2 = function() {" +
                  "  this.foo = 123;" +
                  "};";

    CompilerOptions options = new CompilerOptions();
    WarningLevel.VERBOSE.setOptionsForWarningLevel(options);
    Compiler compiler = new Compiler();
    compiler.compile(SourceFile.fromCode("externs", ""), SourceFile.fromCode("test", code), options);

    // Check that the expected warnings are generated
    assertTrue(compiler.getWarnings().stream().anyMatch(
        warning -> warning.getType().key.equals("JSC_USED_GLOBAL_THIS") &&
                   (warning.getSourceName().contains("write") || warning.getSourceName().contains("read"))
    ));
}