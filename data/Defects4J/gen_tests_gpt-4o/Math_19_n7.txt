public void testCMAESOptimizerWithWideBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer();
    MultivariateFunction fitnessFunction = new MultivariateFunction() {
        @Override
        public double value(double[] point) {
            for (double param : point) {
                if (Double.isNaN(param)) {
                    fail("Parameter is NaN");
                }
            }
            return 0; // Dummy fitness value
        }
    };
    try {
        optimizer.optimize(
            new MaxEval(10000),
            new MaxIter(10000),
            new ObjectiveFunction(fitnessFunction),
            GoalType.MINIMIZE,
            new InitialGuess(new double[]{0, 0}),
            SimpleBounds.unbounded(2),
            new CMAESOptimizer.Sigma(new double[]{1, 1}),
            new CMAESOptimizer.PopulationSize(10)
        );
    } catch (Exception e) {
        // If an exception other than NaN parameters occurs, rethrow it
        throw new RuntimeException("Unexpected exception", e);
    }
}