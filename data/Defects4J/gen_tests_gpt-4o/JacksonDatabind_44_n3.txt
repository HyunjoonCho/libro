public void testPolymorphicTypeDefaultImpl() throws Exception {
    String json = "{\"type\":\"subType\",\"subField\":\"subValue\",\"baseField\":\"baseValue\"}";

    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping();
    
    String result = mapper.writeValueAsString(mapper.readValue(json, BaseType.class));
    
    assertTrue(result.contains("\"baseField\":\"baseValue\""));
    assertTrue(result.contains("\"subField\":\"subValue\""));
}

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = SubType.class)
@JsonSubTypes({
    @Type(value = SubType.class, name = "subType")
})
static class BaseType {
    public String baseField;
}

static class SubType extends BaseType {
    public String subField;
}