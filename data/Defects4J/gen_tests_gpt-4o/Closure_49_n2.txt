
import static org.junit.Assert.*;
import org.junit.Test;
import javax.script.*;

public class JavaScriptCompilerTest {

    @Test
    public void testFunctionAndVariableSameName() throws Exception {
        // JavaScript code to be tested
        String script = "var foo = function bar(){ var bar; return typeof bar; }; foo();";

        // Create a script engine manager
        ScriptEngineManager factory = new ScriptEngineManager();
        
        // Create a JavaScript engine
        ScriptEngine engine = factory.getEngineByName("JavaScript");
        
        // Evaluate JavaScript code in String
        Object result = engine.eval(script);

        // Assert that it returns "undefined", which is the expected value in this context
        assertEquals("undefined", result);
        
        // Note: The actual compiling with Closure Compiler would be an external step
        // Validate the code externally and ensure this logic produces the correct
        // output without renaming changes that result in incorrect behavior.
    }
}
