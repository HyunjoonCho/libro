
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;

import static org.junit.Assert.fail;

public class TarArchiveInputStreamTest {

    @Test
    public void testParsePaxHeadersWithEmptyLine() {
        // Create a sample PAX header with an empty line at the end
        String paxHeaders = "25 myHeader=MyHeaderValue\n";

        // Convert PAX header string to byte array, adding an empty line at the end
        byte[] headerBytes = (paxHeaders + "\n").getBytes();

        // Create a TarArchiveInputStream with the PAX headers
        try (TarArchiveInputStream tais = new TarArchiveInputStream(new ByteArrayInputStream(headerBytes))) {
            // Trigger the parsing of headers
            tais.getNextTarEntry();
            fail("Expected NegativeArraySizeException was not thrown");
        } catch (NegativeArraySizeException e) {
            // Expected exception
        } catch (IOException e) {
            fail("Unexpected IOException: " + e.getMessage());
        }
    }
}
