public void testParsePaxHeadersWithEmptyLine() throws IOException {
    byte[] paxHeaderWithEmptyLine = ("25 path=foo/bar\n" +
                                     "26 mtime=1350244992.02396066\n" +
                                     "\n").getBytes(StandardCharsets.UTF_8);

    TarArchiveInputStream tarInputStream = new TarArchiveInputStream(new ByteArrayInputStream(paxHeaderWithEmptyLine));
    
    try {
        Method method = TarArchiveInputStream.class.getDeclaredMethod("parsePaxHeaders", InputStream.class, Map.class);
        method.setAccessible(true);
        Map<String, String> headers = (Map<String, String>) method.invoke(tarInputStream, new ByteArrayInputStream(paxHeaderWithEmptyLine), new HashMap<>());
        // Asserts to verify no exception thrown and headers parsed correctly
        assertEquals("foo/bar", headers.get("path"));
        assertEquals("1350244992.02396066", headers.get("mtime"));
    } catch (InvocationTargetException ex) {
        fail("Should not have thrown exception: " + ex.getCause());
    } catch (NoSuchMethodException | IllegalAccessException ex) {
        throw new RuntimeException("Reflection failed", ex);
    }
}