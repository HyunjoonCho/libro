public void testTypeAliasBeforeDefinition() {
    String jsCode = "goog.provide('foo.Foo');\n" +
                    "goog.provide('foo.Foo.Bar');\n" +
                    "\n" +
                    "goog.scope(function() {\n" +
                    " /**\n" +
                    " * @param {Foo.Bar} bar\n" +
                    " * @constructor\n" +
                    " */\n" +
                    " foo.Foo = function(bar) {\n" +
                    " this.bar = bar;\n" +
                    " };\n" +
                    " var Foo = foo.Foo;\n" +
                    "\n" +
                    " /** @type {Foo.Bar} */\n" +
                    " Foo.prototype.bar = null;\n" +
                    "\n" +
                    " /** @constructor */\n" +
                    " Foo.Bar = function() {};\n" +
                    "});";
    
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticGroups.REPORT_UNKNOWN_TYPES, CheckLevel.WARNING);
    
    Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test.js", jsCode), options);
    
    assertTrue("There should be a warning related to unknown type annotaion.", result.warnings.length > 0);
    assertEquals("Bad type annotation. Unknown type Foo.Bar", result.warnings[0].getDescription());
}