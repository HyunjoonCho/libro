public void testTarArchiveInputStreamWithLargeUserId() {
    byte[] tarHeader = new byte[512];
    // Set name field: length should be 100 bytes
    System.arraycopy("testfile.txt".getBytes(), 0, tarHeader, 0, "testfile.txt".length());
    // Set uid field (offset 108, length 8 bytes) with a large user ID
    String largeUserId = "62410554";
    System.arraycopy(largeUserId.getBytes(), 0, tarHeader, 108, largeUserId.length());
    // Set other mandatory fields as necessary (like octal-chksum)
    // Initialize with spaces first
    Arrays.fill(tarHeader, 148, 156, (byte) ' ');
    int checksum = 0;
    for (int i = 0; i < tarHeader.length; i++) {
        checksum += 255 & tarHeader[i];
    }
    // Fill checksum field
    System.arraycopy(String.format("%06o\0 ", checksum).getBytes(), 0, tarHeader, 148, 8);

    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(tarHeader);
    TarArchiveInputStream tarInputStream = new TarArchiveInputStream(byteArrayInputStream);

    try {
        TarArchiveEntry entry = tarInputStream.getNextTarEntry();
        assertNotNull(entry);
    } catch (IOException e) {
        fail("Exception should not be thrown: " + e.getMessage());
    }
}