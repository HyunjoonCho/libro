public void testFractionPercentageValueOverflow() {
    int largeNumerator = Integer.MAX_VALUE / 50;  // This will cause overflow when multiplied by 100
    Fraction fraction = new Fraction(largeNumerator, 1);  // Fraction value is comfortably below Integer.MAX_VALUE
    double percentage = fraction.percentageValue(); // Triggers overflow in current faulty implementation

    // Calculate expected golden value without risk of overflow
    double expectedPercentage = ((double)largeNumerator) * 100.0;
    
    // Test that the method corrects handles large numerators and properly gives valid results without overflow
    assertEquals(expectedPercentage, percentage, 1e-10);
}