
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.Jsoup;
import org.junit.Test;

import static org.junit.Assert.*;

public class SiblingElementsTest {

    @Test
    public void testSiblingMethodsWithNoParent() {
        // Create a standalone element without a parent document or parent element
        Element element = new Element("div");
        
        try {
            // Attempt to get the next sibling of the element with no parent
            Element nextSibling = element.nextElementSibling();
            assertNull(nextSibling);
        } catch (NullPointerException e) {
            fail("nextElementSibling() should not throw a NullPointerException");
        }

        try {
            // Attempt to get the previous sibling of the element with no parent
            Element previousSibling = element.previousElementSibling();
            assertNull(previousSibling);
        } catch (NullPointerException e) {
            fail("previousElementSibling() should not throw a NullPointerException");
        }

        try {
            // Attempt to get sibling elements of the element with no parent
            int siblingSize = element.siblingElements().size();
            assertEquals(0, siblingSize);
        } catch (NullPointerException e) {
            fail("siblingElements() should not throw a NullPointerException");
        }
    }
}
