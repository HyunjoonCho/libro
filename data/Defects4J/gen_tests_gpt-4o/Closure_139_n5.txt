
import org.junit.Test;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

import static org.junit.Assert.*;

public class FunctionRedefinitionTest {

    @Test
    public void testFunctionRedefinition() {
        // Use JavaScript engine
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("JavaScript");

        // JavaScript code to be tested
        String script =
                "function assert(b) {if (!b) throw 'error';}\n" +
                "assert(f() === 1);\n" +
                "var f = function() {return 2;};\n" +
                "try {\n" +
                "    assert(f() === 2);\n" +
                "    function f() {return 1;}\n" +
                "    assert(f() === 2);\n" + // the expected assertion, f is expected to be 2
                "} catch (e) {\n" +
                "    print(e);\n" +
                "    throw e;\n" + 
                "}";

        try {
            engine.eval(script); // Evaluate the script
        } catch (ScriptException e) {
            fail("Script execution threw an error when it shouldn't have: " + e.getMessage());
        }
    }
}
