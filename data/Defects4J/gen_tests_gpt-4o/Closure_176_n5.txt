
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Scriptable;
import org.junit.Test;

import static org.junit.Assert.*;

public class ClosureCompilerTest {

    @Test
    public void testNullPointerWarning() {
        // JavaScript code to test
        String script = ""
            + "/**\n"
            + " * @constructor\n"
            + " */\n"
            + "function MyClass() {\n"
            + "    this.value = 1;\n"
            + "}\n"
            + "\n"
            + "MyClass.prototype.show = function() {\n"
            + "    return this.value;\n"
            + "};\n"
            + "\n"
            + "/**\n"
            + " * @type {MyClass}\n"
            + " */\n"
            + "var x = null;\n"
            + "var output = x.show();\n";

        // Initialize JS context and scope
        Context context = Context.enter();
        Scriptable scope = context.initStandardObjects();

        try {
            // Execute script
            context.evaluateString(scope, script, "testScript", 1, null);
            fail("Expected a JavaScript error due to calling a method on null");
        } catch (Exception e) {
            // Expect a NullPointer error because `x` is null
            assertTrue(e.getMessage().contains("TypeError: Cannot call method \"show\" of null"));
        } finally {
            Context.exit();
        }
    }
}
