
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

@JsonIgnoreProperties("cause")
class MyException extends RuntimeException {
    private String message;

    public MyException() {
        // Default constructor
    }

    public MyException(String message) {
        super(message);
        this.message = message;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }
}

public class MyExceptionTest {

    @Test
    public void testExceptionDeserializationWithIgnoreProperties() throws JsonProcessingException {
        String json = "{\"message\":\"Testing exception\", \"cause\":\"Ignore this cause\"}";

        // Configure the ObjectMapper as needed
        ObjectMapper mapper = new ObjectMapper();

        try {
            MyException exception = mapper.readValue(json, MyException.class);
        } catch (IllegalArgumentException e) {
            // This is where the issue is expected to arise on GAE
            assertEquals("Expected no IllegalAccessException due to cause property", 
                         "java.lang.IllegalAccessException", e.getCause().getClass().getName());
        }
    }
}
