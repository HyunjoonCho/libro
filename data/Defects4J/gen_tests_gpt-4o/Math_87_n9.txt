
import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.optim.linear.SimplexTableau;
import org.apache.commons.math3.optim.linear.LinearObjectiveFunction;
import org.apache.commons.math3.optim.linear.LinearConstraint;
import org.apache.commons.math3.optim.linear.Relationship;
import org.apache.commons.math3.optim.PointValuePair;

import java.util.ArrayList;
import java.util.Collection;

public class SimplexTableauTest {

    @Test
    public void testBasicVariableDetection() {
        // Define the linear objective function: maximize 3x + 2y
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 3, 2 }, 0);

        // Define constraints: x + y <= 4
        Collection<LinearConstraint> constraints = new ArrayList<>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.LEQ, 4));

        // Create the SimplexTableau
        SimplexTableau tableau = new SimplexTableau(f, constraints, SimplexTableau.DEFAULT_EPSILON, false, 0, 1);

        // Solve the problem to get the solution
        PointValuePair solution = tableau.getSolution();
        
        // Expected quantities for the basic variables:
        int xRow = tableau.getBasicRow(0); // x corresponds to column 0
        int yRow = tableau.getBasicRow(1); // y corresponds to column 1

        // Check that x and y are basic variables and their coefficients are 1 in the tableau
        assertEquals("x should be a basic variable", 1, tableau.getEntry(xRow, tableau.getWidth() - 1), 1e-6);
        assertEquals("y should be a basic variable", 1, tableau.getEntry(yRow, tableau.getWidth() - 1), 1e-6);
    }
}
