
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipFile;
import org.junit.Test;

import java.io.File;
import java.io.IOException;
import java.util.Iterator;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class UnixSymlinkTest {

    @Test
    public void testIsUnixSymlink() throws IOException {
        // Use a pre-existing "invalid-entry.jar" created for the test containing the described entries
        File jarFile = new File("path/to/invalid-entry.jar");

        try (ZipFile zipFile = new ZipFile(jarFile)) {
            assertSymlinkStatus(zipFile, "META-INF/", false);
            assertSymlinkStatus(zipFile, "META-INF/maven/", false);
        }
    }

    private void assertSymlinkStatus(ZipFile zipFile, String entryName, boolean expectedSymlinkStatus) {
        Iterator<ZipArchiveEntry> entries = zipFile.getEntriesInPhysicalOrder(entryName).iterator();
        if (entries.hasNext()) {
            ZipArchiveEntry entry = entries.next();
            System.out.printf("%-17s: symlink:%-5s - unixMode:%s%n", entryName, entry.isUnixSymlink(), entry.getUnixMode());
            assertFalse("Entry " + entryName + " should not be a symlink", entry.isUnixSymlink());
        }
    }
}
