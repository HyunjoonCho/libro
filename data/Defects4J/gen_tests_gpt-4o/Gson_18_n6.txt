
import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;
import org.junit.Test;
import java.util.List;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class GsonWildcardDeserializationTest {

    // Models
    class BigClass {
        Map<String, ? extends List<SmallClass>> inBig;
    }

    class SmallClass {
        String inSmall;
    }

    @Test(expected = ClassCastException.class)
    public void testGsonDeserializesWildcardsToLinkedHashMap() {
        String json = "{ \"inBig\": { \"key\": [ { \"inSmall\": \"hello\" } ] } }";

        // Deserialize JSON to BigClass
        BigClass bigClassInstance = new Gson().fromJson(json, BigClass.class);

        // This will trigger the ClassCastException
        SmallClass small = bigClassInstance.inBig.get("key").get(0);

        // But to verify that we've succeeded in parsing correctly when there's no error, we'd expect:
        // assertEquals("hello", small.inSmall);
    }
}
