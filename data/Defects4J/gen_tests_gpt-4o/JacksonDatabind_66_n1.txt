public void testCustomEnumKeyDeserializer() throws IOException {
    String json = "{\"someMap\": {\"FOO\": \"bar\"}}";
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule simpleModule = new SimpleModule();
    simpleModule.addKeyDeserializer(SuperTypeEnum.class, new KeyDeserializer() {
        @Override
        public Object deserializeKey(String key, DeserializationContext ctxt) throws IOException {
            JsonParser parser = ctxt.getParser();
            if (parser != null && !parser.isClosed()) {
                return SuperTypeEnum.valueOf(key);
            }
            throw new IllegalStateException("Parser should not be null or closed");
        }
    });
    mapper.registerModule(simpleModule);

    SuperType superType = mapper.readValue(json, SuperType.class);
    assertEquals("Deserialized someMap.FOO should equal bar", "bar", superType.getSomeMap().get(SuperTypeEnum.FOO));
}