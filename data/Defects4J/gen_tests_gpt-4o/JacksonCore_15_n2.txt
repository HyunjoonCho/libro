public void testAllowMultipleMatches() {
    String json = "{\"field1\": \"value1\", \"field2\": \"value2\", \"field3\": \"value3\"}";

    JsonNodeFactory nodeFactory = JsonNodeFactory.instance;
    ObjectNode schemaNode = nodeFactory.objectNode();
    schemaNode.set("field1", nodeFactory.textNode("value1"));
    schemaNode.set("field2", nodeFactory.textNode("value2"));

    FilteringParserDelegate parser = new FilteringParserDelegate(
        new JsonFactory().createParser(json),
        new TokenFilter() {
            @Override
            public TokenFilter includeProperty(String name) {
                return _allowMultipleMatches ? TokenFilter.INCLUDE_ALL : null;
            }
        },
        false,
        false
    );

    StringBuilder result = new StringBuilder();
    while (parser.nextToken() != null) {
        result.append(parser.getText()).append(" ");
    }

    assertEquals("value1 value2 ", result.toString().trim());
}