
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipFile;
import org.junit.Test;

import java.io.File;
import java.io.IOException;
import java.nio.file.Paths;

import static org.junit.Assert.assertFalse;

public class ZipEntryTest {

    private static final String INVALID_JAR_PATH = "path/to/your/invalid-entry.jar";

    @Test
    public void testIsUnixSymlinkForBrokenEntry() throws IOException {
        try (ZipFile zipFile = new ZipFile(new File(INVALID_JAR_PATH))) {
            validateEntry(zipFile, "META-INF/");
            validateEntry(zipFile, "META-INF/maven/");
        }
    }

    private void validateEntry(ZipFile zipFile, String entryName) {
        ZipArchiveEntry entry = zipFile.getEntry(entryName);
        if (entry != null) {
            System.out.printf("%-17s: symlink:%-5s - unixMode:%s%n", entryName, entry.isUnixSymlink(), entry.getUnixMode());
            if ("META-INF/maven/".equals(entryName)) {
                assertFalse("The entry should not be considered a symlink", entry.isUnixSymlink());
            }
        } else {
            throw new RuntimeException("Zip entry not found: " + entryName);
        }
    }
}
