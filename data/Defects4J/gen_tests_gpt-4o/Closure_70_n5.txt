public void testUnexpectedTypedCoverage() {
    String jsCode = "/*global window*/\n" +
                    "/*jslint sub: true*/\n" +
                    "/**\n" +
                    " * @constructor\n" +
                    " * @param {!Element} element\n" +
                    " */\n" +
                    "function Example(element) {\n" +
                    " /**\n" +
                    "  * @param {!string} ns\n" +
                    "  * @param {!string} name\n" +
                    "  * @return {undefined}\n" +
                    "  */\n" +
                    " this.appendElement = function appendElement(ns, name) {\n" +
                    " var e = element.ownerDocument.createElementNS(ns, name);\n" +
                    " element.appendChild(e);\n" +
                    " };\n" +
                    "}\n" +
                    "window['Example'] = Example;";
                    
    // Assume compile.js is a method that compiles JS code and returns a CoverageResult object with the expected properties.
    CoverageResult result = compile(jsCode);
    
    assertEquals(0, result.getErrors());
    assertEquals(0, result.getWarnings());
    assertEquals(100.0, result.getTypedPercentage(), 0.1);
}