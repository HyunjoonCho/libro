
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidFormatException;
import com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.assertEquals;

public class InvalidFormatExceptionTest {

    static class Data {
        public List<Integer> numbers;
    }

    @Test
    public void testInvalidFormatExceptionIndex() {
        String json = "{\"numbers\": [1, 2, \"three\", 4]}";
        ObjectMapper mapper = new ObjectMapper();

        try {
            mapper.readValue(json, Data.class);
        } catch (InvalidFormatException e) {
            // Verify that the index is set correctly
            assertEquals("Index should be 2 for the invalid item", 2, getReferenceIndex(e));
        } catch (Exception e) {
            // In case another exception type is thrown
            e.printStackTrace();
        }
    }

    // Utility method to extract the index from e.getPath() since e.getIndex() is -1
    private int getReferenceIndex(InvalidFormatException e) {
        return e.getPath().stream()
                .filter(ref -> ref.getIndex() != -1)
                .findFirst()
                .map(ref -> ref.getIndex())
                .orElse(-1);
    }
}
