public void testPolymorphicTypeIdCompatibility() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.activateDefaultTyping(
        LaissezFaireSubTypeValidator.instance, 
        ObjectMapper.DefaultTyping.NON_FINAL
    );

    String json = "{\"@type\":\"java.util.ArrayList\", \"@value\": [1, 2, 3]}";

    try {
        // Attempt to deserialize into a HashSet, which should fail due to type incompatibility
        mapper.readValue(json, HashSet.class);
        fail("Expected a JsonMappingException due to type incompatibility");
    } catch (JsonMappingException e) {
        // Expected exception, indicating a failure in type compatibility check
        assertTrue(e.getMessage().contains("Cannot construct instance of `java.util.HashSet`"));
    } catch (Exception e) {
        fail("Expected a JsonMappingException, but got: " + e.getClass().getName());
    }
}