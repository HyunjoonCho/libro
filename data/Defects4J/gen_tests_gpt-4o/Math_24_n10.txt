public void testBrentOptimizerBestPoint() {
    UnivariateFunction function = new UnivariateFunction() {
        public double value(double x) {
            return (x - 2) * (x - 2);
        }
    };

    BrentOptimizer optimizer = new BrentOptimizer(1e-10, 1e-14);
    UnivariatePointValuePair result = optimizer.optimize(new MaxEval(1000),
                                                         new UnivariateObjectiveFunction(function),
                                                         GoalType.MINIMIZE,
                                                         new SearchInterval(-5, 5));

    double bestPoint = result.getPoint();
    double bestValue = result.getValue();

    // Manually verify the optimal point
    double manuallyEvaluatedBestValue = function.value(bestPoint);

    // Check that the optimizer's reported best point truly corresponds to the minimal function value
    assertEquals(manuallyEvaluatedBestValue, bestValue, 1e-10);
    assertEquals(2.0, bestPoint, 1e-10);
}