
import org.joda.time.Days;
import org.joda.time.LocalDate;
import org.joda.time.MonthDay;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.junit.Test;
import static org.junit.Assert.*;

public class DaysBetweenTest {

    @Test
    public void testDaysBetweenLocalDate() {
        LocalDate january12012 = new LocalDate(2012, 1, 1);
        LocalDate february292012 = new LocalDate(2012, 2, 29);
        
        assertEquals(59, Days.daysBetween(january12012, february292012).getDays());
    }

    @Test
    public void testDaysBetweenMonthDay() {
        MonthDay january1 = new MonthDay(1, 1);
        MonthDay february29 = new MonthDay(2, 29);
        
        try {
            int daysBetween = Days.daysBetween(january1, february29).getDays();
            fail("Expected an IllegalFieldValueException to be thrown");
        } catch (org.joda.time.IllegalFieldValueException e) {
            assertTrue(e.getMessage().contains("Value 29 for dayOfMonth must be in the range [1,28]"));
        }
    }
}
