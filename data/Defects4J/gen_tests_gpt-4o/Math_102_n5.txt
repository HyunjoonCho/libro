
import org.apache.commons.math3.stat.inference.ChiSquareTest;
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class ChiSquareTestBugReproduction {

    @Test
    public void testChiSquareWithRescaling() {
        ChiSquareTest testStatistic = new ChiSquareTest();

        long[] observed1 = { 500, 623, 72, 70, 31 };
        double[] expected1 = { 485, 541, 82, 61, 37 };
        
        // Calculate the sum of observed and expected
        long sumObserved = 0;
        double sumExpected = 0;
        for (int i = 0; i < observed1.length; i++) {
            sumObserved += observed1[i];
            sumExpected += expected1[i];
        }
        
        // Rescale the expected values so that their sum matches the sum of observed values
        double[] rescaledExpected = new double[expected1.length];
        for (int i = 0; i < expected1.length; i++) {
            rescaledExpected[i] = expected1[i] * ((double) sumObserved / sumExpected);
        }
        
        double chiSquareStatistic = testStatistic.chiSquare(rescaledExpected, observed1);
        double chiSquarePValue = testStatistic.chiSquareTest(rescaledExpected, observed1);
        
        assertEquals("chi-square test statistic with rescaling", 9.0233, chiSquareStatistic, 1E-4);
        assertEquals("chi-square p-value with rescaling", 0.06052, chiSquarePValue, 1E-5);
    }
}
