js
/**
 * Test to reproduce the type error in function `func`.
 */
function testFuncReturnType() {
    /**
     * @returns {{prop1: (Object|undefined), prop2: (string|undefined), prop3: (string|undefined)}}
     */
    function func(a, b) {
        var results;
        if (a) {
            results = {};
            results.prop1 = {a: 3};
        }
        if (b) {
            results = results || {};
            results.prop2 = 'prop2';
        } else {
            results = results || {};
            results.prop3 = 'prop3';
        }
        return results;
    }

    // Test case 1: when both a and b are true
    var result1 = func(true, true);
    console.assert(typeof result1 === 'object' && result1.prop1 !== undefined && result1.prop2 === 'prop2', 'Test Case 1 Failed');

    // Test case 2: when a is true and b is false
    var result2 = func(true, false);
    console.assert(typeof result2 === 'object' && result2.prop1 !== undefined && result2.prop3 === 'prop3', 'Test Case 2 Failed');

    // Test case 3: when a is false and b is true
    var result3 = func(false, true);
    console.assert(typeof result3 === 'object' && result3.prop1 === undefined && result3.prop2 === 'prop2', 'Test Case 3 Failed');

    // Test case 4: when both a and b are false
    var result4 = func(false, false);
    console.assert(typeof result4 === 'object' && result4.prop1 === undefined && result4.prop3 === 'prop3', 'Test Case 4 Failed');

    console.log("All test cases passed.");
}

// Run the test
testFuncReturnType();
