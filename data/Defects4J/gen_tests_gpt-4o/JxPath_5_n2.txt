
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathException;
import org.junit.Test;
import static org.junit.Assert.*;

public class JXPathBugTest {

    @Test
    public void testUnionOfVariableAndNode() {
        // Setup a simple XML-like structure
        // In a real scenario, this might be a proper XML document
        TestBean root = new TestBean();
        
        // Initialize JXPathContext and set a variable
        JXPathContext context = JXPathContext.newContext(root);
        // Set a dummy variable "$var"
        context.getVariables().declareVariable("var", new TestBean.ChildBean());
        
        // Exception is expected when evaluating the problematic XPath expression
        try {
            context.selectNodes("$var | /main/a");
            fail("Expected JXPathException due to comparison of pointers from different trees");
        } catch (JXPathException e) {
            assertTrue(e.getMessage().contains("Cannot compare pointers that do not belong to the same tree"));
        }
    }
    
    public static class TestBean {
        public static class ChildBean {
            // Potential child elements
            // In a complete test, you'd populate these with more specific data
        }

        public ChildBean getMain() {
            return new ChildBean();
        }
    }
}
