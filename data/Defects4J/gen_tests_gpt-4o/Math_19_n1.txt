public void testCMAESOptimizerWithWideBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer(1000, 0.01, true, 0, 0, null, null, 0); 

    MultivariateFunction fitnessFunction = new MultivariateFunction() {
        public double value(double[] point) {
            for (double val : point) {
                assertFalse("Parameter should not be NaN", Double.isNaN(val));
            }
            return 0.0;
        }
    };

    double[] lowerBound = new double[] { -Double.MAX_VALUE, -Double.MAX_VALUE };
    double[] upperBound = new double[] { Double.MAX_VALUE, Double.MAX_VALUE };
    
    optimizer.optimize(new MaxEval(1000),
                       new ObjectiveFunction(fitnessFunction),
                       GoalType.MINIMIZE,
                       new InitialGuess(new double[] { 0.0, 0.0 }),
                       new SimpleBounds(lowerBound, upperBound),
                       new CMAESOptimizer.Sigma(new double[] { 1.0, 1.0 }));
}