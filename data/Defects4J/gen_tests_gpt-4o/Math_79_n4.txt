
import static org.junit.Assert.assertEquals;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import org.apache.commons.math3.ml.clustering.Cluster;
import org.apache.commons.math3.ml.clustering.EuclideanIntegerPoint;
import org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer;
import org.junit.Test;

public class ClusterAnalysisNPEReproductionTest {

    @Test
    public void testPerformClusterAnalysis_NPE() {
        // Initialize KMeansPlusPlusClusterer with a random seed
        KMeansPlusPlusClusterer<EuclideanIntegerPoint> transformer = new KMeansPlusPlusClusterer<>(
            1, 1000, new Random(1746432956321L));
        
        // Prepare input data points
        EuclideanIntegerPoint[] points = new EuclideanIntegerPoint[] {
            new EuclideanIntegerPoint(new int[] { 1959, 325100 }),
            new EuclideanIntegerPoint(new int[] { 1960, 373200 })
        };
        
        // Attempt clustering
        List<Cluster<EuclideanIntegerPoint>> clusters = transformer.cluster(Arrays.asList(points));
        
        // Assert expected outcome
        assertEquals(1, clusters.size());
    }
}

