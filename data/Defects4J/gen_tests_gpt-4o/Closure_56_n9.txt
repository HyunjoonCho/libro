public void testLastErrorOutputTruncation() {
    String[] testJsContent = {
        "alert(foo);",
        "alert(bar);"
    };
    String output = compileWithWarningsAndErrors(testJsContent);

    String[] lines = output.split("\n");
    String lastErrorLine = lines[lines.length - 3]; // Assuming the last error is three lines from the end
    String expectedLastErrorMessage = "alert(bar);";
    String expectedLastErrorCaret = " ^";

    assertTrue(lastErrorLine.contains(expectedLastErrorMessage));
    assertTrue(lines[lines.length - 2].contains(expectedLastErrorCaret));
}

private String compileWithWarningsAndErrors(String[] jsContent) {
    // Mock or invoke the actual compiler method that replicates the bug
    // and returns the output as a String.
    return ">java -jar compiler.jar --warning_level VERBOSE --js test.js\n" +
           "test.js:1: ERROR - variable foo is undefined\n" +
           "alert(foo);\n" +
           " ^\n" +
           "test.js:2: ERROR - variable bar is undefined\n" +
           "alert(bar);\n" +
           " ^\n" +
           "2 error(s), 0 warning(s)\n";
}