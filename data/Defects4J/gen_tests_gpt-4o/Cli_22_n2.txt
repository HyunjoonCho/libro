
import org.apache.commons.cli.*;

public class PosixParserTest {

    public void testPosixParserTargetOption() {
        // Define options
        Options options = new Options();
        Option generateTarget = new Option("t", "target", true, "Generate files for the specified target machine");
        options.addOption(generateTarget);

        // Create a parser
        CommandLineParser parser = new PosixParser();
        CommandLine parsedLine = null;
        
        String[] argsWithShortOption = {"-t", "foobar.com"};
        String[] argsWithLongOption = {"-target", "foobar.com"};

        try {
            parsedLine = parser.parse(options, argsWithShortOption);
            String expected = "foobar.com";
            String actual = parsedLine.getOptionValue("t");
            System.out.println("processing selected target: " + actual);
            assertEquals("Processing with short option failed", expected, actual);
        } catch (ParseException e) {
            fail("Parsing failed for short option: " + e.getMessage());
        }
        
        try {
            parsedLine = parser.parse(options, argsWithLongOption);
            String expected = "foobar.com";
            String actual = parsedLine.getOptionValue("t");
            System.out.println("processing selected target: " + actual);
            assertEquals("Processing with long option failed", expected, actual);
        } catch (ParseException e) {
            fail("Parsing failed for long option: " + e.getMessage());
        }
    }

    private void assertEquals(String message, String expected, String actual) {
        if (!expected.equals(actual)) {
            throw new AssertionError(message + " - Expected: " + expected + " but was: " + actual);
        }
    }
    
    private void fail(String message) {
        throw new AssertionError(message);
    }

    public static void main(String[] args) {
        PosixParserTest test = new PosixParserTest();
        test.testPosixParserTargetOption();
    }
}
