
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

public class TarArchiveLongDirectoryNameTest {

    @Test(expected = IOException.class)
    public void testLongDirectoryNameInTarArchive() throws IOException {
        // Create a long directory name
        String longDirectoryName = "./PaxHeaders.X/"
                + "layers/openstreetmap__osm.disy.net/.tiles/1.0.0/openstreetmap__osm.disy.net/default/"
                + "this_is_a_very_long_directory_name_that_exceeds_the_100_byte_limit_of_tar"
                + "_and_is_intended_to_test_the_error_when_writing_pax_headers/";

        // Initialize a TarArchiveOutputStream
        try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
             TarArchiveOutputStream tarOutputStream = new TarArchiveOutputStream(byteArrayOutputStream)) {

            // Create a TarArchiveEntry with the long directory name
            TarArchiveEntry entry = new TarArchiveEntry(longDirectoryName);

            // Set entry as a directory
            entry.setSize(0);
            entry.setMode(TarArchiveEntry.DEFAULT_DIR_MODE);

            // Attempt to put the directory entry into the TAR archive
            tarOutputStream.putArchiveEntry(entry);

            // Finish archive entry writing
            tarOutputStream.closeArchiveEntry();
        }
    }
}
