public void testMultiKeySubclassSerialization() throws IOException, ClassNotFoundException {
    class MultiKey2<A, B> extends MultiKey<A> {
        private static final long serialVersionUID = 1928896152249821416L;

        public MultiKey2(A key1, B key2) {
            super(key1, key2);
        }

        public A getFirst() {
            return (A) getKey(0);
        }

        public B getSecond() {
            return (B) getKey(1);
        }
    }

    MultiKey2<String, String> originalKey = new MultiKey2<>("foo", "bar");
    ByteArrayOutputStream byteOut = new ByteArrayOutputStream();
    ObjectOutputStream out = new ObjectOutputStream(byteOut);
    out.writeObject(originalKey);
    out.close();

    byte[] serializedData = byteOut.toByteArray();
    ByteArrayInputStream byteIn = new ByteArrayInputStream(serializedData);
    ObjectInputStream in = new ObjectInputStream(byteIn);
    MultiKey2<String, String> deserializedKey = (MultiKey2<String, String>) in.readObject();

    assertEquals("hashCode should be equal after deserialization", originalKey.hashCode(), deserializedKey.hashCode());
    assertEquals("first key should be the same", originalKey.getFirst(), deserializedKey.getFirst());
    assertEquals("second key should be the same", originalKey.getSecond(), deserializedKey.getSecond());
}