script
import static org.junit.Assert.fail;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.jscomp.Compiler;
import org.junit.Test;

public class VariableInitializationTest {

    @Test
    public void testNullPointerWarning() {
        String code = ""
                + "/**\n"
                + " * @constructor\n"
                + " */\n"
                + "function MyClass() {\n"
                + "    this.value = 1;\n"
                + "}\n"
                + "\n"
                + "MyClass.prototype.show = function() {\n"
                + "    window.console.log(this.value)\n"
                + "}\n"
                + "\n"
                + "/**\n"
                + " * @type {MyClass}\n"
                + " */\n"
                + "var x = null;\n"
                + "x.show();\n";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // Enable type checking
        options.setCheckTypes(true);
        
        // Compile the code
        Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test.js", code), options);

        // Check for errors
        boolean errorFound = false;
        for (JSError error : result.errors) {
            if (error.getDescription().contains("possible null pointer")) {
                errorFound = true;
                break;
            }
        }
        
        if (!errorFound) {
            fail("Expected null pointer warning but none was found.");
        }
    }
}
