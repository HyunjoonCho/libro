
import org.joda.time.Days;
import org.joda.time.LocalDate;
import org.joda.time.MonthDay;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class DaysBetweenLeapYearTest {

    @Test
    public void testDaysBetweenWithLocalDate() {
        final LocalDate january12012 = new LocalDate(2012, 1, 1);
        final LocalDate february292012 = new LocalDate(2012, 2, 29);

        // Expect 59 days between January 1, 2012, and February 29, 2012
        assertEquals(59, Days.daysBetween(january12012, february292012).getDays());
    }

    @Test
    public void testDaysBetweenWithMonthDay() {
        try {
            final MonthDay january1 = new MonthDay(1, 1);
            final MonthDay february29 = new MonthDay(2, 29);

            // This will fail due to the exception when handling February 29 with MonthDay
            Days.daysBetween(january1, february29).getDays();
            fail("Expected an IllegalFieldValueException because February 29 is not a valid month-day in a non-leap year");
        } catch (org.joda.time.IllegalFieldValueException e) {
            assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
        }
    }
}
