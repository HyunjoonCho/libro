public void testDeserializeNullForNestedAtomicReference() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper();
    ObjectReader objectReader = objectMapper.readerFor(MyBean.class);

    MyBean intRef = objectReader.readValue(" {\"refRef\": 2 } ");
    assertNotNull(intRef.getRefRef()); // succeeds
    assertNotNull(intRef.getRefRef().get()); // succeeds
    assertEquals(Integer.valueOf(2), intRef.getRefRef().get().get()); // succeeds

    MyBean nullRef = objectReader.readValue(" {\"refRef\": null } ");
    assertNotNull(nullRef.getRefRef()); // succeeds
    assertNotNull(nullRef.getRefRef().get()); // fails, should provide a nested AtomicReference
    assertNull(nullRef.getRefRef().get().get()); // fails, should be null
}