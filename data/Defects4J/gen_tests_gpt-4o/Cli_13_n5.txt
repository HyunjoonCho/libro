
import org.apache.commons.cli.*;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class CommandLineTest {

    @Test
    public void testCommandLineOptionWithDefaultAndOverride() {
        // Create an Options object and set up an option with a default value
        Options options = new Options();
        Option option = Option.builder("option")
            .hasArg()
            .argName("value")
            .desc("An option with a default value")
            .build();

        options.addOption(option);

        // Simulate a command line with a default value
        CommandLineParser parser = new DefaultParser();
        CommandLine cmd;
        try {
            // First parse to set a default value
            cmd = parser.parse(options, new String[]{"--option", "defaultValue"});
            
            // Simulate overriding on the command line
            CommandLine overrideCmd = parser.parse(options, new String[]{"--option", "newValue"});

            // This assertion expects that the option should now be "newValue", not "defaultValue"
            assertEquals("newValue", overrideCmd.getOptionValue("option"), "The command line should allow overriding default value with provided value");

        } catch (ParseException e) {
            fail("Parsing failed: " + e.getMessage());
        }
    }
}
