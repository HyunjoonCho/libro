
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolver;

public class BrentSolverTest {

    public static void main(String[] args) {
        testBrentSolverWithZeroFunctionValue();
    }

    public static void testBrentSolverWithZeroFunctionValue() {
        UnivariateRealFunction function = new UnivariateRealFunction() {
            public double value(double x) {
                // Define the function f(x) = x + C, where C is a constant
                if (x == -100000.0) return 0;
                return x + 101945.04630982173;
            }
        };

        UnivariateRealSolver solver = new BrentSolver();
        double min = -100000.0;
        double max = Double.MAX_VALUE;

        try {
            double root = solver.solve(function, min, max);
            System.out.println("Root found: " + root);
        } catch (Exception e) {
            System.err.println("Exception occurred: " + e.getMessage());
        }
    }
}
