
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class NumberUtilsTest {

    @Test
    public void testCreateLongWithHexadecimal() {
        try {
            // This should work but will fail if hex number is not handled properly
            Long expected = Long.valueOf(0x100000000L); // A hex number larger than Integer.MAX_VALUE
            assertEquals(expected, NumberUtils.createLong("0x100000000"));
        } catch (NumberFormatException e) {
            // If it fails, there's an issue with handling long hex numbers
            fail("NumberUtils.createLong() failed to handle long hex numbers: " + e.getMessage());
        }
    }

    @Test
    public void testCreateNumberWithHexadecimal() {
        try {
            // This should interpret the string as a Long when it's beyond Integer range
            Long expected = Long.valueOf(0x100000000L); // A hex number larger than Integer.MAX_VALUE
            assertEquals(expected, NumberUtils.createNumber("0x100000000"));
        } catch (NumberFormatException e) {
            // If it fails, there's an issue with handling hex numbers in the createNumber method for larger numbers
            fail("NumberUtils.createNumber() failed to properly handle large hex numbers: " + e.getMessage());
        }
    }
}
