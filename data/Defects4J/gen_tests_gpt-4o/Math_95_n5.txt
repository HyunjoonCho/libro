
import org.apache.commons.math3.distribution.FDistribution;
import org.apache.commons.math3.exception.MathIllegalArgumentException;
import org.apache.commons.math3.exception.util.DummyLocalizable;
import org.apache.commons.math3.exception.util.LocalizedFormats;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class FDistributionTest {

    @Test
    public void testDenominatorDegreesOfFreedomLeadingToException() {
        try {
            // Create an FDistribution with denominator degrees of freedom set to 2
            FDistribution fDistribution = new FDistribution(10.0, 2.0);
            // Attempt to calculate the cumulative probability with an alpha value of 0.95
            double lowerBound = fDistribution.inverseCumulativeProbability(0.05);
            double upperBound = fDistribution.inverseCumulativeProbability(0.95);
            fail("Expected a MathIllegalArgumentException due to an invalid initial domain.");
        } catch (MathIllegalArgumentException e) {
            // Verify the exception message
            assertEquals(new DummyLocalizable("Invalid endpoint parameters"), e.getSpecific());
            assertEquals(LocalizedFormats.INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS, e.getGeneral());
        }
    }
}
