
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.util.EnumMap;
import java.util.Map;

import static org.junit.Assert.assertTrue;

public class EnumMapJsonPropertyTest {

    // Define an enum with @JsonProperty values
    private enum Status {
        @JsonProperty("active_status") ACTIVE,
        @JsonProperty("inactive_status") INACTIVE
    }

    @Test
    public void testEnumMapSerialization() throws JsonProcessingException {
        // Initialize an EnumMap with the enum
        EnumMap<Status, String> statusMap = new EnumMap<>(Status.class);
        statusMap.put(Status.ACTIVE, "Active state");
        statusMap.put(Status.INACTIVE, "Inactive state");

        // Serialize the EnumMap using Jackson
        ObjectMapper objectMapper = new ObjectMapper();
        String jsonOutput = objectMapper.writeValueAsString(statusMap);

        // Check the JSON output to see if keys use @JsonProperty values
        // The expected JSON keys should be "active_status" and "inactive_status"
        assertTrue(jsonOutput.contains("\"active_status\":\"Active state\""));
        assertTrue(jsonOutput.contains("\"inactive_status\":\"Inactive state\""));
    }
}
