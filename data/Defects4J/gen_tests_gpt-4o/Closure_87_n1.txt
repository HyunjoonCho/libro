
import static org.junit.Assert.fail;

import org.junit.Test;
import org.openqa.selenium.htmlunit.HtmlUnitDriver;
import org.openqa.selenium.By;

public class IE8CompatibleScriptTest {

    @Test
    public void testOnChangeHandlingInIE8() {
        HtmlUnitDriver driver = new HtmlUnitDriver(org.openqa.selenium.BrowserVersion.INTERNET_EXPLORER_8);
        driver.get("data:text/html,<html><head><script>" +
                // This is the behavior after the Closure Compiler minified the code.
                "var b = document.createElement('input'); " +
                "b.onchange = function(event) { console.log('Change event triggered'); }; " +
                "b.onchange && b.onchange({_extendedByPrototype: 'Prototype.emptyFunction', target: b});" +
                "</script></head><body></body></html>");

        // Although HtmlUnitDriver is running in Java, we mimic page behavior;
        // Real IE8 might not show the error directly, so Java cannot check it. 
        // This approach captures execution problems while simulating the environment.

        boolean isError = driver.findElements(By.tagName("html")).isEmpty(); 
        if (isError) {
            fail("Script caused an 'Object doesn't support this action' error in IE8 simulation");
        }
    }
}
