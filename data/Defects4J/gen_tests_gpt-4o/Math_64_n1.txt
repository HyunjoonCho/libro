public void testLevenbergMarquardtInconsistency() {
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    
    MultivariateVectorFunction model = point -> new double[] {
        10 * point[0] + 5 * point[1],
        8 * point[0] + 3 * point[1]
    };
    
    MultivariateMatrixFunction jacobian = point -> new double[][] {
        {10, 5},
        {8, 3}
    };
    
    double[] observations = new double[] {100, 80};
    double[] initialGuess = new double[] {1, 1};
    
    PointVectorValuePair result = optimizer.optimize(
        new MaxEval(1000),
        new ModelFunction(model),
        new ModelFunctionJacobian(jacobian),
        new Target(observations),
        new Weight(new double[] {1, 1}),
        new InitialGuess(initialGuess)
    );
    
    double[] point = result.getPoint();
    double[] values = result.getValue();
    
    double[] expectedValues = model.value(point);
    
    assertArrayEquals(expectedValues, values, 1e-6, "The result values do not match the expected values from the model.");
}