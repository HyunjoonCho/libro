
import com.google.gson.Gson;
import org.junit.Test;

import java.util.concurrent.ConcurrentNavigableMap;
import java.util.concurrent.ConcurrentSkipListMap;

import static org.junit.Assert.*;

public class GsonConcurrentNavigableMapTest {

    public static class PojoWithMap {
        private ConcurrentNavigableMap<String, String> map;

        public PojoWithMap() {
            map = new ConcurrentSkipListMap<>();
        }

        public ConcurrentNavigableMap<String, String> getMap() {
            return map;
        }

        public void setMap(ConcurrentNavigableMap<String, String> map) {
            this.map = map;
        }
    }

    @Test
    public void testConcurrentNavigableMapSerialization() {
        // Create the POJO with ConcurrentNavigableMap
        PojoWithMap original = new PojoWithMap();
        original.getMap().put("key1", "value1");
        original.getMap().put("key2", "value2");

        // Create Gson instance
        Gson gson = new Gson();

        // Serialize the object to a JSON string
        String json = gson.toJson(original);

        try {
            // Deserialize the JSON string back to an object
            PojoWithMap deserialized = gson.fromJson(json, PojoWithMap.class);

            // Verify that the deserialized object matches the original state
            assertNotNull(deserialized);
            assertEquals(original.getMap(), deserialized.getMap());
        } catch (IllegalArgumentException e) {
            fail("Deserialization threw IllegalArgumentException: " + e.getMessage());
        }
    }
}
