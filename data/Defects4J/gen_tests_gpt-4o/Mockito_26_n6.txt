
import static org.junit.Assert.assertNotNull;
import static org.mockito.Mockito.when;

import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class FinalFieldInjectionTest {

    public static class Dependency {
        public String getValue() {
            return "real value";
        }
    }

    public static class ClassWithFinalField {
        private final Dependency dependency;

        public ClassWithFinalField(Dependency dependency) {
            this.dependency = dependency;
        }

        public String callDependency() {
            return dependency.getValue();
        }
    }

    @Mock
    private Dependency mockDependency;

    @InjectMocks
    private ClassWithFinalField classWithFinalField;

    @Before
    public void setup() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testFinalFieldInjection() {
        when(mockDependency.getValue()).thenReturn("mocked value");

        // This will fail if @InjectMocks doesn't inject the mock into the final field
        assertNotNull("Dependency should be injected", classWithFinalField.callDependency());
        
        // Verifying if the injected dependency returns the mocked value
        assertEquals("mocked value", classWithFinalField.callDependency());
    }
}
