
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import java.util.Collections;

import static org.junit.Assert.fail;

public class ClosureCompilerTest {

    @Test
    public void testSoundManager2Compilation() {
        // Ideally, you would have soundmanager2-nodebug.js available as a String.
        // Assuming the content of soundmanager2-nodebug.js is loaded in the variable jsCode.
        String jsCode = "/* contents of soundmanager2-nodebug.js */";

        try {
            Compiler compiler = new Compiler();
            CompilerOptions options = new CompilerOptions();
            // Set the compilation level as described in the bug report
            CommandLineRunner.setOptionsFromFlags("--compilation_level=SIMPLE_OPTIMIZATIONS", options);

            // Create SourceFile from the JavaScript code
            SourceFile input = SourceFile.fromCode("soundmanager2-nodebug.js", jsCode);
            
            // Perform compilation
            compiler.compile(Collections.emptyList(), Collections.singletonList(input), options);

            if (compiler.hasErrors()) {
                compiler.getErrors().forEach(System.err::println);
                fail("Compiler encountered errors.");
            }
        } catch (Exception e) {
            fail("Compiler crashed with exception: " + e.getMessage());
        }
    }
}
