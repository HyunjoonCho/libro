
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;

public class BugReportTest {
    public static void main(String[] args) {
        String code = 
        "/** @param {string} x */\n" +
        "function g(x) {}\n" +
        "/** @param {undefined} x */\n" +
        "function f(x) {\n" +
        " if (x != undefined) { g(x); }\n" +
        "}";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setWarningLevel(com.google.javascript.jscomp.DiagnosticGroups.STRICT_MISSING_REQUIRE, com.google.javascript.jscomp.CheckLevel.WARNING);
        options.setWarningLevel(com.google.javascript.jscomp.DiagnosticGroups.CHECK_TYPES, com.google.javascript.jscomp.CheckLevel.WARNING);
        options.setWarningLevel(com.google.javascript.jscomp.DiagnosticGroups.DETERMINISTIC_TESTS, com.google.javascript.jscomp.CheckLevel.WARNING);
        options.setWarningLevel(com.google.javascript.jscomp.DiagnosticGroups.CONFORMANCE_VIOLATIONS, com.google.javascript.jscomp.CheckLevel.WARNING);

        Result result = compiler.compile(
            SourceFile.fromCode("externs.js", ""),
            SourceFile.fromCode("test.js", code),
            options
        );

        if (result.success) {
            System.out.println("Compilation succeeded.");
        } else {
            System.out.println("Compilation failed with errors:");
            result.errors.forEach(System.out::println);
        }
    }
}
