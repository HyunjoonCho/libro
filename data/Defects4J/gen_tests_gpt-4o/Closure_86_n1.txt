
import static org.junit.Assert.assertTrue;
import static org.mockito.Mockito.*;

import javax.swing.*;
import org.junit.Test;

public class SideEffectsAnalysisTest {

    @Test
    public void testFunctionCallWithSideEffects() {
        Foo foo = spy(new Foo());
        foo.setLocation("http://www.google.com/");

        // Verify that setLocation() was actually called, proving that it's not removed
        verify(foo, times(1)).setLocation("http://www.google.com/");

        // Verify that the location has been set correctly
        assertTrue("Location should be set to http://www.google.com/",
                   "http://www.google.com/".equals(foo.getLocation()));
    }

    // Simple Foo implementation for testing purposes
    public static class Foo {
        private String location;

        public Foo() {
            // Simulating the asynchronous call with Swing Timer
            Timer timer = new Timer(0, e -> {
                // This line simulates a side effect which, in an actual environment, would not be removed
                System.out.println("Changing window location to: " + this.location);
            });
            timer.setRepeats(false);
            timer.start();
        }

        public void setLocation(String loc) {
            this.location = loc;
        }

        public String getLocation() {
            return location;
        }
    }
}
