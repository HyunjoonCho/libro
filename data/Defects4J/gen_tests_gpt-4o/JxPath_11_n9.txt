
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.JXPathException;
import org.apache.commons.jxpath.xml.DOMParser;
import org.junit.Test;
import org.w3c.dom.Document;
import org.xml.sax.InputSource;

import javax.xml.parsers.DocumentBuilderFactory;
import java.io.StringReader;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class JXPathNamespaceTest {

    private static final String XML_STRING = 
        "<ElementA xmlns:A=\"http://example.com/A\" A:myAttr=\"Mytype\">" +
        "  <B:ElementB xmlns:B=\"http://example.com/B\">MY VALUE</B:ElementB>" +
        "</ElementA>";

    @Test
    public void testNamespaceAttributesHandling() {
        try {
            // Parse XML string to a DOM Document
            Document document = DocumentBuilderFactory.newInstance()
                    .newDocumentBuilder()
                    .parse(new InputSource(new StringReader(XML_STRING)));

            // Create JXPath context
            JXPathContext context = JXPathContext.newContext(document);

            // Register namespaces
            context.registerNamespace("A", "http://example.com/A");
            context.registerNamespace("B", "http://example.com/B");

            // Attempt to access the attribute using the registered namespace
            String myAttr = (String) context.getValue("/ElementA/@A:myAttr");

            // Verify if the correct value is retrieved without exception
            assertEquals("Mytype", myAttr);
        } catch (Exception e) {
            e.printStackTrace();
            fail("An exception was thrown: " + e.getMessage());
        }
    }
}
