
import org.junit.Test;
import java.util.ArrayList;
import java.util.List;
import javafx.util.Pair;

import static org.junit.Assert.*;

public class DiscreteDistributionTest {

    @Test
    public void testSampleMethodException() {
        List<Pair<Object, Double>> list = new ArrayList<>();
        list.add(new Pair<>(new Object() {}, 0.0));
        list.add(new Pair<>(new Object() {}, 1.0));

        DiscreteDistribution<Object> distribution = new DiscreteDistribution<>(list);

        try {
            distribution.sample(1);
            fail("Expected an ArrayStoreException to be thrown");
        } catch (ArrayStoreException e) {
            // Expected exception
        } catch (Exception e) {
            fail("Expected an ArrayStoreException, but got: " + e);
        }
    }
}

// Mock class for DiscreteDistribution with minimal implementation to replicate the reported bug.
class DiscreteDistribution<T> {
    private final List<Pair<T, Double>> singletons;

    public DiscreteDistribution(List<Pair<T, Double>> singletons) {
        this.singletons = singletons;
    }

    @SuppressWarnings("unchecked")
    public T[] sample(int sampleSize) {
        T[] result = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
        result[0] = singletons.get(1).getKey(); // This can cause ArrayStoreException
        return result;
    }
}
