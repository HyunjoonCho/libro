
import com.google.javascript.jscomp.*;

import org.junit.Test;

public class TypeRefinementBugTest {

    @Test(expected = IllegalArgumentException.class)
    public void testTypeRefiningThis() {
        // JavaScript code that causes the issue
        String jsCode = "function test() {" +
                        "  if (goog.isFunction(this)) {" +
                        "    console.log('This is a function');" +
                        "  }" +
                        "}";

        // Set up the compiler
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Add goog.isFunction definition to avoid "undefined function" error
        String externs = "var goog = {};" +
                         "goog.isFunction = function(x) { return typeof x === 'function'; };";

        // Compile the JavaScript code
        SourceFile extern = SourceFile.fromCode("externs", externs);
        SourceFile input = SourceFile.fromCode("test.js", jsCode);

        // This should throw an IllegalArgumentException
        Result result = compiler.compile(extern, input, options);

        // We expect an exception to be thrown, so the result should not indicate success
        assertFalse(result.success);
    }
}
