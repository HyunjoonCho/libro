
import static org.junit.Assert.assertEquals;

public class JavaScriptCompressorTest {

    public String compressJavaScript(String code) {
        // Mocked compression logic
        // Simulating the bug: incorrectly removing "each" from "for each"
        code = code.replace("for each (", "for (");
        return code;
    }

    @org.junit.Test
    public void testForEachKeywordPreserved() {
        // Original JavaScript code before compression
        String originalCode = "contactcenter.screenpop.updatePopStatus = function(stamp, status) {\n" +
                "  for each ( var curTiming in this.timeLog.timings ) {\n" +
                "    if ( curTiming.callId == stamp ) {\n" +
                "      curTiming.flag = status;\n" +
                "      break;\n" +
                "    }\n" +
                "  }\n" +
                "};";

        // Compress the JavaScript code
        String compressedCode = compressJavaScript(originalCode);

        // Expected JavaScript code after compression
        String expectedCompressedCode = "contactcenter.screenpop.updatePopStatus=function(stamp,status){for each(var curTiming in this.timeLog.timings)if(curTiming.callId==stamp){curTiming.flag=status;break}};";

        // Assert that the compressed code matches the expected code
        assertEquals("The 'each' keyword should be preserved during compression.", expectedCompressedCode, compressedCode);
    }
}
