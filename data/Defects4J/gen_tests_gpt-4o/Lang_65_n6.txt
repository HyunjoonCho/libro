
import static org.junit.Assert.assertEquals;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;
import org.apache.commons.lang3.time.DateUtils;
import org.junit.Test;

public class DateUtilsDSTTest {

    @Test
    public void testTruncateDuringDSTSwitch() {
        // Set the time zone to Mountain Daylight Time (MDT)
        TimeZone tz = TimeZone.getTimeZone("America/Denver");

        // Calendar set for 2004-10-31 01:00:00 MDT
        Calendar cal = Calendar.getInstance(tz);
        cal.clear();
        cal.set(2004, Calendar.OCTOBER, 31, 1, 0, 0);

        // Get the Date representation; MST begins at this timestamp
        Date oct31_01MDT = cal.getTime();

        // Truncate the date to HOUR_OF_DAY and check for correctness
        Date result = DateUtils.truncate(oct31_01MDT, Calendar.HOUR_OF_DAY);

        // Assert that truncation does not lead to undesired time shift due to DST
        assertEquals("Truncated date should match the original date accounting for DST", oct31_01MDT, result);
    }
}
