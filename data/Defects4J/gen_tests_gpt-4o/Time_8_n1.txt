
import org.joda.time.DateTimeZone;
import org.junit.Test;
import static org.junit.Assert.*;

public class DateTimeZoneTest {

    @Test
    public void testNegativeOffsetLessThanOneHour() {
        try {
            // Attempt to create a timezone with a negative offset of 0 hours and -30 minutes
            DateTimeZone timeZone = DateTimeZone.forOffsetHoursMinutes(0, -30);
            fail("Expected IllegalArgumentException for offset < -1 hour not thrown");
        } catch (IllegalArgumentException e) {
            // Expected exception since the current method implementation does not support this
            assertTrue("Exception message should mention minutes", e.getMessage().contains("Minutes out of range"));
        }

        // Correct usage with forOffsetMillis() as a workaround
        DateTimeZone timeZoneValid = DateTimeZone.forOffsetMillis(-30 * 60 * 1000);
        assertEquals("Expected offset of -30 minutes", -30 * 60 * 1000, timeZoneValid.getOffset(null));
    }
}
