public void testBSPEuclidean3DBRepRecovery() {
    // Test data - Cube vertices and indices
    float[] vertices = new float[] {
        0f, 0f, 0f,
        1f, 0f, 0f,
        1f, 1f, 0f,
        0f, 1f, 0f,
        0f, 0f, 1f,
        1f, 0f, 1f,
        1f, 1f, 1f,
        0f, 1f, 1f
    };
    int[] indices = new int[] {
        0, 1, 2, 2, 3, 0,
        4, 5, 6, 6, 7, 4,
        0, 1, 5, 5, 4, 0,
        1, 2, 6, 6, 5, 1,
        2, 3, 7, 7, 6, 2,
        3, 0, 4, 4, 7, 3
    };

    BSPMesh mesh = new BSPMesh(vertices, indices);
    PolyhedronsSet polyhedronSet = new PolyhedronsSet(mesh);

    // Attempt to recover faces from BSPTree
    List<Face> recoveredFaces = polyhedronSet.getFaces();
    
    // Expect 6 faces for a cube
    assertEquals(6, recoveredFaces.size());
}