
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import static org.junit.Assert.assertFalse;

public class GoogScopePrivateFunctionTest {

    @Test
    public void testPrivateTopLevelFunctionInGoogScope() {
        // JavaScript code to be compiled
        String jsCode = 
            "goog.provide('test');\n" +
            "goog.scope(function() {\n" +
            "  /** @private */\n" +
            "  function privateFunction() {}\n" +
            "});";

        // Set up the compiler
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Compile the JavaScript code
        compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test.js", jsCode), options);

        // Check for errors - we expect no errors
        assertFalse("The code should compile without errors.", compiler.hasErrors());
    }
}
