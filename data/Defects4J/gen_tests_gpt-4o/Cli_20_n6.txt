
import org.apache.commons.cli.*;
import org.junit.Test;
import static org.junit.Assert.*;

public class PosixParserTest {

    @Test
    public void testUnrecognizedLongOptionWithStopAtNonOption() throws ParseException {
        // Define options a and b, b requires an argument
        Options options = new Options();
        options.addOption("a", false, "option a");
        options.addOption(Option.builder("b").hasArg().desc("option b").build());

        // Command line arguments
        String[] args = {"--zop", "-abfoo"};

        // Create parser and enable stopAtNonOption
        CommandLineParser parser = new PosixParser();

        // Parse the options
        CommandLine cmd = parser.parse(options, args, true);

        // Check that the "-a" option is parsed
        assertTrue(cmd.hasOption('a'));

        // Check that the "-b" option with argument is not parsed with "foo"
        assertFalse(cmd.hasOption('b'));

        // Verify non-recognized tokens remain unchanged after stop
        String[] remainingArgs = cmd.getArgs();
        assertArrayEquals(new String[]{"--zop", "-abfoo"}, remainingArgs);
    }
}
