
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.ast.AstRoot;
import org.junit.Test;

public class CompilerTest {

    @Test
    public void testDeterministicTestWarning() {
        // JavaScript code to be compiled
        String jsCode = 
            "// ==ClosureCompiler==\n" +
            "// @output_file_name default.js\n" +
            "// @compilation_level ADVANCED_OPTIMIZATIONS\n" +
            "// ==/ClosureCompiler==\n" +
            "var t = null;\n" +
            "\n" +
            "window.test = function() {\n" +
            "    if (t != null) {\n" +
            "        t = null;\n" +
            "    }\n" +
            "    t = 1;\n" +
            "};";

        // Prepare the compiler environment
        CompilerEnvirons env = new CompilerEnvirons();
        ErrorReporter reporter = env.getErrorReporter();
        
        // Create a parser and parse the code
        Parser parser = new Parser(env, reporter);
        AstRoot ast = parser.parse(jsCode, null, 0);

        // There should be no warnings related to deterministic conditions
        assertFalse(reporter.hasFatalErrors());
    }
}
