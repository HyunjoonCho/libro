
import com.fasterxml.jackson.core.JsonPointer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.*;

public class JsonPointerTest {

    @Test
    public void testJsonPointerWithInvalidIndex() {
        String json = "[{\"name\": \"value0\"}, {\"name\": \"value1\"}]";

        ObjectMapper mapper = new ObjectMapper();
        try {
            JsonNode root = mapper.readTree(json);
            // Attempt to use "00" as an index, expecting that it should not be treated as index
            JsonPointer pointer = JsonPointer.compile("/00/name");
            JsonNode node = root.at(pointer);

            // The expected behavior is that "00" is not a valid index, so it should not find the node
            assertTrue(node.isMissingNode());

        } catch (Exception e) {
            fail("Exception should not be thrown: " + e.getMessage());
        }
    }
}
