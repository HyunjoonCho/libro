
import org.apache.commons.math3.distribution.NormalDistribution;
import org.apache.commons.math3.distribution.RealDistribution;
import org.junit.Test;
import static org.junit.Assert.*;

public class RealDistributionTest {

    @Test
    public void testIsSupportLowerBoundInclusive() {
        // Creating a normal distribution with mean and standard deviation
        RealDistribution distribution = new NormalDistribution(0, 1);

        // Test the lower bound of the distribution
        double lowerBound = distribution.getSupportLowerBound();
        
        // If the distribution is incorrectly implemented, the density at the lower bound 
        // could, for instance, be infinite or NaN, which the proposed definition does not allow
        double densityAtLowerBound = distribution.density(lowerBound);

        // Ensure the definition is met: density at the lower bound should be finite and not NaN
        assertTrue("Density at lower bound should be finite and not NaN",
                   !Double.isNaN(densityAtLowerBound) && Double.isFinite(densityAtLowerBound));
    }

    @Test
    public void testIsSupportUpperBoundInclusive() {
        // Creating a normal distribution with mean and standard deviation
        RealDistribution distribution = new NormalDistribution(0, 1);

        // Test the upper bound of the distribution
        double upperBound = distribution.getSupportUpperBound();
        
        // Same logic as for the lower bound
        double densityAtUpperBound = distribution.density(upperBound);

        // Check for the expected condition
        assertTrue("Density at upper bound should be finite and not NaN",
                   !Double.isNaN(densityAtUpperBound) && Double.isFinite(densityAtUpperBound));
    }
}
