public void testResolveTypesCastException() {
    try {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // Set up the options based on the bug report
        options.setCreateNameMapFiles(true);
        options.addWarningsGuard(new DiagnosticGroups().forName("missingProperties"));
        options.addWarningsGuard(new DiagnosticGroups().forName("undefinedVars"));
        options.addWarningsGuard(new DiagnosticGroups().forName("checkTypes"));
        options.setWarningLevel(DiagnosticGroups.STRICT_MODULE_DEP_CHECK, CheckLevel.ERROR);
        options.setWarningLevel(DiagnosticGroups.INVALID_CASTS, CheckLevel.ERROR);
        options.setWarningLevel(DiagnosticGroups.ALL, CheckLevel.WARNING);
        options.setSummaryDetailLevel(3);
        options.setProcessClosurePrimitives(true);
        options.setCompilationLevel(CompilationLevel.ADVANCED_OPTIMIZATIONS);

        // Trigger the compilation process, which should fail with the specific exception
        compiler.compile(
            AbstractCommandLineRunner.getBuiltinExterns(CompilerOptions.Environment.BROWSER),
            ImmutableList.of(SourceFile.fromCode("test.js", "var x = ({} || null);")),
            options
        );

        fail("Expected a ClassCastException to be thrown");
    } catch (RuntimeException e) {
        assertTrue(e.getCause() instanceof ClassCastException);
        assertTrue(e.getCause().getMessage().contains("com.google.javascript.rhino.jstype.UnionType cannot be cast to com.google.javascript.rhino.jstype.ObjectType"));
    }
}