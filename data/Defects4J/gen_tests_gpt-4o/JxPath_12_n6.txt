
import static org.junit.Assert.*;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.XMLConstants;

import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class NamespaceHandlingTest {

    @Test
    public void testNamespaceRegistrationForAttributes() throws Exception {
        // XML setup
        String xmlContent = "<ElementA xmlns:A=\"http://namespaceA\" A:myAttr=\"Mytype\">"
                + "<B:ElementB xmlns:B=\"http://namespaceB\">MY VALUE</B:ElementB>"
                + "</ElementA>";

        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
        factory.setNamespaceAware(true);
        DocumentBuilder builder = factory.newDocumentBuilder();
        
        Document document = builder.parse(new java.io.ByteArrayInputStream(xmlContent.getBytes()));

        Element root = document.getDocumentElement();

        // JXPath setup
        JXPathContext context = JXPathContext.newContext(root);

        // Register namespaces
        context.registerNamespace("A", "http://namespaceA");
        context.registerNamespace("B", "http://namespaceB");

        // Test attribute access with namespace
        try {
            // Accessing an attribute within the given namespace
            Pointer pointer = context.getPointer("/ElementA/@A:myAttr");
            assertNotNull("Pointer must not be null", pointer);
            assertEquals("Expected attribute value is 'Mytype'", "Mytype", pointer.getValue());
        } catch (Exception e) {
            fail("Exception not expected: " + e.getMessage());
        }
    }
}
