
import org.apache.commons.math3.fitting.PolynomialCurveFitter;
import org.apache.commons.math3.fitting.WeightedObservedPoint;
import java.util.ArrayList;
import java.util.List;

public class LargeWeightTest {

    public void testLargeNumberOfWeights() {
        int numberOfPoints = 41200; // Large number of data points
        List<WeightedObservedPoint> points = new ArrayList<>(numberOfPoints);

        for (int i = 0; i < numberOfPoints; i++) {
            double x = i;
            double y = polynomialFunction(x); // Use a simple polynomial function
            double weight = 1.0; // Assign a weight to each point
            points.add(new WeightedObservedPoint(weight, x, y));
        }

        try {
            PolynomialCurveFitter fitter = PolynomialCurveFitter.create(2); // Degree 2 polynomial
            fitter.fit(points); // Attempt to fit the curve
            fail("Expected an OutOfMemoryError due to large weight matrix creation");
        } catch (OutOfMemoryError e) {
            // The expected outcome given a large number of weights
        }
    }

    private double polynomialFunction(double x) {
        return 3 * x * x + 2 * x + 1; // A simple quadratic function
    }

    private void fail(String message) {
        throw new AssertionError(message);
    }

    public static void main(String[] args) {
        LargeWeightTest test = new LargeWeightTest();
        test.testLargeNumberOfWeights();
    }
}
