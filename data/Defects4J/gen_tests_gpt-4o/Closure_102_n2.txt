
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;
import static org.junit.Assert.*;

public class CompilerArgumentsShadowingTest {

    @Test
    public void testArgumentsShadowing() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // JavaScript code that will be compiled
        String originalCode = "function name() { var arguments = Array.prototype.slice.call(arguments, 0); }";
        
        Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), 
                                         SourceFile.fromCode("test.js", originalCode), 
                                         options);
        
        // Verifying if the compilation was successful
        assertTrue(result.success);

        // Expected outcome after compilation
        String expectedCompiledCode = "function name(){var arguments=Array.prototype.slice.call(arguments,0);}";

        // Check if the compiled code matches expectation related to 'arguments'
        String compiledCode = compiler.toSource();
        assertEquals(expectedCompiledCode, compiledCode);
    }
}
