public void testInvalidPartialConstructionWithDuplicateTypes() {
    try {
        new Partial(
            new DateTimeFieldType[] { DateTimeFieldType.clockhourOfDay(), DateTimeFieldType.hourOfDay() }, 
            new int[] { 1, 1 }
        );
        fail("Expected IllegalArgumentException due to duplicate DateTimeFieldTypes");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }
}

public void testInvalidPartialEqualityDueToDuplicateTypes() {
    Partial p1 = new Partial(DateTimeFieldType.clockhourOfDay(), 1).with(DateTimeFieldType.hourOfDay(), 1);
    Partial p2 = new Partial(DateTimeFieldType.hourOfDay(), 1).with(DateTimeFieldType.clockhourOfDay(), 1);

    try {
        p1.isEqual(p2);
        fail("Expected IllegalArgumentException due to non-matching field types");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }
}