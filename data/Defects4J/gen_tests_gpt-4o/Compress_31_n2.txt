
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;

import java.io.*;

import static org.junit.Assert.fail;

public class TarArchiveTest {

    @Test(expected = IllegalArgumentException.class)
    public void testInvalidByteInTarEntry() throws IOException {
        String tempDirPath = "path/to/your/test/";
        String fileName = "testfile.tgz"; // Replace with a test tgz file path if available

        try (TarArchiveInputStream tarIn = new TarArchiveInputStream(
                new GZIPInputStream(
                        new BufferedInputStream(
                                new FileInputStream(tempDirPath + fileName))))) {

            TarArchiveEntry entry = tarIn.getNextTarEntry();

            while (entry != null) {
                File path = new File(tempDirPath, entry.getName());
                if (entry.isDirectory()) {
                    path.mkdirs();
                } else {          
                    path.createNewFile();
                    byte[] read = new byte[2048];
                    try (BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(path))) {
                        int len;
                        while ((len = tarIn.read(read)) != -1) {
                            bout.write(read, 0, len);
                        }
                    }
                }
                entry = tarIn.getNextTarEntry();
            }
        } catch (IllegalArgumentException e) {
            // This is expected due to the bug, re-throw to satisfy test expectation
            throw e;
        } catch (IOException e) {
            fail("Unexpected IOException during test: " + e.getMessage());
        }
    }
}
