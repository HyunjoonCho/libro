
import static org.mockito.Mockito.*;

import org.junit.Test;
import org.mockito.ArgumentCaptor;

public class MockitoStringTypePrintingTest {

    @Test
    public void testStringTypePrinting() {
        // Create a mock object
        MyService myServiceMock = mock(MyService.class);

        // Define the behavior of the mock for certain inputs
        when(myServiceMock.process(anyInt(), eq("expected"))).thenReturn("success");

        // Invoke a method on the mock with parameters that will cause a failure
        myServiceMock.process(1, "2");

        // Capture the arguments that were passed to the mock
        ArgumentCaptor<Integer> intCaptor = ArgumentCaptor.forClass(Integer.class);
        ArgumentCaptor<String> stringCaptor = ArgumentCaptor.forClass(String.class);
        
        verify(myServiceMock).process(intCaptor.capture(), stringCaptor.capture());

        // Print captured arguments for debugging - expectation of type issue in output
        System.out.println("Called with: " + intCaptor.getValue() + ", " + stringCaptor.getValue());

        // Intentionally fail the test to see the output difference in type printing
        verify(myServiceMock).process(anyInt(), eq("expected"));
    }

    // Example service interface
    interface MyService {
        String process(int number, String text);
    }
}
