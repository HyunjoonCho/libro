
import org.apache.commons.lang3.math.NumberUtils;
import org.junit.Test;
import static org.junit.Assert.*;

public class NumberUtilsTest {

    @Test
    public void testCreateLongWithHex() {
        // Expected to parse as Long because the hex literal exceeds Integer's 8-digit range
        String longHex = "0x123456789";
        
        // This should work if createLong uses Long.decode()
        try {
            Long result = NumberUtils.createLong(longHex);
            fail("Expected NumberFormatException");
        } catch (NumberFormatException e) {
            // Expected behavior since createLong() does not handle hex
        }
    }

    @Test
    public void testCreateNumberWithHex() {
        // Should be handled as a Long since it's more than 8 hex digits
        String longHex = "0x123456789";

        // NumberUtils.createNumber should recognize it as a Long
        try {
            Number number = NumberUtils.createNumber(longHex);
            assertTrue(number instanceof Long);
            assertEquals(Long.decode(longHex), number);
        } catch (NumberFormatException e) {
            fail("NumberUtils.createNumber did not handle large hex as Long.");
        }
    }
}
