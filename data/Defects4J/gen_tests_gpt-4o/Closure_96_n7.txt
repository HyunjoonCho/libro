public void testMissingTypeChecksForVarArgs() {
    String jsCode = "/**\n"
        + "* @param {...string} var_args\n"
        + "*/\n"
        + "function foo(var_args) {\n"
        + "  return arguments.length;\n"
        + "}\n"
        + "foo('hello');\n"
        + "foo(123);\n"
        + "foo('hello', 123);";

    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.WARNING);
    CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

    Compiler compiler = new Compiler();
    compiler.compile(
        CommandLineRunner.getDefaultExterns(), 
        ImmutableList.of(SourceFile.fromCode("test.js", jsCode)), 
        options);

    JSError[] warnings = compiler.getWarnings();
    
    boolean foundWarningForSecondParameter = false;
    for (JSError warning : warnings) {
        if (warning.description.contains("actual parameter 2 of foo should match expected type string")) {
            foundWarningForSecondParameter = true;
            break;
        }
    }

    assertTrue("Expected type-mismatch warning for second parameter in third foo() call", foundWarningForSecondParameter);
}