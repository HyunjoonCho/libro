public void testBSPTreeRecovery() {
    double[][] vertices = {
        {0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0},
        {0, 0, 1}, {1, 0, 1}, {1, 1, 1}, {0, 1, 1}
    };
    
    int[][] indices = {
        {0, 1, 2}, {0, 2, 3},
        {1, 5, 6}, {1, 6, 2},
        {5, 4, 7}, {5, 7, 6},
        {4, 0, 3}, {4, 3, 7},
        {3, 2, 6}, {3, 6, 7},
        {1, 0, 4}, {1, 4, 5}
    };

    try {
        BSPMesh mesh = new BSPMesh(vertices, indices);
        PolyhedronsSet polyhedron = new PolyhedronsSet(mesh);
        List<SubHyperplane<?>> faces = polyhedron.getTree().getBoundaries();
        assertEquals("Expected 12 faces in the reconstructed BRep", 12, faces.size());
    } catch (Exception e) {
        fail("Exception while reconstructing BRep: " + e.getMessage());
    }
}