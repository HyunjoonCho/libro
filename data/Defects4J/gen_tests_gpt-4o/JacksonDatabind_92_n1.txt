
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidTypeIdException;
import org.junit.Test;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class CVE_2017_15095_Test {

    @Test
    public void testPolymorphicDeserializationBlock() {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"@type\":\"java.rmi.server.UnicastRemoteObject\"}";

        try {
            Object obj = mapper.readValue(json, Object.class);
            fail("Expected InvalidTypeIdException to be thrown");
        } catch (InvalidTypeIdException e) {
            String expectedMessage = "Could not resolve type id 'java.rmi.server.UnicastRemoteObject'";
            assertTrue("Exception message contains expected text", e.getMessage().contains(expectedMessage));
        } catch (Exception e) {
            fail("Expected InvalidTypeIdException, but got: " + e.getClass().getName());
        }
    }
}
