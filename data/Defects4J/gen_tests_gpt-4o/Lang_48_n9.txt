
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.junit.Test;
import java.math.BigDecimal;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class BigDecimalEqualsBuilderTest {

    @Test
    public void testBigDecimalComparisonUsingEqualsBuilder() {
        BigDecimal decimal1 = new BigDecimal("1.0");
        BigDecimal decimal2 = new BigDecimal("1.00");

        // Should be false because equals considers scale
        boolean areEqualUsingEquals = decimal1.equals(decimal2);
        assertFalse(areEqualUsingEquals);

        // Using EqualsBuilder which incorrectly uses equals rather than compareTo
        boolean areEqualUsingEqualsBuilder = new EqualsBuilder()
                .append(decimal1, decimal2)
                .isEquals();

        // Test should fail as it highlights the bug that EqualsBuilder uses equals instead of compareTo
        assertTrue(areEqualUsingEqualsBuilder);  // Expect this to fail

        // For correct comparison, compareTo method should be used
        boolean areEqualUsingCompareTo = (decimal1.compareTo(decimal2) == 0);
        assertTrue(areEqualUsingCompareTo);
    }
}
