
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

// Dummy external reference for the sake of completeness
class External {
    static int external_ref() {
        return 42;
    }
}

public class TrueFalseReplacementTest {

    public static Object some_function(boolean any_expression) {
        var fn1 = new Object() {
            Runnable callback;
        };
        var fn2 = new Object() {
            Runnable ref;

            {
                if (any_expression) {
                    ref = () -> External.external_ref();
                    fn1.callback = () -> ref.run();
                } else {
                    ref = null;
                }
            }
        };

        return new Object() {
            boolean method1() {
                if (fn1.callback != null) fn1.callback.run();
                return true;
            }

            boolean method2() {
                return false;
            }
        };
    }

    @Test
    public void testMethod1() {
        var obj = some_function(true);
        assertTrue(((Boolean) ((Object) obj).method1())); // Expecting true to be effectively !0
    }

    @Test
    public void testMethod2() {
        var obj = some_function(true);
        assertFalse(((Boolean) ((Object) obj).method2())); // Expecting false to be effectively !1
    }
}
