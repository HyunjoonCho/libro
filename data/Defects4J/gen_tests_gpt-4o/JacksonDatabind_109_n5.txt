
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.module.kotlin.KotlinModule;
import com.fasterxml.jackson.module.kotlin.jacksonObjectMapper;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class BigDecimalTest {

    static class TestModel {
        @JsonFormat(shape = JsonFormat.Shape.STRING)
        private final BigDecimal value;

        public TestModel(BigDecimal value) {
            this.value = value;
        }

        public BigDecimal getValue() {
            return value;
        }
    }

    @Test
    public void testBigDecimalSerialization() throws Exception {
        ObjectMapper mapper = jacksonObjectMapper()
                .registerModule(new KotlinModule())
                .configure(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN, true)
                .configure(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN, true);

        TestModel test = new TestModel(new BigDecimal("0.0000000005"));

        String result = mapper.writeValueAsString(test);

        assertEquals("{\"value\":\"0.0000000005\"}", result);
    }
}
