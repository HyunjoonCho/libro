
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class TarUtilsTest {

    // The method extracted from TarUtils.java with character transformation
    public String parseName(byte[] buffer) {
        StringBuilder result = new StringBuilder();
        
        // Assuming the problem area - simulate how the parseName method works
        for (byte b : buffer) {
            result.append((char) b);  // Problematic line
        }
        
        return result.toString();
    }
    
    @Test
    public void testParseNameSpecialCharacters() {
        // Example tar entry name with special characters
        byte[] buffer = {48, 51, 48, 50, 45, 48, 49, 48, 49, 45, 51, -19, -19, -19, 70, 48, 54, 
                         -19, 87, 50, 50, 48, -19, 90, 66, -19, 72, 69, 67, 75, 77, 79, 68, 85, 
                         76, -19, -19, -19, -19, -19, -19, -19, -19, -19, 69, 67, 69, -19, -19,
                         68, 67, -19, -19, -19, 55, -19, 48, 54, 48, 51, 48, 50, -19, 68, 79, 
                         69, 82, 78, 46, 109, 111, 100, 101, 108};

        // Expected result using the correct method
        String expectedName = "0302-0101-3±±±F06±W220±ZB±HECKMODUL±±±±±±±±±±ECE±±DC±±±07±060302±DOERN.model";
        
        // Actual result using the faulty method
        String actualName = parseName(buffer);
        
        // Demonstrate the failure due to incorrect handling of special characters
        assertEquals(expectedName, actualName);
    }
}
