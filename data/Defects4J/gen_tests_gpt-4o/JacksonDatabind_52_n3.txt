
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;
import com.fasterxml.jackson.annotation.JsonTypeInfo.As;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertNotNull;

// Animal base class
@JsonTypeInfo(use = Id.NAME, include = As.PROPERTY, property = "type")
abstract class Animal {
    public String name;
}

// Dog class extends Animal
@JsonTypeName("dog")
class Dog extends Animal {
    public String breed;
}

public class ExternalIdDeserTest {

    @Test
    public void testExternalPropertyDeserialization() throws Exception {
        String json = "{\"type\":\"dog\", \"name\":\"Buddy\", \"breed\":\"Golden Retriever\"}";

        ObjectMapper objectMapper = new ObjectMapper();
        Animal animal = objectMapper.readValue(json, Animal.class);

        // Verify the deserialization
        assertNotNull("The deserialized animal should not be null", animal);
        assertNotNull("The 'name' property should not be null", animal.name);
        
        if (animal instanceof Dog) {
            Dog dog = (Dog) animal;
            assertNotNull("The 'breed' property should not be null", dog.breed);
        } else {
            throw new AssertionError("The deserialized object is not a Dog instance");
        }
    }
}
