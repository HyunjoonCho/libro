
import com.fasterxml.jackson.core.Base64Variants;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.TreeTraversingParser;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertArrayEquals;

public class TreeTraversingParserTest {

    @Test
    public void testBinaryValueWithBase64Variant() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        
        // Example binary data
        byte[] binaryData = new byte[] { 1, 2, 3, 4, 5 };
        
        // Encode binary data using a custom Base64 variant
        String encoded = Base64Variants.MODIFIED_FOR_URL.encode(binaryData);
        JsonNode tree = TextNode.valueOf(encoded);

        TreeTraversingParser parser = new TreeTraversingParser(tree, mapper);
        
        // Attempt to read the binary value with the specified Base64 variant
        byte[] parsedData = parser.getBinaryValue(Base64Variants.MODIFIED_FOR_URL);
        
        // Verify if the parsed data matches the original binary data
        assertArrayEquals(binaryData, parsedData);
    }
}
