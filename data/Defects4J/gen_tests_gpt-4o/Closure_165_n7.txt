public void testPropertiesOnUnrelatedRecordTypes() {
    String inputCode = "/** @typedef {{name: string, id: number}} */\n" +
        "var RecordType1;\n" +
        "/** @typedef {{name2: string}} */\n" +
        "var RecordType2;\n" +
        "/**\n" +
        " * @param {RecordType1} rec\n" +
        " */\n" +
        "var func = function(rec) {\n" +
        " alert(rec.name2);\n" +
        "};\n" +
        "func({name: 'jim', id: 0});";
    
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CheckLevel.ERROR);
    options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.ERROR);
    options.setWarningLevel(DiagnosticGroups.CHECK_VARIABLES, CheckLevel.ERROR);

    Compiler compiler = new Compiler();
    Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test.js", inputCode), options);

    assertTrue("Compilation should fail due to accessing a property from an unrelated type.", result.success);
    assertFalse(result.errors.isEmpty());
    assertEquals("Property name2 never defined on rec", result.errors.get(0).getDescription());
}