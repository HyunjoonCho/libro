@Test
public void testEqualsBuilderWithBigDecimal() {
    BigDecimal bd1 = new BigDecimal("0.0");
    BigDecimal bd2 = new BigDecimal("0.00");

    boolean areEqualUsingEquals = bd1.equals(bd2); // false, because equals() checks scale
    boolean areEqualUsingCompareTo = bd1.compareTo(bd2) == 0; // true, because values are numerically equal

    // Demonstrating the failure in EqualsBuilder
    EqualsBuilder equalsBuilder = new EqualsBuilder();
    boolean areEqualUsingEqualsBuilder = equalsBuilder.append(bd1, bd2).isEquals();

    assertFalse(areEqualUsingEquals); // Demonstrates standard equals method behavior
    assertTrue(areEqualUsingCompareTo); // Demonstrates correct numerical comparison
    assertEquals(areEqualUsingCompareTo, areEqualUsingEqualsBuilder); // This will fail, illustrating the bug
}