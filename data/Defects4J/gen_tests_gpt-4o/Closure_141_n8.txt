
import org.junit.Test;
import static org.junit.Assert.assertFalse;
import java.io.StringWriter;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import javax.script.SimpleScriptContext;

public class ClosureCompilerTest {
    
    @Test
    public void testFunctionOrOperatorHavingNoSideEffects() throws ScriptException {
        ScriptEngineManager manager = new ScriptEngineManager();
        ScriptEngine engine = manager.getEngineByName("JavaScript");
        
        if (engine == null) {
            throw new IllegalStateException("JavaScript engine not found");
        }
        
        String script = "(Math.sin || Math.cos)(0)";

        // Attempt evaluating the script to verify it runs without error
        StringWriter outputWriter = new StringWriter();
        SimpleScriptContext context = new SimpleScriptContext();
        context.setWriter(outputWriter);

        engine.eval(script, context);

        // No side effects should be observed
        assertFalse("There should be no output or side effects", outputWriter.toString().isEmpty());
    }
}
