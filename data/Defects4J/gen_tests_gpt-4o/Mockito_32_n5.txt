
import org.junit.Test;
import org.mockito.Mockito;

import static org.mockito.Mockito.*;

public class MockPackagePrivateParentTest {

    // Package-private parent class
    static class PackagePrivateParent {
        public String methodToMock() {
            return "Real Method";
        }
    }

    // Public child class
    public static class PublicChild extends PackagePrivateParent {
        // Inherits methodToMock() from PackagePrivateParent
    }

    @Test
    public void testMockingPublicChild() {
        // Attempt to create a mock of the PublicChild class which extends a package-private class
        PublicChild mockChild = Mockito.mock(PublicChild.class);

        // Define a behavior for the mocked method
        when(mockChild.methodToMock()).thenReturn("Mocked Method");

        // Invoke the method and test the result
        String result = mockChild.methodToMock();

        // Here, we expect the result to be "Mocked Method", but due to the problem it might invoke the real method
        System.out.println(result); // It should ideally print "Mocked Method"

        // Validate the result with assertion
        // This will fail if the real method is invoked instead of the mocked one
        assertEquals("Mocked Method", result);
    }
}
