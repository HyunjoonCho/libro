
import org.apache.commons.math3.fraction.BigFraction;
import org.junit.Test;
import java.math.BigInteger;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class BigFractionDoubleValueTest {

    @Test
    public void testBigFractionDoubleValueForLargeValues() {
        // Creating a numerator and denominator with more than 308 digits.
        BigInteger largeNumber = new BigInteger("1" + "0".repeat(308));
        
        // Creating a BigFraction with large numerator and denominator.
        BigFraction fraction = new BigFraction(largeNumber, largeNumber);

        // Getting the double value of the fraction.
        double result = fraction.doubleValue();
        
        // The result should not be Double.NaN since it represents 1.0.
        assertFalse(Double.isNaN(result));

        // Verify the result should be 1.0 for equal numerator and denominator.
        assertTrue(result == 1.0);
    }
}
