
import org.junit.Test;
import org.apache.commons.math3.genetics.ElitisticListPopulation;
import org.apache.commons.math3.genetics.Chromosome;
import java.util.ArrayList;
import java.util.List;

public class ElitisticListPopulationTest {

    @Test(expected = IllegalArgumentException.class)
    public void testConstructorWithInvalidElitismRateAboveRange() {
        List<Chromosome> chromosomes = new ArrayList<>();
        double elitismRate = 1.1; // invalid – greater than 1.0
        new ElitisticListPopulation(chromosomes, 10, elitismRate);
    }
    
    @Test(expected = IllegalArgumentException.class)
    public void testConstructorWithInvalidElitismRateBelowRange() {
        List<Chromosome> chromosomes = new ArrayList<>();
        double elitismRate = -0.1; // invalid – less than 0.0
        new ElitisticListPopulation(chromosomes, 10, elitismRate);
    }
    
    @Test
    public void testConstructorWithValidElitismRate() {
        List<Chromosome> chromosomes = new ArrayList<>();
        double elitismRate = 0.5; // valid
        ElitisticListPopulation population = new ElitisticListPopulation(chromosomes, 10, elitismRate);
        
        // Additional assertions can be made to ensure population was created correctly.
        assertEquals(0.5, population.getElitismRate(), 0.00001);
    }
}
