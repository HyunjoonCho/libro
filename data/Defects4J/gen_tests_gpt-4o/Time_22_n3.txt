
import org.joda.time.DateTimeConstants;
import org.joda.time.DateTimeZone;
import org.joda.time.Duration;
import org.joda.time.Period;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class DurationToPeriodTest {

    @Test
    public void testDurationToPeriodWithFixedTimeZone() {
        // Set default time zone to a fixed GMT
        DateTimeZone.setDefault(DateTimeZone.forID("Etc/GMT"));
        System.out.println("Timezone: " + DateTimeZone.getDefault());

        // Create a Duration of more than 24 hours
        Duration aDuration = new Duration(
            DateTimeConstants.MILLIS_PER_HOUR * 30 +
            DateTimeConstants.MILLIS_PER_MINUTE * 50 +
            DateTimeConstants.MILLIS_PER_SECOND * 14
        );

        System.out.println("Duration before: " + aDuration);
        
        // Convert Duration to Period
        Period period = aDuration.toPeriod();
        
        System.out.println("Period after: " + period);
        
        // In a fixed time zone, a full day plus extra hours should be counted separately
        assertEquals(new Period(1, 6, 50, 14), period); // Expected: P1DT6H50M14S
    }
    
    @Test
    public void testDurationToPeriodWithDSTTimeZone() {
        // Set default time zone to a DST-influenced timezone
        DateTimeZone.setDefault(DateTimeZone.forID("America/Chicago"));
        System.out.println("Timezone: " + DateTimeZone.getDefault());

        // Create a Duration of more than 24 hours
        Duration aDuration = new Duration(
            DateTimeConstants.MILLIS_PER_HOUR * 30 +
            DateTimeConstants.MILLIS_PER_MINUTE * 50 +
            DateTimeConstants.MILLIS_PER_SECOND * 14
        );

        System.out.println("Duration before: " + aDuration);
        
        // Convert Duration to Period
        Period period = aDuration.toPeriod();
        
        System.out.println("Period after: " + period);
        
        // In a DST time zone, the entire duration may be treated as hours, minutes, and seconds
        assertEquals(new Period(30, 50, 14, 0), period); // Expected: PT30H50M14S
    }
}
