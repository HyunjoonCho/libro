
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.threed.Rotation;
import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class RotationTest {

    @Test
    public void testNumericalProblemsInRotationCreation() {
        Vector3D u1 = new Vector3D(-4921140.837095533, -2.1512094250440013E7, -890093.279426377);
        Vector3D u2 = new Vector3D(-2.7238580938724895E9, -2.169664921341876E9, 6.749688708885301E10);
        Vector3D v1 = new Vector3D(1, 0, 0);
        Vector3D v2 = new Vector3D(0, 0, 1);

        Rotation rotation = new Rotation(u1, u2, v1, v2);

        // Assertions to reproduce the erroneous behavior
        assertTrue("Expected element of rotation to be NaN but wasn't, indicating calculation issue",
                   Double.isNaN(rotation.getQ0()) || Double.isNaN(rotation.getQ1()) || 
                   Double.isNaN(rotation.getQ2()) || Double.isNaN(rotation.getQ3()));
    }
}
