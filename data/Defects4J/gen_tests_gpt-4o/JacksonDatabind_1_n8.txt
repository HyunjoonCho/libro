
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.util.ArrayList;

import static org.junit.Assert.assertEquals;

public class TestOuterSerialization {

    public static class TestOuter {

        @JsonFormat(shape = JsonFormat.Shape.ARRAY)
        public ArrayList<TestInner> array;

        public TestOuter() {
            this.array = new ArrayList<>();
            this.array.add(new TestInner(1, "one"));
            this.array.add(new TestInner(0, null));
        }

        public static class TestInner {
            public int i;
            public String mayBeNull;

            public TestInner(int i, String s) {
                this.i = i;
                this.mayBeNull = s;
            }
        }
    }

    @Test
    public void testSerializeNullValue() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        TestOuter testOuter = new TestOuter();

        String result = objectMapper.writeValueAsString(testOuter.array);
        String expected = "[[1,\"one\"],[0,null]]";

        assertEquals("Serialized JSON did not match the expected output", expected, result);
    }
}
