
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;

import static org.junit.Assert.assertThrows;

public class TarArchiveInputStreamTest {

    @Test
    public void testParsePaxHeadersWithEmptyLine() {
        String paxHeader = "25 path=data/somefile.txt\n10 atime=0\n";

        // Adding an empty line at the end to simulate the issue
        String headersWithEmptyLine = paxHeader + "\n";

        try (InputStream input = new ByteArrayInputStream(headersWithEmptyLine.getBytes());
             TarArchiveInputStream tarInput = new TarArchiveInputStream(input)) {
            
            // Attempting to parse PAX headers, expecting NegativeArraySizeException
            assertThrows(NegativeArraySizeException.class, () -> {
                tarInput.getNextEntry(); // This should trigger parsing of PAX headers
            });

        } catch (IOException e) {
            // Handle other IO exceptions if necessary
            e.printStackTrace();
        }
    }
}
