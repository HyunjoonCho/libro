
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;
import org.apache.commons.cli.PosixParser;
import org.junit.Test;
import static org.junit.Assert.*;

public class PosixParserBugTest {

    private static final String OPTION_TARGET = "t";
    private static final String OPTION_TARGET_LONG = "target";
    private static final String TARGET_VALUE_EXPECTED = "foobar.com";

    @Test
    public void testTargetOptionHandling() {
        Options options = new Options();
        Option generateTarget = new Option(OPTION_TARGET, OPTION_TARGET_LONG, true, "Generate files for the specified target machine");
        options.addOption(generateTarget);

        CommandLineParser parser = new PosixParser();

        String[] args = new String[]{"-target", TARGET_VALUE_EXPECTED};

        try {
            CommandLine parsedLine = parser.parse(options, args);
            assertTrue("Option 't' should be present", parsedLine.hasOption(OPTION_TARGET));
            String targetValue = parsedLine.getOptionValue(OPTION_TARGET);
            assertEquals("Target value should match the input value", TARGET_VALUE_EXPECTED, targetValue);
        } catch (ParseException pe) {
            fail("Parsing failed: " + pe.getMessage());
        }
    }
}
