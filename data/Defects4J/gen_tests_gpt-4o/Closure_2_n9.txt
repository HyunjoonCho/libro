
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

import static org.junit.Assert.assertNotNull;

public class ClosureCompilerTest {

    @Test
    public void testMultipleExtendsWithInterface() {
        // JavaScript code as described in the bug report
        String jsCode = "/**\n" +
                " * @interface\n" +
                " * @extends {unknown_1}\n" +
                " * @extends {unknown_2}\n" +
                " */\n" +
                "function Foo() {}";

        // Set up the compiler
        Compiler compiler = new Compiler();

        // Compiler options
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Compile the code
        SourceFile input = SourceFile.fromCode("test.js", jsCode);
        Result result = compiler.compile(SourceFile.fromCode("externs.js", ""), input, options);

        // Check that an error occurred due to the bug
        JSError error = result.errors.length > 0 ? result.errors[0] : null;

        // We expect an error to be not null because the bug report states the compiler crashes with an NPE
        assertNotNull("Expected a compiler error due to the bug", error);
    }
}
