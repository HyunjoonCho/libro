
import org.apache.commons.math3.fitting.PolynomialCurveFitter;
import org.apache.commons.math3.fitting.WeightedObservedPoints;
import org.junit.Test;

public class CurveFitterMemoryTest {

    @Test(expected = OutOfMemoryError.class)
    public void testLargeNumberOfWeights() {
        int numberOfPoints = 41200; // Large number of data points
        WeightedObservedPoints obs = new WeightedObservedPoints();

        // Adding a lot of points to the observer
        for (int i = 0; i < numberOfPoints; i++) {
            // Assuming a simple linear pattern for example purposes
            obs.add(1, i, i * 2.0);
        }
        
        // Create a polynomial curve fitter with a low degree for simplicity
        PolynomialCurveFitter fitter = PolynomialCurveFitter.create(2);

        // Attempt to fit the function - should trigger memory issues due to weights
        fitter.fit(obs.toList());
    }
}
