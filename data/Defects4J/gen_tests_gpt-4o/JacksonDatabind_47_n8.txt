
import com.fasterxml.jackson.annotation.JsonDeserialize;
import com.fasterxml.jackson.annotation.JsonSerialize;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

// Define the AccessionIdentifier interface
interface AccessionIdentifier {
}

// Define a class that implements AccessionIdentifier
class BaseAccessionIdentifier implements AccessionIdentifier {
    // Sample field
    private String id;

    public BaseAccessionIdentifier(String id) {
        this.id = id;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }
}

// Define the class containing the method that uses serialization annotations
class Foo {

    // Use @JsonSerialize to specify the super type
    @JsonSerialize(as = BaseAccessionIdentifier.class)
    @JsonDeserialize(as = BaseAccessionIdentifier.class)
    public AccessionIdentifier getReference() {
        return new BaseAccessionIdentifier("12345");
    }
}

public class JacksonTest {

    @Test
    public void testModelObjects() {
        // Create an instance of ObjectMapper
        ObjectMapper objectMapper = new ObjectMapper();

        // Create an instance of Foo
        Foo foo = new Foo();

        try {
            // Try to serialize Foo object to JSON
            String json = objectMapper.writeValueAsString(foo.getReference());
            System.out.println(json);
        } catch (JsonProcessingException e) {
            // Print stack trace if serialization fails
            e.printStackTrace();
        }
    }
}
