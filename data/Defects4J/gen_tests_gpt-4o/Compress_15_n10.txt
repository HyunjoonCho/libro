
import org.apache.commons.compress.archivers.zip.*;
import org.junit.Test;

import java.io.*;
import java.nio.file.Files;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import static org.junit.Assert.*;

public class ZipArchiveEntryEqualityTest {

    @Test
    public void testZipArchiveEntryEquality() throws IOException {
        // Create a temporary ZIP file
        File tempZipFile = createTempZipFile();

        try (FileInputStream fis = new FileInputStream(tempZipFile);
             ZipArchiveInputStream zipInputStream = new ZipArchiveInputStream(fis);
             ZipFile zipFile = new ZipFile(tempZipFile)) {

            // Read entry from ZipArchiveInputStream
            ZipArchiveEntry streamEntry = zipInputStream.getNextZipEntry();

            // Get the same entry from ZipFile
            ZipArchiveEntry fileEntry = zipFile.getEntry(streamEntry.getName());

            // Assert that the entries are not equal
            assertNotEquals("ZipArchiveEntry instances from ZipArchiveInputStream and ZipFile should not be equal",
                    streamEntry, fileEntry);

            // Assert that the comments differ (one is null and the other is an empty string)
            assertTrue("Entries have different comments",
                    (streamEntry.getComment() == null && "".equals(fileEntry.getComment())) ||
                    (fileEntry.getComment() == null && "".equals(streamEntry.getComment()))
            );
            
        } finally {
            // Clean up
            Files.delete(tempZipFile.toPath());
        }
    }

    private File createTempZipFile() throws IOException {
        File tempZipFile = File.createTempFile("test", ".zip");

        try (FileOutputStream fos = new FileOutputStream(tempZipFile);
             ZipOutputStream zos = new ZipOutputStream(fos)) {

            ZipEntry entry = new ZipEntry("test.txt");
            zos.putNextEntry(entry);
            zos.write("This is a test file.".getBytes());
            zos.closeEntry();
        }

        return tempZipFile;
    }
}
