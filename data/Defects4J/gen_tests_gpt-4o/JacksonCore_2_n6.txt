
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.JsonParseException;
import org.junit.Test;

import static org.junit.Assert.fail;

public class JsonParserTest {

    @Test
    public void testParserDoesNotAllowEagerNumberParsing() {
        String jsonInput = "123true";
        JsonFactory factory = new JsonFactory();
        try {
            JsonParser parser = factory.createParser(jsonInput);
            if (parser.nextToken() == JsonToken.VALUE_NUMBER_INT) {
                // Successfully parsed a number, now let's see if it correctly identifies an error
                parser.nextToken(); // Attempt to parse 'true'
                fail("Expected JsonParseException due to missing space between number and boolean.");
            }
        } catch (JsonParseException e) {
            // Expected outcome, error should be thrown due to invalid JSON
        } catch (Exception e) {
            fail("Unexpected exception: " + e.getMessage());
        }
    }
}
