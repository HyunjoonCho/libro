
package org.apache.commons.cli2.issues;

import org.apache.commons.cli2.CommandLine;
import org.apache.commons.cli2.Group;
import org.apache.commons.cli2.builder.ArgumentBuilder;
import org.apache.commons.cli2.builder.DefaultOptionBuilder;
import org.apache.commons.cli2.builder.GroupBuilder;
import org.apache.commons.cli2.commandline.Parser;
import org.apache.commons.cli2.option.DefaultOption;
import org.apache.commons.cli2.validation.FileValidator;
import org.junit.Test;

import java.io.File;
import java.io.IOException;

import static org.junit.Assert.*;

public class CLI2SampleTest {

    @Test
    public void testFileValidatorClassCastException() throws IOException {
        final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
        final ArgumentBuilder abuilder = new ArgumentBuilder();
        final GroupBuilder gbuilder = new GroupBuilder();

        // Create a temporary file to ensure it does exist for the test
        File tempFile = File.createTempFile("testfile", ".txt");
        tempFile.deleteOnExit();

        // Set up the option with a file validator
        DefaultOption fileNameOption = obuilder
                .withShortName("f")
                .withLongName("file-name")
                .withRequired(true)
                .withDescription("name of an existing file")
                .withArgument(abuilder
                        .withName("file-name")
                        .withValidator(FileValidator.getExistingFileInstance())
                        .create())
                .create();

        Group options = gbuilder
                .withName("options")
                .withOption(fileNameOption)
                .create();

        Parser parser = new Parser();
        parser.setHelpTrigger("--help");
        parser.setGroup(options);

        // Expect a ClassCastException here
        try {
            CommandLine cl = parser.parseAndHelp(new String[]{"--file-name", tempFile.getAbsolutePath()});
            fail("Expected ClassCastException was not thrown");
        } catch (ClassCastException e) {
            assertEquals("java.io.File cannot be cast to java.lang.String", e.getMessage());
        }
    }
}
