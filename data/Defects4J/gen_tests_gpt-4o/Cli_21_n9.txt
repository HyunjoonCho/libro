
import static org.junit.Assert.*;

import org.apache.commons.cli.*;

public class NegativeNumberOptionTest {
    
    public void testNegativeNumberParsing() {
        // Build the number argument with validators
        OptionBuilder aBuilder = new OptionBuilder();
        Argument numArg = aBuilder.withValidator(NumberValidator.getNumberInstance())
                                  .withMinimum(1)
                                  .withMaximum(1)
                                  .create();
        
        // Create an option based on the argument
        OptionBuilder oBuilder = new OptionBuilder();
        Option numOpt = oBuilder.withLongName("num")
                                .withArgument(numArg)
                                .create();
        
        // Group the options
        GroupBuilder gBuilder = new GroupBuilder();
        Group options = gBuilder.withOption(numOpt)
                                 .create();
        
        // Use a parser to test parsing of the negative number
        CommandLineParser parser = new DefaultParser();
        String[] args = new String[]{"--num", "-0.1"};
        
        try {
            CommandLine cmd = parser.parse(options, args);
            // If no exception, we parse correctly, the test should check this
            fail("Expected exception was not thrown for negative number as an argument.");
        } catch (ParseException e) {
            // Check the error message to see if it matches the expected incorrect behavior
            assertEquals("Unexpected -0.1 while processing --num", e.getMessage());
        }
    }
}
