script
const { exec } = require('child_process');
const assert = require('assert');

describe('Google Closure Compiler Ternary Operator Bug', function() {
    it('should maintain the correct behavior with mixed types in ternary operator', function(done) {
        // Create a temporary JavaScript file for testing the compiled output
        const originalCode = 'var a = (Math.random() > 0.5 ? "1" : 2) + 3 + 4;';
        
        const expectedOutput = 'var a=(0.5<Math.random()?"1":2)+3+4;';
        // Write and compile the code using Google Closure Compiler with --compilation_level SIMPLE
        exec(`echo "${originalCode}" | npx google-closure-compiler --compilation_level SIMPLE`, (error, stdout, stderr) => {
            if (error) {
                done(error);
                return;
            }
            if (stderr) {
                done(new Error(`stderr: ${stderr}`));
                return;
            }
            // Check that the compiled code does not incorrectly change the behavior by innocent conversion
            try {
                assert.strictEqual(stdout.trim(), expectedOutput);
                done();
            } catch (assertionError) {
                done(assertionError);
            }
        });
    });
});
