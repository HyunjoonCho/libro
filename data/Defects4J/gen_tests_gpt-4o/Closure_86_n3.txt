public void testSideEffectsAnalysis() {
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

    String code = 
        "/** @constructor */\n" +
        "function Foo() {\n" +
        "  var self = this;\n" +
        "  window.setTimeout(function() {\n" +
        "    window.location = self.location;\n" +
        "  }, 0);\n" +
        "}\n" +
        "\n" +
        "Foo.prototype.setLocation = function(loc) {\n" +
        "  this.location = loc;\n" +
        "};\n" +
        "\n" +
        "(new Foo()).setLocation('http://www.google.com/');";

    List<SourceFile> externs = CompilerTestCase.DEFAULT_EXTERNS;
    List<SourceFile> inputs = ImmutableList.of(SourceFile.fromCode("testcode", code));

    Compiler compiler = new Compiler();
    compiler.compile(externs, inputs, options);

    String compiledCode = compiler.toSource();

    assertTrue("setLocation function should not be removed", compiledCode.contains("setLocation"));
}