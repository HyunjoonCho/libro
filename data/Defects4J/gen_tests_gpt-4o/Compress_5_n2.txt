public void testTruncatedZipArchive() throws Exception {
    // Preparing a truncated ZIP byte array for testing
    byte[] truncatedZipData = new byte[]{0x50, 0x4B, 0x03, 0x04, 0x14, 0x00, 0x02, 0x00, 0x08, 0x00, 0x4B, 0x7C, 0xEC, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}; // A sequence representing the start of a ZIP file

    ByteArrayInputStream bais = new ByteArrayInputStream(truncatedZipData);
    ZipArchiveInputStream zipInputStream = new ZipArchiveInputStream(bais);

    try {
        byte[] buffer = new byte[512];
        int bytesRead;
        boolean eofReached = false;

        while ((bytesRead = zipInputStream.read(buffer)) != -1) {
            if (bytesRead == 0) {
                eofReached = true;
                break;
            }
        }

        assertFalse("Truncated ZIP did not reach EOF indicator", eofReached);
    } catch (IOException e) {
        // Expected, as the archive is truncated
        assertEquals("Truncated ZIP file", e.getMessage());
    } finally {
        zipInputStream.close();
    }
}