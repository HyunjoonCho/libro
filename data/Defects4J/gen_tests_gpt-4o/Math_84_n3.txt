public void testMultiDirectionalCorrectStart() {
    double[] startPoint = {1.0, 2.0};
    MultivariateFunction function = new MultivariateFunction() {
        public double value(double[] point) {
            return 0.0; // Correct solution gives a zero value
        }
    };
    
    MultiDirectional optimizer = new MultiDirectional();
    int maxEval = 1000;
    
    try {
        PointValuePair result = optimizer.optimize(
            new MaxEval(maxEval),
            new ObjectiveFunction(function),
            GoalType.MINIMIZE,
            new InitialGuess(startPoint),
            new SimplexOptimizerInitialGuess(startPoint)
        );
        fail("The optimizer should not loop forever, expected an exception due to iteration limit exceeded.");
    } catch (TooManyEvaluationsException e) {
        // Expected behavior, the test case should not hang forever.
    }
}