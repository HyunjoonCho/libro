public void testTarArchiveOutputStream_getBytesWritten() throws Exception {
    File tempFile = File.createTempFile("tartest", ".tar");
    tempFile.deleteOnExit();

    FileOutputStream myOutputStream = new FileOutputStream(tempFile);
    TarArchiveOutputStream sTarOut = (TarArchiveOutputStream) new ArchiveStreamFactory().createArchiveOutputStream(ArchiveStreamFactory.TAR, myOutputStream);

    File sSource = File.createTempFile("testfile", ".txt");
    sSource.deleteOnExit();
    try (FileWriter writer = new FileWriter(sSource)) {
        writer.write(new char[2048]); // Write sample content to file
    }
    
    TarArchiveEntry sEntry = new TarArchiveEntry(sSource);
    sEntry.setSize(sSource.length());
    sTarOut.putArchiveEntry(sEntry);

    FileInputStream sInput = new FileInputStream(sSource);
    byte[] cpRead = new byte[8192];
    int iRead;
    while ((iRead = sInput.read(cpRead)) > 0) {
        sTarOut.write(cpRead, 0, iRead);
    }
    sInput.close();
    sTarOut.closeArchiveEntry();

    long bytesWrittenBeforeClose = sTarOut.getBytesWritten();
    sTarOut.close();
    long bytesWrittenAfterClose = sTarOut.getBytesWritten();

    assertTrue("Bytes written should be greater than zero before closing", bytesWrittenBeforeClose > 0);
    assertTrue("Bytes written should be greater than zero after closing", bytesWrittenAfterClose > 0);
    assertTrue("Bytes written after close should include header sizes", bytesWrittenAfterClose > bytesWrittenBeforeClose);
}