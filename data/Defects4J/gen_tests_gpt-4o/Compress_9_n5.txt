
import org.apache.commons.compress.archivers.ArchiveOutputStream;
import org.apache.commons.compress.archivers.ArchiveStreamFactory;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import static org.junit.Assert.assertTrue;

public class TarArchiveOutputStreamTest {

    @Test
    public void testGetBytesWritten() throws Exception {
        File inputFile = new File("input.txt");
        createDummyInputFile(inputFile);

        FileOutputStream fileOutputStream = new FileOutputStream("tartest.tar");
        TarArchiveOutputStream tarOut = (TarArchiveOutputStream) new ArchiveStreamFactory()
                .createArchiveOutputStream(ArchiveStreamFactory.TAR, fileOutputStream);

        try (FileInputStream fileInputStream = new FileInputStream(inputFile)) {
            TarArchiveEntry entry = new TarArchiveEntry(inputFile, inputFile.getName());
            tarOut.putArchiveEntry(entry);

            byte[] buffer = new byte[8192];
            int bytesRead;
            while ((bytesRead = fileInputStream.read(buffer)) > 0) {
                tarOut.write(buffer, 0, bytesRead);
            }
            tarOut.closeArchiveEntry();

            // Check the number of bytes written before closing the stream
            long bytesWrittenBeforeClose = tarOut.getBytesWritten();
            assertTrue("Bytes written should be more than zero before closing the stream", bytesWrittenBeforeClose > 0);

        } finally {
            tarOut.close();
            fileOutputStream.close();
        }

        // Check the number of bytes written after closing the stream
        long bytesWrittenAfterClose = tarOut.getBytesWritten();
        assertTrue("Bytes written should be more than zero after closing the stream", bytesWrittenAfterClose > 0);

        // Clean up
        inputFile.delete();
        new File("tartest.tar").delete();
    }

    private void createDummyInputFile(File file) throws IOException {
        try (FileOutputStream fos = new FileOutputStream(file)) {
            byte[] content = new byte[1024];
            fos.write(content);
        }
    }
}
