
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.util.EnumMap;
import java.util.Map;
import static org.junit.Assert.assertEquals;

public class EnumMapJsonPropertyTest {

    private enum Status {
        @JsonProperty("ongoing")
        ONGOING,

        @JsonProperty("completed")
        COMPLETED
    }

    @Test
    public void testEnumMapWithJsonProperty() throws JsonProcessingException {
        EnumMap<Status, String> map = new EnumMap<>(Status.class);
        map.put(Status.ONGOING, "Project A");
        map.put(Status.COMPLETED, "Project B");

        ObjectMapper objectMapper = new ObjectMapper();
        String json = objectMapper.writeValueAsString(map);

        // Expected JSON should use the @JsonProperty values for enum keys
        // However, due to the bug, the keys will not use the @JsonProperty values
        String expectedJson = "{\"ongoing\":\"Project A\",\"completed\":\"Project B\"}";

        assertEquals(expectedJson, json);

        // Print the JSON output to see what is actually being generated
        System.out.println("Serialized EnumMap JSON: " + json);
    }
}
