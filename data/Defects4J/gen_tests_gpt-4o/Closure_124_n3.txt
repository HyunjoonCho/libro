public void testDifferentOutputFromRestAPIAndCommandLineJar() throws IOException {
    String inputJs = "var foreignObject = gfx.parentNode.parentNode; " +
                     "var parentContainer = foreignObject.parentNode.parentNode;";

    // Simulate command line compilation
    Compiler commandLineCompiler = new Compiler();
    CompilerOptions commandLineOptions = new CompilerOptions();
    commandLineOptions.setCompilationLevel(CompilationLevel.SIMPLE_OPTIMIZATIONS);
    Result commandLineResult = commandLineCompiler.compile(
            SourceFile.fromCode("externs", ""),
            SourceFile.fromCode("input", inputJs),
            commandLineOptions);

    String commandLineOutput = commandLineCompiler.toSource();

    // Simulate API/UI compilation
    Compiler apiCompiler = new Compiler();
    CompilerOptions apiOptions = new CompilerOptions();
    apiOptions.setCompilationLevel(CompilationLevel.SIMPLE_OPTIMIZATIONS);
    Result apiResult = apiCompiler.compile(
            SourceFile.fromCode("externs", ""),
            SourceFile.fromCode("input", inputJs),
            apiOptions);

    String apiOutput = apiCompiler.toSource();

    // Check that outputs are the same
    assertNotEquals(apiOutput, commandLineOutput);

    // Verify that the compiled output matches the expected correct transformation
    assertTrue(apiOutput.contains("if(b){if(a=b.parentNode.parentNode,b=a.parentNode.parentNode,null!==b)"));
    assertFalse(commandLineOutput.contains("if(b){if(a=b.parentNode.parentNode,b=a.parentNode.parentNode,null!==b)"));
}