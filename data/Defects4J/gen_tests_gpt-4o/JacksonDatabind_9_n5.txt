
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

public class MapDeserializationTest {

    @Test
    public void testMapWithClassAsKey() throws Exception {
        Map<Class<? extends Object>, String> map = new HashMap<>();
        map.put(ArrayList.class, "ArrayList");
        map.put(HashMap.class, "HashMap");

        ObjectMapper mapper = new ObjectMapper();

        String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(map);
        System.out.println("Serialized JSON: " + json);

        // This line is expected to throw an exception based on the bug description
        try {
            mapper.readValue(json, new TypeReference<Map<Class<? extends Object>, String>>() {});
            fail("Expected an InvalidFormatException to be thrown due to deserialization issue.");
        } catch (com.fasterxml.jackson.databind.exc.InvalidFormatException e) {
            // This is the expected behavior as per the bug report
            System.out.println("Caught expected exception: " + e.getMessage());
        }
    }
}
