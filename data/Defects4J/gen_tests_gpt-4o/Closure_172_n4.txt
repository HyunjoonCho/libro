
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import com.google.javascript.jscomp.*;
import com.google.javascript.rhino.Node;
import org.junit.Test;

public class PrototypePropertyTypeInferenceTest {

    @Test
    public void testPrototypePropertyTypeInference() {
        String jsCode = ""
                + "/** @param {Object} a */\n"
                + "function f(a) {\n"
                + "  a.prototype = '__proto';\n"
                + "}\n"
                + "/** @param {Object} a */\n"
                + "function g(a) {\n"
                + "  a.prototype = function(){};\n"
                + "}\n";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setWarningsGuard(new WarningGuard() {
            @Override
            public CheckLevel level(JSError error) {
                if (error.getDescription().contains("assignment to property prototype of Object")) {
                    // We expect a warning, let's assert it
                    return CheckLevel.ERROR;
                }
                return CheckLevel.OFF;
            }
        });

        compiler.compile(SourceFile.fromCode("externs.js", ""), SourceFile.fromCode("test.js", jsCode), options);
        Node root = compiler.getRoot();

        assertTrue("Expected a type inference error for assignment to prototype property", compiler.hasErrors());
    }
}
