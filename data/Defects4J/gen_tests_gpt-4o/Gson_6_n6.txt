
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.junit.Test;

import static org.junit.Assert.fail;

public class GsonRegressionTest {

    @Test
    public void testNullTypeAdapterFactory() {
        TypeAdapterFactory nullReturningFactory = new TypeAdapterFactory() {
            @Override
            public <T> com.google.gson.TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
                return null; // Intentionally returning null to simulate the regression
            }
        };

        try {
            Gson gson = new GsonBuilder().registerTypeAdapterFactory(nullReturningFactory).create();
            // Attempt to serialize and deserialize an object
            String json = gson.toJson("Test String");
            gson.fromJson(json, String.class);
            // No exception should be thrown
        } catch (NullPointerException e) {
            fail("Gson should handle null TypeAdapter without throwing NullPointerException");
        }
    }
}
