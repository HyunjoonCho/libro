
import org.junit.Test;
import static org.junit.Assert.assertEquals;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Node;

public class XPathUnionTest {

    @Test
    public void testUnionOperationDocumentOrder() throws Exception {
        // Set up XML document
        String xml = "<MAIN><A>avalue</A><B>bvalue</B></MAIN>";
        
        // Parse XML
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));

        // Create XPath
        XPathFactory xPathFactory = XPathFactory.newInstance();
        XPath xpath = xPathFactory.newXPath();

        // Evaluate the XPath expression
        String expression = "string(/MAIN/B | /MAIN/A)";
        String result = (String) xpath.evaluate(expression, doc, XPathConstants.STRING);

        // Assert that the result matches the expected value
        assertEquals("avalue", result);
    }
}
