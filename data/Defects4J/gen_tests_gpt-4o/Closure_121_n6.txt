script
// Original code
const fs = require('fs');
const { exec } = require('child_process');

const originalCode = `
// ==ClosureCompiler==
// @compilation_level ADVANCED_OPTIMIZATIONS
// ==/ClosureCompiler==
var uid;
function reset() {
  uid = Math.random();
}
function doStuff() {
  reset();
  var _uid = uid;

  if (uid < 0.5) {
    doStuff();
  }

  if (_uid !== uid) {
    throw 'reset() was called';
  }
}
doStuff();
`;

// Save the original code to a file
fs.writeFileSync('original.js', originalCode);

// Use Closure Compiler to compile with advanced optimizations
exec('closure-compiler --compilation_level ADVANCED_OPTIMIZATIONS original.js --js_output_file=optimized.js', (error, stdout, stderr) => {
  if (error) {
    console.error(`Error during compilation: ${stderr}`);
    return;
  }

  // Read the compiled code
  const optimizedCode = fs.readFileSync('optimized.js', 'utf8');

  console.log('--- Optimized Code ---');
  console.log(optimizedCode);

  // Now you can execute the optimized code to observe the behavior
  try {
    eval(optimizedCode);
  } catch (e) {
    console.error('Error during execution:', e);
  }
});
