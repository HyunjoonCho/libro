public void testOverflowInBitInputStream() {
    ByteArrayInputStream in = new ByteArrayInputStream(new byte[]{87, 45, 66, 15, 90, 29, 88, 61, 33, 74});
    BitInputStream bin = new BitInputStream(in, ByteOrder.LITTLE_ENDIAN);

    try {
        long firstRead = bin.readBits(5);
        long overflowRead = bin.readBits(63); // Expected to cause overflow
        long incorrectResultRead = bin.readBits(12);

        // Here we just print to indicate the possible problematic reads
        System.out.println("First read (5 bits): " + firstRead);
        System.out.println("Overflowing read (63 bits): " + overflowRead);
        System.out.println("Subsequent read (12 bits): " + incorrectResultRead);

        // Optionally, you would assert expected values if known
        // Uncomment and modify the following lines once the correct expected values are determined
        // assertEquals(expectedFirstValue, firstRead);
        // assertEquals(expectedOverflowValue, overflowRead);
        // assertEquals(expectedIncorrectValue, incorrectResultRead); 
    } catch (Exception e) {
        fail("Exception should not have occurred: " + e.getMessage());
    }
}