
import java.io.BufferedReader;
import java.io.IOException;
import java.io.StringReader;

class ExtendedBufferReader extends BufferedReader {
    private int lineCount = 0;
    private boolean lastCharWasCR = false;

    public ExtendedBufferReader(StringReader in) {
        super(in);
    }

    @Override
    public int read() throws IOException {
        int c = super.read();
        if (c == '\n' && !lastCharWasCR) {
            lineCount++;
        }
        if (c == '\r') {
            lineCount++;
            lastCharWasCR = true;
        } else {
            lastCharWasCR = false;
        }
        return c;
    }

    public int getLineCount() {
        return lineCount;
    }
}

public class ExtendedBufferReaderTest {
    @org.junit.Test
    public void testEOLHandling() throws IOException {
        String input = "First line\rSecond line\nThird line\r\nFourth line";

        ExtendedBufferReader reader = new ExtendedBufferReader(new StringReader(input));

        // Read character by character
        while (reader.read() != -1) {
            // Consume the input
        }

        // Check line count
        int lineCount = reader.getLineCount();
        
        // Expected: 4 lines, as there are 4 EOL sequences.
        assertEquals("The line count should be 4", 4, lineCount);

        // Now check using readLine()
        reader = new ExtendedBufferReader(new StringReader(input));
        int lines = 0;
        while (reader.readLine() != null) {
            lines++;
        }

        // Both methods should agree on the line count
        assertEquals(lines, lineCount);
    }

    private void assertEquals(String message, int expected, int actual) {
        if (expected != actual) {
            throw new AssertionError(message + " - Expected: " + expected + ", but was: " + actual);
        }
    }
}
