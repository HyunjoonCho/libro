
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class TarArchiveEntryTest {

    @Test
    public void testParseTarHeaderForSize() throws Exception {
        // Create a byte array to simulate the TAR header for an entry
        byte[] header = new byte[512]; // TAR headers are typically 512 bytes
        
        // Specify a size of 1024 in the octal field (11 octal digits + 1 trailing space)
        String sizeInOctal = "00000000100 "; // 256 in octal with an extra space
        byte[] sizeField = sizeInOctal.getBytes("ASCII");
        
        // Place the size in the correct position in the header (offset 124 for size)
        System.arraycopy(sizeField, 0, header, 124, sizeField.length);

        // Create a TarArchiveEntry to parse the header
        TarArchiveEntry entry = new TarArchiveEntry(header);

        // The expected size should be 256 (0x100 in octal)
        long expectedSize = 64; // 00000000100 (octal) = 64 (decimal)

        // Validate the parsed size
        assertEquals("Parsed size should match expected size", expectedSize, entry.getSize());
    }
}
