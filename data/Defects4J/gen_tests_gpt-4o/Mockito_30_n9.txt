public void testDefaultMockingDetails_shouldGetExtraInterfaces() {
    Bar bar = mock(Bar.class, withSettings().extraInterfaces(List.class, Observer.class));
    MockingDetails mockingDetails = mockingDetails(bar);
    assertTrue(mockingDetails.getExtraInterfaces().contains(List.class));
    assertTrue(mockingDetails.getExtraInterfaces().contains(Observer.class));
}

public void testNoJUnitDependencies_pureMockitoShouldNotDependOnJUnit() {
    try {
        Class<?> classToLoad = Class.forName("org.mockito.configuration.MockitoConfiguration");
        Package aPackage = classToLoad.getPackage();
        assertNotNull(aPackage);
        assertFalse(aPackage.getName().startsWith("org.junit"));
    } catch (ClassNotFoundException e) {
        fail("Should be able to load Mockito configuration without JUnit dependency");
    }
}

public void testClassLoaders_excludingClassLoaderCannotLoadClassesWithoutCorrectSourceURL() {
    try {
        ClassLoader excludingLoader = ClassLoaders.excluding(getClass().getClassLoader(), "junit.");
        excludingLoader.loadClass("junit.framework.TestCase");
        fail("Should have thrown ClassNotFoundException for junit.framework.TestCase");
    } catch (ClassNotFoundException e) {
        // Expected exception
    }
}