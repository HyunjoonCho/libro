
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Result;
import org.junit.Test;

import static org.junit.Assert.assertFalse;

public class InvalidJSCDeterministicTest {

    @Test
    public void testJSCDeterministic() {
        Compiler compiler = new Compiler();

        // Set compiler options
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // JavaScript source
        String jsCode = "" +
                "var t = null;\n" +
                "\n" +
                "window.test = function() {\n" +
                "  if (t != null) {\n" +
                "    t = null;\n" +
                "  }\n" +
                "  t = 1;\n" +
                "};";

        // Compile the JavaScript code
        Result result = compiler.compile(
                JSSourceFile.fromCode("externs.js", ""), // Externs file can be empty
                JSSourceFile.fromCode("input.js", jsCode),
                options
        );

        // Check to ensure there are no warnings
        assertFalse("Compilation should not produce warnings", result.warnings.length > 0);
    }
}
