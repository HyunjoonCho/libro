
import org.joda.time.DateTimeFieldType;
import org.joda.time.Partial;
import org.junit.Test;

import static org.joda.time.DateTimeFieldType.clockhourOfDay;
import static org.joda.time.DateTimeFieldType.hourOfDay;
import static org.joda.time.DateTimeFieldType.year;

public class PartialTest {

    @Test(expected = IllegalArgumentException.class)
    public void testInvalidPartialConstructor() {
        new Partial(new DateTimeFieldType[]{clockhourOfDay(), hourOfDay()}, new int[]{1, 1});
    }

    @Test
    public void testInvalidPartialWithMethod() {
        Partial partial = new Partial(clockhourOfDay(), 1).with(hourOfDay(), 1);
        assert partial.size() == 2;
        assert partial.getValue(0) == 1;
        assert partial.getValue(1) == 1;
    }

    @Test(expected = IllegalArgumentException.class)
    public void testInvalidPartialComparison() {
        Partial partial1 = new Partial(clockhourOfDay(), 1).with(hourOfDay(), 1);
        Partial partial2 = new Partial(hourOfDay(), 1).with(clockhourOfDay(), 1);
        partial1.isEqual(partial2);
    }
}
