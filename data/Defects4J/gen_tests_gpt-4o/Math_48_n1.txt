
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.solvers.PegasusSolver;
import org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.exception.NoBracketingException;
import org.apache.commons.math3.exception.TooManyEvaluationsException;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class SolverTest {

    @Test
    public void testRegulaFalsiSolverExceedsEvaluations() {
        UnivariateFunction f = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return Math.exp(x) - Math.pow(Math.PI, 3.0);
            }
        };

        UnivariateSolver solver = new RegulaFalsiSolver();
        assertThrows(TooManyEvaluationsException.class, () -> {
            solver.solve(100, f, 1, 10);
        }, "Expected RegulaFalsiSolver to exceed maximum evaluations");
    }

    @Test
    public void testPegasusSolverFindsRoot() {
        UnivariateFunction f = new UnivariateFunction() {
            @Override
            public double value(double x) {
                return Math.exp(x) - Math.pow(Math.PI, 3.0);
            }
        };

        UnivariateSolver solver = new PegasusSolver();
        try {
            double root = solver.solve(100, f, 1, 10);
            System.out.println("PegasusSolver found root: " + root);
        } catch (TooManyEvaluationsException | NoBracketingException e) {
            fail("PegasusSolver should not have thrown an exception");
        }
    }
}
