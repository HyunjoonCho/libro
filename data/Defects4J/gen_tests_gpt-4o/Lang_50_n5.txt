
import org.apache.commons.lang3.time.FastDateFormat;
import java.text.ParseException;
import java.util.Locale;
import java.util.Date;
import org.junit.After;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class FastDateFormatBugTest {

    private Locale defaultLocale;

    @After
    public void tearDown() {
        // Restore the default locale after the test is complete
        if (defaultLocale != null) {
            Locale.setDefault(defaultLocale);
        }
    }

    @Test
    public void testFastDateFormatLocaleChange() throws ParseException {
        defaultLocale = Locale.getDefault();

        // Set the default locale to US and format a test date
        Locale.setDefault(Locale.US);
        FastDateFormat dateFormatUS = FastDateFormat.getDateInstance(FastDateFormat.SHORT);
        String dateUS = dateFormatUS.format(new Date(0)); // Epoch date

        // Change the default locale to France
        Locale.setDefault(Locale.FRANCE);
        FastDateFormat dateFormatFR = FastDateFormat.getDateInstance(FastDateFormat.SHORT);

        // Format the same date again and test if the locale has changed
        String dateFR = dateFormatFR.format(new Date(0));

        // US formatted date should be different from French formatted date if the bug is fixed
        // The US format is typically mm/dd/yy and French is typically dd/mm/yy
        assertEquals("Incorrect handling of locale change. Expected different formatting for different locales.",
                dateUS, dateFR);
    }
}
