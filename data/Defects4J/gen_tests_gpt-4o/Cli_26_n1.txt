
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionBuilder;
import org.junit.Test;
import static org.junit.Assert.*;

public class OptionBuilderTest {

    @Test
    public void testOptionBuilderResetAfterException() {
        try {
            // Creating an option with an invalid name to trigger IllegalArgumentException
            OptionBuilder.withLongOpt("longOption");   // Setting a long option
            OptionBuilder.withDescription("A sample description");
            Option invalidOption = OptionBuilder.create(""); // Invalid empty name
        } catch (IllegalArgumentException e) {
            // Exception is expected; ensure OptionBuilder is reset
        }

        // Now try to create a new valid Option and check if it still has unwanted settings from previous failure
        OptionBuilder.withLongOpt(null); // Reset the long option
        OptionBuilder.withDescription(null); // Reset the description

        OptionBuilder.hasArg(); // Expect that OptionBuilder should not automatically carry previous settings
        Option validOption = OptionBuilder.create("a");

        // Assert that the valid option does not have the long option and description from previous failed creation
        assertNull(validOption.getLongOpt());
        assertNull(validOption.getDescription());
    }
}
