script
function testAnonymousObjectTypeInferenceInconsistency() {
    /**
     * @param {{prop: string, prop2: (string|undefined)}} record
     */
    var func = function(record) {
        console.assert(record.prop !== undefined, "Expected 'prop' to be defined in func");
    }

    /**
     * @param {{prop: string, prop2: (string|undefined)}|string} record
     */
    var func2 = function(record) {
        if (typeof record == 'string') {
            console.log(record);
        } else {
            console.assert(record.prop !== undefined, "Expected 'prop' to be defined in func2");
        }
    }

    try {
        func({prop: 'a'}); // This should pass without errors

        // This is supposed to simulate a failure scenario due to the bug
        // The error message given should prompt the same kind of failure
        try {
            func2({prop: 'a'}); // This should fail due to type inference inconsistency
            console.error("Test failed: func2 did not throw expected error.");
        } catch (e) {
            console.log("Test passed: func2 threw expected error.");
        }
    } catch (e) {
        console.error("Test failed: unexpected error occurred.");
    }
}

// Run the test
testAnonymousObjectTypeInferenceInconsistency();
