public void testUnionTypeInferenceInconsistency() {
    // Dummy logger implementation for testing
    class DummyLogger {
        void log(String message) {
            // Intentionally left blank for test purposes
        }
    }
    DummyLogger logger = new DummyLogger();

    // Function simulating 'func' behavior
    java.util.function.Consumer<Map<String, Object>> func = (record) -> {
        logger.log((String) record.get("prop"));
    };

    // Function simulating 'func2' behavior
    java.util.function.Consumer<Object> func2 = (record) -> {
        if (record instanceof String) {
            logger.log((String) record);
        } else if (record instanceof Map) {
            logger.log((String) ((Map<String, Object>) record).get("prop"));
        }
    };

    Map<String, Object> correctRecord = new HashMap<>();
    correctRecord.put("prop", "a");

    func.accept(correctRecord);
    func2.accept(correctRecord);
}