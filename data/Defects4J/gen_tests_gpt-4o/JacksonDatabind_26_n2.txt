
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;

import java.io.*;

import org.junit.Test;
import static org.junit.Assert.*;

public class ObjectReaderSerializationTest {

    @Test
    public void testObjectReaderSerialization() {
        ObjectMapper mapper = new ObjectMapper();
        ObjectReader objectReader = mapper.reader();

        try {
            // Serialize the ObjectReader
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            ObjectOutputStream objectOutputStream = new ObjectOutputStream(byteArrayOutputStream);
            objectOutputStream.writeObject(objectReader);
            objectOutputStream.close();

            // Deserialize the ObjectReader
            ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());
            ObjectInputStream objectInputStream = new ObjectInputStream(byteArrayInputStream);
            ObjectReader deserializedObjectReader = (ObjectReader) objectInputStream.readObject();
            objectInputStream.close();

            // We cannot directly assert equality of objectReaders, but we can check if they can work similarly
            String testJson = "{\"key\":\"value\"}";
            Object deserializedOutput = deserializedObjectReader.readTree(testJson);
            assertEquals(mapper.readTree(testJson), deserializedOutput);

        } catch (IOException | ClassNotFoundException e) {
            fail("Exception occurred during serialization/deserialization: " + e.getMessage());
        }
    }
}
