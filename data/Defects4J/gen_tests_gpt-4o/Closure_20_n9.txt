
import static org.junit.Assert.assertEquals;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Function;
import org.mozilla.javascript.ScriptableObject;
import org.junit.Test;

public class StringConversionTest {

    @Test
    public void testStringConversionOptimization() {
        // Setup Rhino JavaScript Context
        Context context = Context.enter();
        try {
            // Create a new scope
            Scriptable scope = context.initStandardObjects();

            // Define the JavaScript object with valueOf function returning undefined
            String jsCode = ""
                + "var f = {"
                + "  valueOf: function() { return undefined; }"
                + "};"
                + "f";
            
            // Execute the JavaScript code and get the object
            ScriptableObject jsObject = (ScriptableObject) context.evaluateString(scope, jsCode, "testScript", 1, null);

            // Use the function String(f) inside JavaScript
            Object result = context.evaluateString(scope, "String(f)", "testStringConversion", 1, null);

            // Assert the expected result, which should be "[object Object]"
            assertEquals("[object Object]", Context.toString(result));
        } finally {
            Context.exit();
        }
    }
}
