public void testFilteringParserDelegateMissingEndObject() throws IOException {
    String inputJson = "{ \"a\":123, \"array\":[1,2], \"ob\": { \"value0\":2, \"value\":3, \"value2\":4 }, \"b\":true }";
    JsonParser baseParser = new JsonFactory().createParser(inputJson);
    
    FilteringParserDelegate parser = new FilteringParserDelegate(baseParser,
           new NameMatchFilter("value"),
           true, // includePath
           false // multipleMatches
    );

    StringBuilder output = new StringBuilder();
    JsonGenerator generator = new JsonFactory().createGenerator(new StringWriter()) {
        @Override
        public void writeStartObject() {
            output.append("{");
        }

        @Override
        public void writeEndObject() {
            output.append("}");
        }

        @Override
        public void writeFieldName(String name) throws IOException {
            output.append("\"").append(name).append("\":");
        }

        @Override
        public void writeNumber(int v) throws IOException {
            output.append(v);
        }
    };

    while (parser.nextToken() != null) {
        generator.copyCurrentEvent(parser);
    }
    generator.close();

    assertEquals("{\"ob\":{\"value\":3}}", output.toString());
}