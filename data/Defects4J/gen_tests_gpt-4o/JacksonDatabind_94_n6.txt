
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidTypeIdException;
import org.junit.Test;

public class C3P0GadgetsBlockingTest {

    @Test(expected = InvalidTypeIdException.class)
    public void testC3P0FactoryAdapterGadgetBlocked() throws Exception {
        // Setup the ObjectMapper for default typing
        ObjectMapper mapper = new ObjectMapper();
        mapper.enableDefaultTyping();

        // Example payload that would exploit the FactoryAdapter class
        String jsonPayload = "[\"com.mchange.v2.c3p0.impl.DefaultConnectionTester\", {}]";

        // Attempt to deserialize (should throw an InvalidTypeIdException)
        mapper.readValue(jsonPayload, Object.class);
    }

    @Test(expected = InvalidTypeIdException.class)
    public void testC3P0PoolBackedDataSourceGadgetBlocked() throws Exception {
        // Setup the ObjectMapper for default typing
        ObjectMapper mapper = new ObjectMapper();
        mapper.enableDefaultTyping();

        // Example payload that would exploit the PoolBackedDataSource class
        String jsonPayload = "[\"com.mchange.v2.c3p0.impl.PoolBackedDataSourceBase\", {}]";

        // Attempt to deserialize (should throw an InvalidTypeIdException)
        mapper.readValue(jsonPayload, Object.class);
    }
}
