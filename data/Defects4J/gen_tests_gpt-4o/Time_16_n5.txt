
import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.MutableDateTime;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DateTimeFormatterParseIntoTest {

    @Test
    public void testParseIntoWithoutYear() {
        DateTimeFormatter formatter = DateTimeFormat.forPattern("MM-dd");
        
        // Assume the current year in DateTime is a non-leap year like 2023
        DateTime initialDateTime = new DateTime(2023, 1, 10, 0, 0);
        MutableDateTime mutableDateTime = initialDateTime.toMutableDateTime();

        // Parsing a date string without a year should not change the year from the original DateTime
        int parsedLen = formatter.parseInto(mutableDateTime, "02-28", 0);
        
        assertEquals(8, parsedLen); // Verify entire string parsed successfully
        assertEquals(2023, mutableDateTime.getYear()); // Year should remain 2023
        assertEquals(2, mutableDateTime.getMonthOfYear()); // Month should be February
        assertEquals(28, mutableDateTime.getDayOfMonth()); // Day should be 28
    }
}
