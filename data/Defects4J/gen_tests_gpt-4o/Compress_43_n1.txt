
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.zip.ZipFile;

import org.junit.Test;
import static org.junit.Assert.*;

public class ZipVersionTest {

    @Test
    public void testVersionNeededToExtractMismatch() throws Exception {
        // Create a temporary ZIP file
        File zipFile = File.createTempFile("test-output", ".zip");

        try (FileOutputStream fos = new FileOutputStream(zipFile);
             BufferedOutputStream bos = new BufferedOutputStream(fos);
             ZipArchiveOutputStream zos = new ZipArchiveOutputStream(bos)) {
             
            ZipArchiveEntry entry = new ZipArchiveEntry("test.txt");
            zos.putArchiveEntry(entry);
            zos.write("content".getBytes());
            zos.closeArchiveEntry();
        }

        try (ZipFile zf = new ZipFile(zipFile)) {
            ZipFile.Entry localFileHeaderEntry = zf.getEntry("test.txt");
            int localHeaderVersion = localFileHeaderEntry.getVersionNeeded();

            // Read the central directory entry
            try (FileInputStream fis = new FileInputStream(zipFile)) {
                // Assuming you have a utility function to read central directory version
                int centralDirectoryVersion = getCentralDirectoryVersion(fis);

                // Check if both local file header and central directory have the same version
                assertEquals("Version needed to extract mismatch between local header and central directory",
                        localHeaderVersion, centralDirectoryVersion);
            }
        } finally {
            if (zipFile.exists()) {
                zipFile.delete();
            }
        }
    }

    // Example function to read the central directory version
    private int getCentralDirectoryVersion(FileInputStream fis) {
        // Implement method to read and return central directory version
        // This requires parsing the central directory structure
        return 20; // Replace with actual logic
    }
}
