
import org.apache.commons.math3.stat.correlation.PearsonsCorrelation;
import org.apache.commons.math3.distribution.TDistribution;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.linear.BlockRealMatrix;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class PearsonsCorrelationBugTest {

    @Test
    public void testPearsonsCorrelationPValuePrecision() {
        double[][] data = {
            {2.1, 2.5, 6.8, 8.0},
            {1.1, 1.5, 1.8, 1.0},
            {3.1, 3.5, 3.8, 3.0}
        };
        RealMatrix matrix = new BlockRealMatrix(data);
        PearsonsCorrelation pearsonsCorrelation = new PearsonsCorrelation(matrix);

        // Obtain p-values using the library's method
        RealMatrix pValuesMatrix = pearsonsCorrelation.getCorrelationPValues();

        // Example data for direct precision test, could be adjusted for specific case
        int degreesOfFreedom = 7; // As example
        double tStatistic = 10; // A large value to ensure precision problem appears

        TDistribution tDistribution = new TDistribution(degreesOfFreedom);

        // Get p-value using library's method similar to the bug description
        double pValueLibrary = 2 * (1 - tDistribution.cumulativeProbability(tStatistic));

        // Get p-value using the suggested fix in the bug report
        double pValueFixed = 2 * tDistribution.cumulativeProbability(-tStatistic);

        // Assert - expecting pValueLibrary to be zero in some cases due to precision limit
        assertEquals(0.0, pValueLibrary, 1e-16);

        // Assert - expecting the fixed method to provide a correct small p-value
        System.out.println("P-Value using library method (could be zero due to issue): " + pValueLibrary);
        System.out.println("P-Value using alternative method to fix precision issue: " + pValueFixed);

        // There should be a notable difference in precision
        assertEquals("Fix for precision issue with p-value calculation failed.",
                pValueFixed, pValueFixed, 1e-16);
    }
}
