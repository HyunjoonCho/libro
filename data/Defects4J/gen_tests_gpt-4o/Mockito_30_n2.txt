public void testDefaultMockingDetailsTest_shouldGetExtraInterfaces() {
    Bar bar = mock(Bar.class, withSettings().extraInterfaces(List.class, Observer.class));
    MockingDetails details = mockingDetails(bar);
    assertTrue(details.getExtraInterfaces().contains(List.class));
    assertTrue(details.getExtraInterfaces().contains(Observer.class));
}

public void testNoJUnitDependenciesTest_pureMockitoShouldNotDependJUnitByteBuddy() {
    try {
        checkDependency("org.mockito.configuration.MockitoConfiguration");
        fail("Expected AssertionError due to JUnit dependency");
    } catch (AssertionError e) {
        assertTrue(e.getMessage().contains("has some dependency to JUnit"));
    }
}

public void testClassLoadersTest_excludingClassLoaderCannotLoadClassesWhenNoCorrectSourceUrlSet() {
    try {
        ClassLoader classLoader = new ClassLoaders.ExcludingURLClassLoader(new URL[]{});
        classLoader.loadClass("org.mockito.internal.progress.TimesTest");
        fail("Expected ClassNotFoundException due to excluded classes");
    } catch (ClassNotFoundException e) {
        assertTrue(e.getMessage().contains("excluded"));
    }
}