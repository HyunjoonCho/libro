public void testGlobalThisWarning() {
    String jsCode = "/** @constructor */\n" +
                    "function Foo() {\n" +
                    "    this._bar = null;\n" +
                    "};\n" +
                    "/** @this {Foo} */\n" +
                    "function writeMethodWithAnnotation() {\n" +
                    "    this._bar = 123;\n" +
                    "}\n" +
                    "/** @this {Foo} */\n" +
                    "function readMethodWithAnnotation() {\n" +
                    "    return this._bar;\n" +
                    "}\n" +
                    "function writeMethodWithoutAnnotation() {\n" +
                    "    this._bar = 123;\n" +
                    "}\n" +
                    "function readMethodWithoutAnnotation() {\n" +
                    "    return this._bar;\n" +
                    "}\n";
    
    // Assuming using some kind of JS compiler API to check for warnings
    List<String> warnings = compileAndCheckForWarnings(jsCode);
    assertTrue(warnings.contains("writeMethodWithoutAnnotation: dangerous use of the global this object"));
    assertTrue(warnings.contains("readMethodWithoutAnnotation: dangerous use of the global this object"));
}