
import com.google.javascript.jscomp.CommandLineRunner;

public class ClosureCompilerTest {

    public static void main(String[] args) {
        String[] closureArgs = {
            "--compilation_level", "ADVANCED_OPTIMIZATIONS",
            "--js_output_file", "compiled.js",
            "--js", "input.js"
        };

        // Define the JavaScript input as it would be in input.js
        String jsCode = 
            "try {\n" +
            "  var x = 5;\n" +
            "} catch(e) {\n" +
            "  var s = 'FAIL' + e.name + ': ' + e.message;\n" +
            "}";
        
        // Create a temporary file to simulate "input.js"
        try {
            java.nio.file.Path tempFile = java.nio.file.Files.createTempFile("input", ".js");
            java.nio.file.Files.write(tempFile, jsCode.getBytes());

            closureArgs[4] = tempFile.toString();  // Update the --js argument to the temp file

            CommandLineRunner compiler = new CommandLineRunner(closureArgs);
            compiler.execute();

            // Delete the temporary file
            java.nio.file.Files.delete(tempFile);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
