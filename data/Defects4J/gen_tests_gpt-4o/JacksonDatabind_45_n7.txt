
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

// A sample class to serialize/deserialize with an explicit shape
class SampleWithNumberShape {
    @JsonFormat(shape = JsonFormat.Shape.NUMBER)
    public int number;

    public SampleWithNumberShape(int number) {
        this.number = number;
    }
}

public class NumberShapeTest {

    @Test
    public void testExplicitNumberShapeOverridesLocale() throws Exception {
        // Create an object and explicitly set shape to NUMBER
        SampleWithNumberShape sample = new SampleWithNumberShape(123);
        
        ObjectMapper mapper = new ObjectMapper();
        
        // Serialize the object
        String json = mapper.writeValueAsString(sample);
        
        // Assert that the number is serialized as a numeric value, not a string
        assertEquals("{\"number\":123}", json);
        
        // Deserialize the JSON
        SampleWithNumberShape result = mapper.readValue(json, SampleWithNumberShape.class);
        
        // Assert that the value is correctly deserialized
        assertEquals(123, result.number);
    }
}
