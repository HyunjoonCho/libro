
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;
import static org.junit.Assert.*;

import java.util.Collections;

public class ClosureCompilerBugTest {

    @Test
    public void testTernaryOperatorCompilation() {
        String originalCode = "var a = (Math.random()>0.5? '1' : 2) + 3 + 4;";
        
        // Setup the compiler
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // You can specify whether to run in ADVANCED_OPTIMIZATIONS mode here
        CommandLineRunner.setOptionsForSimpleMode(options);
        
        // Compile the code
        SourceFile input = SourceFile.fromCode("input.js", originalCode);
        Result result = compiler.compile(Collections.emptyList(), Collections.singletonList(input), options);
        
        // Get the compiled source code
        String compiledCode = compiler.toSource();
        
        // Check that the compiled code is incorrect as per the bug description
        String expectedIncorrectOutput = "var a = (0.5 < Math.random() ? 1 : 2) + 7;";
        assertEquals(expectedIncorrectOutput, compiledCode);
    }
}
