public void testTarArchiveInputStreamWithLargeUserId() throws IOException {
    byte[] tarBytes = createTarWithLargeUserId();
    ByteArrayInputStream bais = new ByteArrayInputStream(tarBytes);
    TarArchiveInputStream tais = new TarArchiveInputStream(bais);

    try {
        TarArchiveEntry entry = tais.getNextTarEntry();
        assertNotNull(entry);
    } catch (IllegalArgumentException e) {
        fail("TarArchiveInputStream failed to handle large user-id: " + e.getMessage());
    }
}

// Helper method to create a tar file with a large user-id encoded
private byte[] createTarWithLargeUserId() throws IOException {
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    TarArchiveOutputStream taos = new TarArchiveOutputStream(baos);

    TarArchiveEntry entry = new TarArchiveEntry("test.txt");
    entry.setSize(4);
    entry.setUserId(62410554); // Large user-id that triggers the issue
    taos.putArchiveEntry(entry);
    taos.write(new byte[]{0, 1, 2, 3});
    taos.closeArchiveEntry();
    taos.close();

    return baos.toByteArray();
}