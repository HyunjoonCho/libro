
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;
import org.junit.Test;

class JsonSchema {
    public String name; // Field in base class
}

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = JsonMapSchema.class)
class JsonMapSchema extends JsonSchema {
    public String[] tables;
}

class JsonRoot {
    public JsonMapSchema[] schemas;
}

public class JsonDeserializationTest {

    @Test(expected = com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.class)
    public void testDeserializeWithBaseClassField() throws Exception {
        // Example JSON that includes the 'name' field
        String json = "{ \"schemas\": [" +
                "{ \"name\": \"FoodMart\", \"tables\": [ \"time_by_day\" ] } ]}";

        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.setDefaultTyping(new StdTypeResolverBuilder(ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE));

        // Attempt to deserialize the JSON into the JsonRoot class
        objectMapper.readValue(json, JsonRoot.class);
    }
}
