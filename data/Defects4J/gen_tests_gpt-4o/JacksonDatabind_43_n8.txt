
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;

import org.junit.jupiter.api.Test;

import java.io.IOException;

import static org.junit.jupiter.api.Assertions.assertThrows;

public class ObjectIdHandlingTest {

    static class CustomDeserializer extends StdDeserializer<Object> {

        protected CustomDeserializer() {
            super(Object.class);
        }

        @Override
        public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
            return ctxt.handleUnexpectedToken(Object.class, p);
        }
    }

    @Test
    public void testExplicitNullTokenHandling() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new com.fasterxml.jackson.databind.module.SimpleModule().addDeserializer(Object.class, new CustomDeserializer()));

        // Test with an explicit null JSON
        String json = "null";

        // Expecting an exception to be thrown as null tokens should not be handled by the deserializer
        assertThrows(IOException.class, () -> {
            mapper.readValue(json, Object.class);
        });
    }
}
