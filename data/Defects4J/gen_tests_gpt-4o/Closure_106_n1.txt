public void testCollapsePropertiesException() {
    String jsCode = "var exported = {}; exported.namespace = exported.namespace || {}; " +
                    "goog.exportSymbol('exported.namespace.SomeFunction', exported.namespace.SomeFunction = function() {});";
    
    CompilerOptions options = new CompilerOptions();
    CompilationLevel.ADVANCED_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
    Compiler compiler = new Compiler();

    try {
        Node ast = new JsAst(SourceFile.fromCode("test.js", jsCode)).getAstRoot(compiler);
        compiler.compile(ImmutableList.of(SourceFile.fromCode("externs.js", "")), 
                         ImmutableList.of(ast), 
                         options);
        fail("Expected IllegalArgumentException was not thrown");
    } catch (RuntimeException e) {
        assertTrue(e.getCause() instanceof IllegalArgumentException);
    }
}