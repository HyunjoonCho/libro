public void testSwitchedOrderOfDeleteKeyAndKeyInStatements() {
    Map<String, String> customData = new HashMap<>();
    customData.put("key", "value");

    String result = testRemoveKey(customData, "key");
    assertEquals("value", result);
    assertFalse(customData.containsKey("key"));

    // Simulating the "compiled" version logic
    customData.put("key", "value");
    result = compiledTestRemoveKey(customData, "key");
    assertNull(result);
    assertFalse(customData.containsKey("key"));
}

private String testRemoveKey(Map<String, String> dataSlot, String key) {
    String retval = dataSlot != null ? dataSlot.get(key) : null;
    boolean hadKey = dataSlot != null && dataSlot.containsKey(key);

    if (dataSlot != null) {
        dataSlot.remove(key);
    }

    return hadKey ? retval : null;
}

private String compiledTestRemoveKey(Map<String, String> dataSlot, String key) {
    String retval = dataSlot != null ? dataSlot.get(key) : null;
    if (dataSlot != null) {
        dataSlot.remove(key);
    }
    return (dataSlot != null && dataSlot.containsKey(key)) ? retval : null;
}