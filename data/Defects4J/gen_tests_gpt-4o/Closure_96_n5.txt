
import com.google.javascript.jscomp.*;
import com.google.javascript.rhino.Node;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertTrue;

public class VarArgsTypeCheckTest {

    @Test
    public void testVarArgsTypeChecking() {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);
        WarningLevel.VERBOSE.setOptionsForWarningLevel(options);
        
        String code = ""
            + "/**\n"
            + " * @param {...string} var_args\n"
            + " */\n"
            + "function foo(var_args) {\n"
            + "  return arguments.length;\n"
            + "}\n"
            + "foo('hello');\n"
            + "foo(123);\n"
            + "foo('hello', 123);\n";

        SourceFile input = SourceFile.fromCode("test.js", code);
        List<SourceFile> inputs = new ArrayList<>();
        inputs.add(input);

        Result result = compiler.compile(new ArrayList<>(), inputs, options);

        boolean foundTypeError = false;
        for (JSError warning : result.warnings) {
            if (warning.getType() == RhinoErrorReporter.TYPE_MISMATCH) {
                foundTypeError = true;
            }
        }

        assertTrue("Expected type-check warning for second parameter in third foo() call", foundTypeError);
    }
}
