
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.module.kotlin.ExtensionsKt;
import org.junit.Test;
import kotlin.jvm.internal.Reflection;
import java.math.BigDecimal;

import static org.junit.Assert.assertEquals;

public class BigDecimalSerializationTest {

    public static class Test {
        @JsonFormat(shape = JsonFormat.Shape.STRING)
        private final BigDecimal value;

        public Test(BigDecimal value) {
            this.value = value;
        }

        public BigDecimal getValue() {
            return value;
        }
    }

    @Test
    public void testBigDecimalSerialization() throws Exception {
        ObjectMapper mapper = ExtensionsKt.jacksonObjectMapper((ObjectMapper) Reflection.factory(ObjectMapper.class))
                .configure(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN, true);

        Test test = new Test(new BigDecimal("0.0000000005"));
        String json = mapper.writeValueAsString(test);

        assertEquals("{\"value\":\"0.0000000005\"}", json);
    }
}
