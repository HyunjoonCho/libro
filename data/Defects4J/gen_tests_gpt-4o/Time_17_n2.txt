
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.junit.Test;

import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class DateTimeOverlapTest {

    @Test
    public void testWithLaterOffsetAtOverlap() {
        // Set up the environment
        TimeZone.setDefault(TimeZone.getTimeZone("America/Sao_Paulo"));
        DateTimeZone.setDefault(DateTimeZone.forID("America/Sao_Paulo"));

        // Create a DateTime object and perform the sequence of operations
        DateTime dtch = new DateTime(2012, 2, 25, 5, 5, 5, 5).withTimeAtStartOfDay().plusDays(1).minusMillis(1);
        dtch = dtch.plus(60001);

        // Use withEarlierOffsetAtOverlap()
        dtch = dtch.withEarlierOffsetAtOverlap();
        assertEquals("2012-02-25T23:01:00.000-02:00", dtch.toString());

        // Use withLaterOffsetAtOverlap() and test the expected behavior
        dtch = dtch.withLaterOffsetAtOverlap();
        
        // Assert that the offset has switched back to -03:00
        assertEquals("2012-02-25T23:01:00.000-03:00", dtch.toString());
    }
}
