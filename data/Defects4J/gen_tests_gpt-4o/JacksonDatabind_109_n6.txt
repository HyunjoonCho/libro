
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.json.JsonMapper;
import com.fasterxml.jackson.module.kotlin.KotlinModule;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class BigDecimalSerializationTest {

    public static class TestEntity {
        @JsonFormat(shape = JsonFormat.Shape.STRING)
        public BigDecimal value;

        public TestEntity(BigDecimal value) {
            this.value = value;
        }

        public TestEntity() {
        }
    }

    @Test
    public void testBigDecimalSerializationWithJsonFormat() throws Exception {
        ObjectMapper mapper = JsonMapper.builder()
                .addModule(new KotlinModule())
                .enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN)
                .build();

        TestEntity testEntity = new TestEntity(new BigDecimal("0.0000000005"));
        String jsonResult = mapper.writeValueAsString(testEntity);

        // The expected output should be {"value":"0.0000000005"} but it is {"value":"5.0E-10"}
        assertEquals("{\"value\":\"0.0000000005\"}", jsonResult);
    }
}
