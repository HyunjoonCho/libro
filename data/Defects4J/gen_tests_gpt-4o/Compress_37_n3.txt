
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;

public class TarArchiveInputStreamTest {

    @Test(expected = NegativeArraySizeException.class)
    public void testParsePaxHeadersWithEmptyLine() throws IOException {
        // Prepare a mock PAX header with an empty line at the end
        String paxHeader = "25 path=example\n30 another=value\n\n";
        byte[] headerBytes = paxHeader.getBytes();

        // Create a mocked InputStream that contains the PAX header followed by some payload data
        try (InputStream inputStream = new ByteArrayInputStream(headerBytes);
             TarArchiveInputStream tarInput = new TarArchiveInputStream(inputStream)) {

            // Attempt to read the next TarEntry, which triggers the parsing of PAX headers
            tarInput.getNextTarEntry();
        }
    }
}
