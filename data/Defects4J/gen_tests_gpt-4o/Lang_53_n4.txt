
import org.apache.commons.lang3.time.DateUtils;
import org.junit.Test;

import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;

public class DateUtilsTest {

    @Test
    public void testRoundMinutes() {
        Calendar testCalendar = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        testCalendar.set(2007, Calendar.JULY, 2, 8, 9, 50);
        Date date = testCalendar.getTime();

        // Perform the rounding
        Date roundedDate = DateUtils.round(date, Calendar.MINUTE);

        // Expected behavior (as per version 2.1)
        Calendar expectedCalendar = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        expectedCalendar.set(2007, Calendar.JULY, 2, 8, 10, 0); // Rounded up to the next minute

        assertEquals(expectedCalendar.getTime(), roundedDate);
    }

    @Test
    public void testRoundSeconds() {
        Calendar testCalendar = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        testCalendar.set(2007, Calendar.JULY, 2, 8, 9, 29);
        Date date = testCalendar.getTime();

        // Perform the rounding
        Date roundedDate = DateUtils.round(date, Calendar.SECOND);

        // Expected behavior (rounding down the seconds)
        Calendar expectedCalendar = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        expectedCalendar.set(2007, Calendar.JULY, 2, 8, 9, 29);
        expectedCalendar.set(Calendar.MILLISECOND, 0);

        assertEquals(expectedCalendar.getTime(), roundedDate);
    }
}
