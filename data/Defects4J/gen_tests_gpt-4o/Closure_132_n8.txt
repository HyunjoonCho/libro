
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class IfStatementBugTest {

    @Test
    public void testIfStatementBehavior() {
        // Setting up the test scenario
        int[][] es = {
            {0, 1, 0},
            {1, 1, 1},
            {0, 0, 1}
        };
        int esi = 1;

        // Original if-else statement logic
        if (es[--esi][es[esi + 1]] == 1) {
            es[esi] = 0;
        } else {
            es[esi] = 1;
        }
        
        int expected = es[esi]; // Capture the result for comparison

        // Resetting the state for ternary operation
        es = new int[][]{
            {0, 1, 0},
            {1, 1, 1},
            {0, 0, 1}
        };
        esi = 1;

        // Optimized ternary operation as per provided output
        es[esi] = 1 == es[--esi][es[esi + 1]] ? 0 : 1;

        // Assert that both methods produce the same result
        assertEquals(expected, es[esi]);

        // Resetting the state for correct ternary operation
        es = new int[][]{
            {0, 1, 0},
            {1, 1, 1},
            {0, 0, 1}
        };
        esi = 1;

        // Correct ternary operation based on bug report
        es[--esi] = 1 == es[esi][es[esi + 1]] ? 0 : 1;

        // Assert that the correct operation matches the expected output of the original if-else
        assertEquals(expected, es[esi]);
    }
}
