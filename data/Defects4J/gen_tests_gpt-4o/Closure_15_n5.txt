script
// Original version
public void testOriginalOrder() {
    Map<String, String> customData = new HashMap<>();
    customData.put("key", "value");

    Object result = testRemoveKeyOriginal(customData, "key");

    assertEquals("value", result); // Should return 'value'
    assertFalse(customData.containsKey("key")); // Should be false as the key is deleted
}

private Object testRemoveKeyOriginal(Map<String, String> customData, String key) {
    Map<String, String> dataSlot = customData;
    String retval = (dataSlot != null) ? dataSlot.get(key) : null;
    boolean hadKey = (dataSlot != null) && dataSlot.containsKey(key);

    if (dataSlot != null) {
        dataSlot.remove(key);
    }

    return hadKey ? retval : null;
}

// Compiled (buggy) version
public void testCompiledOrder() {
    Map<String, String> customData = new HashMap<>();
    customData.put("key", "value");

    Object result = testRemoveKeyCompiled(customData, "key");

    assertNull(result); // In compiled version, it wrongly returns null
    assertFalse(customData.containsKey("key")); // Should be false as the key is deleted
}

private Object testRemoveKeyCompiled(Map<String, String> customData, String key) {
    Map<String, String> dataSlot = customData;
    String retval = (dataSlot != null) ? dataSlot.get(key) : null;

    if (dataSlot != null) {
        dataSlot.remove(key);
    }

    boolean hadKey = (dataSlot != null) && dataSlot.containsKey(key); // This line order causes the bug

    return hadKey ? retval : null;
}
