
import org.junit.Test;
import org.mockito.ArgumentMatcher;
import org.mockito.Mockito;

import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

public class TypedParametersTest {

    interface SomeInterface {
        void someMethod(Object param1, Object param2);
    }

    @Test
    public void testTypedParametersPrinting() {
        SomeInterface mockObject = mock(SomeInterface.class);
        mockObject.someMethod(1, (Integer) 2);

        verify(mockObject).someMethod(Mockito.eq(1), typeMatched(2));
    }


    @Test
    public void testCorrectTypedStringPrinting() {
        SomeInterface mockObject = mock(SomeInterface.class);
        mockObject.someMethod(1, "2");

        verify(mockObject).someMethod(Mockito.eq(1), typeMatched("2"));
    }

    private <T> T typeMatched(T value) {
        return Mockito.argThat(new ArgumentMatcher<T>() {
            @Override
            public boolean matches(T argument) {
                return value.equals(argument);
            }

            @Override
            public String toString() {
                if (value instanceof String) {
                    return "(String) \"" + value + "\"";
                }
                return super.toString();
            }
        });
    }
}
