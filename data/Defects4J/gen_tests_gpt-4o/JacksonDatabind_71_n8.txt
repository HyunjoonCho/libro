
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.util.Map;

import static org.junit.Assert.assertEquals;

public class CharSequenceKeyDeserializationTest {

    @Test
    public void testCharSequenceMapKeyDeserialization() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        
        String json = "{\"key\":\"value\"}";

        try {
            // Attempting to deserialize a map with CharSequence as key
            Map<CharSequence, String> map = objectMapper.readValue(json, 
                    new TypeReference<Map<CharSequence, String>>() {});
            // Simple assertion to ensure that deserialization took place
            assertEquals("value", map.get("key"));
        } catch (Exception e) {
            // If the exception is caught, print it for the test results,
            // indicating the presence of the issue
            e.printStackTrace();
            throw e;
        }
    }
}
