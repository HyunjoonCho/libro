public void testInstanceMethodReferenceWarning() {
    ScriptEngine engine = new ScriptEngineManager().getEngineByName("nashorn");
    String script = 
        "var goog = { graphics: { Path: function() { this.coordinates = []; } } };\n" +
        "goog.graphics.Path.prototype.moveTo = function(x, y) { this.coordinates.push('M' + x + ',' + y); };\n" +
        "goog.graphics.Path.prototype.lineTo = function(x, y) { this.coordinates.push('L' + x + ',' + y); };\n" +
        "function demo() {\n" +
        "    var path = new goog.graphics.Path();\n" +
        "    var points = [[1,1], [2,2]];\n" +
        "    for (var i = 0; i < points.length; i++) {\n" +
        "        (i == 0 ? path.moveTo : path.lineTo).call(path, points[i][0], points[i][1]);\n" +
        "    }\n" +
        "    return path.coordinates.join(' ');\n" +
        "}\n" +
        "demo();";
    try {
        Object result = engine.eval(script);
        assertEquals("M1,1 L2,2", result);
    } catch (ScriptException e) {
        fail("Script execution failed: " + e.getMessage());
    }
}