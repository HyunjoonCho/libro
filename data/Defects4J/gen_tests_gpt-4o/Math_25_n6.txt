public void testHarmonicFitterParameterGuesser() {
    // Sample data assuming it should follow a harmonic pattern 
    double[] xValues = {0, 1, 2, 3, 4, 5, 6};
    double[] yValues = {1, 0.5, -1, -0.5, 1, 0.5, -1};

    WeightedObservedPoints obs = new WeightedObservedPoints();
    for (int i = 0; i < xValues.length; i++) {
        obs.add(xValues[i], yValues[i]);
    }

    HarmonicFitter fitter = new HarmonicFitter(new LevenbergMarquardtOptimizer());
    HarmonicFitter.ParameterGuesser guesser = new HarmonicFitter.ParameterGuesser(obs.toList());

    double[] guessedParameters = guesser.guess();

    // Assume the actual amplitude should be around 1, consider a margin for testing
    double expectedAmplitude = 1.0;
    double delta = 0.1; // acceptable deviation
    assertEquals("The guessed amplitude is outside the acceptable range", 
                 expectedAmplitude, guessedParameters[0], delta);
}