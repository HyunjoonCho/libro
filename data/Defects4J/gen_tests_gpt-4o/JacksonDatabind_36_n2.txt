
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.util.StdDateFormat;
import org.junit.Test;

import java.text.DateFormat;
import java.text.ParseException;
import java.util.Date;

import static org.junit.Assert.*;

public class StdDateFormatLeniencyTest {

    @Test
    public void testLenientDateParsing() {
        ObjectMapper objectMapper = new ObjectMapper();
        StdDateFormat dateFormat = new StdDateFormat();
        objectMapper.setDateFormat(dateFormat);

        String dateString = "2015-01-32";
        try {
            Date parsedDate = objectMapper.getDateFormat().parse(dateString);

            // Since parsing is lenient by default, we expect the outcome to not throw an error
            // despite the incorrect day value. For January 32, 2015, the expected parsed date
            // would be February 1, 2015.
            DateFormat strictFormat = new StdDateFormat();
            strictFormat.setLenient(false);
            Date expectedDate = strictFormat.parse("2015-02-01");

            assertEquals(expectedDate, parsedDate);
        } catch (ParseException e) {
            fail("Parsing should have been lenient and should not have thrown a ParseException.");
        }
    }
}
