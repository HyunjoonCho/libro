public void testMissingTypeChecksWithPolymorphicTypeIds() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);
    
    String maliciousJson = "[\"java.util.HashMap\", {\"foo\": \"bar\"}]";
    
    try {
        Object obj = mapper.readValue(maliciousJson, Object.class);
        fail("Expected a JsonMappingException due to missing type checks on polymorphic type ids.");
    } catch (JsonMappingException e) {
        assertTrue(e.getMessage().contains("Could not resolve type id"));
    } catch (Exception e) {
        fail("Expected a JsonMappingException, got: " + e.getClass() + " with message: " + e.getMessage());
    }
}