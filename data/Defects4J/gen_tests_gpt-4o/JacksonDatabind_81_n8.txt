
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class PrimitiveWrapperRefinementTest {

    public static class PrimitiveHolder {
        public int primitiveValue;

        public PrimitiveHolder() {}

        public PrimitiveHolder(int primitiveValue) {
            this.primitiveValue = primitiveValue;
        }
    }

    public static class WrapperHolder {
        public Integer primitiveValue;

        public WrapperHolder() {}

        public WrapperHolder(Integer primitiveValue) {
            this.primitiveValue = primitiveValue;
        }
    }

    @Test
    public void testPrimitiveToWrapperRefinement() throws Exception {
        ObjectMapper mapper = new ObjectMapper();

        // Create a PrimitiveHolder instance with an int value 
        PrimitiveHolder original = new PrimitiveHolder(42);

        // Serialize the PrimitiveHolder object to JSON
        String json = mapper.writeValueAsString(original);

        // Deserialize the JSON to a WrapperHolder instance
        WrapperHolder refined = mapper.readValue(json, WrapperHolder.class);

        // Check if the value is correctly refined from int to Integer
        assertEquals(Integer.valueOf(42), refined.primitiveValue);
    }
}
