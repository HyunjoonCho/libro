
import org.junit.Test;
import java.io.*;
import com.google.javascript.jscomp.*;

import static org.junit.Assert.fail;

public class SwfObjectMinificationTest {

    @Test
    public void testSwfObjectMinification() {
        String jsCode = 
            "function urlEncodeIfNecessary(s) {" +
            "    var regex = /[\\\"<>.;]/;" +
            "    var hasBadChars = regex.exec(s) != null;" +
            "    return hasBadChars && typeof encodeURIComponent != \"undefined\" ? encodeURIComponent(s) : s;" +
            "}";

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        
        // Set the compilation level to simple optimizations
        CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(options);

        // Provide an externs file, you may need to adjust this
        JSSourceFile extern = JSSourceFile.fromCode("externs.js", "");

        // Create the input source file
        JSSourceFile input = JSSourceFile.fromCode("input.js", jsCode);

        // Compile the code
        Result result = compiler.compile(extern, input, options);

        // Check if there were compilation errors
        if (result.success) {
            System.out.println("Minified JS: " + compiler.toSource());
        } else {
            fail("JS Minification failed: " + compiler.getErrors());
        }
    }
}
