
import static org.junit.jupiter.api.Assertions.*;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.junit.jupiter.api.Test;

public class ScriptTagParsingTest {

    @Test
    public void testScriptTagWithInnerTags() {
        String html = "<html><body>"
                + "<div class=\"vsc\" sig=\"Uga\">"
                + "<div class=\"before\"></div>"
                + "<script type=\"text/javascript\">"
                + "header = jQuery('#header\\_features');"
                + "if(header.length){"
                + "header"
                + ".prepend('<a class=\"prevPage browse left \" />')"
                + ".append('<a class=\"nextPage browse right\" />');"
                + "items"
                + ".wrapAll('<div class=\"scrollable\"/>')"
                + ".wrapAll('<ul class=\"items\"/>')"
                + ".wrap('<li/>');"
                + "}"
                + "</script>"
                + "<div class=\"after\"></div>"
                + "</div></body></html>";

        Document doc = Jsoup.parse(html);
        Element scriptTag = doc.selectFirst("script");

        assertNotNull(scriptTag, "Script tag should be parsed correctly");
        assertEquals("text/javascript", scriptTag.attr("type"));

        // Ensure that the script content is not transformed unexpectedly
        String scriptContent = scriptTag.html();
        assertTrue(scriptContent.contains("header = jQuery('#header\\_features');"), 
                "Script content should maintain original Javascript logic without HTML tag parsing.");
        
        Element afterDiv = doc.selectFirst("div.after");
        assertNotNull(afterDiv, "The <div class=\"after\"> should not be consumed by the script tag.");
    }
}
