
import org.joda.time.tz.DateTimeZoneBuilder;
import org.junit.Test;

public class DateTimeZoneBuilderTest {

    @Test
    public void testDateTimeZoneBuilderConcurrentAccess() throws Exception {
        // First thread execution
        getTestDataTimeZoneBuilder().toDateTimeZone("TestDTZ1", true);

        // Creating a second thread to test concurrent access
        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                // Second thread execution
                getTestDataTimeZoneBuilder().toDateTimeZone("TestDTZ2", true);
            }
        });

        // Start and join the second thread
        t.start();
        t.join();
    }

    private DateTimeZoneBuilder getTestDataTimeZoneBuilder() {
        return new DateTimeZoneBuilder()
            .addCutover(1601, 'w', 1, 1, 1, false, 7200000)
            .setStandardOffset(3600000)
            .addRecurringSavings("", 3600000, 1601, Integer.MAX_VALUE, 'w', 3, -1, 1, false, 7200000)
            .addRecurringSavings("", 0, 1601, Integer.MAX_VALUE, 'w', 10, -1, 1, false, 10800000);
    }
}
