
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.JsonParser.Feature;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.*;

public class JsonParserTest {

    @Test
    public void testParseNaNAsBigDecimal() {
        String json = "[NaN]";
        JsonFactory factory = new JsonFactory();
        factory.enable(Feature.ALLOW_NON_NUMERIC_NUMBERS);

        try (JsonParser parser = factory.createParser(json)) {
            assertEquals(JsonToken.START_ARRAY, parser.nextToken()); // [
            assertEquals(JsonToken.VALUE_NUMBER_FLOAT, parser.nextToken()); // NaN

            // Attempt to parse NaN as BigDecimal
            try {
                parser.getDecimalValue();
                fail("Expected NumberFormatException to be thrown");
            } catch (NumberFormatException ex) {
                // Expected exception
            }
            
            assertEquals(JsonToken.END_ARRAY, parser.nextToken()); // ]
        } catch (IOException e) {
            fail("Unexpected IOException: " + e.getMessage());
        }
    }
}
