
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.StringReader;

import static org.junit.Assert.assertEquals;

public class JsonParserTest {

    @Test
    public void testTokenLocationAfterFieldName_Reader() throws Exception {
        final String DOC = "{\"name\":123}";
        JsonFactory jf = new JsonFactory();
        JsonParser jp = jf.createParser(new StringReader(DOC));

        assertEquals(JsonToken.START_OBJECT, jp.nextToken());

        // FIELD_NAME token
        assertEquals(JsonToken.FIELD_NAME, jp.nextToken());
        int fieldNameLine = jp.getTokenLocation().getLineNr();
        int fieldNameColumn = jp.getTokenLocation().getColumnNr();

        // VALUE_NUMBER_INT token
        assertEquals(JsonToken.VALUE_NUMBER_INT, jp.nextToken());
        int valueLine = jp.getTokenLocation().getLineNr();
        int valueColumn = jp.getTokenLocation().getColumnNr();

        // The bug is that valueLine and valueColumn should indicate the correct
        // location of the VALUE_NUMBER_INT token, but they incorrectly match FIELD_NAME.
        assertEquals("Line number should be the same", fieldNameLine, valueLine);
        assertNotEquals("Column number should not be the same", fieldNameColumn, valueColumn);

        jp.close();
    }

    @Test
    public void testTokenLocationAfterFieldName_Stream() throws Exception {
        final String DOC = "{\"name\":123}";
        JsonFactory jf = new JsonFactory();
        JsonParser jp = jf.createParser(new ByteArrayInputStream(DOC.getBytes("UTF-8")));

        assertEquals(JsonToken.START_OBJECT, jp.nextToken());

        // FIELD_NAME token
        assertEquals(JsonToken.FIELD_NAME, jp.nextToken());
        int fieldNameLine = jp.getTokenLocation().getLineNr();
        int fieldNameColumn = jp.getTokenLocation().getColumnNr();

        // VALUE_NUMBER_INT token
        assertEquals(JsonToken.VALUE_NUMBER_INT, jp.nextToken());
        int valueLine = jp.getTokenLocation().getLineNr();
        int valueColumn = jp.getTokenLocation().getColumnNr();

        // The bug is that valueLine and valueColumn should indicate the correct
        // location of the VALUE_NUMBER_INT token, but they incorrectly match FIELD_NAME.
        assertEquals("Line number should be the same", fieldNameLine, valueLine);
        assertNotEquals("Column number should not be the same", fieldNameColumn, valueColumn);

        jp.close();
    }
}
