public void testTooLargeFirstStepWithDormandPrince853() {
    double[] yStart = {0.0};
    double[] yEnd = {1.0};
    double tStart = 0.0;
    double tEnd = 1e-12; // Extremely short integration range
    
    DormandPrince853Integrator integrator = new DormandPrince853Integrator(
            1.0e-15, 1.0e-3, 1.0e-10, 1.0e-10);
    
    FirstOrderDifferentialEquations ode = new FirstOrderDifferentialEquations() {
        public int getDimension() {
            return 1;
        }
        
        public void computeDerivatives(double t, double[] y, double[] yDot) {
            yDot[0] = -y[0]; // Example function
        }
    };
    
    try {
        integrator.integrate(ode, tStart, yStart, tEnd, yEnd);
        fail("Expected StepException due to too large initial step size");
    } catch (Exception e) {
        assertTrue(e instanceof org.apache.commons.math3.exception.MaxCountExceededException);
    }
}