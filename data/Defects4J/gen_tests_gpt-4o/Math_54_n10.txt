
import org.apache.commons.math.dfp.Dfp;
import org.apache.commons.math.dfp.DfpField;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DfpTest {

    @Test
    public void testToDoubleWithZero() {
        DfpField field = new DfpField(100);
        Dfp zeroDfp = field.getZero();
        double zeroDouble = zeroDfp.toDouble();
        
        assertEquals("The toDouble() method should return 0.0 for zero Dfp value", 0.0, zeroDouble, 0.0);

        Dfp zeroDfpFromConstructor = field.newDfp(0.0);
        double zeroDoubleFromConstructor = zeroDfpFromConstructor.toDouble();
        
        assertEquals("The toDouble() method should return 0.0 for zero Dfp value created from constructor", 0.0, zeroDoubleFromConstructor, 0.0);
    }

    public static void main(String[] args) {
        DfpField field = new DfpField(100);
        System.out.println("toDouble value of getZero() = " + field.getZero().toDouble() +
                "\ntoDouble value of newDfp(0.0) = " + field.newDfp(0.0).toDouble());
    }
}
