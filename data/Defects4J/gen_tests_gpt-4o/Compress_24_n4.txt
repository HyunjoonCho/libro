
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;

public class TarArchiveInputStreamTest {

    @Test(expected = IllegalArgumentException.class)
    public void testLargeUserId() throws IOException {
        // Create a sample TAR header with a large user-id value
        byte[] header = new byte[512];
        // Set name
        System.arraycopy("test.txt".getBytes(), 0, header, 0, "test.txt".length());
        
        // Set large uid value as a string of octal digits in bytes (overflowing normal range)
        String largeUid = "62410554";
        System.arraycopy(largeUid.getBytes(), 0, header, 108, largeUid.length());
        
        // Set other required fields with default values
        header[156] = 0; // File type normal

        // Wrap the header as an input stream
        ByteArrayInputStream bais = new ByteArrayInputStream(header);
        TarArchiveInputStream tais = new TarArchiveInputStream(bais);

        // Attempt to read the entry, expecting an exception to be thrown
        TarArchiveEntry entry = tais.getNextTarEntry();
    }
}
