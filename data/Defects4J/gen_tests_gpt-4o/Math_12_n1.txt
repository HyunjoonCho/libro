
import org.apache.commons.math3.distribution.GammaDistribution;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Arrays;

import static org.junit.Assert.assertArrayEquals;

public class GammaDistributionTest {

    @Test
    public void testGammaDistributionSerialization() throws Exception {
        // Create a GammaDistribution instance
        GammaDistribution originalDistribution = new GammaDistribution(9.0, 0.5);

        // Generate samples from the original distribution
        double[] originalSamples = new double[5];
        for (int i = 0; i < originalSamples.length; i++) {
            originalSamples[i] = originalDistribution.sample();
        }

        // Serialize the GammaDistribution
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        try (ObjectOutputStream oos = new ObjectOutputStream(bos)) {
            oos.writeObject(originalDistribution);
        }

        // Deserialize the GammaDistribution
        ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
        GammaDistribution clonedDistribution;
        try (ObjectInputStream ois = new ObjectInputStream(bis)) {
            clonedDistribution = (GammaDistribution) ois.readObject();
        }

        // Generate samples from the cloned distribution
        double[] clonedSamples = new double[5];
        for (int i = 0; i < clonedSamples.length; i++) {
            clonedSamples[i] = clonedDistribution.sample();
        }

        // Assert that samples from original and cloned distributions are the same
        assertArrayEquals("The cloned distribution should produce the same sequence of samples as the original.", 
                          originalSamples, clonedSamples, 1e-9);
    }
}
