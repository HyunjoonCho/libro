
import static org.junit.Assert.fail;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.junit.Test;

public class BrentSolverTest {

    @Test
    public void testInitialGuessWrongSign() {
        UnivariateRealFunction function = new UnivariateRealFunction() {
            @Override
            public double value(double x) {
                return x * x - 2;
            }
        };

        BrentSolver solver = new BrentSolver();

        try {
            // Providing a range with an initial guess that has the wrong sign
            // min and max normally should bracket the root
            // Here, f(1) = -1 and f(2) = 2, so they bracket the root sqrt(2)
            // Trying to deceive the solver by providing initial guess 3 which does not lie in the function value sign change
            double result = solver.solve(function, 1.0, 2.0, 3.0);
            fail("Expected IllegalArgumentException due to initial guess with wrong sign not thrown.");
        } catch (IllegalArgumentException e) {
            // Test passed, IllegalArgumentException was thrown as expected
        } catch (Exception e) {
            fail("Unexpected exception type thrown: " + e.getClass().getName());
        }
    }
}
