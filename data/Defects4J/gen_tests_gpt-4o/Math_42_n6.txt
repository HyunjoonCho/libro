
import org.apache.commons.math.optimization.GoalType;
import org.apache.commons.math.optimization.linear.LinearConstraint;
import org.apache.commons.math.optimization.linear.LinearObjectiveFunction;
import org.apache.commons.math.optimization.linear.RealPointValuePair;
import org.apache.commons.math.optimization.linear.Relationship;
import org.apache.commons.math.optimization.linear.SimplexSolver;
import org.junit.Test;

import java.util.ArrayList;
import java.util.Collection;

import static org.junit.Assert.assertTrue;

public class SimplexSolverTest {

    @Test
    public void testNegativeValueWithRestrictNonNegative() {
        LinearObjectiveFunction function = new LinearObjectiveFunction(new double[]{1, 1}, 0);
        Collection<LinearConstraint> constraints = new ArrayList<>();
        constraints.add(new LinearConstraint(new double[]{1, 0}, Relationship.EQ, 1));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(function, constraints, GoalType.MINIMIZE, true);

        double[] point = solution.getPoint();

        // Ensure that both x and y are non-negative
        assertTrue("x should be non-negative", point[0] >= 0);
        assertTrue("y should be non-negative", point[1] >= 0);
    }
}
