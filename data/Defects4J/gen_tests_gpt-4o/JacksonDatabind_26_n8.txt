
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import org.junit.Test;

import java.io.*;

import static org.junit.Assert.*;

public class ObjectReaderSerializationTest {

    @Test
    public void testObjectReaderSerialization() {
        ObjectMapper mapper = new ObjectMapper();
        ObjectReader reader = mapper.reader();

        try {
            // Serialize the ObjectReader
            ByteArrayOutputStream byteOutStream = new ByteArrayOutputStream();
            ObjectOutputStream outStream = new ObjectOutputStream(byteOutStream);
            outStream.writeObject(reader);
            outStream.close();

            // Deserialize the ObjectReader
            ByteArrayInputStream byteInStream = new ByteArrayInputStream(byteOutStream.toByteArray());
            ObjectInputStream inStream = new ObjectInputStream(byteInStream);
            ObjectReader deserializedReader = (ObjectReader) inStream.readObject();
            inStream.close();

            // Ensure deserialization gives a valid ObjectReader
            assertNotNull(deserializedReader);

        } catch (IOException e) {
            fail("IOException during serialization/deserialization: " + e.getMessage());
        } catch (ClassNotFoundException e) {
            fail("ClassNotFoundException during deserialization: " + e.getMessage());
        } catch (NotSerializableException e) {
            fail("NotSerializableException encountered: " + e.getMessage());
        }
    }
}
