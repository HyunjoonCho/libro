
import static org.junit.Assert.fail;
import org.junit.Test;

public class TypeInheritanceTest {

    interface OtherType { }

    class MyType implements OtherType { }

    @Test
    public void testInfiniteRecursionDueToIncorrectTypeAssertion() {
        try {
            // Simulating the cast that causes the stack overflow
            MyType x = (MyType) (Object) new Object();
            fail("Expected a ClassCastException due to illegal cast");
        } catch (ClassCastException e) {
            // Expected behavior: the code should throw an exception because
            // an Object cannot be cast to MyType correctly.
            System.out.println("Caught expected ClassCastException: " + e.getMessage());
        }
    }
}
