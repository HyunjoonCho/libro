
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class RecursiveTypeBugTest {

    @Test
    public void testBasePropertiesAreSerializedInSubClass() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();

        // Ensure that the type for Base is constructed first
        TypeFactory.defaultInstance().constructType(Base.class);

        Sub subInstance = new Sub();
        String jsonResult = objectMapper.writeValueAsString(subInstance);

        // Verify that both 'base' and 'sub' properties are serialized
        assertEquals("{\"base\":1,\"sub\":2}", jsonResult);
    }

    class Base implements IFace<Sub> {
        @JsonProperty int base = 1;
    }

    class Sub extends Base {
        @JsonProperty int sub = 2;
    }

    interface IFace<T> {}
}
