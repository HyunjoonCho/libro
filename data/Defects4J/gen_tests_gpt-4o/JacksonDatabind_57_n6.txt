
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.SequenceWriter;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.util.Iterator;
import java.util.NoSuchElementException;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;

public class ObjectReaderTest {

    @Test
    public void testReadValuesWithOffsetAndLength() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        ObjectReader objectReader = objectMapper.readerFor(String.class);

        // Create a byte array with JSON array at the end
        byte[] completeJson = new byte[]{0, 1, 2, '[', '"', 'a', '"', ',', '"', 'b', '"', ']', 3, 4, 5};
        int offset = 3;
        int length = 9;  // Include the JSON structure ["a", "b"]

        // Create a ByteArrayInputStream to simulate the input data
        ByteArrayInputStream inputStream = new ByteArrayInputStream(completeJson, offset, length);

        // Read values using the ObjectReader
        Iterator<String> it = objectReader.readValues(inputStream);

        // Verify that the values are correctly read from the specified offset and length
        assertEquals("a", it.next());
        assertEquals("b", it.next());
        assertFalse(it.hasNext());

        // Check exception when trying to access another element
        try {
            it.next();
        } catch (NoSuchElementException e) {
            // Expected, no more elements in the array
        }
    }
}
