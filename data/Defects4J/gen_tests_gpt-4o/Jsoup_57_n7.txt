
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Attributes;
import org.junit.Test;
import java.util.Iterator;
import java.util.Map;

import static org.junit.Assert.fail;

public class RemoveIgnoreCaseTest {

    @Test
    public void testRemoveIgnoreCaseConcurrentModificationException() {
        // Set up the element and attributes
        Element element = new Element("test");
        element.attr("Attr1", "value1");
        element.attr("attr2", "value2");
        element.attr("key1", "value3");

        try {
            // Simulate the problematic attribute removal
            Attributes attributes = element.attributes();
            for (Map.Entry<String, Attributes.Attribute> entry : attributes) {
                if (entry.getKey().equalsIgnoreCase("key1")) {
                    attributes.remove(entry.getKey());
                }
            }
            fail("Expected ConcurrentModificationException was not thrown");

        } catch (ConcurrentModificationException e) {
            // Expected exception, do nothing
        }
    }

    @Test
    public void testRemoveIgnoreCaseFixed() {
        // Set up the element and attributes
        Element element = new Element("test");
        element.attr("Attr1", "value1");
        element.attr("attr2", "value2");
        element.attr("key1", "value3");

        // Iterate and remove correctly using an iterator
        Attributes attributes = element.attributes();
        for (Iterator<Map.Entry<String, Attributes.Attribute>> iter = attributes.iterator(); iter.hasNext(); ) {
            Map.Entry<String, Attributes.Attribute> entry = iter.next();
            if (entry.getKey().equalsIgnoreCase("key1")) {
                iter.remove();
            }
        }

        // Check that the attribute was removed
        assertNull(element.attr("key1"));
    }
}
