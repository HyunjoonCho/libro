
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;
import org.junit.Test;

public class NumberUtilsTest {

    @Test
    public void testIsNumberWithTrailingDecimal() {
        // Test case for valid number with a trailing decimal place
        assertTrue(NumberUtils.isNumber("2."));
    }

    @Test
    public void testIsNumberWithMultipleTrailingDecimals() {
        // Test case for invalid number with multiple trailing decimal places
        assertFalse(NumberUtils.isNumber("2.."));
    }

    @Test
    public void testIsNumberWithExponent() {
        // Test case to ensure trailing decimal does not affect numbers with exponents
        assertTrue(NumberUtils.isNumber("2.e1"));
        assertFalse(NumberUtils.isNumber("2.e"));
    }

    @Test
    public void testIsNumberWithoutTrailingDecimal() {
        // Test case for number without a trailing decimal
        assertTrue(NumberUtils.isNumber("2"));
        assertTrue(NumberUtils.isNumber("2.0"));
    }
}
