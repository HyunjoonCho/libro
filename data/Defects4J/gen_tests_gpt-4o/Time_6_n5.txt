
import org.joda.time.Chronology;
import org.joda.time.LocalDate;
import org.joda.time.Period;
import org.joda.time.chrono.GJChronology;
import org.junit.Test;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.is;
import org.joda.time.IllegalFieldValueException;

public class GJChronologyTest {

    @Test
    public void testDateCrossing1BC() {
        Chronology chronology = GJChronology.getInstance();

        LocalDate start = new LocalDate(2013, 5, 31, chronology);
        LocalDate expectedEnd = new LocalDate(-1, 5, 31, chronology); // 1 BC

        try {
            assertThat(start.minusYears(2013), is(equalTo(expectedEnd)));
            assertThat(start.plus(Period.years(-2013)), is(equalTo(expectedEnd)));
        } catch (IllegalFieldValueException e) {
            System.out.println("Caught expected IllegalFieldValueException: " + e.getMessage());
            throw e; // Rethrow to ensure test failure in case it's unexpected behavior
        }
    }
}
