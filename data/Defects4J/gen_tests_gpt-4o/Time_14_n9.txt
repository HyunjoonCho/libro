
import org.joda.time.DateTimeConstants;
import org.joda.time.MonthDay;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.IllegalFieldValueException;
import org.junit.Test;

import static org.junit.Assert.*;

public class MonthDayTest {

    @Test(expected = IllegalFieldValueException.class)
    public void testAddDaysToISOLeapDay() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        assertEquals("--02-29", isoLeap.toString());
        
        // This line is expected to throw an IllegalFieldValueException
        isoLeap.plusDays(2);
    }

    @Test
    public void testMinusDaysFromISOLeapWorksAsExpected() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        
        // Subtracting 1 day from the leap day should result in February 28
        MonthDay expected = new MonthDay(DateTimeConstants.FEBRUARY, 28, ISOChronology.getInstanceUTC());
        assertEquals(expected, isoLeap.minusDays(1));
    }
    
    @Test
    public void testPlusDaysNegativeFromISOLeapWorksAsExpected() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        
        // Adding a negative day (essentially subtracting) should also result in February 28
        MonthDay expected = new MonthDay(DateTimeConstants.FEBRUARY, 28, ISOChronology.getInstanceUTC());
        assertEquals(expected, isoLeap.plusDays(-1));
    }
    
    @Test
    public void testOperationsAroundISOLeapDay() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        
        // Subtracting 1 day and then adding 2 should result in March 1
        MonthDay expected = new MonthDay(DateTimeConstants.MARCH, 1, ISOChronology.getInstanceUTC());
        MonthDay result = isoLeap.minusDays(1).plusDays(2);
        assertEquals(expected, result);
    }

    @Test(expected = IllegalFieldValueException.class)
    public void testPlusMonthsFromISOLeapDay() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        
        // Adding a month is expected to throw an IllegalFieldValueException
        isoLeap.plusMonths(1);
    }

    @Test(expected = IllegalFieldValueException.class)
    public void testMinusMonthsFromISOLeapDay() {
        final MonthDay isoLeap = new MonthDay(DateTimeConstants.FEBRUARY, 29, ISOChronology.getInstanceUTC());
        
        // Subtracting a month is expected to throw an IllegalFieldValueException
        isoLeap.minusMonths(1);
    }
}
