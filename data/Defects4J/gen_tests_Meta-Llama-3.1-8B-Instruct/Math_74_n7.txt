public void testEmbeddedRungeKuttaInitialStepSize() {
    double[] y0 = {1.0, 2.0};
    double[] vecAbsoluteTolerance = {1.0, 1.0};
    double[] vecRelativeTolerance = {0.1, 0.1};
    
    EmbeddedRungeKuttaIntegrator integrator = new DormandPrince853Integrator();
    
    double[] scale = new double[y0.length];
    
    for (int i = 0; i < scale.length; ++i) {
        double yi = Math.max(Math.abs(y0[i]), Math.abs(y0[i]));
        scale[i] = 1.0 + 0.1 * yi; // using Atol i + |y0i| * Rtoli for testing
    }
    
    double h = integrator.initializeStep(null, true, 5, scale, 0, y0, null, null);
    
    // The expected value should be calculated using the correct formula: Atol i + |y0i| * Rtoli
    double[] expectedScale = new double[y0.length];
    for (int i = 0; i < expectedScale.length; ++