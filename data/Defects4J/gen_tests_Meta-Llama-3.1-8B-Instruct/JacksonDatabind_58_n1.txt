java
public class Test {
    public static class MyException extends RuntimeException {
        private Throwable cause;

        @JsonIgnoreProperties({"cause"})
        public MyException(Throwable cause) {
            super(cause);
            this.cause = cause;
        }

        public Throwable getCause() {
            return cause;
        }
    }

    public static class MyMapper {
        public MyException deserialize(String json) throws IOException {
            ObjectMapper mapper = new ObjectMapper();
            mapper.configure(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS, true);
            return mapper.readValue(json, MyException.class);
        }
    }

    @Test(expected = IllegalArgumentException.class)
    public void testJacksonDeserialization() throws IOException {
        String json = "{\"cause\":\"test\"}";
        new MyMapper().deserialize(json);
    }
}
