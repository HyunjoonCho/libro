java
public void testMultivariateOptimizerMemoryUsage() {
    int numPoints = 41200;
    double[] weights = new double[numPoints];
    // Initialize weights array with some values

    // Create a multivariate vector optimizer
    MultivariateVectorOptimizer optimizer = new MultivariateVectorOptimizer();

    // This line will create an nxn full matrix and exhaust memory for large n
    // optimizer.optimize(new Weight(weights));

    // To reproduce the issue, we'll use a workaround: optimize in a loop
    for (int i = 0; i < numPoints; i++) {
        optimizer.optimize(new Weight(weights));
    }

    // Check if the optimizer has been created successfully without an OutOfMemoryError
    assertNotNull(optimizer);
}
