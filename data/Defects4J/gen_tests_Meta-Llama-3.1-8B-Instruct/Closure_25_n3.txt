public void testAnonymousObjectTypeInference() {
    // Test with function call
    Object result1 = callz(new Object() {
        public String prop1 = "hi";
    });
    assertEquals("hi", result1);

    // Test with constructor call
    try {
        new callz(new Object() {
            public String prop1 = "hi";
        });
        fail("Expected compilation error");
    } catch (Exception e) {
        // Expected exception
    }
}

interface Callz {
    void callz(Object parry);
}

class CallzImpl implements Callz {
    public void callz(Object parry) {
        if (((Object) parry).getClass().getDeclaredFields().length == 1) {
            if (parry instanceof Object) {
                if (((Object) parry).getClass().getDeclaredFields()[0].getName().equals("prop1")) {
                    System.out.println(((String) ((Object) parry).getClass().getDeclaredFields()[0].get(parry)));
                }
            }
        } else if (((Object) parry).getClass().getDeclaredFields().length == 2) {
            if (((Object) parry).getClass().getDeclaredFields()[0].getName().equals("