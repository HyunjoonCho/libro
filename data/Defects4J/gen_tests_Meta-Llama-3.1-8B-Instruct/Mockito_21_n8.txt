public void testAbstractClassMocking() {
    // Example 1
    FakeUserAccount userAccount = spy(new FakeUserAccount());
    when(userAccount.addEmail("email")).thenAnswer(new Answer<Void>() {
        @Override
        public Void answer(InvocationOnMock invocation) throws Throwable {
            Object[] args = invocation.getArguments();
            ((FakeUserAccount) invocation.getMock()).getEmails().add((String) args[0]);
            return null;
        }
    });
    when(userAccount.getEmails()).thenReturn(Arrays.asList("email"));
    assertEquals(Arrays.asList("email"), userAccount.getEmails());
    userAccount.addEmail("anotherEmail");
    assertEquals(Arrays.asList("email", "anotherEmail"), userAccount.getEmails());

    // Example 2
    MockAccountService service = spy(new MockAccountService() {
        @Override
        public UserAccount getAccount(String id) {
            return new UserAccount() {
                @Override
                public List<String> getEmails() {
                    return Arrays.asList("email");
                }
            };
        }
    });
    when(service.getAccount("id")).thenReturn(new UserAccount() {
        @Override
        public List<String> getEmails() {
            return Arrays.asList("email");
        }