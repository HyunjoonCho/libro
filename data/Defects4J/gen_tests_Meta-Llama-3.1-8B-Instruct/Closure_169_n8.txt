java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class ClosureCompilerTest {
    @Test
    public void testStrangeParameterWarning() {
        // Define the function with a parameter annotation
        Function test1 = new Function() {
            @Override
            public Object invoke(Object... args) {
                return null;
            }
        };
        test1.setAnnotation("param {{func: function()}}");

        // Define an object with a function property
        Object fnStruc1 = new Object();
        ((Function) fnStruc1).func = new Function() {
            @Override
            public Object invoke(Object... args) {
                return null;
            }
        };

        // Call the function with the object
        test1.invoke(fnStruc1);

        // Verify that the warning is not thrown
        // (Note: Java does not have a direct equivalent to Closure Compiler's warning system)
        // We can only test the function invocation
        assertEquals(null, test1.invoke(fnStruc1));
    }
}
