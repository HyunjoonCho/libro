java
import org.junit.Test;

import java.lang.reflect.Method;

import static org.junit.Assert.assertEquals;

public class JavaTypeTest {

    @Test
    public void testGetGenericSignature() throws Exception {
        // Create a method that returns a generic type
        Method method = getClass().getMethod("testMethod");

        // Get the JavaType for the method
        JavaType javaType = new JavaType(method.getReturnType());

        // Get the generic signature of the JavaType
        String signature = javaType.getGenericSignature();

        // The expected signature
        String expectedSignature = "()Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/String;>;";
        // The actual signature with the bug
        String actualSignature = "()Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/String";

        // Assert that the actual signature is incorrect
        assertEquals("Expected signature to have a closing '>'", expectedSignature, actualSignature + ">");
    }

    public AtomicReference<String> testMethod() {
        return new AtomicReference<>("test");
    }
}
