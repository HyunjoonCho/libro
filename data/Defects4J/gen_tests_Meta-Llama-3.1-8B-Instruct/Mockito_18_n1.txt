java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

import static org.junit.Assert.assertEquals;

@RunWith(MockitoJUnitRunner.class)
public class MockitoIterableTest {

    @Mock
    private List<String> list;

    @Test
    public void testIterableReturnsNull() {
        // In Mockito 1.x, this should return an empty list
        // In Mockito 2.x, this should return null
        Iterator<String> iterator = list.iterator();
        assertEquals(null, iterator);
    }

    @Test
    public void testIterableReturnsEmptyList() {
        // In Mockito 1.x, this should return an empty list
        // In Mockito 2.x, this should return null
        assertEquals(0, list.size());
    }

    @Test
    public void testIterableReturnsEmptyListWithMockito1x() {
        // This test should pass in Mockito 1.x
        // In Mockito 2.x, this test will fail because list returns null
        Iterator<String> iterator = list.iterator();
        assertEquals(