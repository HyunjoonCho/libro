java
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.SourceFile;
import org.junit.Test;

public class ClosureCompilerTest {

    @Test
    public void testLendsAnnotation() throws Exception {
        String code = "dojo.declare(\"MyClass\", [superClass1, superClass2], /** @lends MyClass.prototype */ { "
                + "foo: function(){ this.bar(); }, "
                + "bar: function(){ } "
                + "});";

        Compiler compiler = new Compiler();
        compiler.setWarningLevel(0); // Suppress warnings
        compiler.setForInEnumeration(false); // Suppress for-in enumeration

        SourceFile sourceFile = new SourceFile("test.js", code);
        compiler.compile(sourceFile);

        // Verify that no errors were thrown
        JSError[] errors = compiler.getErrorList();
        if (errors.length > 0) {
            System.out.println("Errors: ");
            for (JSError error : errors) {
                System.out.println(error);
            }
            throw new AssertionError("Expected no errors, but got: " + errors.length