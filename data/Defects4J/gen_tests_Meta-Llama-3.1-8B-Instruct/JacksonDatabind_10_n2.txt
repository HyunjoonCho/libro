java
public class TestJsonAnyGetter {
    @JsonSerialize(using = MySerializer.class)
    @JsonAnyGetter
    public Map<String, String> getParameters() {
        Map<String, String> parameters = new HashMap<>();
        parameters.put("key1", "value1");
        parameters.put("key2", "value2");
        return parameters;
    }

    public static class MySerializer extends JsonSerializer<Map<String, String>> {
        @Override
        public void serialize(Map<String, String> value, JsonGenerator gen, SerializerProvider provider) throws IOException {
            gen.writeStartObject();
            for (Map.Entry<String, String> entry : value.entrySet()) {
                gen.writeStringField(entry.getKey(), entry.getValue());
            }
            gen.writeEndObject();
        }
    }

    @Test
    public void testJsonAnyGetterWithJsonSerialize() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        JsonNode json = mapper.writeValueAsString(new TestJsonAnyGetter());
        System.out.println(json);
        // This should print a JSON object with the map contents
    }
}
