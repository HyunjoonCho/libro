public void testPrototypeMethodRemoved() {
    Object foo = new Object();
    foo.getClass().getField("bar").set(foo, new Object() {
        public void bar1() {
            System.out.println("bar1");
        }
    });
    foo.getClass().getDeclaredField("bar").setAccessible(true);
    Object foobar = new Object();
    try {
        java.lang.reflect.Field prototypeField = foo.getClass().getDeclaredField("bar");
        prototypeField.setAccessible(true);
        prototypeField.set(foobar, foo.getClass().getField("bar").get(foo));
    } catch (Exception e) {
        e.printStackTrace();
    }
    System.out.println(foobar.getClass().getField("bar").get(foobar));
}