public void testBrentSolverIllegalArgumentException() {
    // Test case with yMin == 0 and yMax!= 0
    BrentSolver solver = new BrentSolver(new Function() {
        @Override
        public double value(double x) {
            return -x + 1;
        }
    });
    try {
        solver.solve(0.0, -100000.0);
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }

    // Test case with yMin!= 0 and yMax == 0
    solver = new BrentSolver(new Function() {
        @Override
        public double value(double x) {
            return x - 1;
        }
    });
    try {
        solver.solve(100000.0, 0.0);
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }

    // Test case with yMin == 0 and yMax == 0
    solver = new BrentSolver(new Function() {
        @Override
        public double value(double x) {
            return 0;
        }
    });
    assertEquals(0.0, solver.solve(0.0, 0.