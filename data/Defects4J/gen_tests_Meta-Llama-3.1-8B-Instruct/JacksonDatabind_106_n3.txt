public void testTreeTraversingParser() {
    ObjectMapper mapper = new ObjectMapper();
    IntClass intClass = new IntClass();
    String json;

    // Test with valid integers
    json = "{\"x\": 0}";
    intClass.x = 0;
    assertEquals(0, intClass.x);
    assertEquals(intClass, mapper.readerFor(IntClass.class).readValue(json));

    json = "{\"x\": 10}";
    intClass.x = 10;
    assertEquals(10, intClass.x);
    assertEquals(intClass, mapper.readerFor(IntClass.class).readValue(json));

    json = "{\"x\": 1e4}";
    intClass.x = 10000;
    assertEquals(10000, intClass.x);
    assertEquals(intClass, mapper.readerFor(IntClass.class).readValue(json));

    // Test with invalid integers
    try {
        json = "{\"x\": 1e10}";
        mapper.readerFor(IntClass.class).readValue(json);
        fail("Expected JsonMappingException");
    } catch (JsonMappingException e) {
        // expected
    }

    try {
        json = "{\"x\": 1e-1}";
        mapper.readerFor(IntClass.class).readValue(json);