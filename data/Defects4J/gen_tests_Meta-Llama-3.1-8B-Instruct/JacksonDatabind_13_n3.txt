java
public class TestNullObjectIdDeserialization {
    @Test
    public void testDeserializeNullObjectId() throws JsonProcessingException {
        // Create a simple POJO with a nullable ID field
        class Person {
            @JsonDeserialize(contentUsing = NullObjectIdDeserializer.class)
            private Long id;

            public Long getId() {
                return id;
            }
        }

        // Serialize a person with a null ID
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"id\":null}";
        Person person = mapper.readValue(json, Person.class);
        assertNull(person.getId());

        // Deserialize a person with a missing ID
        json = "{\"name\":\"John\"}";
        person = mapper.readValue(json, Person.class);
        assertNull(person.getId());
    }

    public static class NullObjectIdDeserializer extends JsonDeserializer<Long> {
        @Override
        public Long deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {
            if (jp.getCurrentToken() == JsonToken.VALUE_NULL ||!jp.nextToken().isNumeric()) {
                return null;
            }
            return jp.getLongValue();
        }
    }
}
