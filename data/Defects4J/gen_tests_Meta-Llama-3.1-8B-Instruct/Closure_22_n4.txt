java
public void testClassifyNonRightmostExpressionsAsProblematic() {
    ExpressionTree expression1 = new ExpressionTree(new ExpressionTree(new IntegerLiteral(1), new IntegerLiteral(2), new IntegerLiteral(42)));
    ExpressionTree transformedExpression1 = new ExpressionTree(new IntegerLiteral(1), new IntegerLiteral(3));
    assertEquals(expression1, ExpressionTreeClassifier.classify(expression1));
    assertEquals(transformedExpression1, ExpressionTreeClassifier.getClassifiedTransformedExpression(expression1));

    ExpressionTree expression2 = new ExpressionTree(new FunctionCall("bar"), new IntegerLiteral(2), new IntegerLiteral(42));
    ExpressionTree transformedExpression2 = new ExpressionTree(new FunctionCall("bar"), new IntegerLiteral(3));
    assertEquals(expression2, ExpressionTreeClassifier.classify(expression2));
    assertEquals(expression2, ExpressionTreeClassifier.getClassifiedTransformedExpression(expression2));

    ExpressionTree expression3 = new ExpressionTree(new ExpressionTree(new IntegerLiteral(1), new IntegerLiteral(2), new IntegerLiteral(3)), new ExpressionTree(new IntegerLiteral(4), new IntegerLiteral(5), new IntegerLiteral(42)));
    ExpressionTree transformedExpression3 = new ExpressionTree(new IntegerLiteral(1), new ExpressionTree(new IntegerLiteral(4), new Integer