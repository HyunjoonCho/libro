public void testIssue() {
    Compiler compiler = new Compiler();
    CompilationLevel SIMPLE_OPTIMIZATIONS = CompilationLevel.SIMPLE_OPTIMIZATIONS;
    CompilationResult result = compiler.compile(new SourceFile("test", "var test = {}; " +
            "test.T = function() {}; " +
            "// @interface " +
            "/** @constructor " +
            " * @implements {test.T} " +
            "/** @constructor " +
            " * @implements {test.T} " +
            "/** @constructor " +
            "/** @return {test.T} " +
            "test.X.prototype.f = function() {" +
            " if (this.type === test.A) {" +
            " return new test.A();" +
            "} else if (this.type === test.B) {" +
            " return new test.B();" +
            "};"
    ));
    assertThrows(RuntimeException.class, result::getError);
}