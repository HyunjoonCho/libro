public void testRotationCreationNumericalProblems() {
    Vector3d u1 = new Vector3d(-4921140.837095533, -215120942504.4, -890093.279426377);
    Vector3d u2 = new Vector3d(-272385809387.24895E9, -216966492134.18776E9, 674968870880.5301E10);
    Vector3d v1 = new Vector3d(1, 0, 0);
    Vector3d v2 = new Vector3d(0, 0, 1);

    // Manual computation
    Vector3d kManual = new Vector3d(38514410.36093388, -0.3740752452011804, -1168590152.1059971);
    double cManual = 558382746168463196.7079627;

    // Compute quaternion creation
    Vector3d v1Prime = v1.rotateAround(u1, u2);
    Vector3d v2Prime = v2.rotateAround(u1, u2);
    Vector3d k = (v1Prime.sub(u1)).cross(v2Prime