java
public void testValueOverloadResolution() {
    Boolean bool = null;
    try {
        Object result = value(bool);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        // expected
    }
    
    boolean boolValue = true;
    Number number = 1;
    try {
        Object result = value(boolValue);
        assertEquals(boolValue, result);
    } catch (Exception e) {
        fail("Unexpected exception: " + e.getMessage());
    }
    
    try {
        Object result = value(number);
        assertEquals(number, result);
    } catch (Exception e) {
        fail("Unexpected exception: " + e.getMessage());
    }
}

public Object value(Boolean bool) {
    // implementation of value() method that causes the problem
    return value(bool == null? null : bool.booleanValue());
}

public Object value(Number number) {
    // implementation of value() method that handles numbers correctly
    return number;
}
