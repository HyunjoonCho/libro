java
public void testLineRevert() {
    Vector3D point = new Vector3D(1000000000, 0, 0);
    Vector3D direction = new Vector3D(1, 0, 0);
    Line line = new Line(point, direction);
    Vector3D revertedDirection = line.getDirection().negate();
    Line expectedLine = new Line(point, revertedDirection);
    
    // Original Line.revert() method might not be precise due to floating point precision issues
    // So, we can't directly compare the result
    // Instead, we check if the reverted line is mathematically equivalent to the expected line
    assertTrue(line.revert().isMathematicallyEquivalentTo(expectedLine));
}

public void testLineImmutable() {
    Line line = new Line(new Vector3D(1, 0, 0), new Vector3D(0, 1, 0));
    try {
        line.setPoint(new Vector3D(2, 0, 0)); // This should throw an exception
        fail("Expected UnsupportedOperationException");
    } catch (UnsupportedOperationException e) {
        // Expected
    }
    try {
        line.setDirection(new Vector3D(0