public void testBracketingNthOrderBrentSolver() {
    BracketingNthOrderBrentSolver solver = new BracketingNthOrderBrentSolver(new Function() {
        @Override
        public double value(double x) {
            return Math.sin(x);
        }
    }, 12500.0, 3.7e-16, 0, 12500.03, -7.0e-5, 97);
    int iterations = 0;
    double xA = 12500.0;
    double yA = 3.7e-16;
    double agingA = 0;
    double xB = 12500.03;
    double yB = -7.0e-5;
    double agingB = 97;
    while (solver.getIteration() < 1000) {
        iterations++;
        solver.iterate();
        if (solver.getIteration() % 10 == 0) {
            if (xA == solver.getXA() && yA == solver.getYA() && agingA == solver.getAgingA() &&
                    xB == solver.getXB() && yB == solver.getYB() && agingB == solver.getAgingB