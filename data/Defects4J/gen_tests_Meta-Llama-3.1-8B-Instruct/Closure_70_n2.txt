public void testIncompleteTypeCoverage() {
    // Create a JavaScript file
    String js = "/**global window**\n" +
                "/**jslint sub: true**\n" +
                "/**\n" +
                " * @constructor\n" +
                " * @param {!Element} element\n" +
                " */\n" +
                "function Example(element) {\n" +
                "  /**\n" +
                "   * @param {!string} ns\n" +
                "   * @param {!string} name\n" +
                "   * @return {undefined}\n" +
                "   */\n" +
                "  this.appendElement = function appendElement(ns, name) {\n" +
                "    var e = element.ownerDocument.createElementNS(ns, name);\n" +
                "    element.appendChild(e);\n" +
                "  };\n" +
                "}\n" +
                "window['Example'] = Example;";
    
    // Compile it
    // The actual compilation should be done using the Closure Compiler, but since that's not possible in a JUnit test,
    // we'll simulate the expected output
    String compiledJs = js.replace