java
public void testRoundFunctionsHandleNaNAndInfinity() {
    // floor
    assertEquals(Double.NaN, Math.floor(Double.NaN), "floor(NaN)");
    try {
        Math.floor(Double.NEGATIVE_INFINITY);
        fail("Expected ArithmeticException for floor(-2 div 0)");
    } catch (ArithmeticException e) {
        // expected
    }
    try {
        Math.floor(Double.POSITIVE_INFINITY);
        fail("Expected ArithmeticException for floor(2 div 0)");
    } catch (ArithmeticException e) {
        // expected

    // ceiling
    assertEquals(Double.NaN, Math.ceil(Double.NaN), "ceiling(NaN)");
    try {
        Math.ceil(Double.NEGATIVE_INFINITY);
        fail("Expected ArithmeticException for ceiling(-2 div 0)");
    } catch (ArithmeticException e) {
        // expected
    }
    try {
        Math.ceil(Double.POSITIVE_INFINITY);
        fail("Expected ArithmeticException for ceiling(2 div 0)");
    } catch (ArithmeticException e) {
        // expected

    // round
    assertEquals(Double.NaN, Math.round(Double.NaN), "round(NaN)");
    try {
        Math.round(Double.NEGATIVE_INFINITY);
        fail("Expected ArithmeticException for round(-2