java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidDefinitionException;
import org.junit.Test;

import java.util.*;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;

public class JacksonTest {

    @Test
    public void testUnmodifiableNonRandomAccessList() throws Exception {
        Collection<?> exp = Collections.unmodifiableList(new LinkedList<>(Arrays.asList("first", "second")));
        ObjectMapper mapper = new ObjectMapper();
        mapper.enableDefaultTyping(DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);
        String json = mapper.writeValueAsString(exp);
        Collection<?> act = mapper.readValue(json, Collection.class);

        assertEquals(exp, act);
        assertEquals(exp.getClass(), act.getClass());
    }

    @Test
    public void testUnmodifiableNonRandomAccessListDeserializationFails() throws Exception {
        Collection<?> exp = Collections.unmodifiableList(new LinkedList<>(Arrays.asList("first", "second")));
        ObjectMapper mapper = new ObjectMapper();
        String json = mapper.writeValueAsString(exp);
        assertThrows(InvalidDefinitionException.class, () -> mapper.readValue(json, Collection.class));
    }
}
