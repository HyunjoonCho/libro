java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.PropertyNamingStrategy;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.module.jdk8.Jdk8Module;

import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class TestPropertyNamingStrategy {
    
    @Test
    public void testImplicitConstructorPropertyNames() throws Exception {
        // setup
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new Jdk8Module());
        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
        PropertyNamingStrategy strategy = new PropertyNamingStrategy.SnakeCaseStrategy();
        mapper.setPropertyNamingStrategy(strategy);
        
        // create a test class with an implicit constructor
        class TestClass {
            public TestClass(int id, String name) {}
        }
        
        // test that property names are not renamed properly
        ObjectMapper originalMapper = new ObjectMapper();
        originalMapper.registerModule(new Jdk8Module());
        originalMapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
        String json = originalMapper.writeValueAsString(new TestClass(1, "test"));
        assertEquals("{\"id\":1,\"name\":\"test\"}", json);
        
        // test that property names are renamed using the strategy
        json