javascript
public void testPrototypeMethod() {
    Object foo = new Object();
    foo.bar = new Object();
    foo.bar.bar1 = new Function() {
        public void run() {
            System.out.println("bar1");
        }
    };

    Object foobar = new Object();
    foobar.getClass().setSuperclass(foo.getClass());
    ((java.lang.reflect.Method) foobar.getClass().getMethod("bar1")).invoke(foobar);

    // Test that the method is correctly accessed through the prototype
    ((java.lang.reflect.Method) foo.getClass().getMethod("foobar")).getDeclaredField("bar1").setAccessible(true);
    ((java.lang.reflect.Method) foo.getClass().getMethod("foobar").getDeclaredField("bar1")).invoke(foo.getClass().getMethod("foobar"));
}
