java
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper;
import com.google.gson.reflect.TypeToken;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class JsonAdapterAnnotationOnFieldsTest {

    @Test
    public void testPrimitiveFieldAnnotationTakesPrecedenceOverDefault() {
        Gson gson = new GsonBuilder()
               .registerTypeAdapterFactory(new TypeAdapterFactory() {
                    @Override
                    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
                        return new LongToStringTypeAdapterFactory();
                    }
                })
               .create();

        String json = gson.toJson(new GadgetWithPrimitivePart(42));
        JsonObject jsonObject = gson.fromJson(json, JsonObject.class);
        assertEquals("42", jsonObject.get("part").getAsString());
    }

    private static class LongToStringTypeAdapterFactory implements TypeAdapterFactory {
        static final TypeAdapter<Long> ADAPTER = new TypeAdapter<Long>() {
            @Override
            public void write(JsonWriter out, Long