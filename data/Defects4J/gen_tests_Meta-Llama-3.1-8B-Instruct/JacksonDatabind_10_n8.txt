java
public void testJsonAnyGetterWithJsonSerialize() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    MyClass obj = new MyClass();
    String json = mapper.writeValueAsString(obj);
    assertTrue(json.contains("parameters"));
}

class MyClass {
    private Map<String, String> parameters;

    @JsonSerialize(using = MySerializer.class)
    @JsonAnyGetter
    public Map<String, String> getParameters() {
        return parameters;
    }
}

class MySerializer extends JsonSerializer<Map<String, String>> {
    @Override
    public void serialize(Map<String, String> value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
        // Do nothing
    }
}

class MyConverter {
    public Map<String, JsonNode> convert(Map<String, String> value) {
        return new HashMap<>();
    }
}
