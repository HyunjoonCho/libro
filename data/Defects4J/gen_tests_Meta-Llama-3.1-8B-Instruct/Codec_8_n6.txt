java
import org.apache.commons.codec.binary.Base64InputStream;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;

public class TestReads {

    public void testBase64InputStreamReads() throws Exception {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        bos.write("".getBytes()); // Write a single byte to ensure we get a single-byte buffer
        bos.write("".getBytes()); // This will cause the buffer to be doubled and modulus to be 0
        bos.write("".getBytes()); // This will cause the buffer to be doubled again and modulus to be 2
        bos.write("".getBytes()); // This will cause the buffer to be doubled again and modulus to be 0

        ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
        Base64InputStream b64stream = new Base64InputStream(bis, true, 0, null);

        int n = 0;
        try {
            while (b64stream.read()!= -1) {
                n++;
            }
        } catch (Exception x) {
            System.out.println(n);
            x.printStackTrace();
        }
    }

    public static void main(String[] args) throws Exception {
        TestReads