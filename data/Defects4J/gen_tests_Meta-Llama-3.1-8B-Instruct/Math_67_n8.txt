java
public void testMultiStartUnivariateRealOptimizerGetResult() {
    // Initialize the optimizer with a function and bounds
    double[] optima = new double[1];
    double[] optimaValues = new double[1];
    MultiStartUnivariateRealOptimizer optimizer = new MultiStartUnivariateRealOptimizer(optima, optimaValues);

    // Run the optimizer
    optimizer.optimize(new Function() {
        @Override
        public double value(double x) {
            // A simple function to optimize
            return x * x;
        }
    });

    // Check the result of the last run
    double lastOptima = optimizer.getResult();

    // Run the optimizer again, but with a worse result
    optimizer.optimize(new Function() {
        @Override
        public double value(double x) {
            // A simple function to optimize
            return (x + 1) * (x + 1);
        }
    });

    // Check that the result of the last run is not the optimal one
    assertNotEquals(optima[0], optimizer.getResult());

    // Check the function value of the optimal result
    assertEquals(optimaValues[0], optimizer.getFunctionValue());
}
