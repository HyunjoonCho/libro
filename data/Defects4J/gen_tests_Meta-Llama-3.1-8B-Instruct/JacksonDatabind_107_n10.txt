java
public void testDeserializationProblemHandlerReturningVoid() {
    // Create a custom DeserializationProblemHandler that returns Void.class
    DeserializationProblemHandler handler = new DeserializationProblemHandler() {
        @Override
        public Object handleUnknownTypeId(DeserializationContext context, JavaType type, String typeId, TypeIdResolver typeResolver, String propertyName) {
            return Void.class;
        }
    };

    // Enable default typing
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping(DefaultTyping.NON_FINAL);

    // Attempt to deserialize a JSON object
    String json = "{\"value\":\"hello\"}";
    try {
        Object value = mapper.readValue(json, Object.class);
        fail("Expected NPE");
    } catch (JsonParseException e) {
        // Expected
    }
}
