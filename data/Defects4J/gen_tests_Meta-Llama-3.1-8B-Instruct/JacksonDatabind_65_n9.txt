java
public class StdKeyDeserializerTest {

    @Test
    public void testStdKeyDeserializer() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        Map<FullName, Double> map = mapper.readValue("{\"first.last\": 42}", new TypeReference<Map<FullName, Double>>() {});

        // Expected to pass
        AsField asField = mapper.readValue("{\"name\": \"first.last\"}", AsField.class);
        assertEquals(asField.getName().getFirstname(), "first");
        assertEquals(asField.getName().getLastname(), "last");

        // Expected to fail with "not a valid representation: wrong number of arguments"
        Entry<FullName, Double> entry = map.entrySet().iterator().next();
        assertEquals(entry.getKey().getFirstname(), "first");
        assertEquals(entry.getKey().getLastname(), "last");
        assertEquals(entry.getValue().doubleValue(), 42, 0);
    }

    public static class AsField {
        private final FullName name;

        public AsField(@JsonProperty("name") FullName name) {
            this.name = name;
        }

        public FullName getName() {
            return name;
        }
    }

    public static class FullName {
        private final String firstname;
        private final String lastname