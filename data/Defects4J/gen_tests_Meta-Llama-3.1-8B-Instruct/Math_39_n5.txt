public void testEmbeddedRungeKuttaFirstStepSize() {
    // Assuming the integration function is defined elsewhere in the class
    final double[] y = {1.0};
    final double[] dy = {1.0};
    final double[] t = {0.0};
    final double tMax = 1.0;
    final double[] yExact = {1.0};
    
    // Set the integration range to be very short
    Integrator integrator = new Integrator() {
        @Override
        public void integrate(double t0, double tMax, double[] y0, double[] y) {
            // Integration function implementation
        }
    };
    integrator.setIntegrator(new EmbeddedRungeKuttaIntegrator());
    integrator.setIntegrationRange(t0, tMax);
    
    // Set the initial step size to be larger than the integration range
    integrator.setInitialStepSize(tMax * 2);
    
    // Call the integrate method to trigger the first step
    integrator.integrate(t[0], tMax, y, dy);
    
    // Check that the first step size is within the integration range
    assertTrue(integrator.getStepSize() <= tMax);
}