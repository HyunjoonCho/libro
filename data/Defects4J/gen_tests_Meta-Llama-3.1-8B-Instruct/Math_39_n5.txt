java
public void testLargeFirstStepSize() {
    // Create a test integrator with a very short integration range
    // and a function that can be evaluated outside this range
    double[] x0 = {1.0};
    double[] y0 = {1.0};
    double t0 = 0.0;
    double tEnd = 1.0;
    double[] tMax = new double[] {tEnd - 1e-10}; // Short integration range
    double[] x = new double[1];
    double[] y = new double[1];

    // Use a function that will be evaluated outside the integration range
    // This function will throw an exception when evaluated at x > 10
    Function f = new Function() {
        @Override
        public double value(double x[]) {
            return x[0] > 10? Double.POSITIVE_INFINITY : x[0] * x[0];
        }
    };

    // Try to integrate using the Dormand-Prince 8(5,3) method
    // This should fail because the first step size is too large
    try {
        integrator.integrate(f, x0, y0, t0,