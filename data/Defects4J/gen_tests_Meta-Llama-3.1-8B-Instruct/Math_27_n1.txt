java
public void testFractionPercentageValueOverflow() {
    // Create a fraction with a numerator larger than Integer.MAX_VALUE/100
    Fraction fraction = new Fraction(2147483647 + 1, 10000);
    
    // This should cause an overflow with the original implementation
    // But should be handled correctly with the patched implementation
    double originalResult = fraction.percentageValue();
    double patchedResult = fraction.toDouble() * 100;
    
    // We don't care about the actual values, just that they're different
    assertNotSame(originalResult, patchedResult);
    
    // Test that the patched implementation returns the correct value
    assertEquals(214748365.7, patchedResult, 1e-9);
}
