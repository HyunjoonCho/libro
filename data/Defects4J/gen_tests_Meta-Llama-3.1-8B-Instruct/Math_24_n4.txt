public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    final double[] min = new double[1];
    brentOptimizer.optimize(new UnivariateFunction() {
        @Override
        public double value(double x) {
            return x * x + 1;
        }
    }, 0, 2, min);
    final double lastX = brentOptimizer.getCurrentX();
    final double lastY = brentOptimizer.getCurrentY();
    brentOptimizer.optimize(new UnivariateFunction() {
        @Override
        public double value(double x) {
            return x * x + 1;
        }
    }, 0, 2, min);
    final double newX = brentOptimizer.getCurrentX();
    final double newY = brentOptimizer.getCurrentY();
    assertTrue(Math.abs(newY) < Math.abs(lastY));
}