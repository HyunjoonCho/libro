java
public void testBrentOptimizer() {
    // Create a unimodal function for testing
    Function<Double, Double> f = x -> Math.sin(x);

    // Create a BrentOptimizer instance
    BrentOptimizer optimizer = new BrentOptimizer();

    // Initialize the bounds
    double lowerBound = -10;
    double upperBound = 10;

    // Perform the optimization
    double optimalPoint = optimizer.optimize(f, lowerBound, upperBound);

    // Check if the point is the best one encountered
    double bestValue = Double.POSITIVE_INFINITY;
    double lastValue = Double.POSITIVE_INFINITY;
    for (double point : Arrays.asList(lowerBound, optimalPoint, upperBound)) {
        double value = f.apply(point);
        if (value < bestValue) {
            bestValue = value;
        } else if (value < lastValue) {
            // If the last evaluated point is not the best, the optimization failed
            fail("BrentOptimizer did not find the best point");
        }
        lastValue = value;
    }
}
