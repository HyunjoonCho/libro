javascript
public class TestPrivateVisibility {
    @org.junit.Test
    public void testPrivateVisibility() {
        Foo foo = new Foo();
        foo.x_ = 3;

        SubFoo subFoo = new SubFoo();
        subFoo.x_ = 3; // expected error, but no error is thrown

        // Check that we can still get a warning if the private annotation is removed from the subclass
        SubFooWithoutPrivate subFooWithoutPrivate = new SubFooWithoutPrivate();
        subFooWithoutPrivate.x_ = 3; // expected error
    }

    private static class Foo {
        @java.lang.SuppressWarnings("visibility")
        private int x_;
    }

    private static class SubFoo extends Foo {
        @java.lang.SuppressWarnings("visibility")
        private int x_; // expected error, but no error is thrown
    }

    private static class SubFooWithoutPrivate extends Foo {
        private int x_; // expected error
    }
}
