javascript
// Test case for bug report: Casting a function before calling it produces bad code and breaks plugin code

function testIssue() {
    var ActiveXObject = function() {};
    ActiveXObject.prototype.GetVariable = function() {
        return "test";
    };

    // Test case 1: Casting a function before calling it
    var obj = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
    var castedFunc = /** @type {function(!string):!string} */ (obj['GetVariable']);
    console.log(castedFunc("$version"));  // Expected output: 'test'
    // Actual output: (0,(new ActiveXObject("ShockwaveFlash.ShockwaveFlash")).GetVariable)("$version")

    // Test case 2: Not casting a function before calling it
    var obj2 = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
    var func = obj2['GetVariable'];
    console.log(func("$version"));  // Expected output: 'test'
    // Actual output: 'test'
}

testIssue();
