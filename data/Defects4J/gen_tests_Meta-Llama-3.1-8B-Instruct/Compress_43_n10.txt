java
public void testZipVersionNeededToExtract() {
    ZipArchiveOutputStream zos = new ZipArchiveOutputStream(new ByteArrayOutputStream());
    ZipEntry entry = new ZipEntry("test.txt");
    zos.putArchiveEntry(entry);
    zos.write("Hello, World!".getBytes());
    zos.closeEntry();

    // Test case 1: Deflate compression, no zip64, no data descriptor
    zos = new ZipArchiveOutputStream(new ByteArrayOutputStream());
    entry = new ZipEntry("test.txt");
    entry.setMethod(ZipEntry.DEFLATED);
    zos.putArchiveEntry(entry);
    zos.write("Hello, World!".getBytes());
    zos.closeEntry();
    assertEquals(ZIP64_MIN_VERSION, zos.getVersionNeededToExtract(entry.getMethod(), false));
    assertEquals(ZIP64_MIN_VERSION, zos.getVersionNeededToExtract(entry.getMethod(), true));

    // Test case 2: Deflate compression, no zip64, with data descriptor
    zos = new ZipArchiveOutputStream(new ByteArrayOutputStream());
    entry = new ZipEntry("test.txt");
    entry.setMethod(ZipEntry.DEFLATED);
    entry.setExtraField(new byte[0]); // add data descriptor
    zos.putArchiveEntry(entry);
    zos.write