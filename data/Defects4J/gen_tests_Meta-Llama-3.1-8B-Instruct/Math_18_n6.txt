java
public void testCMAESOptimizerBounds() {
    // Define a simple fitness function
    double fitness(double x) {
        return x;
    }

    // Define a simple parameter range
    double lowerBound = 0;
    double upperBound = 1;

    // Create a CMAESOptimizer instance with the fitness function and bounds
    CMAESOptimizer optimizer = new CMAESOptimizer(fitness, lowerBound, upperBound);

    // Perform the optimization
    optimizer.optimize();

    // Check that the optimized solution is close to the lower bound
    double optimizedSolution = optimizer.getBestSolution();
    assertEquals(0, optimizedSolution, 1e-10);

    // Check that the optimized solution is close to the upper bound
    // Note: Since the resolution is worse near the upper bound, we allow for a larger tolerance
    optimizedSolution = optimizer.getWorstSolution();
    assertEquals(upperBound, optimizedSolution, 1e-5);
}
