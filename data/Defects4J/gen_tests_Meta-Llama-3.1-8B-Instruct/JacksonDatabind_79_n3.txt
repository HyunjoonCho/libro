java
public void testIssue() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping(DefaultTyping.NON_FINAL, As.BooleanDefault);
    mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

    @JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class, property = "id")
    @JsonIdentityReference(alwaysAsId = true)
    static class ReallyAlwaysAsId {
        public int value;

        public ReallyAlwaysAsId() {
            this(0);
        }

        public ReallyAlwaysAsId(int v) {
            value = v;
        }
    }

    @JsonPropertyOrder(alphabetic = true)
    static class ReallyAlwaysContainer {

        @JsonIdentityReference(alwaysAsId = true)
        public ReallyAlwaysAsId a = new ReallyAlwaysAsId(13);

        public ReallyAlwaysAsId b = new ReallyAlwaysAsId(13);

    }

    ReallyAlwaysContainer container = new ReallyAlwaysContainer();
    String json = mapper.writeValueAsString(container);
    assertEquals("{\"a\":{\"value\":13,\"id\":0,\"_id\":0,\"_type\":\"ReallyAlwaysAsId\"},\"b\":{\"value\":13