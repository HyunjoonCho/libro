java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import static org.junit.Assert.assertThrows;

import java.util.Arrays;
import java.util.Collection;

import jregression.core.WeighedData;
import jregression.core.Weight;

@RunWith(Parameterized.class)
public class WeightTest {

    private int n;

    public WeightTest(int n) {
        this.n = n;
    }

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {100}, {1000}, {10000}, {41200} // you can add more values here
        });
    }

    @Test
    public void testLargeNumberOfWeights() {
        WeighedData weighedData = new WeighedData(n);
        for (int i = 0; i < n; i++) {
            weighedData.add(new Weight(i));
        }

        // This should throw an OutOfMemoryError when n is large
        assertThrows(OutOfMemoryError.class, () -> weighedData.getMatrix());
    }
}
