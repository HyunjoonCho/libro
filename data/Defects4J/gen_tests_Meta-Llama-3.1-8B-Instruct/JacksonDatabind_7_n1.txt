public void testTokenBufferDelegateDeserialization() throws JsonParseException {
    TokenBuffer buffer = new TokenBuffer(new TokenStream(new JsonParser() {
        @Override
        public boolean hasTokens() {
            return true;
        }

        @Override
        public JsonToken nextToken() {
            return JsonToken.START_OBJECT;
        }

        @Override
        public String getCurrentName() {
            return "a";
        }

        @Override
        public JsonToken nextValue() {
            return JsonToken.FIELD_NAME;
        }

        @Override
        public JsonToken nextToken() {
            return JsonToken.VALUE_NUMBER_INT;
        }

        @Override
        public JsonToken nextToken(int i) {
            return JsonToken.FIELD_NAME;
        }

        @Override
        public JsonToken nextToken(String s) {
            return JsonToken.VALUE_NULL;
        }

        @Override
        public JsonToken nextToken(JsonToken jsonToken) {
            return JsonToken.END_OBJECT;
        }

        @Override
        public JsonToken nextToken() {
            return JsonToken.END_OBJECT;
        }
    }));
    Value.from(buffer);
    // Check the tokens in the buffer
    assertEquals(JsonToken.START_OBJECT, buffer.nextToken());
    assertEquals(JsonToken.FIELD_NAME,