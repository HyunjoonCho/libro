java
public void testInverseCumulativeProbability() {
    DistributionFactory factory = new DistributionFactory();
    NormalDistribution normal = factory.createNormalDistribution(0, 1);
    try {
        double result = normal.inverseCumulativeProbability(0.9772498680518209);
        // expected result is approximately 2.0
        assertEquals(2.0, result, 1e-6);
    } catch (MathException e) {
        fail("inverseCumulativeProbability should not throw MathException for input 0.9772498680518209");
    }
    
    try {
        double result = normal.inverseCumulativeProbability(0.9986501019683698);
        // expected result is approximately 3.0
        assertEquals(3.0, result, 1e-6);
    } catch (MathException e) {
        fail("inverseCumulativeProbability should not throw MathException for input 0.9986501019683698");
    }
    
    try {
        double result = normal.inverseCumulativeProbability(0.9999683287581673);
        // expected result is approximately 4.0
        assertEquals(4.0, result, 1e-6);
    } catch (