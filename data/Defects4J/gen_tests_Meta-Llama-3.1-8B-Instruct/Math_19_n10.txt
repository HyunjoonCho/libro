java
public void testCMAESOptimizerNaNParameters() {
    double lowerBound = Double.MAX_VALUE;
    double upperBound = Double.MAX_VALUE * 2;
    double[] parameters = new double[2];
    CMAESOptimizer optimizer = new CMAESOptimizer(parameters);
    optimizer.setBounds(lowerBound, upperBound);
    
    try {
        // Call the fitness function with the optimizer
        optimizer.optimize(new FitnessFunction() {
            @Override
            public double evaluate(double[] parameters) {
                // The fitness function should not be evaluated here, but we're using it to trigger the NaN parameters
                return 0;
            }
        });
        
        // This should never be reached, as a NaN value should be passed to the fitness function
        fail("Expected NaN parameters to be passed to the fitness function");
    } catch (ArithmeticException e) {
        // This is expected behavior
    }
}
