java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.SerializationConfig;
import com.fasterxml.jackson.module.afterburner.annotation.JsonProperties;
import com.fasterxml.jackson.module.afterburner.annotation.JsonIgnoreProperties;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class JsonIgnorePropertiesTest {

    @Test(expected = IllegalArgumentException.class)
    public void testDeserializeExceptionWithCause() throws Exception {
        SerializationConfig config = new ObjectMapper().getSerializationConfig();
        config.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);
        ObjectMapper mapper = new ObjectMapper(config);
        MyException exception = new MyException("Test message", new Exception("Nested exception"));
        mapper.writeValueAsString(exception);
    }

    @JsonIgnoreProperties("cause")
    public static class MyException extends RuntimeException {
        public MyException(String message, Throwable cause) {
            super(message, cause);
        }
    }
}
