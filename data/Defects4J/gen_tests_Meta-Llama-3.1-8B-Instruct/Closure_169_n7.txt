java
import org.junit.Test;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JSTestUtils;

public class TestClosureCompiler {
    @Test
    public void testStrangeParameterWarning() {
        String code = "function test1(obj) {\n" +
                "  /** @param {{func: function()}} obj */\n" +
                "}";
        String modifiedCode = "var fnStruc1 = {};\n" +
                "fnStruc1.func = function() {}\n" +
                "test1(fnStruc1);";

        try {
            Compiler compiler = new Compiler();
            compiler.compile(code);
            JSTestUtils.assertNoWarnings(compiler);
        } catch (Exception e) {
            JSTestUtils.assertContains("WARNING - actual parameter 1 of func does not match formal parameter", e.getMessage());
        }
    }

    @Test
    public void testExpectedBehavior() {
        String code = "function test2(obj) {\n" +
                "  /** @param {{func: function()}} obj */\n" +
                "}";
        String modifiedCode = "var