javascript
// Test that prototypes declared with quotes do not produce a JSC_USED_GLOBAL_THIS warning
describe('prototypes declared with quotes', function() {
  it('should not produce a JSC_USED_GLOBAL_THIS warning', function() {
    function MyClass() {}
    MyClass.prototype["MyMethod"] = function(a) {
      this.a = a;
    }
    window["MyClass"] = MyClass;
  });

  // Test that prototypes declared with quotes do produce a JSC_USED_GLOBAL_THIS warning
  it('should produce a JSC_USED_GLOBAL_THIS warning when using @interface', function() {
    // Given the following externs:
    function MyParent() {}
    MyParent.prototype.MyMethod = function(a) {}

    // And the following code:
    function MyClass() {}
    MyClass.prototype["MyMethod"] = function(a) {
      this.a2 = a;
    }
    window["MyClass"] = MyClass;

    expectJSCWarning("property MyMethod on interface MyParent is not implemented by type MyClass");
  });
});
