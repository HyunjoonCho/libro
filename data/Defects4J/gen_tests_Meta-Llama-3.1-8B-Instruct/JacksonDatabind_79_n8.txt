java
public void testAlwaysAsIdOnClass() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTypingAsProperty(ObjectMapper.DefaultTyping.NON_PRIMITIVE);
    ReallyAlwaysContainer container = new ReallyAlwaysContainer();
    String json = mapper.writeValueAsString(container);
    assertEquals("{\"a\":1,\"b\":2}", json);
}

@JsonIdentityInfo(generator=ObjectIdGenerators.IntSequenceGenerator.class, property="id")
@JsonIdentityReference(alwaysAsId=true)
static class ReallyAlwaysAsId {
    public int value;

    public ReallyAlwaysAsId() { this(0); }
    public ReallyAlwaysAsId(int v) {
        value = v;
    }
}

@JsonIdentityInfo(generator=ObjectIdGenerators.IntSequenceGenerator.class, property="id")
static class ReallyAlwaysContainer {
    @JsonIdentityReference(alwaysAsId=true)
    public ReallyAlwaysAsId a = new ReallyAlwaysAsId(13);

    public ReallyAlwaysAsId b = new ReallyAlwaysAsId(13);
}

public void testAlwaysAsIdOnClassWithObjectIdInfo() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTypingAsProperty(ObjectMapper.DefaultTyping.NON_PRIMITIVE);
    ReallyAlwaysContainer container = new Really