public void testTreeTraversingParser() {
    ObjectMapper mapper = new ObjectMapper();
    IntClass intClass = new IntClass();
    JsonNode tree;

    // Test overflow
    try {
        tree = mapper.readTree("{\"x\": 1e10}");
        intClass = mapper.treeToValue(tree, IntClass.class);
        assertEquals(2147483647, intClass.x);
    } catch (IOException e) {
        fail("Expected no exception");
    }

    try {
        tree = mapper.readTree("{\"x\": -2147483649}");
        intClass = mapper.treeToValue(tree, IntClass.class);
        assertEquals(2147483647, intClass.x);
    } catch (IOException e) {
        fail("Expected no exception");
    }

    try {
        tree = mapper.readTree("{\"x\": -4294967295}");
        intClass = mapper.treeToValue(tree, IntClass.class);
        assertEquals(1, intClass.x);
    } catch (IOException e) {
        fail("Expected no exception");
    }

    // Test non-integer values
    try {
        tree = mapper.readTree("{\"x\": true}");
        intClass = mapper.treeToValue(tree, IntClass.class);