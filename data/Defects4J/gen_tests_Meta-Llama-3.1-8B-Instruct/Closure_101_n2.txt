java
import org.junit.Test;
import static org.junit.Assert.*;

public class ClosureCompilerTest {

    @Test
    public void testProcessClosurePrimitivesFlag() throws Exception {
        // Set up a compiler with the flag set to false
        String cmd1 = "java -jar closure-compiler.jar --process_closure_primitives=false input.js";
        // Set up a compiler with the flag set to true (default)
        String cmd2 = "java -jar closure-compiler.jar input.js";

        // Run the compilers
        Process p1 = Runtime.getRuntime().exec(cmd1);
        Process p2 = Runtime.getRuntime().exec(cmd2);

        // Check the output
        String output1 = readOutput(p1);
        String output2 = readOutput(p2);

        // The expected output should be the same, with goog.provide/require tags in place
        assertTrue(output1.contains("goog.provide('input')"));
        assertTrue(output1.contains("goog.require('goog.base.define')"));
        assertTrue(output2.contains("goog.provide('input')"));
        assertTrue(output2.contains("goog.require('goog.base.define')"));
    }

    private String readOutput(Process process) throws Exception {
        java.util.Scanner s = new java.util.Scanner