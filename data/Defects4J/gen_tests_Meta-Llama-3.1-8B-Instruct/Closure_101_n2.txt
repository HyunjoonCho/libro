public void testProcessClosurePrimitives() throws Exception {
    // Compile with --process_closure_primitives false
    Compiler compiler = new Compiler();
    compiler.setProcessClosurePrimitives(false);
    compiler.compile("testClosurePrimitivesFalse");
    
    // Compile with --process_closure_primitives true (default)
    compiler.setProcessClosurePrimitives(true);
    compiler.compile("testClosurePrimitivesTrue");
    
    // Check if goog.provide/require tags are still present in the compiled files
    File file1 = new File("testClosurePrimitivesFalse.js");
    File file2 = new File("testClosurePrimitivesTrue.js");
    assertTrue(file1.exists());
    assertTrue(file2.exists());
    assertTrue("goog.provide should be present in testClosurePrimitivesFalse.js", new File(file1, "goog.provide").exists());
    assertTrue("goog.require should be present in testClosurePrimitivesFalse.js", new File(file1, "goog.require").exists());
    assertTrue("goog.provide should be present in testClosurePrimitivesTrue.js", new File(file2, "goog.provide").exists());
    assertTrue("goog.require should be present in testClosurePrimitivesTrue.js", new File(file2, "goog.require").exists());