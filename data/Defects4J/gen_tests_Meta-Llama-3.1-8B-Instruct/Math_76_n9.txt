java
import org.junit.Test;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.SingularValueDecompositionImpl;

public class SingularValueDecompositionTest {

    @Test
    public void testSingularValueDecomposition() {
        double[][] A = {{1.0, 2.0, 3.0}, {2.0, 3.0, 4.0}, {3.0, 5.0, 7.0}};
        Array2DRowRealMatrix matrix = new Array2DRowRealMatrix(A);
        SingularValueDecompositionImpl decomp = new SingularValueDecompositionImpl(matrix);
        double[] singularValues = decomp.getSingularValues();

        // Test that the last singular value is close to zero
        double tolerance = 1e-9;
        double lastSingularValue = singularValues[singularValues.length - 1];
        assertTrue(Math.abs(lastSingularValue) < tolerance);

        // Test that the decomposition does not throw an exception
        // This should be done for a full rank matrix
        double[][] fullRankA = {{1.0, 2.0, 4.0