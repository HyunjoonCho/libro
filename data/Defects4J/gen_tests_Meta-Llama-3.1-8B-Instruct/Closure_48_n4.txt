public void testFunctionReplacement() {
    final Class<?> myclass = Class.forName("MyClass");
    Method fnMethod = myclass.getMethod("fn", boolean.class);
    Method testMethod = myclass.getMethod("test");

    try {
        testMethod.invoke(null);
        fail("Expected error on first call to fn");
    } catch (Exception e) {
        // expected
    }

    try {
        testMethod.invoke(null);
        fail("Expected error on second call to fn");
    } catch (Exception e) {
        // expected
    }
}

class MyClass {
    public void fn(boolean success) {
        // do nothing
    }

    public void test() {
        this.fn(true);
        this.fn = new Method() {
            public Object invoke(Object obj, Object... args) throws Throwable {
                return null;
            }
        };
    }
}