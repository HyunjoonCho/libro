java
public class JsonTest {
    
    private static final ObjectMapper mapper = new ObjectMapper();
    static {
        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
        mapper.enableDefaultTyping();
    }

    public static class TestObject {
        @JsonValue
        private byte[] bytes;

        public TestObject(@JsonProperty("bytes") byte[] bytes) {
            this.bytes = bytes.clone();
        }

        public byte[] getBytes() {
            return bytes.clone();
        }
    }

    @Test
    public void testPolymorphicTypeLostWithJsonValue() throws JsonProcessingException {
        TestObject obj = new TestObject(new byte[]{1, 2, 3});
        String json = mapper.writeValueAsString(obj);
        TestObject deserializedObj = mapper.readValue(json, TestObject.class);

        // Expected result: deserializedObj should be of type TestObject
        // Actual result: deserializedObj is of type [B
        assertNotEquals(TestObject.class, deserializedObj.getClass());
    }
}
