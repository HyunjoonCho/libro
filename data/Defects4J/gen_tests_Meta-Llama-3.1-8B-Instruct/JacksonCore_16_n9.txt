public void testJsonParserSequenceSkipsToken() {
    ObjectMapper mapper = new ObjectMapper();
    JsonParser parser1 = mapper.getFactory().createParser(new ByteArrayInputStream("{\"a\":1}".getBytes()));
    JsonParser parser2 = mapper.getFactory().createParser(new ByteArrayInputStream("{\"b\":2}".getBytes()));
    JsonParserSequence p = JsonParserSequence.createFlattened(parser1, parser2);
    JsonToken token = p.nextToken();
    assertEquals(JsonToken.START_OBJECT, token);
    token = p.nextToken();
    assertEquals(JsonToken.FIELD_NAME, token);
    assertEquals("a", p.getCurrentName());
    token = p.nextToken();
    assertEquals(JsonToken.VALUE_NUMBER_INT, token);
    assertEquals(1, p.getIntValue());
    token = p.nextToken();
    assertEquals(JsonToken.FIELD_NAME, token);
    assertEquals("b", p.getCurrentName());
    token = p.nextToken(); // This should be skipped, but in the buggy behavior, it would be a VALUE_NUMBER_INT
    assertEquals(JsonToken.END_OBJECT, p.nextToken());
}