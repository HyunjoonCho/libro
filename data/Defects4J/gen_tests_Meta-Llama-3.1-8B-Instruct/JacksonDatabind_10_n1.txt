java
public class JsonAnyGetterTest {

    static class MySerializer extends JsonSerializer<Map<String, String>> {
        @Override
        public void serialize(Map<String, String> value, JsonGenerator jgen, SerializerProvider provider) throws IOException {
            // Do nothing, just to satisfy the annotation
        }
    }

    static class MyConverter extends JsonSerializer<Map<String, String>> {
        @Override
        public void serialize(Map<String, String> value, JsonGenerator jgen, SerializerProvider provider) throws IOException {
            // Do nothing, just to satisfy the annotation
        }
    }

    @JsonSerialize(using = MySerializer.class)
    @JsonAnyGetter
    public Map<String, String> getParameters() {
        Map<String, String> map = new HashMap<>();
        map.put("key1", "value1");
        map.put("key2", "value2");
        return map;
    }

    @Test
    public void testJsonAnyGetterWithJsonSerialize() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        JsonNode json = mapper.writeValueAsString(new JsonAnyGetterTest());
        // This test will fail if JsonAnyGetter with JsonSerialize is not handled correctly
