java
public void testLookupTranslatorCharSequenceCompatibility() {
    String cs1 = "1 < 2";
    CharBuffer cs2 = CharBuffer.wrap("1 < 2".toCharArray());
    LookupTranslator translator = StringEscapeUtils.ESCAPE_HTML4;
    
    assertEquals(translator.translate(cs1), translator.translate(cs2.toString()));
    
    // Test that using a custom CharSequence wrapper does not change the result
    CustomCharSequence cs3 = new CustomCharSequence(cs2.array());
    assertEquals(translator.translate(cs1), translator.translate(cs3));
}

// Custom CharSequence wrapper class
class CustomCharSequence implements CharSequence {
    private final char[] array;
    
    public CustomCharSequence(char[] array) {
        this.array = array;
    }
    
    @Override
    public int length() {
        return array.length;
    }
    
    @Override
    public char charAt(int index) {
        return array[index];
    }
    
    @Override
    public CharSequence subSequence(int start, int end) {
        return new CustomCharSequence(Arrays.copyOfRange(array, start, end));
    }
    
    @Override
    public String toString() {
        return new String(array);
    }
    
    @Override
    public boolean equals