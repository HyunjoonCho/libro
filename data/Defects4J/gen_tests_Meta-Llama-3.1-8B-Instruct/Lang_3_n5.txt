java
public void testCreateNumberFloatPrecision() {
    // Test with a number that should be a Double but is truncated to Float
    assertNotSame(Double.class, NumberUtils.createNumber("123.456").getClass());
    
    // Test with a number that should be a BigDecimal but is truncated to Float
    assertNotSame(BigDecimal.class, NumberUtils.createNumber("123.4567890123456789").getClass());
    
    // Test with a number that should be a Double but throws an exception when trying to parse as Float
    try {
        NumberUtils.createNumber("12345678901234567890.12345678901234567890");
        fail("Expected NumberFormatException");
    } catch (NumberFormatException e) {
        // expected
    }
}
