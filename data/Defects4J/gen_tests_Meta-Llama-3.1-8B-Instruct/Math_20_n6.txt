public void testCMAESOptimizerBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer();
    // Set a very high maximum number of evaluations to force the optimizer to run multiple iterations
    optimizer.setMaxEvaluations(1000);
    // Set the bounds to be very small to make it easy to test the issue
    double[] lower = new double[] { -1 };
    double[] upper = new double[] { 1 };
    // Set the initial solution to be just outside the bounds
    double[] x = new double[] { 1.1 };
    // Run the optimization
    double[] result = optimizer.optimize(x, new ObjectiveFunction() {
        @Override
        public double evaluate(double[] x) {
            return Math.pow(x[0], 2);
        }
    }, lower, upper);
    // Check that the result is outside the bounds
    assertTrue(result[0] < lower[0] || result[0] > upper[0]);
}