java
public void testIssue() {
    ObjectMapper objectMapper = new ObjectMapper().disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE,
            DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES);

    CallRecord call = new CallRecord();

    Event event = new Event();
    event.location = "location1";
    call.item = event;
    call.application = "123";

    String json = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    CallRecord result = objectMapper.readValue(json, CallRecord.class);
    assertEquals(0.0f, result.version, 0.0f);
    assertEquals("123", result.application);
    assertNotNull(result.item2);

    json = "{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}";
    try {
        objectMapper.readValue(json, CallRecord.class);
        fail("Expected DeserializationFeature.FAIL_ON_INVALID_SUBTYPE to throw an exception");
    } catch (JsonMappingException e) {
        // expected
    }

    json = "{\"item\":{\"type