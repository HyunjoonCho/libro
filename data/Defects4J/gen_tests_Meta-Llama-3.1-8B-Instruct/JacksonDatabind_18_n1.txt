java
public void testErrorRecoveryInObjectReader() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    JsonFactory factory = mapper.getFactory();
    JsonParser jp = factory.createParser(new ByteArrayInputStream("{\"a\":{ \"b\": \"c\"}".getBytes()));
    ObjectReader reader = mapper.readerFor(Map.class).with(factory);
    MappingIterator<Map<String, String>> iterator = reader.readValues(jp);

    // Intentionally throw a JsonProcessingException
    iterator.next();
    throw new JsonProcessingException("Test exception");

    // Assert that the iterator is not in an indeterminate state
    // and that it's pointing to the end of the JSON object
    try {
        iterator.next();
        fail("Expected iterator to be exhausted");
    } catch (IllegalStateException e) {
        // Expected
    }
}
