java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.json.JsonMappingException;
import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
import org.junit.Test;

import java.math.BigDecimal;

import static org.junit.Assert.assertEquals;

public class TestJacksonSerialization {

    @Test
    public void testWriteBigDecimalAsPlainIgnored() throws JsonMappingException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN, true);
        mapper.registerModule(new JavaTimeModule());

        Test test = new Test(BigDecimal.valueOf(0.0000000005));
        String result = mapper.writeValueAsString(test);

        // Jackson version 2.9.8
        // If WRITE_BIGDECIMAL_AS_PLAIN is not ignored, the output should be '{"value":"0.0000000005"}'
        // But due to the bug, the output is '{"value":"5.0E-10"}'
        // So, the test will fail if the bug is fixed.
        // assertEquals("0.0000000005", result);
    }

    public static class Test {
        @com.fasterxml.jackson.annotation.JsonFormat(shape = com.fasterxml.jackson.annotation.JsonFormat.Shape.STRING