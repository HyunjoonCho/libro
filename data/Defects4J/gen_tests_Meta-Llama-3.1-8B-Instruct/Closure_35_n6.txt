public void testTypeInconsistency() {
    // Create a record type with a union type
    Record RecordType = record (Object prop1, String prop2, String prop3);

    // Define a method with the record type as the return type
    Record func(Boolean a, Boolean b) {
        Record results;
        if (a) {
            results = new RecordType();
            results.setProp1(new Object());
        }
        if (b) {
            results = results!= null? results : new RecordType();
            results.setProp2("prop2");
        } else {
            results = results!= null? results : new RecordType();
            results.setProp3("prop3");
        }
        return results;
    }

    // Test the method with different inputs
    Record result1 = func(true, true);
    assertNotNull(result1.getProp1());
    assertNull(result1.getProp2());
    assertNull(result1.getProp3());

    Record result2 = func(true, false);
    assertNotNull(result1.getProp1());
    assertNotNull(result2.getProp2());
    assertNotNull(result2.getProp3());

    Record result3 = func(false, false);
    assertNull(result3.getProp1());
    assertNotNull(result3.getProp