public void testPrimitiveWrapperRefinement() {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    TypeRefiner<Integer> intRefiner = new TypeRefiner<Integer>() {
        @Override
        public Class<?> refine(Class<?> type, Class<?> wrapperType) {
            return wrapperType;
        }
    };
    module.addTypeRefiner(int.class, intRefiner);
    module.addTypeRefiner(Integer.class, intRefiner);
    mapper.registerModule(module);
    
    try {
        Integer value = mapper.readValue("[1]", Integer.class);
        fail("Expected Integer, got primitive int");
    } catch (JsonProcessingException e) {
        // expected
    }
    
    try {
        int value = mapper.readValue("[1]", int.class);
        fail("Expected int, got Integer");
    } catch (JsonProcessingException e) {
        // expected
    }
}