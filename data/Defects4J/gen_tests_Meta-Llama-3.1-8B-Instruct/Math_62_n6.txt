java
import org.apache.commons.math.optim.nonlinear.general.LevenbergMarquardtOptimizer;
import org.apache.commons.math.optim.nonlinear.general.PowellOptimizer;
import org.apache.commons.math.optim.nonlinear.scalar.gradient.BrentOptimizer;
import org.apache.commons.math.optim.nonlinear.scalar.noderiv.NonLinearConjugateGradientOptimizer;
import org.apache.commons.math.optim.nonlinear.scalar.noderiv.MultiStartUnivariateRealOptimizer;
import org.apache.commons.math.optim.nonlinear.scalar.noderiv.MultiStartMultivariateRealOptimizer;
import org.apache.commons.math.optim.nonlinear.scalar.noderiv.DirectSearchOptimizer;

public void testIssue1() {
    BrentOptimizer brentOptimizer = new BrentOptimizer(1e-10, 1e-10);
    // Verify that specific convergence checker is used
    assert!(brentOptimizer.getConvergenceChecker() instanceof ConvergenceChecker);
}

public void testIssue2() {
    PowellOptimizer powellOptimizer = new PowellOptimizer(1e-10, 1e-10);
    // Verify that convergence checks are independent of the optimization algorithm
    BrentOptimizer brentOptimizer = new BrentOptimizer(1e-10, 1e-10