java
public void testBinomialCoefficientLargeResults() {
    // Test the recursive property
    assertEquals(binomialCoefficient(65, 32) + binomialCoefficient(65, 33), binomialCoefficient(66, 33));

    // Test with known correct value
    assertEquals(binomialCoefficient(66, 33), MathUtils.binomialCoefficient(66, 33));

    // Test edge cases
    assertEquals(1, MathUtils.binomialCoefficient(0, 0));
    assertEquals(1, MathUtils.binomialCoefficient(10, 0));
    assertEquals(1, MathUtils.binomialCoefficient(0, 10));
    assertEquals(10, MathUtils.binomialCoefficient(10, 1));
    assertEquals(45, MathUtils.binomialCoefficient(10, 2));
}

public static long binomialCoefficient(int n, int k) {
    if (k == 0 || k == n)
        return 1;
    BigInteger result = BigInteger.ONE;
    for (int i = k + 1; i <= n; i++) {
        result = result.multiply(BigInteger.valueOf(i));
    }
    for (int i = 1; i <= n - k; i++) {
        result = result.divide