public void testSingletonRemoval() {
    // Create a simple class with a method
    class Foo {
        private Foo() {}
        public void add(int value) {
            // do nothing
        }
    }
    
    // Use Closure Compiler to compile the class
    ClosureCompiler compiler = new ClosureCompiler();
    String compiledCode = compiler.compile("goog.provide('foo');\n" +
            "var foo = function() { this.values = []; };\n" +
            "goog.addSingletonGetter(foo);\n" +
            "foo.prototype.add = function(value) {this.values.push(value)};");
    
    // Check that the compiled code still contains the singleton getter
    assertTrue(compiledCode.contains("getInstance$"));
}