public void testJsonValueOverridesCustomSerializer() {
    // Create a custom serializer for the type
    JsonSerializer<MyPojo> customSerializer = new JsonSerializer<MyPojo>() {
        @Override
        public void serialize(MyPojo value, JsonGenerator gen, SerializerProvider provider) throws IOException {
            gen.writeString("custom serialization");
        }
    };

    // Register the custom serializer
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new SimpleModule().addSerializer(MyPojo.class, customSerializer));

    // Create a POJO with a @JsonValue annotation
    @JsonValue
    class MyPojo {
        private String value;
        public String getValue() {
            return value;
        }
        public void setValue(String value) {
            this.value = value;
        }
    }

    MyPojo pojo = new MyPojo();
    pojo.setValue("default value");

    // The custom serializer should be used for serialization
    String json = mapper.writeValueAsString(pojo);
    assertEquals("custom serialization", json);
}