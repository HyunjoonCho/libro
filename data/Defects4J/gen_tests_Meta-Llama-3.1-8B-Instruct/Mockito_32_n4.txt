java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class MockitoPackagePrivateClassTest {

    @Mock
    private PackagePrivateClass.PublicClass publicClass;

    @InjectMocks
    private PackagePrivateClass.PublicClass publicClassInstance;

    @Test
    public void testMockCreation() {
        // Test that creating a mock of a class that extends a package-private class succeeds
        when(publicClass.someMethod()).thenReturn("mocked response");

        // Test that the mock is actually mocking the method
        assertEquals("mocked response", publicClassInstance.someMethod());

        // Test that creating a mock of the same class again throws an exception
        assertThrows(IllegalStateException.class, () -> when(publicClass.someMethod()).thenReturn("another mocked response"));
    }
}

class PackagePrivateClass {
    private class PrivateClass {
        public String someMethod() {
            return "real response";
        }
    }

    public class PublicClass extends PrivateClass {
        public String someMethod() {
            return super