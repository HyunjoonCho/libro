public void testNumberUtils() {
    // Test with hex number that should be handled by Integer
    assertEquals(0, NumberUtils.createInteger("0x0"));
    assertEquals(16, NumberUtils.createInteger("0x10"));
    assertEquals(255, NumberUtils.createInteger("0xff"));
    assertEquals(-1, NumberUtils.createInteger("-0x1"));
    
    // Test with hex number that should be handled by Long
    assertEquals(0L, NumberUtils.createLong("0x0"));
    assertEquals(256L, NumberUtils.createLong("0x100"));
    assertEquals(65535L, NumberUtils.createLong("0xffff"));
    assertEquals(-256L, NumberUtils.createLong("-0x100"));
    
    // Test with hex number that is too large for Integer
    try {
        NumberUtils.createInteger("0x100000000");
        fail("Expected NumberFormatException");
    } catch (NumberFormatException e) {}
    
    // Test with hex number that is too large for Long
    try {
        NumberUtils.createLong("0x10000000000000000L");
        fail("