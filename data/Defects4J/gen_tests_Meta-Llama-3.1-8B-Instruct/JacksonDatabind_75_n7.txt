java
public class Test {
    @JsonFormat(shape = JsonFormat.Shape.NUMBER_INT)
    enum Color {
        RED(1),
        YELLOW(2),
        GREEN(3);

        private final int value;

        Color(int value) {
            this.value = value;
        }

        public int getValue() {
            return value;
        }
    }

    static class Foo {
        public final Color color;

        Foo(Color color) {
            this.color = color;
        }
    }

    @Test
    public void testJsonFormatOnEnum() throws JsonProcessingException {
        final ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new SimpleModule() {
            @Override
            public void setupModule(SetupContext context) {
                context.setMapperFeatureDefaultValues(true);
            }
        });
        mapper.configure(SerializationFeature.WRITE_ENUMS_USING_INDEX, true);
        mapper.configure(SerializationFeature.WRITE_ENUMS_USING_INDEX, true);

        // Since Color is an enum, we need to use the enum's ordinal() method
        // to get the index of the enum value, not the getValue() method
        // which returns the custom value we assigned to the enum.
        // This is the expected behavior in Jackson 2.8