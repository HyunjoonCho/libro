public void testBOBYQAOptimizer() {
    // Create a simple function to test
    final int dim = 2;
    final Function func = new Function(dim) {
        @Override
        public double value(double[] point) {
            return point[0] * point[0] + point[1] * point[1];
        }
    };

    // Test with 2*dim+1 interpolation points
    BOBYQAOptimizer optim = new BOBYQAOptimizer(2 * dim + 1);
    try {
        RealPointValuePair result = optim.optimize(100000, func, Goal.MINIMIZE, new double[] { 0, 0 });
        fail("Expected BOBYQAOptimizer to throw an exception");
    } catch (OptimizationException e) {
        // Expected exception
    }

    // Test with 2*dim+2 interpolation points
    optim = new BOBYQAOptimizer(2 * dim + 2);
    try {
        RealPointValuePair result = optim.optimize(100000, func, Goal.MINIMIZE, new double[] { 0, 0 });
        fail("Expected BOBYQAOptimizer to throw an exception");