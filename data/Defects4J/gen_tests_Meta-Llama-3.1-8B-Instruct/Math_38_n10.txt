java
public void testBOBYQAOptimizerBounds() {
    int dim = 2;
    double[] lB = new double[dim];
    double[] uB = new double[dim];
    for (int i = 0; i < dim; i++) {
        lB[i] = 0.0;
        uB[i] = 1.0;
    }
    Function1D function = new Function1D() {
        @Override
        public double evaluate(double[] point) {
            return 0; // dummy function
        }
    };
    BOBYQAOptimizer optim = new BOBYQAOptimizer(2 * dim + 2);
    try {
        RealPointValuePair result = optim.optimize(100, function, Goal.MINIMIZE, new double[dim], lB, uB);
        fail("BOBYQAOptimizer should throw an exception when numberOfInterpolationPoints is greater than 2*dim+1");
    } catch (OptimizationException e) {
        // expected
    }
}
