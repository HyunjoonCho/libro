java
public void testFunctionArgumentsNotOptimizedAway() {
    // Create a JavaScript engine to run the test
    javax.script.ScriptEngineManager manager = new javax.script.ScriptEngineManager();
    javax.script.ScriptEngine engine = manager.getEngineByName("javascript");

    // Define the function in the JavaScript engine
    engine.put("foo", new javax.script.ScriptEngineManager().getEngineByName("javascript").eval(
        "function foo(bar, baz) { return bar; }"
    ));

    // Get the length property of the function
    Object length = engine.get("foo").getAttribute("length");

    // Check that the length property is not optimized away
    assertEquals(2, length);

    // Now, define the function with an optimized away argument
    engine.put("foo", new javax.script.ScriptEngineManager().getEngineByName("javascript").eval(
        "function foo(bar) { return bar; }"
    ));

    // Get the length property of the function
    length = engine.get("foo").getAttribute("length");

    // Check that the length property is still not optimized away
    assertEquals(1, length);
}
