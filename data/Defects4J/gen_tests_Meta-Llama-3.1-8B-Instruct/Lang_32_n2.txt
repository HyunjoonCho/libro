public void testToStringStyleMemoryLeak() {
    Thread thread = Thread.currentThread();
    Field threadLocalsField = Thread.class.getDeclaredField("threadLocals");
    threadLocalsField.setAccessible(true);
    Map<Thread, ThreadLocalMap> threadLocals = (Map<Thread, ThreadLocalMap>) threadLocalsField.get(thread);
    Field tableField = ThreadLocalMap.class.getDeclaredField("table");
    tableField.setAccessible(true);
    Object[] table = (Object[]) tableField.get(threadLocals.get(thread));
    for (int i = 0; i < table.length; i++) {
        Field entryField = ThreadLocalMap.class.getDeclaredField("table[i]");
        entryField.setAccessible(true);
        Object entry = entryField.get(table);
        if (entry!= null && entry instanceof Entry) {
            Entry entryObj = (Entry) entry;
            if (entryObj.value instanceof ToStringStyle) {
                fail("ToStringStyle instance found in thread local map");
            }
        }
    }
}