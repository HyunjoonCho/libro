java
public void testPeriodTypeWithoutYear() {
    DateTime startDate = new DateTime(2020, 1, 1, 0, 0);
    DateTime endDate = new DateTime(2020, 1, 7, 0, 0); // 1 week and 6 days

    // Test with PeriodType created from fields without year
    Period p1 = new Period(startDate, endDate, PeriodType.forFields(new DurationFieldType[]{DurationFieldType.months(), DurationFieldType.weeks()}));
    try {
        p1.normalizedStandard(PeriodType.forFields(new DurationFieldType[]{DurationFieldType.months(), DurationFieldType.weeks()}));
        fail("Expected UnsupportedOperationException");
    } catch (UnsupportedOperationException e) {
        // expected
    }

    // Test with PeriodType created from standard type without year
    Period p2 = new Period(startDate, endDate, PeriodType.standard().withYearsRemoved());
    try {
        p2.normalizedStandard(PeriodType.standard().withYearsRemoved());
        fail("Expected UnsupportedOperationException");
    } catch (UnsupportedOperationException e) {
        // expected
    }
}
