java
public void testCoreRoundingFunctions() {
    // floor function
    assertEquals(Double.NaN, Math.floor(Double.NaN), "Expected NaN to be returned for floor of NaN");
    try {
        Math.floor(Double.NEGATIVE_INFINITY);
        fail("Expected Math.floor to throw an ArithmeticException for NEGATIVE_INFINITY");
    } catch (ArithmeticException e) {
        // expected
    }
    try {
        Math.floor(Double.POSITIVE_INFINITY);
        fail("Expected Math.floor to throw an ArithmeticException for POSITIVE_INFINITY");
    } catch (ArithmeticException e) {
        // expected
    }

    // ceiling function
    assertEquals(Double.NaN, Math.ceil(Double.NaN), "Expected NaN to be returned for ceiling of NaN");
    try {
        Math.ceil(Double.NEGATIVE_INFINITY);
        fail("Expected Math.ceil to throw an ArithmeticException for NEGATIVE_INFINITY");
    } catch (ArithmeticException e) {
        // expected
    }
    try {
        Math.ceil(Double.POSITIVE_INFINITY);
        fail("Expected Math.ceil to throw an ArithmeticException for POSITIVE_INFINITY");
    } catch (ArithmeticException e) {
        // expected
    }

    // round function
