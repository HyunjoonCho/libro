java
public void testBracketingNthOrderBrentSolver() {
    BracketingNthOrderBrentSolver solver = new BracketingNthOrderBrentSolver();
    // Define the function for which we want to find the root
    Function f = new Function() {
        @Override
        public double value(double x) {
            return x * x * x * x - 1; // x^4 - 1
        }
    };

    // Set the initial bracketing interval
    double xA = 12500.0;
    double yA = 3.7e-16;
    double xB = 12500.03;
    double yB = -7.0e-5;

    // Set the aging values
    double agingA = 0;
    double agingB = 97;

    // Set the solver options
    solver.setMaxIterationCount(1000);
    solver.setBracketingInterval(xA, yA, xB, yB);
    solver.setAging(agingA, agingB);

    // Run the solver
    double root = solver.solve(f);

    // Check that the solver was able to find a root
    assertTrue(root!= Double.NaN);
