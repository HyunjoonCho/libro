javascript
// @jsr173
// @constructor
function MyParent() {}
MyParent.prototype.MyMethod = function(a) {
    this.a = a;
}

// @constructor
// @implements {MyParent}
function MyClass() {}
MyClass.prototype["MyMethod"] = function(a) {
    this.a2 = a;
}
window["MyClass"] = MyClass;

// Test that the warning is produced
function testIssue() {
    // Check that the warning is produced
    var warnings = console.warn.mock.calls;
    if (warnings.length!== 2) {
        throw new Error("Expected two warnings");
    }
    if (warnings[0]!== "dangerous use of the global this object.") {
        throw new Error("Expected warning 'dangerous use of the global this object.'");
    }
    if (warnings[1]!== "property MyMethod on interface MyParent is not implemented by type MyClass") {
        throw new Error("Expected warning 'property MyMethod on interface MyParent is not implemented by type MyClass'");
    }
}

// Run the test
testIssue();
