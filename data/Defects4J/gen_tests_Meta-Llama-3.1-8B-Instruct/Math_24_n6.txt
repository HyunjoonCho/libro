java
public void testBrentOptimizer() {
    // Define a simple function to optimize
    Function<Double, Double> f = x -> x * x + 1;

    // Initialize the BrentOptimizer
    BrentOptimizer optimizer = new BrentOptimizer(1e-6, 1e-6, 1e-6);

    // Set the initial bracket
    optimizer.setLowerBound(-10.0);
    optimizer.setUpperBound(10.0);

    // Perform the optimization
    double result = optimizer.optimize(f, 0.0);

    // Get the best point found
    double bestPoint = optimizer.getBestPoint();

    // Get the last point evaluated
    double lastPoint = optimizer.getLastPoint();

    // Check if the last point is better than the best point
    // If it's not, then the optimizer is not reporting the best point
    assertTrue(f.value(bestPoint) <= f.value(lastPoint));
}
