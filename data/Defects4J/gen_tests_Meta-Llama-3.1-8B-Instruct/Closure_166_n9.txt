public void testAnonymousObjectTypeInference() {
    // Java does not have direct equivalent of TypeScript's type inference, so we'll use generics
    class Record {
        String prop;
        String prop2;

        public Record(String prop, String prop2) {
            this.prop = prop;
            this.prop2 = prop2;
        }
    }

    // Method with generic type parameter that can be a subclass of Record
    void func2(Record record) {
        if (record instanceof String) {
            System.out.println(record);
        } else {
            System.out.println(record.prop);
        }
    }

    // Method with generic type parameter that can be a subclass of Record or String
    void func(Record record) {
        System.out.println(record.prop);
    }

    Record r = new Record("a", null);
    func(r); // This should compile and run correctly
    func2(r); // This should compile and run correctly
}