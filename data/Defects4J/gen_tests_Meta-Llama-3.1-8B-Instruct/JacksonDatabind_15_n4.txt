java
public void testXmlAdapterWithValueTypeObject() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    SomeIntListHolder listHolder = new SomeIntListHolder();
    listHolder.setListOne(asList(1, 2, 3));

    // Test with XmlAdapter that extends XmlAdapter<Object, List<Integer>>
    mapper.setAnnotationIntrospector(new JaxbAnnotationIntrospector());
    String json = mapper.writeValueAsString(listHolder);
    assertThrows(JsonMappingException.class, () -> mapper.readValue(json, SomeIntListHolder.class));

    // Test with XmlAdapter that extends XmlAdapter<String, List<Integer>>
    mapper = new ObjectMapper();
    mapper.setAnnotationIntrospector(new JaxbAnnotationIntrospector());
    json = mapper.writeValueAsString(listHolder);
    SomeIntListHolder deserializedHolder = mapper.readValue(json, SomeIntListHolder.class);
    assertEquals(1, deserializedHolder.getListOne().size());
    assertEquals(2, deserializedHolder.getListOne().get(0));
    assertEquals(3, deserializedHolder.getListOne().get(1));
}

public static class SomeIntListHolder {

    @XmlAttribute
    @XmlJavaTypeAdapter(IntegerListXmlAdapter.class)
    private List<Integer> listOne