public void testTypedefResolution() {
    // Simulating goog.provide and goog.scope
    String namespace = "a.b.c";
    String[] providedNames = new String[] {"a", "b", "c"};
    String[] scopeVariables = new String[] {"b", "c"};

    // Simulating the typedef
    String typedefName = "MyType";
    String typedefType = "string";

    // Simulating the function definition
    String funcName = "myFunc";
    String[] funcParams = new String[] {"x"};
    String funcParamType = "c.MyType";

    // The bug is that the typedef is not being resolved
    // so the compiler should throw an error
    assertThrows(IllegalArgumentException.class, () -> {
        // Simulating the JSCompiler
        // This should throw an error because the typedef is not resolved
        // in the context of the function definition
        // But in the actual JSCompiler, it will throw an error
        // because c is not in scope
    });
}