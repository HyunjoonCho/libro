java
public void testMultiStartUnivariateRealOptimizer() {
    MultiStartUnivariateRealOptimizer optimizer = new MultiStartUnivariateRealOptimizer();
    // Initialize the optimizer with some data
    optimizer.optimize(new Function() {
        @Override
        public double value(double x) {
            return x * x; // Simple function to optimize
        }
    });
    
    // Initially, the result might not be the best one
    double initialResult = optimizer.getResult();
    double initialFunctionValue = optimizer.getFunctionValue();
    
    // Now, let's assume the best result is in the second iteration
    // (this is just for demonstration purposes)
    optimizer.getResult(); // First iteration, get the result
    optimizer.getResult(); // Second iteration, get the result
    
    // Now, the result should be the best one
    double finalResult = optimizer.getResult();
    double finalFunctionValue = optimizer.getFunctionValue();
    
    // Check that the initial result is not the best one
    assertNotEquals(finalResult, initialResult);
    assertNotEquals(finalFunctionValue, initialFunctionValue);
}
