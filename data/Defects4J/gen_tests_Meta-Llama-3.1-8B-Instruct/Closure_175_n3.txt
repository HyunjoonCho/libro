java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JsMessage;
import com.google.javascript.jscomp.Result;
import com.google.javascript.jscomp.testing.CompileTestBase;

import java.io.IOException;

@RunWith(JUnit4.class)
public class AdvancedOptimizationsTest extends CompileTestBase {

    @Test
    public void testIssue() throws IOException {
        Compiler compiler = getCompiler();
        Result result = compiler.compile("window['anchor'] = function(obj, modifiesProp) { return (function(saved) { return modifiesProp(obj) + saved; })(obj['prop']); }");
        assertNoErrors(compiler);
        String output = compiler.toSource();
        String expected = "window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD};";
        if (!output.equals(expected)) {
            System.out.println("Expected: " + expected);
            System.out.println("Actual: " + output);
        }
        assertEquals(expected, output);
    }
}
