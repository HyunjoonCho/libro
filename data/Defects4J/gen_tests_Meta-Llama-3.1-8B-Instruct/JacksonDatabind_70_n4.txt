java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.MapperFeature;
import org.junit.Test;

import static org.junit.Assert.fail;

public class TestJsonUnwrappedCaseInsensitive {

    @Test(expected = java.util.NoSuchElementException.class)
    public void testIssue() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES);
        mapper.configure(SerializationFeature.WRAP_ROOT_VALUE, true);
        mapper.configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);

        Person person = new Person();
        person.businessAddress = new Address();
        person.businessAddress.street = "street";
        person.businessAddress.addon = "addon";
        person.businessAddress.zip = "zip";
        person.businessAddress.town = "town";
        person.businessAddress.country = "country";

        String json = mapper.writeValueAsString(person);
        System.out.println(json); // Print the JSON to see the issue
        // The issue is that the field 'businessAddress.' is not being unwrapped properly
        // and the resulting JSON is 'businessAddress': { 'businessAddress': {... } }
        // This causes the deserialization to fail because it expects a single level