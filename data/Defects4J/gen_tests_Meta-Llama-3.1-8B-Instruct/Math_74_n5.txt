java
public void testEmbeddedRungeKuttaInitializeStep() {
    // Define a simple ODE to integrate
    ODE ode = new ODE() {
        @Override
        public double[] computeDerivatives(double t, double[] y) {
            return new double[] { 1 }; // y' = 1
        }
    };

    // Set up the integrator
    DormandPrince853Integrator integrator = new DormandPrince853Integrator(ode, 0, 1, 1e-6, 1e-6, 0);

    // Define the initial condition
    double[] y0 = new double[] { 1 };
    double[] yDotK = new double[y0.length];

    // Set up the scale array
    double[] scale = new double[y0.length];
    if (integrator.getAbsoluteTolerance() == null) {
        for (int i = 0; i < scale.length; ++i) {
            final double yi = Math.max(Math.abs(y0[i]), Math.abs(y0[i]));
            scale[i] = integrator.getRelativeTolerance() * yi;
       