public void testDormandPrince853IntegratorStepSize() {
    // Create a sample ODE system
    class TestEquations implements DifferentialEquations {
        @Override
        public double[] computeDerivatives(double t, double[] y) {
            return new double[] {y[1], -y[0]};
        }
    }

    // Set up the integrator
    DormandPrince853Integrator integrator = new DormandPrince853Integrator(new TestEquations(), 1e-10, 1e-10);

    // Initial conditions
    double[] y0 = new double[] {1.0, 0.0};
    double t0 = 0.0;
    double tEnd = 1.0;

    // Initialize the integrator
    integrator.initialize(t0, y0);

    // Get the initial step size guess
    double[] scale = new double[y0.length];
    if (integrator.getAbsoluteTolerance() == null) {
        for (int i = 0; i < scale.length; ++i) {
            double yi = Math.max(Math.abs(y0[i]), Math.abs(y0[i]));
            scale[i] = integrator.get