javascript
describe('anonymous object type inference inconsistency when used in union', () => {
    it('should allow function with union type parameter to accept object with only one property', () => {
        function func({ prop }) {
            window.console.log(prop);
        }

        function func2({ prop, prop2 } | string) {
            if (typeof prop2 ==='string') {
                window.console.log(prop2);
            } else {
                window.console.log(prop);
            }
        }

        func({ prop: 'a' });
        func2({ prop: 'a' });
    });

    it('should throw error when function with union type parameter is called with object that does not match the union type', () => {
        function func({ prop }) {
            window.console.log(prop);
        }

        function func2({ prop, prop2 } | string) {
            if (typeof prop2 ==='string') {
                window.console.log(prop2);
            } else {
                window.console.log(prop);
            }
        }

        expect(() => func2({})).toThrow();
    });
});
