java
public class InjectMocksTest {

    @Mock
    private View txtNextStep;

    @Mock
    private View txtGateView;

    private ObjectUnderTest objectUnderTest;

    @Before
    public void setUp() {
        objectUnderTest = new ObjectUnderTest(txtNextStep, txtGateView);
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testInjectMocks() {
        // The mock is injected into the wrong field
        assertEquals(txtNextStep, objectUnderTest.getTxtGateView());
        assertEquals(txtGateView, objectUnderTest.getTxtNextStep());

        // Mocking out both fields fixes the issue
        when(txtGateView).thenReturn(mock(View.class));
        when(txtNextStep).thenReturn(mock(View.class));
        MockitoAnnotations.initMocks(this);
        assertEquals(txtGateView, objectUnderTest.getTxtGateView());
        assertEquals(txtNextStep, objectUnderTest.getTxtNextStep());
    }

    public static class ObjectUnderTest {
        private View txtGateView;
        private View txtNextStep;

        public ObjectUnderTest(View txtNextStep, View txtGateView) {
            this.txtGateView = txtNextStep;
            this.txtNextStep = txtGateView;
       