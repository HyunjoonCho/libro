javascript
function testOverzealousOptimization() {
    var uid;
    function reset() {
        uid = Math.random();
    }
    function doStuff() {
        reset();
        var _uid = uid;
        if (uid < 0.5) {
            doStuff();
        }
        if (_uid!== uid) {
            throw'reset() was called';
        }
    }
    doStuff();
}

// Test for the bug
try {
    testOverzealousOptimization();
} catch (e) {
    // If the bug is present, this assertion should fail
    assertTrue(false);
} catch (e) {
    // If the bug is fixed, this assertion should pass
    assertTrue(true);
}

// Test that replacing the declaration with "var _uid = +uid;" fixes the bug
function testOverzealousOptimizationFixed() {
    var uid;
    function reset() {
        uid = Math.random();
    }
    function doStuff() {
        reset();
        var _uid = +uid; // Use the unary plus operator to force a valueOf() call
        if (uid < 0.5) {
            doStuff();
        }
        if (_uid!== uid) {
            throw'reset