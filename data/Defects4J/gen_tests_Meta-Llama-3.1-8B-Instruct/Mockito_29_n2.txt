java
@Test
public void testVerifyExample() {
    // Given
    Capture<Integer> capture = new Capture<>();

    // When
    doAnswer(new Answer() {
        @Override
        public Object answer(InvocationOnMock invocation) throws Throwable {
            capture.setValue(invocation.getArgument(0));
            return null;
        }
    }).when(mockedObject).methodThatTakesAnInteger(anyInt());

    // Then
    // The original test code would have had an incorrect verify call here
    // For example, something like:
    verify(mockedObject).methodThatTakesAnInteger(1); // This would fail because the actual argument passed was not 1

    // But the correct verify call would be:
    verify(mockedObject).methodThatTakesAnInteger(capture.getValue());
}
