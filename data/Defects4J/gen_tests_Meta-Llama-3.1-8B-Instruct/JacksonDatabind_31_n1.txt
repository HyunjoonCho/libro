java
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;

public void testIssue2() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(SerializationFeature.INDENT_OUTPUT, true);

    JsonNode root = mapper.createObjectNode();
    root.put("a", "valueA");

    JsonNode node1 = root;
    JsonNode node2 = node1.get("a");

    JsonGenerator gen = mapper.getFactory().createGenerator(System.out);
    gen.writeStartObject();
    gen.writeObject(node1);
    gen.writeFieldName("a");
    gen.writeObject(node2);
    gen.writeEndObject();
    gen.close();

    JsonParser parser = mapper.getFactory().createParser(System.out);
    JsonNode result = mapper.readTree(parser);
    parser.close();

    // assert the writeContext and readContext are different
    System.out.println("Write Context:");
    printContext(mapper.getSerializationConfig().getRootValueDeserializer().getWriteContext());
    System.out.println("Read Context:");
    printContext(mapper.getDeserializationConfig().getRootValueDeserializer().getReadContext());

    // test that