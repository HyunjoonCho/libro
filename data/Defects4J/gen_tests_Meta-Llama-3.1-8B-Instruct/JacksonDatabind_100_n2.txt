java
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.base.ParserBase;
import com.fasterxml.jackson.databind.Base64Variant;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.TextNode;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertSame;

public class TreeTraversingParserTest {

    @Test
    public void testIgnoreBase64Variant() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        JsonParser parser = new TreeTraversingParser(mapper, "base64url");
        JsonToken token = parser.nextToken();
        parser.nextToken();
        parser.nextToken();
        parser.nextToken();

        JsonNode n = parser.getCodec().readTree(parser);
        assertSame(JsonToken.VALUE_STRING, n.getNodeType());

        TextNode textNode = (TextNode) n;
        byte[] expectedBytes = Base64Variants.MODIFIED_BASE64_URL_NO_PAD.decode(textNode.asText());
        byte[] actualBytes = textNode.getBinaryValue(Base64Variants.MODIFIED_BASE64_URL_NO_PAD);

        assertEquals(expectedBytes.length, actualBytes.length);
        for (int i = 0; i < expected