public void testReadResolveEqualHashCode() {
    class MultiKey2<A, B> extends MultiKey {
        private static final long serialVersionUID = 1928896152249821416L;

        public MultiKey2(A key1, B key2) {
            super(key1, key2);
        }

        public A getFirst() {
            return (A) getKey(0);
        }

        public B getSecond() {
            return (B) getKey(1);
        }
    }
    MultiKey2<String, String> one = new MultiKey2<>("bla", "blub");
    ByteArrayOutputStream byteOut = new ByteArrayOutputStream();
    ObjectOutputStream out = new ObjectOutputStream(byteOut);
    out.writeObject(one);
    out.close();
    byte[] serialized = byteOut.toByteArray();
    ByteArrayInputStream byteIn = new ByteArrayInputStream(serialized);
    ObjectInputStream in = new ObjectInputStream(byteIn);
    MultiKey2<String, String> two = (MultiKey2<String, String>) in.readObject();
    assertEquals(one, two);
}