public void testConstDumpsTypeCastInformation() throws Exception {
    // Create a class that mimics the JavaScript behavior
    Class<?> twoNumbersClass = new groovy.lang.Binding().createScript("class TwoNumbers { }").getMetaClass().getMetaClass();
    Field firstField = twoNumbersClass.getDeclaredField("first");
    Field secondField = twoNumbersClass.getDeclaredField("second");
    twoNumbersClass.getField("first").set(null, 1);
    twoNumbersClass.getField("second").set(null, 2);

    // Create a class with a field of type TwoNumbers
    Class<?> hasTwoNumbersClass = new groovy.lang.Binding().createScript("class HasTwoNumbers { TwoNumbers twoNumbers; }").getMetaClass().getMetaClass();
    Constructor<?> constructor = hasTwoNumbersClass.getConstructor();
    Object hasTwoNumbers = constructor.newInstance();

    // Simulate the getTwoNumbers method
    Field twoNumbersField = hasTwoNumbersClass.getDeclaredField("twoNumbers");
    twoNumbersField.set(hasTwoNumbers, twoNumbersClass.newInstance());

    // Try to add the @const annotation to the SOME_DEFAULT variable
    try {
        // Simulate the SOME_DEFAULT variable
        Object someDefault = two