java
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class ExternExportTest {
    
    @Test
    public void testExternExportWithTypedef() {
        String sourceCode = 
            "typedef {function(a:number):void} Foo;\n" +
            "var foo:Foo = function(a) { console.log(a); };";
        
        // Run the closure compiler
        // For simplicity, assume we have a method that runs the compiler and returns the externs
        String externs = runClosureCompiler(sourceCode);
        
        // Check if the externs contain the expected content
        if (!externs.contains("function Foo(a:number):void")) {
            fail("Expected Foo to be defined in externs");
        }
        
        // Test that the externs do not truncate the type
        sourceCode = 
            "typedef {function(a:number,b:number):void} Foo;\n" +
            "var foo:Foo = function(a,b) { console.log(a,b); };";
        
        externs = runClosureCompiler(sourceCode);
        if (!externs.contains("function Foo(a:number,b:number):void")) {
            fail("Expected Foo to be defined in