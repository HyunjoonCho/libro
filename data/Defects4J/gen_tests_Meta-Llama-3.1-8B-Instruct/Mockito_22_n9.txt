java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.mockito.invocation.Invocation;
import org.mockito.junit.MockitoJUnit;
import org.mockito.stubbing.Stubbing;
import org.mockito.stubbing.Delegate;

import java.util.function.Supplier;

import static org.junit.Assert.assertThrows;
import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;

@RunWith(MockitoJUnitRunner.class)
public class MockitoGenericsTest {

    @Mock
    private I i;

    @Test
    public void test() throws Exception {
        when(i.m(Boolean.class)).thenAnswer(invocation -> {
            Supplier<?> supplier = mock(Supplier.class, RETURNS_DEEP_STUBS);
            return supplier;
        });
        Class<?> clazz = invocation -> {
            Object result = invocation.getArgument(0);
            return (Class<?>) result;
        }.getArgument(0);
        when(i.m(Boolean.class)).thenReturn(supplier());
        assertThrows(ClassCastException.class, () -> i.m(Boolean.class).get());
    }

    private Supplier<?> supplier() {
