public void testOverflowInReadBits() {
    ByteArrayInputStream in = new ByteArrayInputStream(new byte[]{(byte) 0x57, (byte) 0x2D, (byte) 0x42, (byte) 0xF, (byte) 0x5A, (byte) 0x1D, (byte) 0x58, (byte) 0x3D, (byte) 0x21, (byte) 0x4A});
    BitInputStream bin = new BitInputStream(in, ByteOrder.LITTLE_ENDIAN);
    long bitsCached = 0;
    int bitsCachedSize = 0;
    try {
        bitsCached = bin.readBits(5);
        bitsCachedSize = 5;
        bin.readBits(58); // This will cause the overflow
    } catch (Exception e) {
        e.printStackTrace();
    }
    // Now, when we read 7 bits, it should return the correct value
    assertEquals(0x3D, bin.readBits(7));
}