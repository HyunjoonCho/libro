java
public void testLineRevert() {
    Vector3D position = new Vector3D(1000000000, 0, 0);
    Vector3D direction = new Vector3D(1, 0, 0);
    Line line = new Line(position, direction);
    
    Vector3D expectedRevertedDirection = new Vector3D(-1, 0, 0);
    
    // Original implementation
    Vector3D revertedDirection = line.revert().getDirection();
    
    // Expected implementation
    Vector3D expectedRevertedDirection = direction.negate();
    
    // Test if the implementation is imprecise
    assertTrue(Math.abs(revertedDirection.x - expectedRevertedDirection.x) > 0.0000001);
    assertTrue(Math.abs(revertedDirection.y - expectedRevertedDirection.y) > 0.0000001);
    assertTrue(Math.abs(revertedDirection.z - expectedRevertedDirection.z) > 0.0000001);
    
    // Test if the direction is negated correctly
    assertEquals(-1, revertedDirection.x);
    assertEquals(0, revertedDirection.y);
    assertEquals(0, revertedDirection.z);
}

public void testLineImmutability() {
    Line