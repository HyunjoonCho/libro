java
public class Test {
    @Module
    public static class CustomModule extends SimpleModule {
        @Override
        public void setupModule(SetupContext context) {
            context.setDeserializerModifier(new BeanDeserializerModifier() {
                @Override
                public JsonDeserializer<Enum> modifyEnumDeserializer(
                        DeserializationConfig config,
                        final JavaType type,
                        BeanDescription beanDesc,
                        final JsonDeserializer<?> deserializer) {
                    return new JsonDeserializer<Enum>() {
                        @Override
                        public Enum deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {
                            Class<? extends Enum> rawClass = (Class<Enum<?>>) type.getRawClass();
                            return Enum.valueOf(rawClass, jp.getValueAsString().toUpperCase());
                        }
                    };
                }

                @Override
                public KeyDeserializer modifyKeyDeserializer(
                        DeserializationConfig config,
                        JavaType type,
                        KeyDeserializer deserializer) {
                    if (!type.isEnumType()) {
                        return super.modifyKeyDeserializer(config, type, deserializer);
                    }
                    return new KeyDeserializer() {
                        @Override
                        @SuppressWarnings("unchecked")
                        public Object deserializeKey(String key, DeserializationContext ctxt)
                                throws IOException