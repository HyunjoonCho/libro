public void testLargeFirstStep() {
    // Create an ODE with a function that returns a constant value outside the range
    double function(double t) {
        return 1000.0; // arbitrary large value
    }

    // Set up the integrator
    double t0 = 0.0;
    double t1 = 0.000001; // very short integration range
    double[] y0 = {1.0};
    double[] y1 = new double[y0.length];

    // Use the Dormand-Prince 8(5,3) integrator
    Integrator integrator = new DormandPrince853Integrator(function, y0, t0, t1, 1e-12, 1000);

    // Allow the integrator to choose the first step size
    integrator.integrate();

    // Check that the integrator did not evaluate the function outside the range
    assertTrue(t0 <= integrator.getPreviousStep().getT() && integrator.getPreviousStep().getT() <= t1);
}