public void testRoundingFunctions() {
    Double resultNaN = assertXPathValue(context, "floor('NaN')");
    assertEquals(Double.NaN, resultNaN);

    Double resultNegativeInfinity = assertXPathValue(context, "floor(-2 div 0)");
    assertEquals(Double.NEGATIVE_INFINITY, resultNegativeInfinity);

    Double resultPositiveInfinity = assertXPathValue(context, "floor(2 div 0)");
    assertEquals(Double.POSITIVE_INFINITY, resultPositiveInfinity);

    resultNaN = assertXPathValue(context, "ceiling('NaN')");
    assertEquals(Double.NaN, resultNaN);

    resultNegativeInfinity = assertXPathValue(context, "ceiling(-2 div 0)");
    assertEquals(Double.NEGATIVE_INFINITY, resultNegativeInfinity);

    resultPositiveInfinity = assertXPathValue(context, "ceiling(2 div 0)");
    assertEquals(Double.POSITIVE_INFINITY, resultPositiveInfinity);

    resultNaN = assertXPathValue(context, "round('NaN')");
    assertEquals(Double.NaN, resultNaN);

    resultNegativeInfinity = assertXPathValue(context, "round(-2 div 0)");
    assertEquals(Double.NEGATIVE_INFINITY, resultNegativeInfinity);

    resultPositiveInfinity = assertXPathValue(context, "round(2 div 0)");
    assertEquals(Double.POSITIVE_INFINITY,