java
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathFactory;
import java.io.StringReader;

public void testUnionOperation() throws Exception {
    String xml = "<MAIN><A>avalue</A><B>bvalue</B></MAIN>";
    Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));
    XPath xPath = XPathFactory.newInstance().newXPath();

    NodeList nodes = (NodeList) xPath.compile("/MAIN/B | /MAIN/A").evaluate(doc, XPathConstants.NODESET);

    // Without sorting, the first node in the result is "/MAIN/B" which has a value of "bvalue"
    assertEquals("bvalue", getSingleNodeValue(nodes.item(0)));

    // Sorting the nodes should return "/MAIN/A" which has a value of "avalue"
    NodeList sortedNodes = sortNodes(nodes);
    assertEquals("avalue", getSingleNodeValue(sortedNodes.item(0)));
}

private NodeList sortNodes(NodeList nodes) {
    // This is