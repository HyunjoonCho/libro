java
public class TestOptimization {

    @Test
    public void testBrentOptimizerConvergenceChecker() {
        // Create a test function
        double[] x = { 1.0, 2.0 };
        double[] y = { 3.0, 4.0 };
        Function1D f = (double[] params) -> Math.sqrt(params[0] * params[0] + params[1] * params[1]);

        // Create a BrentOptimizer with a custom convergence checker
        BrentOptimizer optimizer = new BrentOptimizer();
        ConvergenceChecker checker = new ConvergenceChecker() {
            @Override
            public boolean converged(List<PointValuePair> points) {
                // Simulate convergence checker
                return points.size() > 10;
            }
        };
        optimizer.setConvergenceChecker(checker);

        // Run the optimizer
        PointValuePair result = optimizer.optimize(new BoxConstraint(x, y), f, 1e-6, 1e-6);

        // Check if the optimizer converged
        assertTrue(optimizer.getConvergenceChecker().converged(optimizer.getPoints()));
    }

    @Test(expected = NullPointerException.class