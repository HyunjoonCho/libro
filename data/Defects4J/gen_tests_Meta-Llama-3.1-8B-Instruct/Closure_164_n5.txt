public void testFunctionParameterTypeMismatch() {
    // Create a function with a parameter of type function(number, string): boolean
    Function2<String, Number, Boolean> func = new Function2<String, Number, Boolean>() {
        public Boolean apply(String s, Number n) {
            return null;
        }
    };

    // Create a function with a parameter of type function(string, number): boolean
    Function2<String, Number, Boolean> paramFunc1 = new Function2<String, Number, Boolean>() {
        public Boolean apply(String s, Number n) {
            return null;
        }
    };

    // This should compile
    func.apply("test", 1);

    // This should not compile, but we're checking that it throws an exception
    try {
        func.apply("test", 1, true);
        fail("Expected compilation error");
    } catch (Exception e) {
        // expected
    }

    // Create a function with a parameter of type function(string): boolean
    Function1<String, Boolean> paramFunc2 = new Function1<String, Boolean>() {
        public Boolean apply(String s) {
            return null;
        }
    };

    // This should not compile
    try {
        func