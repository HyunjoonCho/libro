java
public class CustomStringCollection {
    // immutable version of the collection
    private final List<String> list;

    public CustomStringCollection(List<String> list) {
        this.list = Collections.unmodifiableList(list);
    }

    public List<String> getList() {
        return list;
    }
}

public class CustomObject {
    private CustomStringCollection stringCollection;

    public CustomObject(CustomStringCollection stringCollection) {
        this.stringCollection = stringCollection;
    }

    public CustomStringCollection getStringCollection() {
        return stringCollection;
    }
}

public class Test {
    @Test
    public void testStringCollectionDeserializer() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        List<String> list = Arrays.asList("a", "b", "c");
        CustomStringCollection customCollection = new CustomStringCollection(list);

        // Directly deserializing the custom collection works fine
        String json = "{\"list\":[\"a\",\"b\",\"c\"]}";
        CustomStringCollection deserializedCollection = mapper.readValue(json, CustomStringCollection.class);
        assertNotNull(deserializedCollection.getList());

        // But deserializing it as a property of another object fails
        json