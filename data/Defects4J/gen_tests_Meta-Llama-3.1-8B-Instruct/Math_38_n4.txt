java
public void testBOBYQAOptimizer() {
    // Create a test function
    Function1D func = new AbstractUnivariateFunction() {
        @Override
        public double value(double x) {
            return Math.pow(x, 2); // Simple test function
        }
    };

    int dim = 2; // Number of dimensions
    double[] startPoint = new double[dim];
    Arrays.fill(startPoint, 0);

    BOBYQAOptimizer optim = new BOBYQAOptimizer(2 * dim + 2);
    try {
        RealPointValuePair result = optim.optimize(100, func, GoalType.MINIMIZE, startPoint);
        fail("Expected exception");
    } catch (OptimizationException e) {
        // Expected exception
    }
}
