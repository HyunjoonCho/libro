java
public class TestJackson {
    private static String TEST_INSTANCE_SERIALIZED = "{\"mapProperty\":[\"java.util.HashMap\",{\"CompoundKey\":\"Value\"}]";

    @Test
    public void testFails() throws JsonParseException, JsonMappingException, IOException {
        ObjectMapper mapper = new ObjectMapper().enableDefaultTyping(DefaultTyping.NON_FINAL);
        TestClass testInstance = mapper.readValue(TEST_INSTANCE_SERIALIZED, TestClass.class);
        String testInstanceSerialized = mapper.writeValueAsString(testInstance);
        assertEquals(TEST_INSTANCE_SERIALIZED, testInstanceSerialized);
    }

    @Test
    public void testFailsWithExplicitModule() throws JsonParseException, JsonMappingException, IOException {
        // This test passes, so it's not the bug we're interested in
    }

    @JsonAutoDetect(fieldVisibility = ANY)
    public static final class TestClass {
        @JsonProperty("mapProperty")
        @JsonSerialize(keyUsing = CompoundKeySerializer.class)
        private final Map<CompoundKey, String> mapProperty;

        @JsonCreator
        private TestClass(@JsonDeserialize(keyUsing = CompoundKeyDeserializer.class) @JsonProperty("mapProperty") Map<CompoundKey, String>