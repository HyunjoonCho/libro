java
public void testInitializeStepParameter() {
    // Create a simple ODE
    ODE equation = new ODE() {
        @Override
        public double[] computeDerivative(double t, double[] y) {
            double[] yDot = new double[y.length];
            for (int i = 0; i < y.length; i++) {
                yDot[i] = 1; // simple derivative
            }
            return yDot;
        }
    };

    // Set up the integrator
    double[] y0 = new double[] { 1.0, 2.0 };
    double t0 = 0.0;
    double[] atol = new double[] { 1e-6, 1e-6 };
    double[] rtol = new double[] { 1e-6, 1e-6 };
    EmbeddedRungeKuttaIntegrator integrator = new DormandPrince853Integrator(equation, atol, rtol, t0, y0);

    // Test the incorrect implementation
    double[] scaleIncorrect = new double[y0.length];
    for (int i = 0; i < y0.length; i++) {
        scaleIncorrect[i]