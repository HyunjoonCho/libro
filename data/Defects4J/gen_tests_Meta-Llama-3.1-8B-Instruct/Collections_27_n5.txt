java
import org.junit.Test;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertThrows;

import com.sun.org.apache.commons.beanutils.BeanUtils;
import com.sun.org.apache.commons.beanutils.BeanUtilsBean;
import com.sun.org.apache.commons.beanutils.ConvertUtils;
import com.sun.org.apache.commons.beanutils.ConvertUtilsBean;

public class InvokerTransformerTest {

    @Test
    public void testArbitraryRemoteCodeExecution() throws Exception {
        // Create a HashMap with InvokerTransformer
        Map<String, Object> map = new HashMap<>();
        map.put("field", "java.lang.Runtime.getRuntime().exec('ls')");

        // Serialize the map using InvokerTransformer
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bos);
        oos.writeObject(new InvokerTransformer().transform(map));
        oos.close();

        // Deserialize the object
        ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
        ObjectInputStream ois = new ObjectInputStream(bis);
        Object deserializedObject = ois.readObject();
        ois.close();

        // Get the