java
@Test
public void testDeserializeExternalTypeIdBeforePojo() {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addDeserializer(MyClass.class, new MyDeserializer());
    mapper.registerModule(module);
    
    String json = "{\"_type\":\"MyClass\",\"field1\":\"value1\"}";
    
    MyClass obj = mapper.readValue(json, MyClass.class);
    
    assertEquals("MyClass", obj.getType());
    assertEquals("value1", obj.getField1());
}

public static class MyClass {
    private String type;
    private String field1;
    
    public String getType() {
        return type;
    }
    
    public void setType(String type) {
        this.type = type;
    }
    
    public String getField1() {
        return field1;
    }
    
    public void setField1(String field1) {
        this.field1 = field1;
    }
}

public static class MyDeserializer extends JsonDeserializer<MyClass> {
    @Override
    public MyClass deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
        MyClass obj = new MyClass();
        obj.setType(p.getText());
        return obj;
    }
}
