public void testDefaultTyping() {
    ObjectMapper mapper = new ObjectMapper();
    // Configure default typing to allow deserialization of arbitrary types
    mapper.enableDefaultTyping(DefaultTyping.NON_FINAL, JsonTypeInfo.As.WRAPPER_OBJECT);
    
    // Create a malicious object with a public no-arg constructor and a private field
    MaliciousObject mo = new MaliciousObject();
    
    // Serialize the object
    String json = mapper.writeValueAsString(mo);
    
    // Deserialize the object
    Object deserialized = mapper.readValue(json, Object.class);
    
    // Verify that the deserialized object is an instance of the malicious class
    assertTrue(deserialized instanceof MaliciousObject);
}

class MaliciousObject {
    public MaliciousObject() {}
    private Object maliciousField = new Object();
}