java
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonSyntaxException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.internal.bind.util.TimeUnit;
import com.google.gson.reflect.TypeToken;

import org.junit.Test;

import java.io.IOException;
import java.io.StringReader;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;

public class GsonTest {

    @Test
    public void testIso8601WithNegativeTimeZoneOffset() {
        Gson gson = new GsonBuilder()
               .registerTypeAdapter(Date.class, new DateTypeAdapter())
               .create();

        String json = "{\"date\":\"2016-01-11T11:06:14.000-02\"}";
        assertThrows(JsonSyntaxException.class, () -> gson.fromJson(json, new TypeToken<Date>(){}.getType()));
    }

    private static class DateTypeAdapter extends TypeAdapter<Date> {
        @Override
        public Date read(JsonReader reader) throws IOException {
            String date = reader