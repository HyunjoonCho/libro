javascript
describe('issue with inheritance detection', function() {
    it('should not detect inheritance when prototype directly assigned', function() {
        function SuperClass() {}
        SuperClass.prototype.CustomMethod = function() {}

        function SubClass() {}
        SubClass.prototype = new SuperClass();
        SubClass.prototype.CustomMethod = function() {
            this.myProperty = "value";
        }

        var subClassInstance = new SubClass();

        expect(function() {
            console.log(subClassInstance.__proto__);
        }).not.toThrow();
    });

    it('should detect inheritance when prototype assigned through a function', function() {
        function SuperClass() {}
        SuperClass.prototype.CustomMethod = function() {}

        function SubClass() {}
        inherit(SubClass, SuperClass);
        SubClass.prototype.CustomMethod = function() {
            this.myProperty = "value";
        }

        var subClassInstance = new SubClass();

        expect(function() {
            console.log(subClassInstance.__proto__);
        }).not.toThrow();
    });
});

function inherit(Child, Parent) {
    Child.prototype = new Parent();
}
