public void testEmbeddedRungeKuttaTooLargeStep() {
    // Create an integration function that throws an exception if the input is out of range
    class OutOfRangeFunction implements DifferentialEquations {
        @Override
        public double[] derivative(double t, double[] y) {
            if (t > 1) {
                throw new RuntimeException("t is out of range");
            }
            return new double[] { 1 };
        }
    }

    // Set up the integrator with a short integration range and no initial step size
    double[] y0 = new double[] { 1 };
    double t0 = 0;
    double tEnd = 0.01;
    double[] result = IntegratorFactory.createDormandPrince853Integrator(0.01).integrate(new OutOfRangeFunction(), y0, t0, tEnd);

    // The test will fail if the integrator is able to complete the integration without throwing an exception
    try {
        result = IntegratorFactory.createDormandPrince853Integrator(0.01).integrate(new OutOfRangeFunction(), y0, t0, tEnd);
        fail("Expected exception");
    } catch (RuntimeException e