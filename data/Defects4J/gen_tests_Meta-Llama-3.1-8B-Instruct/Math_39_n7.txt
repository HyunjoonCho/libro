java
public void testTooLargeFirstStep() {
    // Create an integrator with a short integration range
    ODEIntegrator integrator = new DormandPrince853Integrator(new SimpleMathFunction(), 0.0, 0.1, 0.01, 1e-10, 1000);

    // Set up the function to be integrated
    final double[] y = new double[] { 0 };
    final double[] dydx = new double[] { 1 };

    // Set the function to return a value that is out of the integration range
    final int count = 0;
    SimpleMathFunction func = new SimpleMathFunction() {
        @Override
        public int count() {
            return count++;
        }

        @Override
        public double value(double t, double[] y, double[] dydx) {
            return count;
        }
    };

    integrator.integrate(func, y, dydx);

    // The integrator should have stopped due to the function value being out of range
    assertTrue(integrator.isComplete());
    // The solution should be close to the start point (0,0)
    assertEquals(0.0, y[0], 1e-