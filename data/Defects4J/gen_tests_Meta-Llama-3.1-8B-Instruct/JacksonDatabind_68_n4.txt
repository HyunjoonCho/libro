java
public class Test {
    private static final String JSON = "[{\"message\":\"messageHere\"}]";

    @Test
    public void test() throws IOException {
        ObjectMapper om = new ObjectMapper();
        om.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);
        om.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false); // Disable this to prevent failure on missing properties

        // Test with 2.7.x and 2.8.x
        try {
            om.readValue(JSON, A.class);
            fail("Expected InputMismatchException");
        } catch (InputMismatchException e) {
            // Expected exception
        }

        // Test with 2.5 and 2.6 (should not throw an exception)
        ObjectMapper om25 = new ObjectMapper();
        om25.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);
        om25.readValue(JSON, A.class);
    }

    static class A {
        List<B> bs = Collections.emptyList();

        @JsonCreator
        A(final List<B> bs) {
            this.bs = bs;
        }
    }

    static class B {
        List<C> cs = Collections.emptyList();

        @JsonCreator
        B(final List<C> cs) {
