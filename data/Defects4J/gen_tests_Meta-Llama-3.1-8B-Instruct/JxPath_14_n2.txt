public void testRoundFunctionsWithNanAndInfinity() {
    // test floor
    assertThrows(ArithmeticException.class, () -> NumberUtils.floor(Double.NaN));
    assertThrows(ArithmeticException.class, () -> NumberUtils.floor(Double.NEGATIVE_INFINITY));
    assertThrows(ArithmeticException.class, () -> NumberUtils.floor(Double.POSITIVE_INFINITY));

    // test ceiling
    assertThrows(ArithmeticException.class, () -> NumberUtils.ceiling(Double.NaN));
    assertThrows(ArithmeticException.class, () -> NumberUtils.ceiling(Double.NEGATIVE_INFINITY));
    assertThrows(ArithmeticException.class, () -> NumberUtils.ceiling(Double.POSITIVE_INFINITY));

    // test round
    assertThrows(ArithmeticException.class, () -> NumberUtils.round(Double.NaN));
    assertThrows(ArithmeticException.class, () -> NumberUtils.round(Double.NEGATIVE_INFINITY));
    assertThrows(ArithmeticException.class, () -> NumberUtils.round(Double.POSITIVE_INFINITY));
}