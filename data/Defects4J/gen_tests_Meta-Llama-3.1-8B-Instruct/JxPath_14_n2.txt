java
import org.junit.Test;

public class TestRoundingFunctions {
    @Test(expected = ArithmeticException.class)
    public void testFloor_NaN() {
        Double.NaN = Double.NaN;
        floor(Double.NaN);
    }

    @Test(expected = ArithmeticException.class)
    public void testFloor_NegativeInfinity() {
        Double.NaN = Double.NEGATIVE_INFINITY;
        floor(Double.NEGATIVE_INFINITY);
    }

    @Test(expected = ArithmeticException.class)
    public void testFloor_PositiveInfinity() {
        Double.NaN = Double.POSITIVE_INFINITY;
        floor(Double.POSITIVE_INFINITY);
    }

    @Test(expected = ArithmeticException.class)
    public void testCeiling_NaN() {
        Double.NaN = Double.NaN;
        ceiling(Double.NaN);
    }

    @Test(expected = ArithmeticException.class)
    public void testCeiling_NegativeInfinity() {
        Double.NaN = Double.NEGATIVE_INFINITY;
        ceiling(Double.NEGATIVE_INFINITY);
    }

    @Test(expected = ArithmeticException.class)
    public void testCeiling_PositiveInfinity() {
        Double.NaN = Double.POSITIVE_INFINITY;
        ceiling(Double.POSITIVE_INFINITY);
    }

    @Test(expected = ArithmeticException.class)
    public void testRound_NaN() {
        Double.NaN =