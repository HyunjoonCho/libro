java
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.InitialGuessArray2D;
import org.apache.commons.math3.optim.OptimizationException;
import org.apache.commons.math3.optim.UnivariateFunction;
import org.apache.commons.math3.optim.linear.LinearConstraint;
import org.apache.commons.math3.optim.linear.LinearConstraintSet;
import org.apache.commons.math3.optim.linear.Relationship;
import org.apache.commons.math3.optim.nonlinear.scalar.GoalType;
import org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer;
import org.junit.Test;

import java.util.Random;

public class OptimizationTest {

    @Test
    public void testPowellOptimizer() {
        // Create a test function
        UnivariateFunction function = x -> Math.pow(x, 2);

        // Create a Powell optimizer with a random initial guess
        InitialGuess initialGuess = new InitialGuess(new double[]{10.0});
        Random random = new Random(12345);
        double[] initialGuessArray = new double[1];
        for (int i = 0; i < initial