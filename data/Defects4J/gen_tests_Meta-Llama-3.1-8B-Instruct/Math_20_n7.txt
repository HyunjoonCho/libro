java
public void testCMAESOptimizerBounds() {
    // Set up a CMAESOptimizer with a small population size and a small feasible count check
    CMAESOptimizer optimizer = new CMAESOptimizer(1, 10, 0.01, 1000);
    // Define the bounds
    double[] lowerBounds = { -10, -10 };
    double[] upperBounds = { 10, 10 };
    // Define the objective function
    double[] x = new double[] { 0, 0 };
    double result = 0;
    // Set up a simple objective function
    FitnessFunction func = (params) -> {
        x[0] = params[0];
        x[1] = params[1];
        result = x[0] * x[0] + x[1] * x[1];
        return result;
    };
    // Optimize
    optimizer.optimize(lowerBounds, upperBounds, func, 100);
    // Check that the result is within the bounds
    assertTrue(optimizer.getBestFitness() >= lowerBounds[0]);
    assertTrue(optimizer.getBestFitness() <= upperBounds[0]);
    assertTrue(optimizer.getBestFitness() >= lowerBounds[