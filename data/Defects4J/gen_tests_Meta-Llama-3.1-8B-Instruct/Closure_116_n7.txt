public void testAdvancedOptimizationsIssue() throws Exception {
    // Create a test file input.js
    String inputJs = "window['anchor'] = function (obj, modifiesProp) { return (function (saved) { return modifiesProp(obj) + saved; })(obj['prop']); }";

    // Compile it with ADVANCED_OPTIMIZATIONS mode
    String[] compileArgs = new String[] {
        "--compilation_level", "ADVANCED_OPTIMIZATIONS",
        "--warning_level", "VERBOSE",
        "--externs", "window.js",
        "--js", "input.js",
        "--js_output_file", "output.js"
    };

    // Run the compilation command
    Process process = Runtime.getRuntime().exec(new String[] {"java", "-jar", "compiler.jar", "--js", "input.js", "--js_output_file", "output.js"}, null, new File("."));
    process.waitFor();

    // Read the compiled output
    String outputJs = new String(Files.readAllBytes(Paths.get("output.js")));

    // Check if the output is as expected
    String expectedOutput = "window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD};";
    Assert