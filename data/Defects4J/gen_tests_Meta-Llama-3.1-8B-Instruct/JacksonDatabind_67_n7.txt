public void testKeyDeserializerModifierIgnored() {
    // Create a test enum
    enum Color { RED, GREEN, BLUE }

    // Create a mapper with a custom deserializer modifier
    ObjectMapper mapper = new ObjectMapper();
    mapper.getDeserializationConfig().addHandler(new Module() {
        @Override
        public void setupModule(DeserializationConfig config, BasicAutoDetectingModule baseModule) {
            config.setDeserializerModifier(new BeanDeserializerModifier() {
                @Override
                public KeyDeserializer modifyKeyDeserializer(DeserializationConfig config, JavaType type, KeyDeserializer deserializer) {
                    if (!type.isEnumType()) {
                        return super.modifyKeyDeserializer(config, type, deserializer);
                    }
                    return new KeyDeserializer() {
                        @Override
                        public Object deserializeKey(String key, DeserializationContext ctxt) throws IOException, JsonProcessingException {
                            return key.toUpperCase();
                        }
                    };
                }
            });
        }
    });

    // Test that the custom deserializer is ignored
    try {
        mapper.readValue("{\"color\":\"red\"}", Color.class);
        fail("Expected KeyDeserializer modifier to be ignored");
    } catch (Exception e) {
        // Expected exception
    }
}