java
public void testMapKeyDeserializerModifiersIgnored() throws IOException {
    // Create a simple enum
    Enum<?> enumType = Enum.valueOf(EnumClass.class, "A");

    // Create a bean with a field of type Enum
    Bean bean = new Bean(enumType);

    // Create a mapper with a custom module
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule() {
        @Override
        public void setupModule(SetupContext context) {
            context.addBeanSerializerModifier(new BeanSerializerModifier() {
                @Override
                public JsonSerializer<?> modifyEnumSerializer(SerializationConfig config, JavaType type, JsonSerializer<?> serializer, BeanDescription beanDesc) {
                    return new JsonSerializer<Enum>() {
                        @Override
                        public void serialize(Enum value, JsonGenerator gen, SerializerProvider provider) throws IOException {
                            gen.writeString(value.name().toUpperCase());
                        }
                    };
                }
            });
        }
    };
    mapper.registerModule(module);

    // Test that the deserializer modifier is not applied
    Bean beanDeserialized = mapper.readValue("{\"enumField\":\"a\"}", Bean.class);
    assertEquals(EnumClass.A, beanDeserialized.getEnumField());
}
