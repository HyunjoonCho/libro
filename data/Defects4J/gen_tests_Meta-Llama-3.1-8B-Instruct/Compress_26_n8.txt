public void testSkipNotWorking() {
    ByteArrayInputStream bais = new ByteArrayInputStream("1234567890".getBytes());
    CipherInputStream cis = new CipherInputStream(bais, new NullCipher());
    try {
        long skipped = IOUtils.skip(cis, 7);
        assertEquals(7, skipped);
        skipped = IOUtils.skip(cis, 7);
        assertEquals(3, skipped);
    } catch (IOException e) {
        fail("IOException not expected");
    }
}

class NullCipher extends Cipher {
    public int update(byte[] b, int off, int len) {
        return len;
    }
    public int update(byte[] b) {
        return b.length;
    }
    public int doFinal(byte[] b, int off, int len) {
        return len;
    }
    public int doFinal(byte[] b) {
        return b.length;
    }
    public int getOutputSize(int len) {
        return len;
    }
    public int getBlockSize() {
        return 0;
    }
    public void init(int opmode, Key key) throws InvalidKeyException {
    }
}