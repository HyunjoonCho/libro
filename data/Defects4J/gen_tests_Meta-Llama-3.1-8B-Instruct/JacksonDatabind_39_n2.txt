java
public void testJacksonContinuesParsingAfterFailOnInvalidSubtype() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper().disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE,
            DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES);

    String json = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    CallRecord call = new CallRecord();
    objectMapper.readValue(json, call);
    assertEquals(0.0f, call.version, 0);
    assertEquals("123", call.application);
    assertNotNull(call.item);
    assertNotNull(call.item2);

    json = "{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}";
    try {
        objectMapper.readValue(json, CallRecord.class);
        fail("Expected DeserializationFeature.FAIL_ON_INVALID_SUBTYPE to fail");
    } catch (JsonMappingException e) {
        // expected
    }

    json = "{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}, \"version\":0.0,\"application\":\"123\"}";
    try {
        objectMapper.readValue(json