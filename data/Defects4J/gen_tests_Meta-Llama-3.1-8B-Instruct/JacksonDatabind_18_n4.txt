java
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.util.MappingIterator;
import org.junit.Test;

import java.io.IOException;
import java.util.Iterator;

import static org.junit.Assert.fail;

public class ObjectReaderTest {

    @Test
    public void testErrorRecovery() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"a\":1,\"b\":2,\"c\":3}";
        MappingIterator<Object> iterator = mapper.readerFor(Object.class).readValues(json);

        // Introduce a JSON parsing error
        try {
            iterator.next();
            fail("Expected JsonMappingException");
        } catch (JsonMappingException e) {
            // Expected exception
        }

        // Check if the iterator is still pointing to a valid position
        try {
            iterator.next();
            fail("Expected JsonMappingException");
        } catch (JsonMappingException e) {
            // Expected exception
        }
    }

    @Test
    public void testNoErrorRecovery() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"a\":1,\"b\":2,\"c\":3}";
        MappingIterator<Object> iterator = mapper.readerFor(Object.class).readValues