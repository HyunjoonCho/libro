java
public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    double[] initialBounds = {0, 10};
    double[] initialGuess = {5};
    brentOptimizer.optimize(1.0, x -> x * x, initialBounds, initialGuess);
    double lastValue = Double.POSITIVE_INFINITY;
    double bestValue = Double.POSITIVE_INFINITY;
    double lastPoint = Double.NaN;
    double bestPoint = Double.NaN;
    for (int i = 0; i < 100; i++) {
        double[] point = brentOptimizer.nextPoint();
        double value = x -> x * x.evaluate(point[0]);
        if (value < bestValue) {
            bestValue = value;
            bestPoint = point[0];
        }
        if (value < lastValue) {
            lastValue = value;
            lastPoint = point[0];
        }
    }
    // Check that the best point is indeed the last point
    assertEquals(lastPoint, bestPoint, 1e-6);
}
