public void testBrentOptimizer() {
    // Create a function with a known minimum
    final double[] best = new double[2];
    final double[] x = new double[2];
    final double[] y = new double[2];
    for (int i = 0; i < 2; i++) {
        x[i] = i;
        y[i] = Math.pow(x[i], 2);
    }

    // Set the initial bounds and initial guess
    double[] initialGuess = new double[] { 1, 2 };
    double[] lowerBound = new double[] { -10, -10 };
    double[] upperBound = new double[] { 10, 10 };

    BrentOptimizer brentOptimizer = new BrentOptimizer(x, y);
    brentOptimizer.optimize(lowerBound, upperBound, initialGuess);

    // Check that the final point is indeed the best point encountered
    for (int i = 0; i < x.length; i++) {
        double[] lastPoint = new double[2];
        double[] secondLastPoint = new double[2];
        double lastY = Double.POSITIVE_INFINITY;
        double secondLastY = Double.POSITIVE_INFINITY;
        for