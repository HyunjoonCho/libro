java
import org.junit.Test;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintStream;

import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;

public class ClosureCompilerTest {

    @Test
    public void testClosureCompilerDifference() throws IOException {
        String input = "var foreignObject = gfx.parentNode.parentNode;\n" +
                "var parentContainer = foreignObject.parentNode.parentNode;";

        ByteArrayOutputStream out = new ByteArrayOutputStream();
        System.setOut(new PrintStream(out));
        CompilerOptions options = new CompilerOptions();
        options.setLanguageIn(CompilerOptions.Language.ECMASCRIPT3);
        Compiler compiler = new Compiler();
        compiler.compile(input, options, CompilationLevel.SIMPLE_OPTIMIZATIONS);
        String output = out.toString();

        // Expected output from Web UI
        String expectedOutput = "if(b){if(a=b.parentNode.parentNode,b=a.parentNode.parentNode,null!==b)";

        // Expected output from command line
        String expectedCommandLineOutput = "var b=a=a.parentNode.parentNode;";

        // Test that the output from the compiler matches the expected output from the Web UI
        System.out.println("Expected output from Web UI