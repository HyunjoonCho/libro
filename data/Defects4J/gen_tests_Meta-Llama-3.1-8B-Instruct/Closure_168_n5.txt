javascript
// test3-1.js: Correct behavior with direct function call
var makeClass = function(protoMethods) {
    var clazz = function() {
        this.initialize.apply(this, arguments);
    }
    for (var i in protoMethods) {
        clazz.prototype[i] = protoMethods[i];
    }

    return clazz;
}

/** @constructor */
var Person = function(name){};
Person = makeClass(
    /** @lends Person.prototype */
    {
        /** @this {Person} */
        initialize: function(name) {
            this.name = name;
        },

        /** @this {Person} */
        getName: function() { return this.name; },

        /**
         * @param {string} message
         * @this {Person}
         */
        say: function(message) {
            window.console.log(this.getName(1) +'says:'+ message);
        }
    }
);

var joe = new Person('joe');
joe.say('hi');
var jane = new Person('jane');
jane.say('hello');

// test3-2.js: Failing behavior with function call in setTimeout
var makeClass = function(protoMethods) {
    var clazz = function() {
        this.initialize.apply(this, arguments