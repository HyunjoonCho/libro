java
public void testODEIntegrationEventDetection() throws Exception {
    // Define the switching function
    public class SwitchingFunction extends AbstractODE {
        @Override
        public double[] derivative(double t, double[] y, double[] dYdt) {
            dYdt[0] = 0; // dummy equation
            if (t < 90) {
                dYdt[1] = 1; // switch to positive
            } else {
                dYdt[1] = -1; // switch to negative
            }
            return dYdt;
        }
    }

    // Define the event handler
    public class EventHandler extends AbstractEventHandler {
        @Override
        public boolean isSatisfied(double t, double[] y) {
            return y[1] == 0; // detect when the switching function crosses zero
        }

        @Override
        public double[] getEventDirection(double t, double[] y) {
            return new double[] {1}; // indicate that the event is an event of the first kind
        }
    }

    // Create the solver
    final ODE ode = new SwitchingFunction();
    final EventHandler eventHandler = new EventHandler();
    final double[] initialConditions