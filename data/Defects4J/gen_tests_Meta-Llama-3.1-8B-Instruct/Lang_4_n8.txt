public void testLookupTranslatorCharSequenceCompatibility() {
    CharBuffer cs1 = CharBuffer.wrap("1 < 2".toCharArray());
    String cs2 = "1 < 2";
    StringEscapeUtils escapeHtml4 = StringEscapeUtils.ESCAPE_HTML4;
    
    // The bug: CharBuffer and String are not equal
    try {
        escapeHtml4.translate(cs1);
        fail("Expected translate to fail with CharBuffer");
    } catch (Exception e) {
        // Expected
    }
    
    // Work-around 1: Convert CharBuffer to String
    assertEquals("1 < 2", escapeHtml4.translate(cs2));
    
    // Work-around 2: Implement a custom CharSequence wrapper
    CustomCharSequence customCs1 = new CustomCharSequence(cs1.array(), cs1.limit());
    assertEquals("1 < 2", escapeHtml4.translate(customCs1));
}

class CustomCharSequence implements CharSequence {
    private final char[] array;
    private final int limit;
    
    public CustomCharSequence(char[] array, int limit) {
        this.array = array;
        this.limit = limit;
    }
    
    @Override
    public int length() {
        return limit;
    }