java
public void testLookupTranslatorWithCharSequence() {
    String cs1 = "1 < 2";
    CharBuffer cs2 = CharBuffer.wrap("1 < 2".toCharArray());

    assertEquals(StringEscapeUtils.ESCAPE_HTML4.translate(cs1), StringEscapeUtils.ESCAPE_HTML4.translate(cs2));
    assertEquals(StringEscapeUtils.ESCAPE_HTML4.translate(cs1), StringEscapeUtils.ESCAPE_HTML4.translate(cs2.toString()));

    // Test with a custom CharSequence wrapper
    CustomCharSequence customCs2 = new CustomCharSequence(cs2.array());
    assertEquals(StringEscapeUtils.ESCAPE_HTML4.translate(cs1), StringEscapeUtils.ESCAPE_HTML4.translate(customCs2));
}

class CustomCharSequence implements CharSequence {
    private final char[] array;

    public CustomCharSequence(char[] array) {
        this.array = array;
    }

    @Override
    public int length() {
        return array.length;
    }

    @Override
    public char charAt(int index) {
        return array[index];
    }

    @Override
    public CharSequence subSequence(int start, int end) {
        return new CustomCharSequence(Arrays.copyOfRange(array, start, end));
    }

    @Override
    public