java
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;

import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintStream;

public class ClosureCompilerTest {

    @Test
    public void testClosureCompiler() throws IOException {
        String input = "var foreignObject = gfx.parentNode.parentNode;" +
                "var parentContainer = foreignObject.parentNode.parentNode;";

        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        PrintStream ps = new PrintStream(baos);
        System.setOut(ps);

        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setCompilationLevel(CompilationLevel.SIMPLE_OPTIMIZATIONS);
        compiler.compile(input, options);

        String output = baos.toString();
        System.setOut(System.out);

        // Test with Web UI output
        String webUiOutput = "if(b){if(a=b.parentNode.parentNode,b=a.parentNode.parentNode,null!==b)";
        assertNotEquals(webUiOutput, output);

        // Test with command line output
        String commandLineOutput = "var b=a=a.parentNode.parentNode;";
        assertNotEquals(commandLineOutput, output);
    }
