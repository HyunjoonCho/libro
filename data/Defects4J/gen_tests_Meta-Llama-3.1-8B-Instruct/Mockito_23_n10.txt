java
public class AbstractClassTest {

    @Mock
    private ClassExtendsAbstractClass classExtendsAbstractClass;

    private A a;

    @Before
    public void before() {
        Mockito.when(classExtendsAbstractClass.give()).thenReturn("aaa");
    }

    @Test(expected = RuntimeException.class)
    public void test() {
        a = new A(classExtendsAbstractClass);
    }

    static abstract class AbstractClass {
        abstract protected Long lol();
        abstract protected String wow();
        public String give() {
            wow();
            lol();
            return "give";
        }
    }

    static class ClassExtendsAbstractClass extends AbstractClass {
        @Override
        protected Long lol() {
            return 2L;
        }

        @Override
        protected String wow() {
            return "WOW";
        }
    }

    static class A {
        private ClassExtendsAbstractClass classExtendsAbstractClass;

        public A(ClassExtendsAbstractClass classExtendsAbstractClass) {
            this.classExtendsAbstractClass = classExtendsAbstractClass;
        }

        public String doSomeThing() {
            return classExtendsAbstractClass.wow();
       