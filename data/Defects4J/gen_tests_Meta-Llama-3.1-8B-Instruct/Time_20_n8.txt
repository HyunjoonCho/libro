java
import org.junit.Test;
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class JodaDateTimeZoneTest {

    private static DateTimeFormatter formatter = DateTimeFormat.forPattern("MM/dd/yyyy HH:mm:ss.SSS ZZZ");

    @Test
    public void testDateTimeZoneIds() {
        String[] timeZones = DateTimeZone.getAvailableIDs();

        for (String timeZone : timeZones) {
            try {
                DateTimeZone jodaTimeZone = DateTimeZone.forID(timeZone);
                DateTime jodaDateTime = DateTime.now().withZone(jodaTimeZone);

                String jodaTimeZoneId = jodaDateTime.getZone().getID();

                if (!timeZone.equals(jodaTimeZoneId)) {
                    fail("Time zone ID mismatch: " + timeZone + " does not equal " + jodaTimeZoneId);
                }
            } catch (Exception e) {
                fail("Exception occurred for time zone ID: " + timeZone, e);
            }
        }
    }
}
