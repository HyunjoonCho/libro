public void testIssueWithDefaultImpl() {
    JsonMapSchema baseSchema = new JsonMapSchema() {
        @Override
        public String getName() {
            return "baseSchema";
        }
    };

    JsonMapSchema schema = new JsonMapSchema() {
        @Override
        public String getName() {
            return "schema";
        }
    };

    ObjectMapper mapper = new ObjectMapper();
    try {
        mapper.registerSubtypes(JsonMapSchema.class, JsonSchema.class);
        String json = mapper.writeValueAsString(baseSchema);
        JsonMapSchema deserialized = mapper.readValue(json, JsonMapSchema.class);
        assertEquals("baseSchema", deserialized.getName());
    } catch (JsonProcessingException e) {
        fail("Unexpected exception: " + e.getMessage());
    }
}