java
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdDeserializerDelegate;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class FilteringParserDelegateTest {

    @Test(expected = JsonMappingException.class)
    public void testFilteringParserDelegate() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        JsonParser jsonParser = mapper.getFactory().createParser("a");
        JsonToken token = jsonParser.nextToken();
        StdDeserializer<Object> deserializer = mapper.getDeserializationConfig().getHandlerInstance(Object.class);
        StdDeserializerDelegate delegate = new StdDeserializerDelegate(deserializer, jsonParser);
        delegate._matchCount = 2;
        delegate.startObject();
        while (token!= JsonToken.END_OBJECT) {
            token = jsonParser.nextToken();
            if (token == JsonToken.FIELD_NAME) {
                jsonParser.nextToken();
                if (jsonParser.getCurrentToken() == JsonToken.VALUE_NULL) {
                    jsonParser.nextToken(); // Move to next token
                    jsonParser.nextToken(); // Move to next token
                    jsonParser.nextToken();