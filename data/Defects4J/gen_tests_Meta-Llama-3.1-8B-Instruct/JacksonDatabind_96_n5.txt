java
public void testImplicitConstructorPropertyNames() {
    // Create a simple class with a constructor and a field
    class TestClass {
        private final String value;
        public TestClass(String value) {
            this.value = value;
        }
    }

    // Create a PropertyNamingStrategy that prefixes field names
    PropertyNamingStrategy strategy = new PropertyNamingStrategy.StandardStrategy().withUnderscoreNameSeparator("_");

    // Create a ObjectMapper with the PropertyNamingStrategy
    ObjectMapper mapper = new ObjectMapper();
    mapper.setPropertyNamingStrategy(strategy);

    // Serialize and deserialize the object
    TestClass original = new TestClass("originalValue");
    String json = mapper.writeValueAsString(original);
    TestClass deserialized = mapper.readValue(json, TestClass.class);

    // Check that the deserialized object has the correct property name
    assertEquals("original_value", deserialized.value);
}
