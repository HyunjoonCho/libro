public void testInconsistentTypeInference() {
    // @param {string} | {prop: string, prop2: (string|undefined)} record
    Object record1 = new Object();
    record1.put("prop", "a");
    Object record2 = "a";
    try {
        func(record1);
    } catch (Exception e) {
        fail("Expected func to work with {prop: string}");
    }
    func(record2);

    // @param {string} | {prop: string, prop2: (string|undefined)} record
    // Should be allowed to pass {prop: string} to this function
    try {
        func2(record1);
        fail("Expected func2 to throw an exception");
    } catch (Exception e) {
        // Expected
    }
    func2(record2);
}

private void func(Object record) {
    System.out.println(record);
}

private void func2(Object record) {
    if (record instanceof String) {
        System.out.println(record);
    } else {
        System.out.println(((Map) record).get("prop"));
    }
}