java
@Test
public void testBug() {
    final UnivariateRealFunction f = new UnivariateRealFunction() {
        @Override
        public double value(double x) {
            return Math.exp(x) - Math.pow(Math.PI, 3.0);
        }
    };

    UnivariateRealSolver solver = new RegulaFalsiSolver();
    try {
        solver.solve(100, f, 1, 10);
        fail("Expected RegulaFalsiSolver to exceed maximum evaluations");
    } catch (ConvergenceException e) {
        if (e.getMessage().contains("maximal count (100) exceeded: evaluations")) {
            // Expected behavior
        } else {
            fail("Unexpected ConvergenceException message: " + e.getMessage());
        }
    }
}

@Test
public void testPegasusSolver() {
    final UnivariateRealFunction f = new UnivariateRealFunction() {
        @Override
        public double value(double x) {
            return Math.exp(x) - Math.pow(Math.PI, 3.0);
        }
    };

    UnivariateRealSolver solver = new PegasusSolver();
    double root = solver.solve(f, 1, 10);
    double expectedRoot = Math.log(Math.pow