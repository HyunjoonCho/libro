java
import org.junit.Test;
import org.junit.Assert;

import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;

public class JacksonTest {

    enum Type { BIG_DECIMAL }

    static class Wrapper {

        @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXTERNAL_PROPERTY, property = "type")
        @JsonSubTypes({ @JsonSubTypes.Type(name = "BIG_DECIMAL", value = BigDecimal.class) })
        Object value;

        public Wrapper() {}
    }

    @Test
    public void test() throws Exception {

        ObjectMapper m = new ObjectMapper();
        m.configure(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS, true);

        Wrapper w = new Wrapper();
        w.value = new BigDecimal("-10000000000.0000000001");

        String json = m.writeValueAsString(w);
        Wrapper w2 = m.readValue(json, Wrapper.class);

        Assert.assertEquals(BigDecimal.class, w2.value.getClass());
        Assert.assertTrue(String.format("Expected %s; got back %s",
            w.value.toString(), w2.value.toString