javascript
describe('Issue: Inheritance not detected when prototype directly assigned', () => {
    let SuperClass;
    let SubClass;

    beforeEach(() => {
        SuperClass = function() {};
        SuperClass.prototype.CustomMethod = function() {};

        SubClass = function() {};
    });

    it('should throw warning when prototype directly assigned', () => {
        SubClass.prototype = new SuperClass();
        SubClass.prototype.CustomMethod = function() {
            this.myProperty = "value";
        };

        expect(() => new SubClass()).toThrowWarning(/property CustomMethod not defined on any superclass of SubClass/);
    });

    it('should not throw warning when prototype assignment is wrapped in a function', () => {
        function inherit(Child, Parent) {
            Child.prototype = new Parent();
        }

        inherit(SubClass, SuperClass);
        SubClass.prototype.CustomMethod = function() {
            this.myProperty = "value";
        };

        expect(() => new SubClass()).not.toThrowWarning();
    });
});
