public void testHelpFormatterWrapPos() {
    HelpFormatter formatter = new HelpFormatter();
    StringBuilder text = new StringBuilder();
    for (int i = 0; i < 50; i++) {
        text.append("a");
    }
    String longDescription = "This is a very long description that will be wrapped incorrectly by the HelpFormatter.";
    String[] options = {"Option1", longDescription};
    formatter.printHelp("test", options);
    String result = formatter.formatOptions(options, 10);
    String[] lines = result.split("\n");
    for (int i = 1; i < lines.length; i++) {
        int startPos = lines[0].length() + 1;
        int expectedWrapPos = width - startPos;
        int actualWrapPos = findWrapPos(lines[i], width, startPos);
        assertTrue("Wrap position at line " + (i + 1) + " is incorrect", actualWrapPos == expectedWrapPos);
    }
}

// Helper method to simulate the findWrapPos method
private int findWrapPos(String text, int width, int startPos) {
    // Simulate the findWrapPos method with the bug fixed
    int pos = -1;
    if (((