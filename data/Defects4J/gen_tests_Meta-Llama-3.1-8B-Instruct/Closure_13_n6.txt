public void testTrueFalseReplacement() {
    Function function = new Function() {
        @Override
        public Object apply(Object[] args) {
            Boolean fn1;
            Boolean fn2;

            if (true) {
                fn2 = true;
                fn1 = new Function() {
                    @Override
                    public Object apply(Object[] args) {
                        return fn2.apply(new Object[0]);
                    }
                };
            }

            return new Function() {
                @Override
                public Object apply(Object[] args) {
                    if (fn1!= null) {
                        fn1.apply(new Object[0]);
                    }
                    return true;
                }
            };
        }
    };

    Function result = function.apply(new Object[0]);
    Function method1 = (Function) result;
    Function method2 = (Function) result;

    method1.apply(new Object[0]);
    assertEquals(true, method2.apply(new Object[0]));
}