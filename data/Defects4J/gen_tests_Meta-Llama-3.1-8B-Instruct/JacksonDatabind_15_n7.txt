java
public void testXmlAdapterResultMarshalingError() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    SomeIntListHolder listHolder = new SomeIntListHolder();
    listHolder.setListOne(asList(1, 2, 3));
    mapper.setAnnotationIntrospector(new JaxbAnnotationIntrospector());

    // Test with XmlAdapter that extends XmlAdapter<Object, List<Integer>>
    mapper.writeValueAsString(listHolder); // This should throw a JsonMappingException

    // Test with XmlAdapter that extends XmlAdapter<String, List<Integer>>
    IntegerListToStringXmlAdapter adapter = new IntegerListToStringXmlAdapter();
    mapper.setAnnotationIntrospector(new JaxbAnnotationIntrospector());
    mapper.setMixInAnnotations(SomeIntListHolder.class, SomeIntListHolderMixIn.class);
    mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);
    mapper.writeValueAsString(listHolder); // This should not throw an exception

    // Test with fake StdDelegatingSerializer
    try {
        mapper.writeValueAsString(listHolder);
        fail("Expected JsonMappingException");
    } catch (JsonMappingException e) {
        // expected
    }
}

// Mix-in annotation to ignore XmlJavaTypeAdapter on SomeInt