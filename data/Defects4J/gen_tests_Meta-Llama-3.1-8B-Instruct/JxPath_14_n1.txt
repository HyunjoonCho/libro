public void testRoundFunctionsWithNaNAndInfinity() {
    assertEquals(Double.NaN, MathFunctions.floor(Double.NaN));
    try {
        MathFunctions.floor(Double.NEGATIVE_INFINITY);
        fail("Expected ArithmeticException for floor of negative infinity");
    } catch (ArithmeticException e) {}
    try {
        MathFunctions.floor(Double.POSITIVE_INFINITY);
        fail("Expected ArithmeticException for floor of positive infinity");
    } catch (ArithmeticException e) {}

    assertEquals(Double.NaN, MathFunctions.ceiling(Double.NaN));
    try {
        MathFunctions.ceiling(Double.NEGATIVE_INFINITY);
        fail("Expected ArithmeticException for ceiling of negative infinity");
    } catch (ArithmeticException e) {}
    try {
        MathFunctions.ceiling(Double.POSITIVE_INFINITY);
        fail("Expected ArithmeticException for ceiling of positive infinity");
    } catch (ArithmeticException e) {}

    assertEquals(Double.NaN, MathFunctions.round(Double.NaN));
    try {
        MathFunctions.round(Double.NEGATIVE_INFINITY);
        fail("Expected ArithmeticException for round of negative infinity");
    } catch (ArithmeticException e) {}
    try {
        MathFunctions.round(Double.POSITIVE_INFINITY);
        fail("Expected ArithmeticException for round of positive infinity");
    } catch (ArithmeticException e)