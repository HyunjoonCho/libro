java
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.SingularValueDecompositionImpl;
import org.junit.Test;

public class TestSingularValueDecomposition {
    
    @Test
    public void testSingularValueDecomposition() {
        double[][] Alist = {{1.0, 2.0, 3.0}, {2.0, 3.0, 4.0}, {3.0, 5.0, 7.0}};
        Array2DRowRealMatrix A = new Array2DRowRealMatrix(Alist);
        SingularValueDecompositionImpl decomp = new SingularValueDecompositionImpl(A);
        double[] singularValues = decomp.getSingularValues();
        // The last singular value should be close to 0
        double tolerance = 1e-6;
        for (int i = 0; i < singularValues.length; i++) {
            if (Math.abs(singularValues[i]) > tolerance) {
                throw new AssertionError("Last singular value should be close to 0");
            }
        }
    }
}
