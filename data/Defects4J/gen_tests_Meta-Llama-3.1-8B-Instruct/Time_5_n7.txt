java
public void testPeriodTypeWithoutYear() {
    DateTime startDate = new DateTime(2010, 1, 1, 0, 0, 0, 0);
    DateTime endDate = new DateTime(2011, 1, 1, 0, 0, 0, 0);
    
    // Test that creating a Period with a non-standard type and then normalizing to that type throws an exception
    try {
        Period p = new Period(startDate, endDate, PeriodType.forFields(new DurationFieldType[]{DurationFieldType.months(), DurationFieldType.weeks()})).normalizedStandard(PeriodType.forFields(new DurationFieldType[]{DurationFieldType.months(), DurationFieldType.weeks()}));
        fail("Expected UnsupportedOperationException");
    } catch (UnsupportedOperationException e) {
        // Expected exception
    }
    
    // Test that creating a Period with a non-standard type and then normalizing to the same type with years removed also throws an exception
    try {
        Period p = new Period(startDate, endDate, PeriodType.standard().withYearsRemoved()).normalizedStandard(PeriodType.standard().withYearsRemoved());
        fail("Expected UnsupportedOperationException");
    } catch (UnsupportedOperationException e) {
        // Expected exception
    }
    
    // Test that