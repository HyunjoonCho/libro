java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.XmlJavaTypeAdapter;
import com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.annotation.XmlAccessorType;
import com.fasterxml.jackson.databind.annotation.XmlAccessType;
import com.fasterxml.jackson.databind.annotation.XmlRootElement;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.Lists;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class XmlAdapterTest {

    @Test(expected = JsonProcessingException.class)
    public void testXmlAdapterWithObjectGeneric() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        SomeIntListHolder listHolder = new SomeIntListHolder();
        listHolder.setListOne(ImmutableList.of(1, 2, 3));
        mapper.writeValueAsString(listHolder);
    }

    @Test
    public void testXmlAdapterWithStringGeneric() throws JsonProcessingException {
        ObjectMapper mapper =