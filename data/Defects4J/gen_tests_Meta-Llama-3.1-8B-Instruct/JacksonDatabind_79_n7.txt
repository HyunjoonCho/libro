java
public void testIssue() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    ObjectWriter writer = mapper.writerWithDefaultPrettyPrinter();

    ReallyAlwaysContainer container = new ReallyAlwaysContainer();
    container.a = new ReallyAlwaysId(1);
    container.b = new ReallyAlwaysId(2);

    String json = writer.writeValueAsString(container);
    assertEquals("{\"a\":1,\"b\":2}", json);

    // Test when @JsonIdentityReference is only on the class
    ReallyAlwaysContainer container2 = new ReallyAlwaysContainer();
    container2.a = new ReallyAlwaysId(1);
    container2.b = new ReallyAlwaysId(2);
    @JsonIdentityInfo(generator=ObjectIdGenerators.IntSequenceGenerator.class, property="id")
    @JsonIdentityReference(alwaysAsId=true)
    static class ReallyAlwaysAsId {
        public int value;

        public ReallyAlwaysAsId() { this(0); }
        public ReallyAlwaysAsId(int v) {
            value = v;
        }
    }
    String json2 = writer.writeValueAsString(container2);
    assertEquals("{\"a\":1,\"b\":2}", json2);

    // Test when @JsonIdentityReference is only on the property
    ReallyAlwaysContainer container3 = new