java
public class AbstractClassTest {

    @Mock
    private ClassExtendsAbstractClass classExtendsAbstractClass;

    private A a;

    @Before
    public void before() {
        Mockito.when(classExtendsAbstractClass.give()).thenReturn("aaa");
    }

    @Test
    public void test() {
        // This test will pass if the issue is fixed
        a = new A(classExtendsAbstractClass);
        a.doSomeThing();
        Mockito.verify(classExtendsAbstractClass, Mockito.times(1)).wow();
        Mockito.verify(classExtendsAbstractClass, Mockito.times(0)).lol();

        // This test will fail with the original issue
        Mockito.reset(classExtendsAbstractClass);
        when(classExtendsAbstractClass.give()).thenReturn("aaa");
        a = new A(classExtendsAbstractClass);
        a.doSomeThing();
        Mockito.verify(classExtendsAbstractClass, Mockito.times(1)).wow();
        Mockito.verify(classExtendsAbstractClass, Mockito.times(1)).lol(); // This line will fail with the original issue
    }

    public static abstract class AbstractClass {
        abstract protected Long lol();
        abstract protected String wow();
        public