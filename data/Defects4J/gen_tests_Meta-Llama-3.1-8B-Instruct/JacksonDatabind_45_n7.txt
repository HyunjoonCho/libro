java
public void testNumberShapePrecedence() {
    // Before fix, textual representation is enabled even with explicit shape 'NUMBER'
    try {
        NumberFormat numberFormat = NumberFormat.getCompactNumberInstance(Locale.US, new DecimalFormat("0.0"));
        numberFormat.setNumberShape(NumberShape.NUMBER);
        numberFormat.format(12345.6789);
        fail("Expected NumberFormat to throw an exception");
    } catch (UnsupportedOperationException e) {
        // expected
    }

    // After fix, textual representation is disabled even with explicit shape 'NUMBER'
    NumberFormat numberFormat = NumberFormat.getCompactNumberInstance(Locale.US, new DecimalFormat("0.0"));
    numberFormat.setNumberShape(NumberShape.NUMBER);
    try {
        numberFormat.format(12345.6789);
        fail("Expected NumberFormat to throw an exception");
    } catch (UnsupportedOperationException e) {
        assertEquals("Cannot format a number with a shape of NUMBER", e.getMessage());
    }
}
