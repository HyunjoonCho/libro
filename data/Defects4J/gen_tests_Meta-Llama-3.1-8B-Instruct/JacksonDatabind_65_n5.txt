java
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.IOException;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class KeyVsFieldTest {

    @Test
    public void testDeserializeAsField() throws IOException {
        AsField asField = new ObjectMapper().readValue("{\"name\": \"first.last\"}", AsField.class);
        assertEquals(asField.getName().getFirstname(), "first");
        assertEquals(asField.getName().getLastname(), "last");
    }

    @Test
    public void testDeserializeAsKey() throws IOException {
        Map<FullName, Double> map = new ObjectMapper().readValue("{\"first.last\": 42}", new TypeReference<Map<FullName, Double>>() {});
        assertEquals(42, map.values().iterator().next(), 0);
    }

    public static class AsField {
        private final FullName name;

        @JsonProperty("name")
        public AsField(FullName name) {
            this.name = name;
        }

        public FullName getName() {
            return name;
        }
    }

    public static class FullName {
        private final String firstname