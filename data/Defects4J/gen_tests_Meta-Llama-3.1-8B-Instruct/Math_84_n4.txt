java
public void testMultiDirectionalCorrectStart() {
    // Set up a simple problem with the known solution
    MultiDirectionalProblem problem = new MultiDirectionalProblem();
    problem.setObjectiveFunction(new ObjectiveFunction() {
        @Override
        public double value(Object[] variables) {
            return (variables[0] - 2) * (variables[0] - 2) + (variables[1] - 2) * (variables[1] - 2);
        }
    });
    problem.setVariables(new double[] {2, 2});
    problem.setConstraints(new Constraint[] {
            new Constraint() {
                @Override
                public double evaluate(Object[] variables) {
                    return variables[0] + variables[1] - 4;
                }
            },
            new Constraint() {
                @Override
                public double evaluate(Object[] variables) {
                    return -variables[0] + 2;
                }
            },
            new Constraint() {
                @Override
                public double evaluate(Object[] variables) {
                    return -variables[1] + 2;
                }
            }
    });

    // Set up the MultiDirectional object
    MultiDirectional multiDirectional = new MultiDirectional(problem);

