java
import org.junit.Test;
import org.junit.runner.Description;
import org.junit.runner.JUnitCore;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;

public class TestSideEffects {
    
    public static void function() {
        System.out.println("Hello, World!"); // This line has a side effect
    }
    
    @Test
    public void testFunctionSideEffects() {
        JUnitCore.runSuites(new Test() {
            @Override
            public void run(RunnerBuilder builder) {
                builder.addClass(TestSideEffects.class);
            }
        });
        
        Result result = JUnitCore.runSuites(new Test() {
            @Override
            public void run(RunnerBuilder builder) {
                builder.addClass(TestSideEffects.class);
            }
        });
        
        for (Failure failure : result.getFailures()) {
            if (failure.getTestHeader().getTestMethod().getName().equals("testFunctionSideEffects") && failure.getTestHeader().getTestClass().getName().equals(TestSideEffects.class.getName())) {
                fail("Function with side effects should not be identified as having no side effects");
            }
        }
    }
}
