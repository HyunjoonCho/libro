java
public void testMapWithClassAsKey() throws Exception {
    Map<Class<? extends Object>, String> map = new HashMap<>();
    map.put(ArrayList.class, "ArrayList");
    map.put(HashMap.class, "HashMap");

    ObjectMapper mapper = new ObjectMapper();
    String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(map);

    // Manually register the ClassKeyDeserializer to allow deserialization of Class keys
    SimpleModule module = new SimpleModule();
    module.addKeyDeserializer(Class.class, new ClassKeyDeserializer());
    mapper.registerModule(module);

    // Now deserialization should work
    mapper.readValue(json, new TypeReference<Map<Class<? extends Object>, String>>(){});
}

public static class ClassKeyDeserializer extends KeyDeserializer {
    @Override
    public Class<?> deserializeKey(String key, DeserializationContext ctxt) throws JsonProcessingException {
        try {
            return Class.forName(key);
        } catch (ClassNotFoundException e) {
            throw new JsonParseException(ctxt, "Cannot find class " + key, e);
        }
    }
}
