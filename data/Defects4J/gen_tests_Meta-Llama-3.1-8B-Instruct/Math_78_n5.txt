public void testODEIntegrationLastEventNotDetected() {
    // Create a simple ODE model that switches between two values
    final double g = new Function() {
        @Override
        public double evaluate(double t) {
            return (t > 90)? -1 : 1;
        }
    };

    // Set up the solver and event handler
    ODE ode = new ODE() {
        @Override
        public double[] derivatives(double t, double[] y) {
            return new double[] { g.evaluate(t) };
        }
    };

    Event event = new Event() {
        @Override
        public double[] detect(ODE ode, double t, double[] y) {
            return new double[] { t };
        }
    };

    // Set up the solver with a small tolerance
    SimpleIntegrator solver = new SimpleIntegrator(ode, event, 1e-10);

    // Integrate from 67.5 to 112.5
    double[] result = solver.integrate(67.5, 112.5);

    // Check that the event was not detected
    assertEquals(67.5, result[0], 1e-10);

    //