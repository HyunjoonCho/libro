java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import java.util.Arrays;

import static org.junit.Assert.fail;

@RunWith(Parameterized.class)
public class MultivariateVectorOptimizerTest {

    @Parameterized.Parameters
    public static Object[][] data() {
        return new Object[][]{
                {41200}, // number of points
        };
    }

    private final int numPoints;

    public MultivariateVectorOptimizerTest(int numPoints) {
        this.numPoints = numPoints;
    }

    @Test
    public void testMultivariateVectorOptimizerWithLargeNumberOfWorkers() {
        // Create a curve fitter with a large number of points
        CurveFitter fitter = new CurveFitter(numPoints, 1); // assume degree 1 polynomial

        // Try to use the multivariate vector optimizer with the curve fitter
        try {
            fitter.optimize(new MultivariateVectorOptimizer());
            fail("Expected OutOfMemoryError");
        } catch (OutOfMemoryError e) {
            // Expected exception
        }
    }
}
