java
public void testMultivariateVectorOptimizerMemoryIssue() {
    // Create a large number of weights
    double[] weights = new double[41200];
    for (int i = 0; i < 41200; i++) {
        weights[i] = 1.0;
    }
    
    // Try to use the multivariate vector optimizer with the large number of weights
    try {
        // This should fail due to out of memory error
        new MultivariateVectorOptimizer();
        MultivariateFunction function = new MultivariateFunction() {
            @Override
            public double value(double[] point) {
                return 0.0;
            }
        };
        function.evaluate(weights);
        fail("Expected OutOfMemoryError");
    } catch (OutOfMemoryError e) {
        // Expected exception
    }
}
