java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.StdTypeModifier;

import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class TestCharSequenceKey {

    @Test
    public void testCharSequenceKey() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        TypeFactory typeFactory = mapper.getTypeFactory();
        StdTypeModifier typeModifier = typeFactory.constructTypeModifier();
        TypeFactory.CharSequenceKeyDeserializer deserializer = new TypeFactory.CharSequenceKeyDeserializer(typeFactory, typeModifier);
        Map<String, Object> map = new HashMap<>();
        map.put("key", "value");

        Map<CharSequence, Object> charSequenceMap = new HashMap<>();
        charSequenceMap.put("key", "value");
        String json = mapper.writeValueAsString(map);
        ObjectMapper mapper2 = new ObjectMapper();
        mapper2.enable(SerializationFeature.INDENT_OUTPUT);
        Map<CharSequence, Object> deserializedMap = mapper2.readValue(json, typeFactory.constructMapType(HashMap.class, CharSequence