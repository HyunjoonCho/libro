java
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.fail;

public class JacksonTest {

    @Test(expected = com.fasterxml.jackson.databind.JsonMappingException.class)
    public void testReadTreeWithDefaultTyping() throws Exception {
        ObjectMapper mapper = new ObjectMapper()
               .enableDefaultTyping()
               .enable(com.fasterxml.jackson.databind.MapperFeature.AUTO_DETECT_GETTERS)
               .enable(com.fasterxml.jackson.databind.MapperFeature.REQUIRE_SETTERS_FOR_GETTERS)
               .disable(com.fasterxml.jackson.databind.MapperFeature.USE_GETTERS_AS_SETTERS)
               .disable(com.fasterxml.jackson.databind.MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)
               .enable(com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT)
               .disable(com.fasterxml.jackson.databind.SerializationFeature.FAIL_ON_EMPTY_BEANS);

        String json = "{\"bar\" : \"bar\"}";
        mapper.readTree(json);
    }

    @Test
    public void testReadTreeWithoutDefaultTyping() throws Exception {
        ObjectMapper mapper = new ObjectMapper()
               .disable(com.fasterxml.jackson.databind.MapperFeature.DEFAULT_TYING)
               .enable(com.fasterxml.jackson.databind.MapperFeature.AUTO_DETECT_GETTERS)
               .enable(com.fasterxml.jackson.databind.MapperFeature.REQUIRE_SET