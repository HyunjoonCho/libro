java
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.Base64Variant;
import com.fasterxml.jackson.databind.node.TextNode;

import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

public class TreeTraversingParserTest {

    @Test
    public void testIgnoreBase64Variant() throws Exception {
        String json = "{\"base64Binary\":\"SGVsbG8gd29ybGQh\"}";
        JsonParser parser = new ObjectMapper().createParser(json.getBytes());
        JsonToken token = parser.nextToken();
        assertSame(JsonToken.START_OBJECT, token);
        token = parser.nextToken();
        assertSame(JsonToken.FIELD_NAME, token);
        token = parser.nextToken();
        assertSame(JsonToken.VALUE_STRING, token);
        TextNode textNode = (TextNode) parser.getCodec().readTree(parser);
        Base64Variant base64Variant = Base64Variant.base64Variants().get(0);
        byte[] expected = base64Variant.decode(textNode.asText());
        byte[] actual = textNode.getBinaryValue(base64Variant);
        assertArrayEquals(expected, actual);
    }
}
