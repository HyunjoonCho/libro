java
public void testFractionConstructorLargeNegativeDouble() {
    try {
        Fraction fraction = new Fraction(-33655.1677817278, 371880);
        assertTrue(fraction.getSign() == -1); // Check if the sign is negative
        assertTrue(fraction.getNumerator() == 410517235); // Check if the numerator is correct
        assertTrue(fraction.getDenominator() == 243036); // Check if the denominator is correct
    } catch (FractionConversionException e) {
        // This test should fail if the constructor does not throw an exception
        fail("Expected FractionConversionException but got none");
    }
}

public void testFractionConstructorLargeNegativeDoubleNotReduced() {
    try {
        Fraction fraction = new Fraction(-43979.60679604749, 366081);
        Fraction expectedFraction = new Fraction(-24654898, 3831);
        assertTrue(fraction.getNumerator() == expectedFraction.getNumerator()); // Check if the numerator is correct
        assertTrue(fraction.getDenominator() == expectedFraction.getDenominator()); // Check if the denominator is correct
    } catch (FractionConversionException e) {
        // This test should fail if the constructor does not throw an