java
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.Warning;
import org.junit.Test;

public class TestDangerousGlobalThisObjectWarning {
    @Test
    public void testDangerousGlobalThisObjectWarning() {
        String code = "function Foo(){};\n" +
                "function writeMethodWithAnnotation() { this._bar = 123; }\n" +
                "function readMethodWithAnnotation() { return this._bar; }\n" +
                "function writeMethodWithoutAnnotation() { this._bar = 123; }\n" +
                "function readMethodWithoutAnnotation() { return this._bar; }";

        Compiler compiler = new Compiler();
        compiler.compile(code);

        // Check that there are no warnings for annotated methods
        compiler.getWarnings().assertNoWarnings();

        // Check that there is a warning for the unannotated write method
        JSError warning = compiler.getWarnings().getErrorForId(Warning.DangerousUseOfGlobalThisObject);
        assertNotNull(warning);

        // Check that there is no warning for the unannotated read method
        assertEquals