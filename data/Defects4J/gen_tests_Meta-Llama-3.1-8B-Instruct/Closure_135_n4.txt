javascript
describe('Inheritance not detected when prototype directly assigned', () => {
    function SuperClass() {}

    SuperClass.prototype.CustomMethod = function() {}

    function SubClass() {}

    SubClass.prototype = new SuperClass();

    SubClass.prototype.CustomMethod = function() {
        this.myProperty = "value";
    }

    let subClassInstance = new SubClass();

    it('should throw a JSC_UNKNOWN_OVERRIDE warning when compiled with ADVANCED_OPTIMIZATIONS', () => {
        // This test should fail because the warning is not detected
        expect(() => {
            // Simulate compilation with ADVANCED_OPTIMIZATIONS
            // (Note: This is not a real compilation step, just a mock)
            // console.warn('JSC_UNKNOWN_OVERRIDE: property CustomMethod not defined on any superclass of SubClass');
        }).toThrowError('JSC_UNKNOWN_OVERRIDE: property CustomMethod not defined on any superclass of SubClass');
    });

    it('should not throw a JSC_UNKNOWN_OVERRIDE warning when prototype assignment is wrapped in a function', () => {
        function inherit(Child, Parent) {
            Child.prototype = new Parent();
        }
        inherit(SubClass, SuperClass);
        let wrappedSubClassInstance = new SubClass