java
public void testBrentOptimizer() {
    // Create a simple function for testing
    double function(double x) {
        return x * x + 2 * x - 3;
    }

    BrentOptimizer brentOptimizer = new BrentOptimizer();
    double[] startPoint = new double[] { -10 };
    double[] endPoint = new double[] { 10 };
    double[] stepSize = new double[] { 0.1 };
    double[] result = brentOptimizer.optimize(0, function, startPoint, endPoint, stepSize);

    // Check that the result is indeed the minimum
    double minPoint = -2;
    double min = function(minPoint);
    assertEquals(min, function(result[0]), 1e-6);

    // Check that the point returned by the optimizer is indeed the best one encountered
    double lastPoint = result[0];
    double lastValue = function(lastPoint);
    for (int i = 0; i < result.length; i++) {
        double currentValue = function(result[i]);
        if (currentValue < lastValue) {
            lastPoint = result[i];
            lastValue = currentValue;
        }
    }
    assertEquals(lastPoint, result[0], 1e-