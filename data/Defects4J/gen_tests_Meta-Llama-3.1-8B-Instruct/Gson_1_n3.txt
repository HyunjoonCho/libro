java
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import org.junit.Test;

import java.lang.reflect.Type;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class GsonTest {

    @Test
    public void testSerializationAndDeserializationWithTypeParameter() {
        Gson gson = new Gson();
        Type fooType = new TypeToken<Foo<Integer>>() {}.getType();
        Foo<Integer> foo1 = new Foo<>(1);
        String json = gson.toJson(foo1);
        Foo<Integer> foo2 = gson.fromJson(json, fooType);
        assertEquals(foo1, foo2);
    }

    static class Foo<T> {
        private final T someField;

        public Foo(T value) {
            this.someField = value;
        }

        public boolean equals(Object o) {
            if (!(o instanceof Foo)) {
                return false;
            } else {
                return someField.equals(((Foo)o).someField);
            }
        }
    }
}
