public void testEventStateNotUpdated() {
    // setup the scenario
    // assuming we have a class ODESolver that uses the event handlers
    // and a class Event that can trigger a RESET_STATE
    
    ODESolver solver = new ODESolver();
    Event event1 = new Event() {
        @Override
        public void eventOccurred(double t, double[] y) {
            // trigger a RESET_STATE
            solver.resetState();
        }
    };
    
    Event event2 = new Event() {
        @Override
        public void eventOccurred(double t, double[] y) {
            // do nothing
        }
    };
    
    solver.addEvent(event1);
    solver.addEvent(event2);
    
    // simulate a step that triggers event1
    solver.step();
    
    // at this point, event2's state should be outdated
    
    // simulate a new step with a reset state
    solver.resetState();
    solver.step();
    
    // test that event2's state was not updated correctly
    // assuming we have a method to get the state of the event
    assertNotEquals(event2.getInitialState(), event2.getState());
}