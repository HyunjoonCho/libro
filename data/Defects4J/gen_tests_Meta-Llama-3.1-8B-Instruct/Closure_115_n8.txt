public void testAdvancedOptimizations() throws Exception {
    String inputJs = "window['anchor'] = function (obj, modifiesProp) { return (function (saved) { return modifiesProp(obj) + saved; })(obj['prop']); }";
    String externs = "window";
    String expectedOutput = "window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD;}";
    String output = compileJs(inputJs, externs, "ADVANCED_OPTIMIZATIONS");
    assertEquals(expectedOutput, output);
}

private String compileJs(String inputJs, String externs, String compilationLevel) throws Exception {
    // Simulate the compiler command using a Java process
    ProcessBuilder processBuilder = new ProcessBuilder("java", "-jar", "compiler.jar", "--compilation_level", compilationLevel, "--warning_level", "VERBOSE", "--externs", externs, "--js", inputJs, "--js_output_file", "output.js");
    Process process = processBuilder.start();
    process.waitFor();
    return new String(Files.readAllBytes(Paths.get("output.js")));
}