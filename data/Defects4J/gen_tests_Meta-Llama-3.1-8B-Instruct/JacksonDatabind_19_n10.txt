java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;
import java.util.Properties;

public class TestPropertiesCoercion {
    
    @Test
    public void testPropertiesCoercion() throws Exception {
        Properties properties = new Properties();
        properties.put("key", 123);
        String json = "{\"key\":\"value\"}";
        ObjectMapper mapper = new ObjectMapper();
        TypeFactory typeFactory = mapper.getTypeFactory();
        // Introduce a custom type for Properties to force String coercion
        TypeFactory.TypeParser typeParser = typeFactory.constructType(String.class, Map.class, String.class, String.class);
        typeFactory.addTypeParser(Map.class, "Properties", typeParser);
        // The original issue description mentions Properties as Map<String, Object>
        // So, we use this type for testing
        TypeFactory.TypeParser originalTypeParser = typeFactory.constructType(String.class, Map.class, String.class, Object.class);
        typeFactory.addTypeParser(Map.class, "Properties", originalTypeParser);
        mapper.setTypeFactory(typeFactory);
        String actual = mapper.writeValueAsString(properties);
        String expected = "{\"key\":\"123\"}";
        assertEquals(expected, actual);
    }
}
