java
public void testDateTimeZoneBuilder() throws InterruptedException {
    // Test that the first thread can create a DateTimeZone without issues
    DateTimeZoneBuilder builder1 = getTestDataTimeZoneBuilder();
    builder1.toDateTimeZone("TestDTZ1", true);
    
    // Create a second thread that tries to create a DateTimeZone
    Thread t = new Thread(new Runnable() {
        @Override
        public void run() {
            DateTimeZoneBuilder builder2 = getTestDataTimeZoneBuilder();
            builder2.toDateTimeZone("TestDTZ2", true);
        }
    });
    t.start();
    
    // Wait for the second thread to finish
    t.join();
}

private DateTimeZoneBuilder getTestDataTimeZoneBuilder() {
    return new DateTimeZoneBuilder()
           .addCutover(1601, 'w', 1, 1, 1, false, 7200000)
           .setStandardOffset(3600000)
           .addRecurringSavings("", 3600000, 1601, Integer.MAX_VALUE, 'w', 3, -1, 1, false, 7200000)
           .addRecurringSavings("", 0, 1601, Integer.MAX_VALUE, 'w