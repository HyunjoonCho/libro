public void testAssignObjectLiteralToPrototype() {
    final Object foo = new Object();
    Runnable r = new Runnable() {
        @Override
        public void run() {
            foo.getClass().getDeclaredFields()[0].setAccessible(true);
            try {
                Field f = foo.getClass().getDeclaredField("prototype");
                f.setAccessible(true);
                Map<String, Object> map = (Map<String, Object>) f.get(foo);
                map.put("alert", new Runnable() {
                    @Override
                    public void run() {
                        System.out.println("hello world");
                    }
                });
            } catch (Exception e) {
                fail(e.getMessage());
            }
        }
    };
    r.run();
    try {
        Method m = foo.getClass().getMethod("prototype", new Class[0]);
        m.invoke(foo, new Object[0]);
        System.out.println(m.invoke(foo, new Object[0]));
        fail("Expected NullPointerException");
    } catch (Exception e) {
        // expected
    }
}