java
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertThrows;

public class TestJacksonDeserialization {

    @Test
    public void testReadTreeWithDefaultTyping() throws Exception {
        ObjectMapper mapper = new ObjectMapper().enableDefaultTyping();
        String json = "{\"bar\" : \"bar\"}";
        assertThrows(JsonMappingException.class, () -> mapper.readTree(json));
    }

    @Test
    public void testValueToTreeWithDefaultTyping() throws Exception {
        ObjectMapper mapper = new ObjectMapper().enableDefaultTyping();
        Foo foo = new Foo("bar");
        assertThrows(JsonMappingException.class, () -> mapper.valueToTree(foo));
    }

    @Test
    public void testReadTreeWithoutDefaultTyping() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"bar\" : \"bar\"}";
        JsonNode jsonNode = mapper.readTree(json);
        // This test should not throw an exception
    }

    @Test
    public void testValueToTreeWithoutDefaultTyping() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        Foo foo = new Foo("bar");
        JsonNode jsonNode =