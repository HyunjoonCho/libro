public void testTruncatedError() {
    String input = "alert(foo);\nalert(bar);";
    String[] expectedOutput = new String[] {
        ">java -jar compiler.jar --warning_level VERBOSE --js test.js\n" +
        "test.js:1: ERROR - variable foo is undefined\n" +
        "alert(foo);\n ^\n" +
        "test.js:2: ERROR - variable bar is undefined\n" +
        "alert(bar);\n ^\n" +
        "2 error(s), 0 warning(s)\n"
    };
    String output = runCompiler(input);
    for (int i = 0; i < expectedOutput.length; i++) {
        assertEquals(expectedOutput[i], output.substring(output.indexOf(expectedOutput[i])));
    }
}

private String runCompiler(String input) {
    // Implement the logic to run the compiler and capture its output here
    // For example:
    // Process process = Runtime.getRuntime().exec(new String[]{"java", "-jar", "compiler.jar", "--warning_level", "VERBOSE", "--js", "test.js"});
    // String output = new BufferedReader(new InputStreamReader(process.getInputStream())).lines().collect(Collectors.joining());
    // return output;
}