java
public class TestJacksonFailOnInvalidSubtype {
    @Test
    public void testFailOnInvalidSubtype() throws JsonParseException, JsonMappingException, IOException {
        ObjectMapper objectMapper = new ObjectMapper().disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE);
        CallRecord call = new CallRecord();

        String json = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
        CallRecord parsedCall = objectMapper.readValue(json, CallRecord.class);
        assertEquals(0.0, parsedCall.version, 0.0);
        assertEquals("123", parsedCall.application);
        assertNotNull(parsedCall.item);
        assertNotNull(parsedCall.item2);

        json = "{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}";
        try {
            objectMapper.readValue(json, CallRecord.class);
            fail("Expected JsonParseException to be thrown");
        } catch (JsonParseException e) {
            // expected
        }

        json = "{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}, \"version\":0