java
@JsonComponent
public class TestDateSerializer extends DateTimeSerializerBase<Date> {
    private final DateFormat format;

    public TestDateSerializer(DateFormat format) {
        this.format = format;
    }

    @Override
    public DateFormat getDateFormat() {
        return format;
    }

    @Test
    public void testReuseFormat() throws Exception {
        DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        DateTimeSerializerBase serializer = new TestDateSerializer(format);
        DateTimeSerializerBase contextualSerializer = serializer.createContextual(null, null, null);

        // Assert that the context serializer uses the same format
        assertEquals(format, contextualSerializer.getDateFormat());
    }

    @Test
    public void testReuseFormatWithStdDateFormat() throws Exception {
        DateFormat format = StdDateFormat.getDateInstance(DateFormat.LONG);
        ((StdDateFormat) format).setTimeZone(TimeZone.getTimeZone("UTC"));
        DateTimeSerializerBase serializer = new TestDateSerializer(format);
        DateTimeSerializerBase contextualSerializer = serializer.createContextual(null, null, null);

        // Assert that the context serializer reuses the same timezone
        assertEquals(format, contextualSerializer.getDateFormat());
    }
}
