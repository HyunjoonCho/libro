java
public void testClassifyNonRightmostExpressions() {
    // Test case 1
    ExpressionTree expression1 = new ExpressionTree(new BinaryOperatorNode(new LiteralNode(1), new BinaryOperatorNode(new LiteralNode(2), new LiteralNode(42), Operator.COMMA)));
    ExpressionTree transformedExpression1 = transformExpression(expression1);
    assertEquals(2, transformedExpression1.getArguments().size());
    assertEquals(1, transformedExpression1.getArguments().get(0).getArguments().size());
    assertEquals(3, ((LiteralNode) transformedExpression1.getArguments().get(0).getArguments().get(0)).getValue());
    assertEquals(2, ((LiteralNode) transformedExpression1.getArguments().get(1)).getValue());

    // Test case 2
    ExpressionTree expression2 = new ExpressionTree(new BinaryOperatorNode(new FunctionCallNode("bar"), new BinaryOperatorNode(new LiteralNode(2), new LiteralNode(42), Operator.COMMA), Operator.COMMA));
    ExpressionTree transformedExpression2 = transformExpression(expression2);
    assertEquals(2, transformedExpression2.getArguments().size());
    assertEquals(1, transformedExpression2.getArguments().get(0).getArguments().size());
    assertEquals(3, ((