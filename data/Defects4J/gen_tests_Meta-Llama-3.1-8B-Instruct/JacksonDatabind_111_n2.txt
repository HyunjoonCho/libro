java
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.deser.BeanPropertyMap;
import com.fasterxml.jackson.databind.deser.BeanPropertyMap.Reference;
import com.fasterxml.jackson.databind.deser.DeserializationContext;
import com.fasterxml.jackson.databind.deser.DeserializationProblemHandler;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer;
import org.junit.Test;
import java.io.IOException;
import java.util.concurrent.atomic.AtomicReference;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertEquals;

public class JacksonTest {

    @Test
    public void testDeserializeAtomicReferenceOfAtomicReference() throws IOException {
        ObjectMapper objectMapper = new ObjectMapper();
        JsonNode jsonNode = objectMapper.readTree("{\"refRef\": 22}");
        JsonDeserializer<AtomicReference<AtomicReference<Integer>>> deserializer = objectMapper.getDeserializationConfig().findBeanDeserializer(AtomicReference.class, null);
        JsonParser jsonParser = jsonNode.traverse();
        DeserializationContext context = objectMapper.getDeserializationContext();
        BeanPropertyMap bean