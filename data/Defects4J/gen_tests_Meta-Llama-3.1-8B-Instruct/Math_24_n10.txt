public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    brentOptimizer.setTolerance(0.000001);
    brentOptimizer.optimize(new UnivariateFunction() {
        @Override
        public double value(double x) {
            return x * x + 2 * x + 2; // a simple function with a single minimum at x = -1
        }
    }, -10, 0);
    double bestX = brentOptimizer.getBestPoint();
    double bestValue = brentOptimizer.getBestValue();
    brentOptimizer.optimize(new UnivariateFunction() {
        @Override
        public double value(double x) {
            return x * x + 2 * x + 2; // a simple function with a single minimum at x = -1
        }
    }, -10, 0);
    double lastX = brentOptimizer.getBestPoint();
    double lastValue = brentOptimizer.getBestValue();
    assertTrue("Best point should be better than last point", bestValue <= lastValue);
}