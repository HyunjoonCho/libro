java
public void testBrentOptimizerNotReportingBestPoint() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    double[] start = { 0 };
    double[] minimum = { 0 };
    brentOptimizer.optimize(start, minimum, x -> {
        // Simple function that has multiple local minima
        return x[0] * x[0] + 2 * x[0] + 3;
    }, 0, 10, 1e-6, 1e-6, 1000);
    
    // We expect the optimizer to return a point that is the global minimum
    double expectedMinimum = 0;
    assertEquals(expectedMinimum, minimum[0], 1e-6);
    
    // However, the optimizer might return a point that is not the global minimum
    // To test this, we check if the function value at the returned point is not the global minimum
    double currentValue = brentOptimizer.getBestFunctionValue();
    double previousValue = brentOptimizer.getPreviousBestFunctionValue();
    assertTrue(currentValue >= previousValue);
}
