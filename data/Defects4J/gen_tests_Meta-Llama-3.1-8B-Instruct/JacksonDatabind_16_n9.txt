public void testMixinAnnotationBundleIgnored() {
    ObjectMapper mapper = new ObjectMapper().addMixIn(Foo.class, FooMixin.class);
    String result = mapper.writeValueAsString(new Foo("result"));
    Assert.assertEquals("{\"bar\":\"result\"}", result);
}

public void testMixinAnnotationBundleOnClass() {
    Foo.class.getAnnotation(JacksonAnnotationsInside.class).annotationType().isPresent();
    ObjectMapper mapper = new ObjectMapper().addMixIn(Foo.class, FooMixin.class);
    String result = mapper.writeValueAsString(new Foo("result"));
    Assert.assertEquals("{\"bar\":\"result\"}", result);
}

public void testMixinAnnotationBundleOnMixin() {
    @JacksonAnnotationsInside
    @JsonProperty("bar")
    public @interface ExposeStuff {
    }

    public abstract class FooMixin {
        @ExposeStuff
        public abstract String getStuff();
    }

    ObjectMapper mapper = new ObjectMapper();
    mapper.addMixIn(Foo.class, FooMixin.class);
    String result = mapper.writeValueAsString(new Foo("result"));
    Assert.assertEquals("{\"bar\":\"result\"}", result);
}