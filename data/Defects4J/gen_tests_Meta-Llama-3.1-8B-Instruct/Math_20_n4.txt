java
public void testCMAESOptimizerBounds() {
    // Create a CMAESOptimizer with checkFeasableCount = 0
    CMAESOptimizer optimizer = new CMAESOptimizer(0, 1, 1, 1e-6, 1000);
    
    // Define the bounds
    double[] lowerBounds = { -10, -10 };
    double[] upperBounds = { 10, 10 };
    
    // Define the initial population
    double[] initialPopulation = { 5, 5 };
    
    // Optimize
    optimizer.doOptimize(lowerBounds, upperBounds, initialPopulation);
    
    // Check if the final solution is within the bounds
    assertTrue(optimizer.getBestSolution()[0] >= lowerBounds[0] && optimizer.getBestSolution()[0] <= upperBounds[0]);
    assertTrue(optimizer.getBestSolution()[1] >= lowerBounds[1] && optimizer.getBestSolution()[1] <= upperBounds[1]);
    
    // Create a CMAESOptimizer with checkFeasableCount = 1
    optimizer = new CMAESOptimizer(1, 1, 1, 1e-6, 1000);
    
    //