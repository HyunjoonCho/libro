public void testAdvancedModeWarning() {
    // Create a compiler object with ADVANCED mode
    Compiler compiler = CompilerFactory.getCompiler();
    compiler.setCompilationLevel(CompilationLevel.ADVANCED_OPTIMIZATIONS);
    
    // Define the Foo and Bar classes
    ClassInfo fooClass = compiler.defineClass("Foo", new MethodInfo("add", new Type[]{Type.NUMBER, Type.NUMBER}, Type.NUMBER));
    fooClass.addMethod(new MethodInfo("sub", new Type[]{Type.NUMBER, Type.NUMBER}, Type.NUMBER));
    
    ClassInfo barClass = compiler.defineClass("Bar", fooClass);
    barClass.addMethod(new MethodInfo("add", new Type[]{Type.NUMBER}, Type.NUMBER));
    barClass.addMethod(new MethodInfo("sub", new Type[]{Type.NUMBER}, Type.NUMBER));
    
    // Compile the code
    compiler.compile();
    
    // Check for warnings
    assertEquals(1, compiler.getWarnings().size());
    
    // Create a new compiler object with the default mode
    compiler = CompilerFactory.getCompiler();
    
    // Define the Foo and Bar classes again
    fooClass = compiler.defineClass("Foo", new MethodInfo("add", new Type[]{