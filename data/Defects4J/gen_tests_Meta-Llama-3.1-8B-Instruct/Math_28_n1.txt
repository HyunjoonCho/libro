java
import org.junit.Test;
import static org.junit.Assert.fail;

public class SimplexSolverTest {

    private static final int ENTITIES_COUNT = 15;

    @Test
    public void testUnboundedSolutionException() {
        // Create random input data
        double[][] Q = new double[ENTITIES_COUNT][ENTITIES_COUNT];
        double[] L = new double[ENTITIES_COUNT];
        double[][] X = new double[ENTITIES_COUNT][ENTITIES_COUNT];

        // Initialize input data
        for (int i = 0; i < ENTITIES_COUNT; i++) {
            for (int j = 0; j < ENTITIES_COUNT; j++) {
                Q[i][j] = Math.random();
                X[i][j] = Math.random();
            }
            L[i] = Math.random();
        }

        // Attempt to solve the minimization linear programming problem
        try {
            SimplexSolver solver = new SimplexSolver();
            solver.solve(1, Q, X, L);
        } catch (UnboundedSolutionException e) {
            // This is the expected behavior
        } catch (Exception e) {
            fail("Unexpected exception: " + e.getMessage());
        }

        // Verify that the