public void testebeMultiplyWithNaN() {
    OpenMapRealVector v = new OpenMapRealVector(1);
    v.putEntry(0, Double.NaN);
    OpenMapRealVector result = v.ebeMultiply(new OpenMapRealVector(1).putEntry(0, 5.0));
    assertTrue(Double.isNaN(result.getEntry(0)));
}

public void testebeMultiplyWithInfinity() {
    OpenMapRealVector v = new OpenMapRealVector(1);
    v.putEntry(0, Double.POSITIVE_INFINITY);
    OpenMapRealVector result = v.ebeMultiply(new OpenMapRealVector(1).putEntry(0, 5.0));
    assertEquals(Double.POSITIVE_INFINITY, result.getEntry(0));
}

public void testebeMultiplyWithZero() {
    OpenMapRealVector v = new OpenMapRealVector(1);
    v.putEntry(0, 0.0);
    OpenMapRealVector result = v.ebeMultiply(new OpenMapRealVector(1).putEntry(0, 5.0));
    assertEquals(0.0, result.getEntry(0));
}