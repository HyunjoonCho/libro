public void testDeserializationOfNestedNonWrappedLists() {
    // Create a POJO with an unwrapped list of records
    POJO pojo = new POJO(Arrays.asList(
        new Record(Arrays.asList(new Field(), new Field())),
        new Record(Arrays.asList(new Field()))
    ));

    // Create a POJO with an unwrapped list of records, but with an empty inner list
    POJO pojo2 = new POJO(Arrays.asList(
        new Record(Arrays.asList(new Field())),
        new Record()
    ));

    // Test that deserialization of the first POJO works correctly
    ObjectMapper mapper = new ObjectMapper();
    String json = mapper.writeValueAsString(pojo);
    POJO deserializedPojo = mapper.readValue(json, POJO.class);
    assertEquals(2, deserializedPojo.getRecords().size());

    // Test that deserialization of the second POJO does not work correctly
    json = mapper.writeValueAsString(pojo2);
    try {
        deserializedPojo = mapper.readValue(json, POJO.class);
        fail("Expected exception, but none was thrown");
    } catch (JsonMappingException e) {
        // Expected exception, do nothing
    }
}

class POJO {
    private List<Record>