java
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertEquals;

public class TestJacksonAntpathfilterIssue {

    @Test
    public void testIssue2() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        JsonGenerator gen = mapper.getFactory().createGenerator(System.out);
        ObjectNode jsonNode = mapper.createObjectNode();
        jsonNode.put("foo", "bar");
        jsonNode.put("baz", "qux");

        // Convert feature enabled
        gen = mapper.getFactory().createGenerator(System.out);
        gen.useDefaultPrettyPrinter();
        gen.writeStartObject();
        mapper.convertAndWriteValue(gen, jsonNode);
        gen.writeEndObject();
        gen.close();

        // Write feature enabled
        gen = mapper.getFactory().createGenerator(System.out);
        gen.useDefaultPrettyPrinter();
        gen.writeStartObject();
        jsonNode = mapper.convertValue(jsonNode, JsonNode.class);
        jsonNode.put("foo", "baz");
        mapper.writeValue(gen