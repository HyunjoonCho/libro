java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.deser.ExternalTypeHandler;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertNotNull;

public class ExternalPropertyDeserializationTest {

    @Test
    public void testExternalPropertyDeserialization() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        ExternalTypeHandler typeHandler = new ExternalTypeHandler();

        TestBean bean = new TestBean();
        bean.setExternal("test");

        String json = mapper.writeValueAsString(bean);
        System.out.println("Serialized JSON: " + json);

        TestBean deserializedBean = mapper.readValue(json, TestBean.class);
        System.out.println("Deserialized Bean: " + deserializedBean);

        // Check that the external property is null
        assertNull(deserializedBean.getExternal());

        // Check that the type handler is not null
        assertNotNull(typeHandler);
    }

    public static class TestBean {
        private String external;

        public String getExternal() {
            return