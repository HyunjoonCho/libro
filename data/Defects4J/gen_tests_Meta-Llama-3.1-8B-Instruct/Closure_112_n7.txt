javascript
describe('Template type inference', () => {
    it('should throw an error when CLASS is not specified', () => {
        class Class {
            /**
             * @constructor
             * @template CLASS
             */
            constructor() {}
        }

        /**
         * @param {function(CLASS):CLASS} a
         * @template T
         */
        Class.prototype.foo = function(a) {
            return'string';
        };

        /**
         * @param {number} a
         * @return {string}
         */
        var a = function(a) { return ''; };

        expect(() => {
            new Class().foo(a);
        }).toThrow();
    });

    it('should not throw an error when CLASS is specified', () => {
        class Class {
            /**
             * @constructor
             * @template CLASS
             */
            constructor() {}
        }

        /**
         * @param {function(CLASS):CLASS} a
         * @template T
         */
        Class.prototype.foo = function(a) {
            return'string';
        };

        /**
         * @param {number} a
         * @return {string}
         */
        var a = function(a) { return ''; };

        new Class().