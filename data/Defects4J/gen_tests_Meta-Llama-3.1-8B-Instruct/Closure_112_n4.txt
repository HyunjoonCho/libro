java
public class TestTemplateInference {
    public interface Class<T> {
        String foo(Function<T, T> a);
    }

    public interface Function<T, R> {
        R apply(T t);
    }

    public static class AFunction implements Function<Object, String> {
        @Override
        public String apply(Object t) {
            return "";
        }
    }

    public void testTemplateInference() {
        new Class<Object>() {
            @Override
            public String foo(Function<Object, Object> a) {
                return "string";
            }
        }.foo(new AFunction());
    }
}
