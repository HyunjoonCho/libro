java
public void testRemoveIgnoreCaseConcurrentModificationException() {
    Element element = new Element("abc");
    element.addAttribute("attr1", "value1");
    element.addAttribute("attr2", "value2");
    
    // Original implementation that throws ConcurrentModificationException
    try {
        for (Attribute attr : element.attributes()) {
            if (attr.getKey().equalsIgnoreCase("attr1")) {
                attr.remove();
            }
        }
        fail("Expected ConcurrentModificationException");
    } catch (ConcurrentModificationException e) {
        // Expected exception
    }
    
    // Corrected implementation
    for (Iterator<Map.Entry<String, Attribute>> iter = element.attributes().entrySet().iterator(); iter.hasNext();) {
        Map.Entry<String, Attribute> entry = iter.next();
        if (entry.getKey().equalsIgnoreCase("attr2")) {
            iter.remove();
        }
    }
    
    // Verify that the attribute was removed
    assertFalse(element.hasAttribute("attr2"));
}
