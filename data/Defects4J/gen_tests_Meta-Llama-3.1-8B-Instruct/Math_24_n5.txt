java
public void testBrentOptimizer() {
    // Create a function to test with
    final double[] bestPoint = new double[1];
    final double[] bestValue = new double[1];
    Function1D func = new Function1D() {
        @Override
        public double value(double x) {
            bestPoint[0] = x;
            bestValue[0] = x * x;
            return x * x;
        }
    };

    // Create a BrentOptimizer instance
    BrentOptimizer brentOptimizer = new BrentOptimizer(1e-15, 1000, 1e-15, 1e-15);

    // Run the optimization
    double result = brentOptimizer.optimize(func, 0, 10);

    // Check that the best point is indeed the one with the lowest value
    double bestX = bestPoint[0];
    double bestY = bestValue[0];
    double lastX = 0;
    double lastY = 0;
    for (double x : new double[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }) {
