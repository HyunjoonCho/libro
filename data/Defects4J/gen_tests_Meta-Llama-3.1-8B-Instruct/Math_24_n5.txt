public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    brentOptimizer.setTolerance(1e-6);
    double[] initialPoint = new double[]{0.5};
    double[] bestPoint = new double[]{0.5};
    double bestValue = 0.0;
    double currentValue = 0.0;
    for (int i = 0; i < 100; i++) {
        currentValue = brentOptimizer.optimize(0.0, 1.0, initialPoint, new Function() {
            @Override
            public double value(double x) {
                return Math.pow(x, 2);
            }
        });
        if (currentValue < bestValue) {
            bestPoint = new double[]{initialPoint[0]};
            bestValue = currentValue;
        }
        initialPoint[0] += 0.01;
    }
    double lastPoint = brentOptimizer.getLastPoint()[0];
    double lastValue = brentOptimizer.getLastValue();
    assertTrue("Last point is not the best point", lastValue >= bestValue);
}