java
public class TestMyBean {
    private AtomicReference<AtomicReference<Integer>> refRef;

    public AtomicReference<AtomicReference<Integer>> getRefRef() {
        return refRef;
    }

    public void setRefRef(AtomicReference<AtomicReference<Integer>> refRef) {
        this.refRef = refRef;
    }

    @Test
    public void testDeserializeNull() throws IOException {
        ObjectMapper objectMapper = new ObjectMapper();
        ObjectReader objectReader = objectMapper.readerFor(TestMyBean.class);

        TestMyBean intRef = objectReader.readValue("{\"refRef\": 2}");
        assertNotNull(intRef.refRef);
        assertNotNull(intRef.refRef.get());
        assertEquals(2, intRef.refRef.get().get());

        TestMyBean nullRef = objectReader.readValue("{\"refRef\": null}");
        assertNotNull(intRef.refRef);
        assertNotNull(intRef.refRef.get());
        assertNull(intRef.refRef.get().get());
    }
}
