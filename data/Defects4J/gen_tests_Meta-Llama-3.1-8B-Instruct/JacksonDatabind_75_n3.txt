java
public void testJsonFormatOnEnumField() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    JsonFormat jsonFormat = new JsonFormat();
    jsonFormat.setShape(JsonFormat.Shape.NUMBER_INT);

    // Before 2.8, this should work
    JsonProperty colorProperty = new JsonProperty();
    colorProperty.setGetter(new Getter<Color>() {
        @Override
        public Color get(Object bean) throws Exception {
            return ((Foo) bean).color;
        }
    });
    colorProperty.setSetter(new Setter<Color>() {
        @Override
        public void set(Object bean, Color value) throws Exception {
            ((Foo) bean).color = value;
        }
    });
    colorProperty.setAnnotation(jsonFormat);

    // Now the test case should fail because the annotation is not applied
    Foo foo = new Foo(Color.GREEN);
    String serialized = mapper.writeValueAsString(foo);
    System.out.println(serialized); // This should print "{'color':'GREEN'}" instead of expected integer

    // To make it work, the annotation should be applied to the field
    mapper = new ObjectMapper();
    mapper.addMixIn(Foo.class, MixInForFoo.class);
    foo = new Foo(Color.GREEN);
   