public void testJsonFormatOnEnumField() {
    ObjectMapper mapper = new ObjectMapper();
    JsonFormat jsonFormat = new JsonFormat();
    jsonFormat.shape(JsonFormat.Shape.NUMBER_INT);
    JsonProperty annotation = new JsonProperty();
    annotation.withValue(jsonFormat);
    FieldSerializerProvider serializerProvider = new SimpleTypeToken<Foo>(Foo.class).getSerializerProvider();
    FieldSerializer serializer = serializerProvider.findValueSerializer(Color.class, null);
    try {
        serializer.serialize(new Color[] {Color.GREEN}, null, null);
        fail("Expected JsonFormat on enum field to be ignored");
    } catch (JsonProcessingException e) {
        // expected
    }
}