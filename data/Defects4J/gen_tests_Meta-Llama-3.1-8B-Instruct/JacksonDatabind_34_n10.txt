java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.math.BigDecimal;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class BigDecimalSchemaTest {

    private final String json;
    private final String expectedType;

    public BigDecimalSchemaTest(String json, String expectedType) {
        this.json = json;
        this.expectedType = expectedType;
    }

    @Parameters
    public static Object[][] data() {
        return new Object[][]{
                {"{\"type\":\"decimal\",\"scale\":10,\"precision\":10}", "decimal"},
                {"{\"type\":\"decimal\",\"scale\":10,\"precision\":20}", "decimal"},
                {"{\"type\":\"decimal\",\"scale\":20,\"precision\":10}", "decimal"},
        };
    }

    @Test
    public void testBigDecimalSchema() {
        // Assuming you have a method to get the schema from the JSON
        String actualType = getSchemaType(json);
        assertEquals(expectedType, actualType);
    }

    // This method should return the type of the schema from the JSON
    private String getSchemaType(String json) {
        // Assuming you have a JSON parsing library like Jackson
        //