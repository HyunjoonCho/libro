java
public void testIssue() {
    // Create a test function
    JavaScriptEngine engine = new JavaScriptEngine();
    engine.put("obj", new HashMap<String, Object>() {{
        put("prop", "original value");
    }});
    engine.put("modifiesProp", new JavaScriptFunction() {
        @Override
        public Object call(JavaScriptContext context, JavaScriptObject... args) {
            HashMap<String, Object> obj = (HashMap<String, Object>) args[0].get("obj");
            obj.put("prop", "modified value");
            return null;
        }
    });
    engine.put("window", new JavaScriptObject() {
        @Override
        public Object get(String name) {
            return get(name);
        }

        @Override
        public void put(String name, Object value) {
            put(name, value);
        }
    });

    // Compile the test case
    String input = "window.foo = function(a, b) { return (function (saved) { return b(a) + saved; })(a['prop']); };";
    engine.execute(input);

    // Check the expected and actual output
    JavaScriptObject foo = engine.get("window").get("foo");
    assertEquals("modified valueoriginal value", foo