java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class JacksonTest {

    @Test
    public void testWriteBigDecimalAsPlain() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN, true);
        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);

        Test test = new Test(0.0000000005d);
        String json = mapper.writeValueAsString(test);

        // Check that WRITE_BIGDECIMAL_AS_PLAIN is ignored when @JsonFormat is used
        // and the value is written in scientific notation
        assertEquals("{\"value\":\"5.0E-10\"}", json);
    }

    static class Test {
        @com.fasterxml.jackson.annotation.JsonFormat(shape = com.fasterxml.jackson.annotation.JsonFormat.Shape.STRING)
        public BigDecimal value;

        public Test(BigDecimal value) {
            this.value = value;
        }
    }
}
