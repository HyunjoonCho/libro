java
public void testZipVersionNeededToExtract() throws IOException {
    // Create a ZipArchiveOutputStream
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    ZipArchiveOutputStream zaos = new ZipArchiveOutputStream(new BufferedOutputStream(bos));

    // Create a ZipEntry
    ZipEntry entry = new ZipEntry("test.txt");
    entry.setMethod(ZipEntry.DEFLATED);
    entry.setSize(100);

    // Write the entry to the ZipArchiveOutputStream
    zaos.putArchiveEntry(entry);

    // Write some data to the entry
    byte[] data = new byte[100];
    zaos.write(data);

    // Close the entry
    zaos.closeEntry();

    // Get the Local File Header
    ZipLocalFileHeader lfh = readLocalFileHeader(bos.toByteArray());

    // Get the Central Directory
    ZipCentralDirectoryEntry cde = readCentralDirectory(bos.toByteArray());

    // Check that the version needed to extract values are different
    assertNotEquals(lfh.getVersionNeededToExtract(), cde.getVersionNeededToExtract());
}

private ZipLocalFileHeader readLocalFileHeader(byte[] bytes) throws IOException {
    // Read the Local File Header from the bytes