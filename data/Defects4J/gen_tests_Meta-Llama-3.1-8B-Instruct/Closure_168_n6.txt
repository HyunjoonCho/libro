javascript
// test case for bug report
function makeClass(protoMethods) {
    var clazz = function() {
        this.initialize.apply(this, arguments);
    }
    for (var i in protoMethods) {
        clazz.prototype[i] = protoMethods[i];
    }
    return clazz;
}

/**
 * @constructor
 */
var Person = function(name){};

Person = makeClass({
    /**
     * @this {Person}
     */
    initialize: function(name) {
        this.name = name;
    },

    /**
     * @this {Person}
     */
    getName: function() {
        return this.name;
    },

    /**
     * @param {string} message
     * @this {Person}
     */
    say: function(message) {
        // This should trigger an error
        setTimeout(function() {
            this.getName(1) +'says:'+ message; // Intentionally call with 1 argument
        }, 500);
    }
});

var joe = new Person('joe');
joe.say('hi');
var jane = new Person('jane');
jane.say('hello');
