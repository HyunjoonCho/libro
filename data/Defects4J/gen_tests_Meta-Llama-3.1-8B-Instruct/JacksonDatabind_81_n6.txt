java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector;

public void testPrimitiveWrapperRefinement() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    JaxbAnnotationIntrospector introspector = new JaxbAnnotationIntrospector(mapper);

    // Test approach 1: ignore primitive/wrapper override
    Class<?>[] refinements = introspector.findPropertyRefinements(null, Integer.class);
    assertEquals(0, refinements.length);

    // Test approach 1: ignore primitive/wrapper override for int
    refinements = introspector.findPropertyRefinements(null, int.class);
    assertEquals(0, refinements.length);

    // Test approach 2: allow wrapper to "refine" primitive
    refinements = introspector.findPropertyRefinements(null, Integer.class, int.class);
    assertEquals(1, refinements.length);

    // Test "int to long" refinement
    refinements = introspector.findPropertyRefinements(null, int.class, long.class);
    assertEquals(1, refinements.length);
}
