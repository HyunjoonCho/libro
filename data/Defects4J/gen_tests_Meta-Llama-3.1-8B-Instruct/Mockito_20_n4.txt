java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class MockitoTest {

    @Mock
    private UserAccount userAccount;

    @InjectMocks
    private FakeUserAccount fakeUserAccount;

    @Test
    public void testGetEmails() {
        fakeUserAccount.addEmail("email1");
        fakeUserAccount.addEmail("email2");
        when(userAccount.getEmails()).thenReturn(fakeUserAccount.getEmails());
        assertEquals(2, userAccount.getEmails().size());
    }

    @Mock
    private AccountService accountService;

    @InjectMocks
    private MockAccountService mockAccountService;

    @Test
    public void testGetAccount() {
        UserAccount account = mockUserAccount();
        when(mockAccountService.getAccount("id")).thenReturn(account);
        mockAccountService.getAccount("id", new AsyncCallback<UserAccount>() {
            @Override
            public void onSuccess(UserAccount userAccount) {
                assertEquals(account, userAccount);
            }
        });
    }

    @Mock
    private AccountRpcService accountRpcService