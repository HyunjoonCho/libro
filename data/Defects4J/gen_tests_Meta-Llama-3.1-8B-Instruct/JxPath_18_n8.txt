java
public void testIssue172() {
    AttributeContext attributeContext = new AttributeContext();
    NodeNameTest nodeNameTest = new NodeNameTest(new QName("test"));
    NodeTypeTest nodeTypeTest = new NodeTypeTest(Compiler.NODE_TYPE_NODE);
    NodeTypeTest invalidNodeTypeTest = new NodeTypeTest(Compiler.NODE_TYPE_ATTRIBUTE);

    attributeContext.addNodeTest(nodeNameTest);
    attributeContext.addNodeTest(nodeTypeTest);
    attributeContext.addNodeTest(invalidNodeTypeTest);

    QName expectedWildcard = new QName("", "*");
    QName expectedName = new QName("test");

    // Test with NodeTypeTest
    QName name = getAttributeName(attributeContext, nodeTypeTest);
    assertEquals(expectedWildcard, name);

    // Test with NodeNameTest
    name = getAttributeName(attributeContext, nodeNameTest);
    assertEquals(expectedName, name);

    // Test with invalid NodeTypeTest
    name = getAttributeName(attributeContext, invalidNodeTypeTest);
    assertFalse(name.equals(expectedWildcard));
}

private QName getAttributeName(AttributeContext attributeContext, NodeTest nodeTest) {
    if (nodeTest instanceof NodeTypeTest) {
        if (((NodeTypeTest) nodeTest).getNodeType() == Compiler.NODE_TYPE_NODE) {
            return AttributeContext.WILDCARD;
        } else {
            return