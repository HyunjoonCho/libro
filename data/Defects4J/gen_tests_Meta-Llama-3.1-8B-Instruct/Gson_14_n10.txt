java
public void testIssue440() {
    Gson gson = new Gson();
    TypeAdapter<Foo1<?>> adapter = gson.getAdapter(Foo1.class);
    
    // Test chain of supertypeOf(supertypeOf(X)) == supertypeOf(X)
    Foo1<?> foo1 = new Foo1<>();
    foo1.foo2 = new Foo2<>();
    foo1.foo2.foo1 = new Foo1<>();
    try {
        adapter.read(foo1);
        fail("Expected StackOverflowError");
    } catch (StackOverflowError e) {
        // Expected
    }

    // Test chain of subtypeOf(subtypeOf(X)) == subtypeOf(X)
    foo1 = new Foo1<>();
    foo1.foo2 = new Foo2<>();
    foo1.foo2.foo1 = new Foo1<>();
    try {
        adapter.read(foo1);
        fail("Expected StackOverflowError");
    } catch (StackOverflowError e) {
        // Expected
    }

    // Test chain of supertypeOf(subtypeOf(X)) == subtypeOf(Object.class)
    foo1 = new Foo1<>();
    foo1.foo2 = new Foo2<>();
    foo1.foo2.foo1 = new Foo1<>();
    try {
        adapter.read