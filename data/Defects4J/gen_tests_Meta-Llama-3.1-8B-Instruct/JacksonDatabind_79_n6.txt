java
public void testJsonIdentityReferenceClassOnly() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.setVisibility(mapper.getSerializationConfig().getDefaultVisibilityChecker()
           .withFieldVisibility(JsonAutoDetect.Visibility.ANY)
           .withGetterVisibility(JsonAutoDetect.Visibility.NONE)
           .withIsGetterVisibility(JsonAutoDetect.Visibility.NONE)
           .withConstructorVisibility(JsonAutoDetect.Visibility.NONE)
           .withSetterVisibility(JsonAutoDetect.Visibility.NONE));
    
    JsonIdentityInfo identityInfo = new JsonIdentityInfo(
            ObjectIdGenerators.IntSequenceGenerator.class, "id");
    mapper.setVisibility(mapper.getSerializationConfig().getDefaultVisibilityChecker()
           .withFieldVisibility(JsonAutoDetect.Visibility.ANY)
           .withGetterVisibility(JsonAutoDetect.Visibility.PUBLIC_ONLY)
           .withIsGetterVisibility(JsonAutoDetect.Visibility.PUBLIC_ONLY)
           .withConstructorVisibility(JsonAutoDetect.Visibility.NONE)
           .withSetterVisibility(JsonAutoDetect.Visibility.NONE));
    
    ReallyAlwaysAsId classOnly = new ReallyAlwaysAsId();
    ReallyAlwaysContainer container = new ReallyAlwaysContainer();
    container.a = classOnly;
    container.b = classOnly;
    
    String json = mapper.writeValueAsString(container);
    assertEquals("{\"a\":1,\"b\":1}", json);
}
``