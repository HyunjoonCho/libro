java
public void testEqualsBuilder() {
    BigDecimal bigDecimal1 = new BigDecimal("10.00");
    BigDecimal bigDecimal2 = new BigDecimal("10.00");
    assertEquals(true, EqualsBuilder.reflectionEquals(bigDecimal1, bigDecimal2)); // This should pass
    
    bigDecimal2 = new BigDecimal("10.0001");
    assertEquals(false, EqualsBuilder.reflectionEquals(bigDecimal1, bigDecimal2)); // This should pass
    
    bigDecimal2 = bigDecimal1;
    assertEquals(true, EqualsBuilder.reflectionEquals(bigDecimal1, bigDecimal2)); // This should pass
    
    bigDecimal2 = new BigDecimal("10.00");
    bigDecimal2.setScale(1); // This will create a new object, but with the same value
    assertEquals(false, EqualsBuilder.reflectionEquals(bigDecimal1, bigDecimal2)); // This should pass
    
    // Compare with another type
    BigDecimal bigDecimal3 = new BigDecimal("10.00");
    Integer int1 = 10;
    assertEquals(false, EqualsBuilder.reflectionEquals(bigDecimal3, int1)); // This should pass
}
