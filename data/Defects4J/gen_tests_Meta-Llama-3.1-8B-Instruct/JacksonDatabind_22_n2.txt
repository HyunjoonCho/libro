java
public void testCustomSerializerPrecedence() throws Exception {
    // Create a custom serializer for a simple type
    CustomSerializer<Integer> customSerializer = new CustomSerializer<>();
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new SimpleModule().addSerializer(Integer.class, customSerializer));

    // Create a POJO with @JsonValue
    @JsonValue
    public class MyPojo {
        public Integer value;
    }

    // Test that the custom serializer is not used when @JsonValue is present
    try {
        mapper.writeValueAsString(new MyPojo(123));
        fail("Expected a SerializationException");
    } catch (SerializationException e) {
        // Expected
    }

    // Verify that the custom serializer is used when @JsonValue is not present
    try {
        mapper.writeValueAsString(123);
        fail("Expected a SerializationException");
    } catch (SerializationException e) {
        // Expected
    }
}

class CustomSerializer extends JsonSerializer<Integer> {
    @Override
    public void serialize(Integer value, JsonGenerator gen, SerializerProvider provider) throws IOException {
        gen.writeNumber(value);
    }
}
