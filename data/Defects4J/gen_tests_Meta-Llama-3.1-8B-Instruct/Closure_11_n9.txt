javascript
describe('issue test', function() {
  it('should report error for @this annotation with invalid property', function() {
    var makeClass = function(protoMethods) {
      var clazz = function() {
        this.initialize.apply(this, arguments);
      }
      for (var i in protoMethods) {
        clazz.prototype[i] = protoMethods[i];
      }
      return clazz;
    }

    var Person = function(options){};
    Person = makeClass(
      /**
       * @lends Person.prototype
       */
      {
        /**
         * @this {Person}
         * @param {{name: string, height: number}} options
         */
        initialize: function(options) {
          /**
           * @type {string}
           */
          this.name_ = options.thisPropDoesNotExist;
        },

        /**
         * @param {string} message
         * @this {Person}
         */
        say: function(message) {
          window.console.log(this.name_ +'says:'+ message);
        }
      });

    var joe = new Person({name: 'joe', height: 300});
    expect(function() {
      joe.say('hi');
    }).to.throw();

    expect(function() {
      Person.prototype