java
public void testIssueODEIntegration() {
    // Create a test event handler that switches from positive to negative around t = 90
    EventDetector detector = new EventDetector() {
        @Override
        public boolean isEvent(double t) {
            return t == 90;
        }
    };

    // Create a test integrator with small step size
    ODESolver solver = new ODESolver(detector) {
        @Override
        protected void integrateStep(double tStart, double tEnd) {
            // Simulate a small step that spans from 67.5 to 112.5
            if (tStart == 67.5 && tEnd == 112.5) {
                throw new EventException();
            }
        }
    };

    // Set the initial condition
    double initialCondition = 1.0;

    // Simulate the events
    solver.integrate(67.5, 112.5, initialCondition);
    solver.integrate(112.5, 153.0, initialCondition);

    // Check if the event was detected
    assertTrue(solver.isEventDetected());
}

class EventException extends RuntimeException {
}

class EventDetector {
    public boolean isEvent(double t)