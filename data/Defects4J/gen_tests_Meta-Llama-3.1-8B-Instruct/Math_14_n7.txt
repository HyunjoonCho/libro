java
public void testMultivariateVectorOptimizerMemoryIssue() {
    int numWeights = 41200;
    double[] weights = new double[numWeights];
    for (int i = 0; i < numWeights; i++) {
        weights[i] = i;
    }
    MultivariateFunction function = new MultivariateFunction() {
        @Override
        public double value(double[] point) {
            // simple polynomial function for demonstration purposes
            double result = 0;
            for (int i = 0; i < point.length; i++) {
                result += point[i] * i;
            }
            return result;
        }
    };
    MultivariateOptimizer optimizer = new SimplexOptimizer();
    try {
        optimizer.optimize(1, function, weights);
        fail("Expected OutOfMemoryError");
    } catch (OutOfMemoryError e) {
        // expected
    }
}
