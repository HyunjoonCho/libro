java
public void testMultiDirectionalCorrectStart() {
    // Set up the problem
    MultiDirectionalProblem problem = new MultiDirectionalProblem();
    problem.addObjective(0, "min", "x");
    problem.addObjective(0, "max", "y");
    problem.addConstraint(0, "x + y >= 2");
    problem.addConstraint(0, "x + y <= 3");
    problem.addConstraint(1, "x - y >= 1");
    problem.addConstraint(1, "x - y <= 2");

    // Set up the starting point
    MultiDirectionalPoint startPoint = new MultiDirectionalPoint();
    startPoint.setVariable(0, 1.0);
    startPoint.setVariable(1, 1.0);

    // Run the optimization
    MultiDirectionalResult result = MultiDirectional.iterateSimplex(startPoint);

    // The optimization should loop forever
    // This is a known issue when the starting point is the correct solution
    // So we just check that it doesn't throw an exception
    assertNotEquals(MultiDirectionalResult.Status.OPTIMAL, result.getStatus());
}
