java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.XmlJavaTypeAdapter;
import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JaxbAnnotationIntrospector;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class XmlAdapterTest {

    @Test
    public void testXmlAdapterWithObjectGeneric() throws IOException {
        XmlMapper mapper = new XmlMapper();
        SomeIntListHolder listHolder = new SomeIntListHolder();
        listHolder.setListOne(Arrays.asList(1, 2, 3));

        // Test that this fails with a JsonMappingException
        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.setAnnotationIntrospector(new JaxbAnnotationIntrospector());
        try {
            mapper.writeValueAsString(listHolder);
            assert false : "Expected a JsonMappingException";
        } catch (JsonMappingException e) {
            // Expected
        }

        // Now test with the fix in place
        mapper = new XmlMapper();
       