java
import com.google.gson.Gson;
import com.google.gson.TypeAdapter;
import com.google.gson.reflect.TypeToken;

import org.junit.Test;
import static org.junit.Assert.fail;

public class GsonTest {
    private static class Foo1<A> {
        Foo2<? extends A> foo2;
    }

    private static class Foo2<B> {
        Foo1<? super B> foo1;
    }

    @Test(expected = StackOverflowError.class)
    public void testRecursiveResolveSimple() {
        new Gson().getAdapter(Foo1.class);
    }

    @Test
    public void testRecursiveResolveCollapsed() {
        Gson gson = new Gson();
        TypeAdapter<Foo1<?>> adapter = gson.getAdapter(new TypeToken<Foo1<?>>(){}.getType());
        try {
            // The following line should not throw a StackOverflowError
            gson.fromJson("{}", Foo1.class);
            fail("Expected StackOverflowError");
        } catch (StackOverflowError e) {
            // expected
        }
    }
}
