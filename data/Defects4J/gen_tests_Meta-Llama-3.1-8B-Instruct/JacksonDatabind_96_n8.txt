public void testImplicitConstructorPropertyNames() {
    // Create an instance of a class with an implicit constructor
    class TestClass {
        public TestClass(int a, String b) {}
    }

    // Create a PropertyNamingStrategy that renames the properties
    PropertyNamingStrategy strategy = new PropertyNamingStrategy.StandardStrategy();
    strategy.setUnderscoreNamingStrategy(PropertyNamingStrategy.UnderscoreNamingStrategy.INSTANCE);

    // Create a mapper with the strategy
    ObjectMapper mapper = new ObjectMapper();
    mapper.setPropertyNamingStrategy(strategy);

    // Serialize and deserialize the object
    TestClass obj = new TestClass(1, "two");
    String json = mapper.writeValueAsString(obj);
    TestClass deserialized = mapper.readValue(json, TestClass.class);

    // Verify that the properties were not renamed as expected
    assertEquals("a", deserialized.getClass().getDeclaredFields()[0].getName());
    assertEquals("b", deserialized.getClass().getDeclaredFields()[1].getName());
}