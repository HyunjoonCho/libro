java
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.SourceFile;

import org.junit.Test;

import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class ClosureCompilerTest {
    @Test
    public void testLendsAnnotation() throws Exception {
        String code = "dojo.declare('MyClass', [superClass1, superClass2], /** @lends MyClass.prototype */ { " +
                " foo: function(){ this.myProperty = 1; }, " +
                " bar: function(){ this.myProperty = 2; } " +
                "});";

        Compiler compiler = new Compiler();
        compiler.setWarningLevel(CompilationLevel.ADVANCED_OPTIMIZATIONS);
        compiler.setForInCheck(true);
        compiler.setAllowJsDocAnnotations(true);

        List<SourceFile> files = compiler.compile(code);

        for (SourceFile file : files) {
            List<JSError> errors = file.getErrors();
            assertNotNull(errors);
            assertEquals(0, errors.size());
        }
    }
}
