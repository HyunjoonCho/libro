java
public void testEmbeddedRungeKuttaTooLargeFirstStep() {
    // Create a function that evaluates to a constant value outside the integration range
    final double FUNCTION_VALUE = 10.0;
    final double[] function = new double[] { FUNCTION_VALUE };

    // Create a simple integrator
    SimpleIntegrator integrator = new SimpleIntegrator() {
        @Override
        public double[] integrate(double t, double[] y) {
            return new double[] { function[0] };
        }
    };

    // Set up the integration parameters
    double[] y = new double[] { 1.0 };
    double t = 0.0;
    double tStop = 0.01; // Extremely short integration range
    double[] yStop = new double[] { 1.0 };

    // Try to integrate with the embedded Runge-Kutta integrator
    EmbeddedRungeKuttaIntegrator integratorWithEmbeddedRK = new EmbeddedRungeKuttaIntegrator(integrator);
    try {
        integratorWithEmbeddedRK.integrate(t, y, tStop, yStop);
        fail("Expected an OutOfRangeException");
    } catch (