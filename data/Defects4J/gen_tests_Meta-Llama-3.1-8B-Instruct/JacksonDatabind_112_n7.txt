public void testStringCollectionDeserializer() {
    // Create a custom collection implementation
    StringCollection customCollection = new StringCollection() {
        @Override
        public void add(String item) {
            // do nothing
        }
    };

    // Configure the custom collection to use its "immutable" version for deserialization
    // (Note: this is not actually possible in the provided code snippet, but it's mentioned in the bug report)
    // customCollection.setImmutable(true); // Not applicable in this case

    // Create a container object with a custom collection property
    Container container = new Container();
    container.setStringCollection(customCollection);

    // Serialize and deserialize the container
    ObjectMapper mapper = new ObjectMapper();
    byte[] json = mapper.writeValueAsBytes(container);
    Container deserializedContainer = mapper.readValue(json, Container.class);

    // Assert that deserialization failed
    assertNotNull(deserializedContainer);
    assertEquals(0, deserializedContainer.getStringCollection().size());
}