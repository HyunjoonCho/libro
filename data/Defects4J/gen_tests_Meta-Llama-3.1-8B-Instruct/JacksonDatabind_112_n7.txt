java
public class CustomStringCollectionDeserializerTest {

    public static class ImmutableStringCollection extends ArrayList<String> {
        @JsonCreator
        public ImmutableStringCollection(@JsonProperty("value") Collection<String> value) {
            addAll(value);
        }
    }

    public static class CustomObject {
        @JsonProperty("strings")
        private ImmutableStringCollection strings;

        public ImmutableStringCollection getStrings() {
            return strings;
        }

        public void setStrings(ImmutableStringCollection strings) {
            this.strings = strings;
        }
    }

    @Test
    public void testDeserializeCustomCollection() throws JsonProcessingException {
        CustomObject obj = new ObjectMapper().readValue("{\"strings\":[\"a\",\"b\"]}", CustomObject.class);
        assertNotNull(obj);
        assertNotNull(obj.getStrings());
        assertEquals(2, obj.getStrings().size());
    }

    @Test(expected = JsonMappingException.class)
    public void testDeserializeCustomCollectionWithJsonCreator() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, true);
        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, true);
        mapper.registerModule(new SimpleModule().addDeserializer(CustomObject.class, new CustomObjectDeserializer()));
       