java
import org.junit.Test;
import org.junit.Assert;

public class TestIssue {
    @Test
    public void testDangerousUseOfGlobalThisObject() {
        // Create a class equivalent to the Foo class in the JavaScript code
        class Foo {
            private int _bar = null;

            // Function equivalent to writeMethodWithAnnotation
            void writeMethodWithAnnotation() {
                this._bar = 123;
            }

            // Function equivalent to readMethodWithAnnotation
            int readMethodWithAnnotation() {
                return this._bar;
            }

            // Function equivalent to writeMethodWithoutAnnotation
            void writeMethodWithoutAnnotation() {
                this._bar = 123;
            }

            // Function equivalent to readMethodWithoutAnnotation
            int readMethodWithoutAnnotation() {
                return this._bar;
            }
        }

        // Create an instance of Foo
        Foo foo = new Foo();

        // Test that there is no warning for writeMethodWithAnnotation
        foo.writeMethodWithAnnotation();

        // Test that there is a warning for writeMethodWithoutAnnotation
        foo.writeMethodWithoutAnnotation();

        // Test that there is no warning for readMethodWithAnnotation
        foo.readMethodWithAnnotation();

        // Test that there is