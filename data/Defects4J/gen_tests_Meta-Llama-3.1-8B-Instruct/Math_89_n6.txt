java
public void testFrequencyAPI() {
    Frequency f = new Frequency();
    
    // Test addValue(Object) should fail with IllegalArgumentException
    try {
        f.addValue(new Object());
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        // Expected
    }

    // Test addValue(Comparable) succeeds
    f.addValue("hello");
    
    // Test getCount(Object) returns 1 for Comparable object
    assertEquals(1, f.getCount("hello"));
    
    // Test getPct(Object) returns a non-zero value for Comparable object
    assertEquals(100.0, f.getPct("hello"), 0.01);
    
    // Test addValue(Object) fails with IllegalArgumentException when trying to add non-Comparable object after a Comparable object
    try {
        f.addValue(new Object());
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        // Expected
    }
    
    // Test getCumFreq(Object) fails with ClassCastException when given a non-Comparable object
    try {
        f.getCumFreq(new Object());
        fail("Expected ClassCastException");
    } catch (ClassCastException e) {
        // Expected
    }
    
    // Test getCumPct(Object) fails with ClassCastException when