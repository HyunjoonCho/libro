public void testJsonFormatShapeOnEnumField() {
    ObjectMapper mapper = new ObjectMapper();
    JsonFormat shape = new JsonFormat();
    shape.setShape(JsonFormat.Shape.NUMBER_INT);
    
    Foo foo = new Foo(Color.GREEN);
    mapper.addMixInAnnotations(Foo.class, MixIn.class);
    
    try {
        String json = mapper.writeValueAsString(foo);
        fail("Expected JsonFormat.Shape.NUMBER_INT to be applied");
    } catch (JsonProcessingException e) {
        // Expected exception
    }
    
    @JsonFormat(shape = JsonFormat.Shape.NUMBER_INT)
    static class MixIn {
        public static class Foo {
            public final Color color;
            
            Foo(Color color) {
                this.color = color;
            }
        }
    }
    
    mapper = new ObjectMapper();
    mapper.addMixInAnnotations(Foo.class, MixIn.class);
    
    try {
        String json = mapper.writeValueAsString(new Foo(Color.GREEN));
        assertEquals(1, json.indexOf("\"1\""));
    } catch (JsonProcessingException e) {
        fail("Unexpected exception");
    }
}

public static class Color {
    public static final Color RED = new Color();
    public static final Color YELLOW = new Color();
    public static final