public void testEventStateNotUpdated() {
    Event event1 = new Event() {
        @Override
        public boolean isTriggered(double t, double[] y) {
            return false;
        }

        @Override
        public void eventOccurred(double t, double[] y) {
            // Trigger a RESET_STATE event to reset the integration state
            solver.resetState();
        }
    };

    Event event2 = new Event() {
        @Override
        public boolean isTriggered(double t, double[] y) {
            return false;
        }

        @Override
        public void eventOccurred(double t, double[] y) {
            // This event should not be triggered in the same step as event1
            // But it should be updated correctly after the state is reset
            assertEquals(0, t);
        }
    };

    // Initialize the solver and add the events
    solver.addEvent(event1);
    solver.addEvent(event2);

    // Simulate a step that triggers event1
    solver.step();

    // Now the state should be reset
    // Simulate another step to check if event2 is updated correctly
    solver.step();

    // The eventOccurred method of event2 should be called with the