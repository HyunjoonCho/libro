java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.module.afterburner.*;
import org.junit.Test;

public class JacksonAfterburnerTest {

    @Test
    public void testNonEmptyExclusion() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        // Test with default handling (Jackson 2.5.4)
        String json = mapper.writeValueAsString(new NonEmptyBean());
        System.out.println(json); // Expected output: {"nonEmptyField":""}

        // Test with Afterburner handling (Jackson 2.5.4)
        ObjectMapper afterburnerMapper = new ObjectMapper();
        afterburnerMapper.registerModule(new AfterburnerModule());
        String afterburnerJson = afterburnerMapper.writeValueAsString(new NonEmptyBean());
        System.out.println(afterburnerJson); // Expected output: {}

        // Test with Jackson 2.6.0-rc3
        ObjectMapper jackson26Mapper = new ObjectMapper();
        jackson26Mapper.registerModule(new AfterburnerModule());
        jackson26Mapper.enable(SerializationFeature.INDENT_OUTPUT);
        String jackson26Json = jackson26Mapper.writeValueAsString(new Non