java
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import org.junit.Rule;
import org.junit.rules.ExpectedException;

public class JsCompilerTest {
    @Rule
    public ExpectedException thrown = ExpectedException.none();

    @Test
    public void testCheckVars() throws Exception {
        Process process = Runtime.getRuntime().exec(new String[] {
            "java", "-jar", "compiler.jar",
            "--js", "test.js",
            "--jscomp_warning", "checkVars"
        });
        process.waitFor();
        boolean foundWarning = false;
        boolean foundError = false;
        for (String line : java.util.Arrays.asList(
            new String[]{"test.js:1: ERROR - variable foo is undefined",
                         "test.js:2: WARNING - dangerous use of the global this object"}
        )) {
            String line2 = line.trim();
            if (line2.startsWith("ERROR")) {
                foundError = true;
            } else if (line2.startsWith("WARNING")) {
                foundWarning = true;
            }
        }
        assertTrue("Expected error message", foundError);
        assertTrue("Expected warning message", foundWarning);
    }

    @Test
    public void testUndefinedVars()