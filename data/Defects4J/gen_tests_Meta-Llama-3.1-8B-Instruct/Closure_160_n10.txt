public void testCheckVarsUndefinedVarsDiagnostics() {
    String script = "foo = {}; foo.bar = function() { alert(this.baz); };";
    String outputVerbose = "test.js:2: WARNING - dangerous use of the global this object\n"
            + "test.js:1: ERROR - variable foo is undefined\nfoo = {};\n^";
    String outputGlobalThis = "test.js:2: WARNING - dangerous use of the global this object\n"
            + "0 error(s), 1 warning(s)";
    String outputCheckVars = "";
    String outputUndefinedVars = "";
    
    // Run with verbose warning level to test checkVars and undefinedVars
    String expectedOutput = outputVerbose;
    // Run with checkVars warning level
    String actualOutputCheckVars = captureOutput(() -> {
        Process process = Runtime.getRuntime().exec(new String[] {"java", "-jar", "compiler.jar", "--js", "test.js", "--jscomp_warning", "checkVars"});
        process.waitFor();
        return new String(process.getInputStream().readAllBytes());
    });
    assertEquals(expectedOutput, actualOutputCheckVars);
    
    // Run with undefinedVars warning level
    String actualOutputUndefinedVars = captureOutput