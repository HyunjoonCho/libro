java
public void testCreateNumberFloatParsing() {
    // Test that createNumber truncates floating point numbers to Float
    assertEquals(Float.valueOf(123.456f), NumberUtils.createNumber("123.456"));
    
    // Test that createNumber does not throw an exception for numbers that are too large for Float
    assertEquals(Float.valueOf(3.4028235677973366e+38f), NumberUtils.createNumber("3.4028235677973366e+38"));
    
    // Test that createNumber does not throw an exception for numbers that are too large for Double
    assertEquals(Double.valueOf(1.7976931348623157e+308), NumberUtils.createNumber("1.7976931348623157e+308"));
    
    // Test that createNumber throws NumberFormatException for numbers that are too large for BigDecimal
    try {
        NumberUtils.createNumber("1.7976931348623157e+309");
        fail("Expected NumberFormatException");
    } catch (NumberFormatException e) {
        // Expected
    }
}
