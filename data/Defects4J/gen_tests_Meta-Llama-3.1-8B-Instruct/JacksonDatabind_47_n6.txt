java
public class TestJsonSerializeAsSuperType {
    
    public static class AccessionIdentifier {
    }
    
    public static class BaseAccessionIdentifier implements AccessionIdentifier {
    }
    
    public static class Foo {
        @JsonSerialize(as = BaseAccessionIdentifier.class)
        @JsonDeserialize(as = BaseAccessionIdentifier.class)
        public AccessionIdentifier getReference() {
            return new AccessionIdentifier();
        }
    }
    
    @Test
    public void testJsonSerializeAsSuperType() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        Foo foo = new Foo();
        String json = mapper.writeValueAsString(foo);
        // This test will fail if the bug is still present
        // We don't know what the correct JSON output should be, so we can't write an assertEquals
        // However, we can verify that no exception is thrown
        try {
            mapper.readValue(json, AccessionIdentifier.class);
        } catch (JsonMappingException e) {
            fail("Expected no exception, but got " + e.getMessage());
        }
    }
}
