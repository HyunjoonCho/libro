javascript
// Test case for redefinition of a function in third party code
function assert(b) {
    if (!b) throw "error";
}

assert(f() === 1);
var f = function() {return 2;};
assert(f() === 2);

function f() {return 1;}

// Compile the code as third party (simulating the behavior of the Closure compiler)
var compiledCode = "function assert(b) {if (!b) throw \"error\";};assert(f() === 1);var f = function() {return 2;};assert(f() === 2);function f() {return 1;}";

// Observe that the first definition of f has been changed from an assignment to a declaration
var expectedCompiledCode = "function assert(b) {if (!b) throw \"error\";};var f;assert(f() === 1);f = function() {return 2;};assert(f() === 2);f = function() {return 