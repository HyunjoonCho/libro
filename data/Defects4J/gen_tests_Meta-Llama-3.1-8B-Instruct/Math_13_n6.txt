java
import org.junit.Test;
import org.junit.Assert;
import org.apache.commons.math3.optim.linear.Evaluator;
import org.apache.commons.math3.optim.linear.LinearConstraint;
import org.apache.commons.math3.optim.linear.LinearConstraintSet;
import org.apache.commons.math3.optim.linear.NonNegativeConstraint;
import org.apache.commons.math3.optim.linear.SimpleBound;
import org.apache.commons.math3.optim.linear.SimplexSolver;
import org.apache.commons.math3.optim.linear.UnivariateFunction;
import org.apache.commons.math3.optim.linear.impl.EvaluatorImpl;
import org.apache.commons.math3.optim.nonlinear.scalar.GoalType;

import java.util.Arrays;

public class LargeWeightsTest {

    @Test(expected = OutOfMemoryError.class)
    public void testLargeWeights() throws Exception {
        int n = 41200;
        double[] x = new double[n];
        Arrays.fill(x, 1.0);
        double[] y = new double[n];
        Arrays.fill(y, 1.0);
        UnivariateFunction func = new EvaluatorImpl(x, y);
        LinearConstraint[] constraints = new LinearConstraint[1];
        constraints[0] = new LinearConstraint(x, LinearConstraintType.EQUAL_TO, 1);
        NonNegativeConstraint nonNeg = new NonNegative