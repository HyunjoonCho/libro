java
public void testFinishMethodAccessibility() {
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    ArchiveOutputStream aos = new MyArchiveOutputStream(bos);
    try {
        // Test that calling finish() directly does not corrupt the output
        aos.finish();
        assertEquals(0, bos.toByteArray().length);
        
        // Test that calling finish() multiple times does not corrupt the output
        aos.finish();
        assertEquals(0, bos.toByteArray().length);
        
        // Test that calling close() calls finish() internally
        aos.close();
        assertEquals(0, bos.toByteArray().length);
        
        // Test that calling finish() after close() does not corrupt the output
        aos.finish();
        assertEquals(0, bos.toByteArray().length);
        
        // Test that calling finish() directly corrupts the output
        try {
            aos.finish();
            fail("Expected IOException");
        } catch (IOException e) {
            // expected
        }
    } finally {
        aos.close();
    }
}

private static class MyArchiveOutputStream extends ArchiveOutputStream {
    private ByteArrayOutputStream bos;
    
    public MyArchiveOutputStream(OutputStream os) {
        super(os);
        bos = new ByteArrayOutputStream();
    }
    
    @Override
    public void close() throws IOException {
        // Call finish