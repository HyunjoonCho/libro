javascript
function testCastingFunctionBeforeCall() {
    var code1 = '/** @type {function(!string):!string} */ ((new window.ActiveXObject( \'ShockwaveFlash.ShockwaveFlash\' ))[\'GetVariable\'])( \'$version\' )';
    var code2 = '/** @type {!string} */ ((new window.ActiveXObject( \'ShockwaveFlash.ShockwaveFlash\' ))[\'GetVariable\']( \'$version\' ))';

    var compiledCode1 = compileCode(code1);
    var compiledCode2 = compileCode(code2);

    expect(compiledCode1).not.toEqual('use strict;console.log((0,(new window.ActiveXObject("ShockwaveFlash.ShockwaveFlash")).GetVariable)("$version"));');
    expect(compiledCode2).not.toEqual('use strict;console.log((new window.ActiveXObject("ShockwaveFlash.ShockwaveFlash")).GetVariable("$version"));');

    function compileCode(code) {
        // Simulate compilation here, e.g. using a JavaScript parser library
        // For example, using esprima:
        var esprima = require('esprima');
        var tree = esprima.parse(code);
        return tree.toString