java
import org.junit.Test;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSet;

import org.junit.Rule;
import org.junit.rules.TemporaryFolder;

import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.jscomp.SourceMap;
import com.google.javascript.jscomp.SourceMapConsumer;
import com.google.javascript.jscomp.SourceRoot;
import com.google.javascript.jscomp.WarningLevel;

import static org.junit.Assert.assertEquals;

public class IssueTest {

    @Rule
    public TemporaryFolder temporaryFolder = new TemporaryFolder();

    @Test
    public void testIssue() throws IOException {
        // Create input file
        File inputFile = temporaryFolder.newFile("input.js");
        try (PrintWriter writer = new PrintWriter(new FileWriter(inputFile))) {
            writer.println("window['anchor'] = function (obj, modifiesProp) {");
            writer.println("  return (function (saved) {");
            writer.println("    return modifiesProp(obj) + saved;");
            writer.println("  })(obj['prop']);");
       