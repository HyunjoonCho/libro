public void testAdvancedOptimizationsIssue() throws Exception {
    // Create a JavaScript file with the test case
    String inputJs = "window['anchor'] = function (obj, modifiesProp) { return (function (saved) { return modifiesProp(obj) + saved; })(obj['prop']); }";

    // Compile it with the advanced optimizations
    String outputJs = compileJs(inputJs, "--compilation_level ADVANCED_OPTIMIZATIONS --warning_level VERBOSE --externs window.js --js input.js --js_output_file output.js");

    // Check if the output is as expected
    String expectedOutput = "window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD};";
    assertEquals(expectedOutput, outputJs);
}

// Helper method to compile the JavaScript code
private String compileJs(String inputJs, String flags) throws Exception {
    // Use a Java process builder to run the compiler
    ProcessBuilder processBuilder = new ProcessBuilder("java", "-jar", "compiler.jar", flags, "-js", inputJs);
    Process process = processBuilder.start();
    BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
    String output = reader.readLine();
    reader.close();
    process.waitFor();