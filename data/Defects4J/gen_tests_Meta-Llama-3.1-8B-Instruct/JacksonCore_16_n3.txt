java
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.util.JsonParserSequence;

import org.junit.Test;

public class JsonParserSequenceTest {

    @Test
    public void testJsonParserSequence() throws Exception {
        // Create a parser that returns a token
        JsonParser parser1 = new JsonParser() {
            private JsonToken token = JsonToken.VALUE_STRING;

            @Override
            public JsonToken nextToken() {
                return token;
            }

            @Override
            public String nextTextValue() {
                return "Token 1";
            }
        };

        // Create a parser that returns a non-skippable token
        JsonParser parser2 = new JsonParser() {
            private JsonToken token = JsonToken.VALUE_NUMBER_INT;

            @Override
            public JsonToken nextToken() {
                return token;
            }

            @Override
            public int nextIntValue() throws JsonParseException {
                return 123;
            }
        };

        // Create a JsonParserSequence that concatenates the two parsers
        JsonParserSequence sequence = JsonParserSequence.createFlattened(parser1, parser2);

        // Advance the sequence to the second parser
        sequence.nextToken();

       