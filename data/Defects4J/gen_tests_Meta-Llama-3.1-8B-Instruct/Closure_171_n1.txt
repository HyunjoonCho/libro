public void testAssignObjectLiteralToProto() {
    final Function foo = new Function() {
        @Override
        public Object invoke(Object... args) {
            return null;
        }
    };

    new Runnable() {
        @Override
        public void run() {
            foo.getClass().getDeclaredField("prototype").set(foo, new Object() {
                public void alert() {
                    System.out.println("hello world");
                }
            });
        }
    }.run();

    try {
        Class<?> clazz = Class.forName("java.lang.Function");
        Field prototypeField = clazz.getDeclaredField("prototype");
        prototypeField.setAccessible(true);
        Object alert = prototypeField.get(foo);
        System.out.println(alert); // should print: null
    } catch (Exception e) {
        e.printStackTrace();
    }
}