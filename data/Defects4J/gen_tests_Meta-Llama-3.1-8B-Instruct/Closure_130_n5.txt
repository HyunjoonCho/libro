public void testArgumentsMovedToAnotherScope() {
    final String[] args = new String[] {"test"};
    final Function<?> func = () -> () -> {
        String[] arg = args;
        Thread.sleep(100);
        return null;
    };
    try {
        Thread thread = new Thread(func);
        thread.start();
        thread.join();
        String[] expected = new String[] {"test"};
        String[] actual = new String[0];
        // Using a workaround since Java doesn't support accessing arguments in a closure
        // actual = ((Thread) new Thread(() -> {
        //     actual = Thread.currentThread().getStackTrace()[1].getArguments()[0];
        // }).start()).getStackTrace()[1].getArguments()[0];
    } catch (InterruptedException e) {
        fail(e.getMessage());
    }
    assertEquals(1, args.length);
    assertEquals("test", args[0]);
}