public void testCloseEventDetection() {
    // Create an ODE solver with a small step size
    ODEIntegrator integrator = new ODEIntegrator(0.01);

    // Define a switching function that is increasing around the first event and decreasing around the second event
    double[] y = new double[] {0};
    double[] dydx = new double[] {1};
    double[] g = new double[] {0};
    double[] eps = new double[] {0};
    double[] gprime = new double[] {0};
    public double eventFunction(double t, double[] y, double[] dydx, double[] g, double[] eps, double[] gprime) {
        g[0] = (t < 90)? y[0] : -y[0];
        return 0;
    }

    // Set the initial conditions and event detection parameters
    double t0 = 0;
    double y0 = 0;
    double t1 = 135;
    double y1 = 0;
    double[] events = new double[] {90, 135};

    // Simulate the ODE with the integrator
    double[] result = integrator