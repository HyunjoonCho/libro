java
import org.junit.Test;

public class ClosureCompilerTest {

    public void testArgumentVariableRenaming() {
        // Original code
        String originalCode = "function(argument){\n" +
                "  var variable = 10;\n" +
                "}";

        // Expected output
        String expectedCode = "function(a){\n" +
                "  var b = 10;\n" +
                "}";

        // Closure Compiler should rename 'argument' to 'a' and 'variable' to 'b'
        // But instead, it reuses the name 'a' for 'variable'
        String actualCode = "function(argument){\n" +
                "  var a = 10;\n" +
                "}";

        // Test that the Closure Compiler has not renamed 'argument' to a unique name
        assertNotEquals(expectedCode, actualCode);
    }
}
