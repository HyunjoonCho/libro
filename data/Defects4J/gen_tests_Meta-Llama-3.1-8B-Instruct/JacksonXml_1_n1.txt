public void testDeserializationOfNestedNonWrappedLists() {
    List<Record> records = new ArrayList<>();
    List<Field> fields = new ArrayList<>();
    Record record = new Record(fields);
    records.add(record);

    ObjectMapper mapper = new ObjectMapper();
    String json = mapper.writeValueAsString(records);

    // Create a new list with an empty inner list
    List<Record> newRecords = new ArrayList<>();
    Record newRecord = new Record(new ArrayList<>());
    newRecords.add(newRecord);

    // Use the ObjectMapper to deserialize the JSON string into the new list
    List<Record> deserializedRecords;
    try {
        deserializedRecords = mapper.readValue(json, new TypeReference<List<Record>>() {});
    } catch (JsonProcessingException e) {
        fail("Unexpected exception: " + e.getMessage());
        return;
    }

    // Check that the deserialized list has the same structure as the original list
    assertEquals(1, deserializedRecords.size());
    Record deserializedRecord = deserializedRecords.get(0);
    assertEquals(0, ((List<Field>) deserializedRecord.getFields()).size());
}