java
public void testJacksonXmlRootElement() throws Exception {
    final XmlMapper xmlMapper = new XmlMapper();
    final XmlMapper noAnnotationsXmlMapper = xmlMapper.copy()
           .configure(MapperFeature.USE_ANNOTATIONS, false)
           .configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);

    @JacksonXmlRootElement(localName = "myname")
    class TestClass {
        // no fields
    }

    String expectedLocalName = "myname";
    String expectedClassName = "TestClass";

    String noAnnotationsXml = noAnnotationsXmlMapper.writeValueAsString(new TestClass());
    String annotatedXml = xmlMapper.writeValueAsString(new TestClass());

    assertEquals(expectedLocalName, getLocalName(noAnnotationsXml));
    assertEquals(expectedClassName, getClassName(noAnnotationsXml));
    assertEquals(expectedClassName, getClassName(annotatedXml));
}

private String getLocalName(String xml) {
    int start = xml.indexOf("<");
    int end = xml.indexOf(">", start);
    return xml.substring(start + 1, end);
}

private String getClassName(String xml) {
    int start = xml.indexOf("<");
    int end = xml.indexOf(">", start);
    String tagName = xml.substring(start + 1, end);
    return tagName.split(":