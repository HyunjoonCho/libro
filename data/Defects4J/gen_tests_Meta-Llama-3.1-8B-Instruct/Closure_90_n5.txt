public void testTypedefWarning() {
    CompilationUnit unit = new CompilationUnit();
    unit.addImport("bug");

    Function sharedMethod = new Function();
    sharedMethod.setName("sharedMethod");
    sharedMethod.setSourceInfo(new SourceInfo(6, "sharedMethod = function() {};"));
    unit.addMember(sharedMethod);

    ClassType bugA = new ClassType("A");
    ClassType bugB = new ClassType("B");
    TypeReference thingType = new UnionType(bugA, bugB);
    TypeReference typedef = new TypeReference("typedef", new TypeReference[] { thingType });
    typedef.setAnnotation(new Annotation("@this", new String[] { "bug.Thing" }));

    Function aConstructor = new Function();
    aConstructor.setName("A");
    aConstructor.setSourceInfo(new SourceInfo(9, "bug.A = function() {};"));
    unit.addMember(aConstructor);

    Function bConstructor = new Function();
    bConstructor.setName("B");
    bConstructor.setSourceInfo(new SourceInfo(10, "bug.B = function() {};"));
    unit.addMember(bConstructor);

    unit.setTypedef(typedef);

    try {
        unit.compile();
        fail("Expected warning");