public void testDefaultMockingDetails() {
    Bar bar = mock(Bar.class, withSettings().extraInterfaces(List.class, Observer.class));
    assertEquals(1, bar.getMockingDetails().getExtraInterfaces().size());
}

public void testNoJUnitDependencies() {
    try {
        checkDependency("org.mockito.internal.progress.TimesTest");
        fail("Should throw AssertionError");
    } catch (AssertionError e) {
        assertEquals("org.mockito.internal.progress.TimesTest has some dependency to JUnit", e.getMessage());
    }
}

public void testClassLoaders() {
    ClassLoader classLoader = getClass().getClassLoader();
    String temp = "test/" + getClass().getSimpleName() + ".class";
    URLClassLoader urlClassLoader = new URLClassLoader(new URL[]{new File(temp).toURI().toURL()});
    Class<?> clazz = urlClassLoader.loadClass("org.mockito.internal.progress.TimesTest");
    assertTrue(clazz.getName().startsWith("org.mockito.internal.progress"));
}