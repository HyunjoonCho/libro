java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import org.junit.Test;
import static org.junit.Assert.fail;

import java.io.IOException;

public class TestJackson {

    @Test(expected = IllegalArgumentException.class)
    public void testDeserializeException() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
        mapper.configure(SerializationFeature.CAN_OVERRIDE_ACCESS_MODIFIERS, true);

        mapper.writeValueAsString(new MyException("test"));
    }

    @JsonDeserialize(as = java.lang.Throwable.class)
    @JsonSerialize(as = java.lang.Throwable.class)
    public static class MyException extends RuntimeException {
        public MyException(String message) {
            super(message);
        }
    }
}
