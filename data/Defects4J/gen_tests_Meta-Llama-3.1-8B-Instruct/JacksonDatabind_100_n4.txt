java
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.base.ParserBase;
import com.fasterxml.jackson.core.util.Base64Variant;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.TextNode;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;

public class TreeTraversingParserTest {

    @Test
    public void testBase64VariantIgnored() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        JsonParser parser = new TreeTraversingParser(mapper, new ParserBase() {
            @Override
            protected JsonToken _handleTextValue(String text) {
                return JsonToken.VALUE_STRING;
            }
        }, null);

        parser.nextToken();
        parser.nextToken();
        parser.nextToken();

        JsonNode jsonNode = parser.getCodec().readTree(parser);
        TextNode textNode = (TextNode) jsonNode;

        Base64Variant base64Variant = Base64Variants.MIME_NO_LINEFEED;
        byte[] expected = base64Variant.decode(textNode.asText());

        JsonParser treeParser = new TreeTraversingParser(mapper, new ParserBase() {
           