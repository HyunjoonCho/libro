java
public void testCMAESOptimizer() {
    // Define the function to be optimized
    double f(double x) {
        return Math.pow(x, 2);
    }

    // Define the bounds of the search space
    double lowerBound = 0.0;
    double upperBound = 10.0;

    // Create a CMAESOptimizer instance with a small population size and a small maximum number of iterations
    // This is to make the issue more apparent
    CMAESOptimizer optimizer = new CMAESOptimizer(10, 100);

    // Fit the function with bounds
    optimizer.fit(f, lowerBound, upperBound);

    // Check that the optimizer is able to find a solution near the upper bound
    // This should fail because the optimizer has poor resolution near the upper bound
    assertTrue(optimizer.getBestSolution() >= upperBound * 0.9);
}
