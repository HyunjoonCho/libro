java
public void testCustomSerializerNotUsedWithJsonValue() {
    // Create a custom serializer for the POJO type
    JsonSerializer<MyPojo> customSerializer = new JsonSerializer<MyPojo>() {
        @Override
        public JsonElement serialize(MyPojo src, Type typeOfSrc, JsonSerializationContext context) {
            return new JsonPrimitive(src.getValue());
        }
    };

    // Create a POJO with @JsonValue annotation
    @JsonValue
    class MyPojo {
        private int value;

        public MyPojo(int value) {
            this.value = value;
        }

        public int getValue() {
            return value;
        }
    }

    // Register the custom serializer
    Jsonb jsonb = JsonbBuilder.create().withSerializers(new Map<String, JsonSerializer>() {{
        put(MyPojo.class.getName(), customSerializer);
    }}).build();

    // Create an instance of the POJO
    MyPojo pojo = new MyPojo(10);

    // Serialize the POJO
    String json = jsonb.toJson(pojo);

    // Check that the custom serializer was not used
    assertNotEquals("10", json);
}
