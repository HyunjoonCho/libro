java
import org.apache.commons.math3.distribution.GammaDistribution;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

import static org.junit.Assert.assertArrayEquals;

public class GammaDistributionCloneTest {

    @Test
    public void testGammaDistributionClone() throws Exception {
        GammaDistribution originalDistribution = new GammaDistribution(1.0, 1.0);

        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bos);
        oos.writeObject(originalDistribution);
        oos.flush();
        oos.close();

        byte[] originalBytes = bos.toByteArray();

        ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(originalBytes));
        GammaDistribution clonedDistribution = (GammaDistribution) ois.readObject();

        double[] originalSamples = new double[10000];
        double[] clonedSamples = new double[10000];

        for (int i = 0; i < 10000; i++) {
            originalSamples[i] = originalDistribution.sample();
            clonedSamples[i] = clonedDistribution.sample();
        }

        assertArrayEquals(originalSamples, clonedSamples, 1e-6);
    }
}
