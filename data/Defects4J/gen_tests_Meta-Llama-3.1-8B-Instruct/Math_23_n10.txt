java
public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    brentOptimizer.setTolerance(1e-10);
    brentOptimizer.setBracketing(1.0, 2.0, 1.5);

    // Evaluate the function at these points
    double f1 = brentOptimizer.getFunction().value(1.0);
    double f2 = brentOptimizer.getFunction().value(2.0);
    double f3 = brentOptimizer.getFunction().value(1.5);

    // Simulate the scenario where the last evaluated point is slightly worse
    brentOptimizer.getFunction().setValue(1.5, f2 + 1e-10);
    brentOptimizer.getFunction().setValue(1.0, f1 + 1e-10);
    brentOptimizer.getFunction().setValue(2.0, f3);

    // Find the minimum
    brentOptimizer.minimize();

    // Assert that the best point is indeed the first one
    assertEquals(1.0, brentOptimizer.getCurrentPoint(), 1e-10);
}
