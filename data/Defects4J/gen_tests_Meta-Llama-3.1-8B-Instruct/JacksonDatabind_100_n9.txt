java
import com.fasterxml.jackson.core.JsonNode;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.Base64Variant;
import com.fasterxml.jackson.databind.node.TextNode;

import org.junit.Test;

import static org.junit.Assert.assertThrows;

public class TreeTraversingParserTest {

    private final ObjectMapper mapper = new ObjectMapper();

    @Test
    public void testTreeTraversingParserBase64Variant() throws Exception {
        JsonNode jsonNode = JsonNodeFactory.instance.fromString("{'base64Value' : 'SGVsbG8gd29ybGQ='}");
        JsonParser jsonParser = mapper.treeAsTokens(jsonNode);
        TreeTraversingParser parser = new TreeTraversingParser(jsonParser);

        // Should not throw an exception
        parser.getBinaryValue(Base64Variant.STANDARD);

        // Should throw an exception because the Base64 variant is ignored
        assertThrows(JsonMappingException.class, () -> parser.getBinaryValue());
    }
}
