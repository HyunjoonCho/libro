javascript
describe('Template types on methods', () => {
    class Class {
        /**
         * @constructor
         * @template CLASS
         */
        constructor() {}

        /**
         * @param {function(CLASS):CLASS} a
         * @template T
         */
        foo(a) {
            return'string';
        }
    }

    /**
     * @param {number} a
     * @return {string}
     */
    const a = function(a) { return ''; };

    it('should not throw an error when CLASS is not specified', () => {
        new Class().foo(a);
    });

    it('should throw an error when CLASS is inferred from usage', () => {
        expect(() => {
            /**
             * @param {function(CLASS):CLASS} a
             * @template T
             */
            function foo(a) {
                return'string';
            }
            foo(a);
        }).toThrow();
    });
});
