java
public class MockitoFakeAbstractClassTest {

    @Mock
    private UserAccount userAccount;

    @Before
    public void setup() {
        when(userAccount.getEmails()).thenReturn(new ArrayList<>());
    }

    @Test
    public void testGetEmails() {
        // test code here
    }

    @Test
    public void testAddEmail() {
        String email = "test@example.com";
        userAccount.addEmail(email);
        verify(userAccount).addEmail(email);
        assertEquals(1, userAccount.getEmails().size());
    }

    @Mock
    private AccountService accountService;

    @Before
    public void setupService() {
        when(accountService.getAccount(anyString(), any(AsyncCallback.class))).thenAnswer(new Answer<Void>() {
            @Override
            public Void answer(InvocationOnMock invocation) throws Throwable {
                AsyncCallback<UserAccount> callback = (AsyncCallback<UserAccount>) invocation.getArguments()[1];
                callback.onSuccess(new FakeUserAccount());
                return null;
            }
        });
    }

    @Test
    public void testGetAccount() {
        // test code here
    }

    @Mock
    private AccountRpcService accountRpcService;

    @Before
    public void