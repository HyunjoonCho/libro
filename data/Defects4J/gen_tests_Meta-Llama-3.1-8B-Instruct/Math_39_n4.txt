public void testEmbeddedRungeKuttaStepSize() {
    // Create a function that goes out of bounds quickly
    final int FUNCTION_CALLS = 1000;
    final double[] function = new double[FUNCTION_CALLS];
    final double[] function2 = new double[FUNCTION_CALLS];
    final double lowerBound = -10;
    final double upperBound = 10;
    final double stepSize = (upperBound - lowerBound) / FUNCTION_CALLS;

    // Create an integrator with a very short integration range
    final double integralLowerBound = lowerBound;
    final double integralUpperBound = lowerBound + 0.000001;
    final double[] y0 = new double[] { 1 };
    final double[] y = new double[y0.length];

    // Make sure the first step is too large and goes out of bounds
    int steps = 1;
    double expectedStepSize = integralUpperBound - integralLowerBound;
    double actualStepSize = expectedStepSize;
    while (actualStepSize > 0.000001) {
        // Create an integrator
        Integrator integrator = new Integrator(Integrator.ADAMS, y0, integralLowerBound, integral