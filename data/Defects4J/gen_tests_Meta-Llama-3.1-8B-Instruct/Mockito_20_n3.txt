java
public class FakeUserAccountTest {
    @Mock
    private UserAccount userAccount;

    @Before
    public void setup() {
        userAccount = Mockito.mock(UserAccount.class);
    }

    @Test
    public void testGetEmails() {
        // This test case is tedious and error-prone
        List<String> emails = new ArrayList<>();
        when(userAccount.getEmails()).thenReturn(emails);
        userAccount.addEmail("email1");
        userAccount.addEmail("email2");
        assertEquals(2, userAccount.getEmails().size());
    }

    public static class FakeUserAccount implements UserAccount {
        private final List<String> emails = new ArrayList<>();

        @Override
        public void addEmail(String email) {
            emails.add(email);
        }

        @Override
        public List<String> getEmails() {
            return ImmutableList.copyOf(emails);
        }
    }

    @Test
    public void testGetEmailsWithFake() {
        FakeUserAccount fakeUserAccount = new FakeUserAccount();
        List<String> emails = fakeUserAccount.getEmails();
        assertEquals(0, emails.size());
        fakeUserAccount.addEmail("email1");
       