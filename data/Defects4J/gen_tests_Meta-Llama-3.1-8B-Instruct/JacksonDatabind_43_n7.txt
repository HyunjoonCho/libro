public void testDeserializersWithNullToken() {
    // Test that a custom deserializer is called with a null token
    // This should not throw an exception
    DeserializationConfig config = new DeserializationConfig();
    config.setHandlerInstantiator(new HandlerInstantiator() {
        @Override
        public Object instantiate(DeserializationConfig config, JavaType type, Type typeErasure, Object value, BeanDescription beanDesc) throws JsonMappingException {
            return new MyDeserializer();
        }
    });
    // Test that the deserializer is called with a null token
    MyDeserializer deserializer = new MyDeserializer();
    deserializer.deserialize(null, null, null);
}

// Custom deserializer that just logs the token
class MyDeserializer extends JsonDeserializer<Object> {
    @Override
    public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException, JsonProcessingException {
        System.out.println("Deserializing null token");
        return null;
    }
}