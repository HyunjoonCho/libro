public void testIssue107() {
    // Create a function that creates a class with a say method that uses setTimeout
    function makeClass(protoMethods) {
        var clazz = function() {
            this.initialize.apply(this, arguments);
        }
        for (var i in protoMethods) {
            clazz.prototype[i] = protoMethods[i];
        }
        return clazz;
    }

    // Create a Person class using the makeClass function
    var Person = makeClass({
        initialize: function(name) {
            this.name = name;
        },
        getName: function() {
            return this.name;
        },
        say: function(message) {
            var self = this;
            setTimeout(function() {
                // Call getName with an argument, which should throw an error
                self.getName(1);
                window.console.log(self.getName(1) +'says:'+ message);
            }, 500);
        }
    });

    // Create instances of the Person class and call the say method
    var joe = new Person('joe');
    var jane = new Person('jane');

    // Check that no error was thrown
    try {
        joe.say('hi');
        jane.say('hello');
    } catch (e) {