public void testEventStateNotUpdated() {
    ODEIntegrator integrator = new ODEIntegrator();
    // setup initial conditions and event handlers
    double[] y = new double[1];
    y[0] = 0.0;
    integrator.initODE(y);
    Event[] events = new Event[] {
        new Event() {
            @Override
            public boolean isSatisfied(double t, double[] y) {
                return true;
            }

            @Override
            public void eventOccurred(double t, double[] y) {
                integrator.resetState();
            }
        },
        new Event() {
            @Override
            public boolean isSatisfied(double t, double[] y) {
                return false;
            }

            @Override
            public void eventOccurred(double t, double[] y) {
                // this event should not trigger a state update
            }
        }
    };
    integrator.addEvents(events);
    
    // integrate to a point where the first event is satisfied
    integrator.integrate(1.0);
    
    // check that the second event's state is not updated
    events[1].eventOccurred(1.0, y);
    // assert that the event