javascript
function testInvalidProperty() {
    // Define the makeClass function
    var makeClass = function(protoMethods) {
        var clazz = function() {
            this.initialize.apply(this, arguments);
        }
        for (var i in protoMethods) {
            clazz.prototype[i] = protoMethods[i];
        }

        return clazz;
    };

    // Define the Person class
    var Person = function(options) {};
    Person = makeClass({
        initialize: function(options) {
            /**
             * @type {string}
             */
            this.name_ = options.thisPropDoesNotExist; // This should report an error
        },

        /**
         * @param {string} message
         * @this {Person}
         */
        say: function(message) {
            window.console.log(this.name_ +'says:'+ message);
        }
    });

    // Create an instance of Person
    var joe = new Person({name: 'joe', height: 300});

    // Try to access the invalid property
    try {
        joe.say('hi');
    } catch (e) {
        // If the error is not reported, this test will fail
        assert(false, 'Expected error not reported');
    }
}
``