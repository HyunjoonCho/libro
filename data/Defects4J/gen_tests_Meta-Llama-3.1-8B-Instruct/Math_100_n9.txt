public void testAbstractEstimator() {
    // Create a problem with bound and unbound parameters
    Problem problem = new Problem() {
        @Override
        public int getUnboundParameters() {
            return 2;
        }

        @Override
        public int getAllParameters() {
            return 3;
        }
    };

    AbstractEstimator estimator = new AbstractEstimator(problem) {
        @Override
        protected void calculateJacobian() {
            // Do nothing, just to trigger the exception
        }
    };

    try {
        estimator.getCovariances();
        fail("getCovariances() should throw an exception");
    } catch (ArrayIndexOutOfBoundsException e) {
        // Expected exception
    }

    try {
        estimator.guessParametersErrors();
        fail("guessParametersErrors() should throw an exception");
    } catch (ArrayIndexOutOfBoundsException e) {
        // Expected exception
    }
}