java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.exc.InvalidDefinitionException;
import org.junit.Test;

import java.util.UUID;

public class JacksonTest {

    @Test(expected = InvalidDefinitionException.class)
    public void testDeserializeWithGenericMap() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"something\":[{\"id\":\"a uuid\",\"property\":\"value\"}]}";
        mapper.readValue(json, MyPojo.class);
    }

    public static class MyPojo {
        @JsonDeserialize(as = MyHashMap.class)
        private void setSomething(Map<UUID, Foo> incomingValue) {
        }
    }

    public static class MyHashMap {
        // custom logic to map json to map
    }

    public static class Foo implements MyCustomIdInterface {
        // implementation
    }

    public interface MyCustomIdInterface {
        UUID getId();
    }
}
