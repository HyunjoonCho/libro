public void testLevenbergMarquardtInconsistency() {
    // Set up a simple objective function
    ObjectiveFunction function = new SimpleSumFunction(2);
    
    // Initialize the optimizer
    LevenbergMarquardt optimizer = new LevenbergMarquardt(function, 1e-6);
    
    // Perform the optimization
    VectorialPointValuePair result = optimizer.doOptimize();
    
    // Check that the point and the residuals are consistent
    double[] point = result.getPoint();
    double[] residuals = function.evaluate(point);
    double cost = result.getValue();
    
    // Check that the cost and residuals are consistent with the point
    for (int i = 0; i < residuals.length; i++) {
        assertEquals(point[i], result.getPoint()[i], 1e-6);
        assertEquals(residuals[i], function.evaluate(new double[]{point[i]}), 1e-6);
    }
}