java
public void testLevenbergMarquardtInconsistency() {
    // Set up the problem
    ObjectiveFunction objectiveFunction = new ObjectiveFunction() {
        @Override
        public double value(double[] point) {
            return Math.pow(point[0] - 1, 2) + Math.pow(point[1] - 2, 2);
        }
    };

    VectorialPointValuePair result = new LevenbergMarquardt().doOptimize(1e-6, 1e-6, 100, new double[] {0, 0}, new double[] {1, 1}, objectiveFunction);

    // Check if the returned point leads to the correct residuals and cost
    double[] point = result.getPoint();
    double[] residuals = new double[] {point[0] - 1, point[1] - 2};
    double cost = Math.pow(residuals[0], 2) + Math.pow(residuals[1], 2);

    assertEquals(0, cost, 1e-6);
}
