public void testIssueWithAdvancedOptimizations() throws Exception {
    // Create a JavaScript file with the test case
    String inputJs = "window['anchor'] = function (obj, modifiesProp) {" +
            " return (function (saved) {" +
            " return modifiesProp(obj) + saved;" +
            " })(obj['prop']);";

    // Compile the JavaScript file using the Closure Compiler
    // (Assuming the Closure Compiler is in the classpath)
    ProcessBuilder processBuilder = new ProcessBuilder("java", "-jar", "compiler.jar",
            "--compilation_level", "ADVANCED_OPTIMIZATIONS",
            "--warning_level", "VERBOSE",
            "--externs", "window.js",
            "--js", "input.js",
            "--js_output_file", "output.js");
    Process process = processBuilder.start();
    process.waitFor();

    // Check the output JavaScript file
    String outputJs = new String(new FileInputStream("output.js").readAllBytes());
    assertEquals("window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD;}", outputJs);
}