java
public void testMapWithClassAsKey() throws Exception {
    Map<Class<? extends Object>, String> map = new HashMap<>();
    map.put(ArrayList.class, "ArrayList");
    map.put(HashMap.class, "HashMap");

    ObjectMapper mapper = new ObjectMapper();
    SimpleModule simpleModule = new SimpleModule();
    simpleModule.addKeyDeserializer(Class.class, new ClassKeyDeserializer());
    mapper.registerModule(simpleModule);

    String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(map);
    System.out.println(json);
    try {
        mapper.readValue(json, new TypeReference<Map<Class<? extends Object>, String>>(){});
    } catch (JsonProcessingException e) {
        fail("Expected successful deserialization", e);
    }
}

private static class ClassKeyDeserializer extends KeyDeserializer {
    @Override
    public Object deserializeKey(String key, DeserializationContext ctxt) throws JsonProcessingException {
        try {
            return Class.forName(key.replace("class ", ""));
        } catch (ClassNotFoundException e) {
            throw new JsonParseException(ctxt, "Unknown class: " + key, e);
        }
    }
}
