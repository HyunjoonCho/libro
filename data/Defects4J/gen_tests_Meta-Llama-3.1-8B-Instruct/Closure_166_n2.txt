public void testAnonymousObjectTypeInferenceInconsistency() {
    // Create an object with the required properties
    Map<String, Object> record = new HashMap<>();
    record.put("prop", "a");

    // Create an object with only the required properties
    Map<String, Object> recordWithProp2 = new HashMap<>();
    recordWithProp2.put("prop", "a");
    recordWithProp2.put("prop2", "b");

    // Create an object with a different type (in this case, a string)
    String recordAsString = "hello";

    // Test the inconsistent behavior
    try {
        func(record);
    } catch (Exception e) {
        fail("Expected no exception");
    }

    try {
        func(recordWithProp2);
    } catch (Exception e) {
        fail("Expected no exception");
    }

    try {
        func2(record);
        fail("Expected exception for record with only 'prop' property");
    } catch (Exception e) {
        // Expected
    }

    try {
        func2(recordAsString);
        fail("Expected exception for string parameter");
    } catch (Exception e) {
        // Expected
    }

    try {
        func2(recordWith