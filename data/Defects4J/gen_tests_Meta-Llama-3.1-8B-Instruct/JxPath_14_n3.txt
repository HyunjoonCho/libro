java
public void testRoundingFunctionsWithNaNAndInfinity() {
    // Test floor function
    assertEquals(Double.NaN, NumberUtils.floor(Double.NaN));
    try {
        NumberUtils.floor(Double.NEGATIVE_INFINITY);
        fail("Expected ArithmeticException for floor of negative infinity");
    } catch (ArithmeticException e) {
        // expected
    }
    try {
        NumberUtils.floor(Double.POSITIVE_INFINITY);
        fail("Expected ArithmeticException for floor of positive infinity");
    } catch (ArithmeticException e) {
        // expected
    }

    // Test ceiling function
    assertEquals(Double.NaN, NumberUtils.ceiling(Double.NaN));
    try {
        NumberUtils.ceiling(Double.NEGATIVE_INFINITY);
        fail("Expected ArithmeticException for ceiling of negative infinity");
    } catch (ArithmeticException e) {
        // expected
    }
    try {
        NumberUtils.ceiling(Double.POSITIVE_INFINITY);
        fail("Expected ArithmeticException for ceiling of positive infinity");
    } catch (ArithmeticException e) {
        // expected
    }

    // Test round function
    assertEquals(Double.NaN, NumberUtils.round(Double.NaN));
    try {
        NumberUtils.round(Double.NEGATIVE_INFINITY);
        fail("Expected ArithmeticException for round of negative infinity");
