public void testCoreRoundingFunctions() {
    double actual = Math.floor(Double.NaN);
    try {
        fail("Expected Math.floor(Double.NaN) to throw an exception");
    } catch (ArithmeticException e) {
        // expected
    }
    
    actual = Math.floor(Double.NEGATIVE_INFINITY);
    assertEquals(Double.NEGATIVE_INFINITY, actual);
    
    actual = Math.floor(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, actual);
    
    actual = Math.ceil(Double.NaN);
    try {
        fail("Expected Math.ceil(Double.NaN) to throw an exception");
    } catch (ArithmeticException e) {
        // expected
    }
    
    actual = Math.ceil(Double.NEGATIVE_INFINITY);
    assertEquals(Double.NEGATIVE_INFINITY, actual);
    
    actual = Math.ceil(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, actual);
    
    actual = Math.round(Double.NaN);
    try {
        fail("Expected Math.round(Double.NaN) to throw an exception");
    } catch (ArithmeticException e) {
        // expected
    }
    
    actual = Math.round(Double.NEGATIVE_INFINITY);
    assertEquals(Double.NEGATIVE_INFINITY, actual);
    
    actual = Math.round(Double.POSITIVE_INFINITY);