javascript
describe('goog.scope with private function', function() {
    it('should allow private top-level functions', function() {
        goog.scope(function() {
            /** @private */
            function test() {
                return 'test';
            }
            var result = test();
            expect(result).toBe('test');
        });
    });

    it('should throw an error if private top-level variable is not a function', function() {
        goog.scope(function() {
            /** @private */
            var test = 'test';
            expect(function() {
                test();
            }).toThrowError('The local variable test is in a goog.scope and is not an alias.');
        });
    });
});
