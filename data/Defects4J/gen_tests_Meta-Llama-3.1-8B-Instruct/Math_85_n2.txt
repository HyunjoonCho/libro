java
public void testInverseCumulativeProbability() {
    DistributionFactory factory = new DistributionFactory();
    NormalDistribution normal = factory.createNormalDistribution(0, 1);
    double[] testCases = new double[] {
        0.9772498680518209,  // should return 2.0000...
        0.9986501019683698,  // should return 3.0000...
        0.9999683287581673   // should return 4.0000...
    };

    for (double value : testCases) {
        try {
            double result = normal.inverseCumulativeProbability(value);
            assertEquals(2, result, 1e-6); // adjust the tolerance as needed
        } catch (MathException e) {
            fail("Inverse cumulative probability failed for value " + value);
        }
    }

    // Test that the bug is not present for values that do not trigger it
    assertEquals(0, normal.inverseCumulativeProbability(0.5), 1e-6);
}
