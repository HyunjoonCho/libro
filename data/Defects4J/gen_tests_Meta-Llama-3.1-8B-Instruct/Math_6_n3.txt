public void testLevenbergMarquardtOptimizerIterations() {
    // setup
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    MultivariateVectorFunction function = new MultivariateVectorFunction() {
        @Override
        public double[] value(double[] point) throws IllegalArgumentException {
            return new double[] { point[0] };
        }
    };

    // action
    optimizer.optimize(new MaxEval(1), new Target(new double[] { 1 }),
            new Weight(new double[] { 1 }), new InitialGuess(new double[] { 10 }),
            new ModelFunction(function), new ModelFunctionJacobian(new MultivariateMatrixFunction() {
                @Override
                public double[][] value(double[] point) throws IllegalArgumentException {
                    return new double[][] { { 1 } };
                }
            }));

    // verify
    assertEquals(1, optimizer.getEvaluations());
    assertEquals(0, optimizer.getIterations());
}