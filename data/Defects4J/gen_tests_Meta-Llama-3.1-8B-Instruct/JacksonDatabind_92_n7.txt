java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.TypeFactory.DefaultTypeFactory;

public void testBlockPolymorphicDeserialization() throws Exception {
    // Test that we can deserialize a malicious payload
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);

    // Add types to block from polymorphic deserialization
    TypeFactory tf = TypeFactory.defaultInstance();
    tf = tf.withDefaultMergeableTypes(false);
    mapper.setTypeFactory(tf);

    // Test deserialization of a malicious payload
    String maliciousPayload = "{\"$type\":\"java.lang.ClassLoader\",\"value\":\"java.lang.Runtime\"}";
    try {
        mapper.readValue(maliciousPayload, Object.class);
        fail("Expected deserialization to fail");
    } catch (Exception e) {
        // Expected exception
    }
}
