java
public void testConstructFromCanonicalWithGenericTypes() {
    TypeFactory typeFactory = new TypeFactory();

    // Test with unparameterized type
    String returnType = "java.util.List";
    try {
        typeFactory.constructFromCanonical(returnType);
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        // expected
    }

    // Test with parameterized type
    returnType = "java.util.List<java.lang.Object>";
    Object result = typeFactory.constructFromCanonical(returnType);
    assertNotNull(result);

    // Test with parameterized type, using Object as a placeholder for the type parameter
    returnType = "java.util.List<java.lang.Object>";
    result = typeFactory.constructFromCanonical(returnType);
    assertNotNull(result);
}
