java
public void testLevenbergMarquardtInconsistency() {
    LevenbergMarquardt optimizer = new LevenbergMarquardt();
    optimizer.setObjectiveFunction(new ObjectiveFunction() {
        @Override
        public double value(double[] point) {
            return (point[0] - 2) * (point[0] - 2) + (point[1] - 1) * (point[1] - 1);
        }
    });
    VectorialPointValuePair result = optimizer.doOptimize();

    // Check if the result point is correct
    double[] point = result.getPoint();
    assertEquals(2, point[0], 1e-6);
    assertEquals(1, point[1], 1e-6);

    // Check if the residuals are correct
    double[] residuals = optimizer.getResiduals();
    assertEquals(0, residuals[0], 1e-6);
    assertEquals(0, residuals[1], 1e-6);

    // Check if the cost is correct
    double cost = optimizer.getCost();
    assertEquals(0, cost, 1e-6);
