java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.SerializationFeature;

import java.io.ByteArrayOutputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertThrows;

@RunWith(Parameterized.class)
public class TestSerializationIssue {

    private ObjectReader objectReader;

    public TestSerializationIssue(ObjectReader objectReader) {
        this.objectReader = objectReader;
    }

    @Parameterized.Parameters
    public static Collection<Object[]> data() {
        ObjectReader objectReader = new ObjectMapper().readerFor(Map.class);
        return Arrays.asList(new Object[]{objectReader});
    }

    @Test
    public void testSerialization() throws Exception {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bos);
        oos.writeObject(objectReader);
        oos.close();

        // Try to deserialize the object
        ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));
        Object deserializedObject = ois.readObject();
        ois.close();

        // Check if deserialization was successful
        assertThrows(ClassCastException.class,