java
public void testSpyingOnAbstractClass() {
    // Example 1: Fake with trivial logic
    UserAccount fakeUserAccount = Mockito.mock(UserAccount.class);
    when(fakeUserAccount.getEmails()).thenReturn(new ArrayList<>());
    when(fakeUserAccount.addEmail(anyString())).thenAnswer(new Answer<Void>() {
        @Override
        public Void answer(InvocationOnMock invocation) throws Throwable {
            List<String> emails = (List<String>) invocation.getArguments()[0];
            emails.add("email");
            return null;
        }
    });
    assertEquals(1, ((List<String>) when(fakeUserAccount.getEmails()).thenReturn(new ArrayList<>()).getMockSettings().getInvocations().size());
    fakeUserAccount.addEmail("email");
    assertEquals(1, ((List<String>) fakeUserAccount.getEmails()).size());

    // Example 2: Callback-style API
    AccountService fakeAccountService = Mockito.mock(AccountService.class);
    when(fakeAccountService.getAccount(anyString(), any(AsyncCallback.class))).thenAnswer(new Answer<Void>() {
        @Override
        public Void answer(InvocationOnMock invocation) throws Throwable {
            AsyncCallback<UserAccount> callback = (AsyncCallback<UserAccount>)