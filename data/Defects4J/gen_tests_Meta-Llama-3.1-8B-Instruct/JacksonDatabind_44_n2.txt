java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder;
import com.fasterxml.jackson.databind.type.TypeFactory;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class PolymorphicTypeTest {

    @Test
    public void testPolymorphicType() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);
        TypeFactory tf = mapper.getTypeFactory();
        TypeResolverBuilder<?> resolverBuilder = tf.constructTypeResolverBuilder(null, null);
        resolverBuilder.init();

        PolymorphicClass polymorphic = new PolymorphicClass();
        polymorphic.baseProp = "baseProp";
        polymorphic.subProp = "subProp";

        String json = mapper.writeValueAsString(polymorphic);
        assertEquals("{\"baseProp\":\"baseProp\",\"subProp\":\"subProp\",\"defaultImpl\":\"defaultImpl\"}", json);
    }
}

class PolymorphicClass {
    public String baseProp;
    public String subProp;
    public String defaultImpl = "defaultImpl";
}
