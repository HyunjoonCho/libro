java
public void testAbstractEstimator() throws Exception {
    // Create a problem with bound and unbound parameters
    Problem problem = new Problem() {
        @Override
        public int getUnboundParameters() {
            return 2;
        }

        @Override
        public int getAllParameters() {
            return 4;
        }

        @Override
        public double[] getInitialEstimates() {
            return new double[] {1, 2, 3, 4};
        }
    };

    AbstractEstimator estimator = new AbstractEstimator(problem) {
        @Override
        protected void estimate() {
            // Do nothing
        }
    };

    try {
        // This should throw an ArrayIndexOutOfBoundsException
        estimator.getCovariances();
        fail("getCovariances() should throw an exception");
    } catch (ArrayIndexOutOfBoundsException e) {
        // Expected
    }

    // Fix the bug by using getUnboundParameters()
    estimator.setProblem(new Problem() {
        @Override
        public int getUnboundParameters() {
            return 2;
        }

        @Override
        public int getAllParameters() {
            return 4;
        }

        @Override
        public double[] getInitialEst