public void testCMAESOptimizerNaN() {
    double[] lower = new double[]{-Double.MAX_VALUE, -Double.MAX_VALUE};
    double[] upper = new double[]{Double.MAX_VALUE, Double.MAX_VALUE};
    double[] bounds = new double[]{-Double.MAX_VALUE, Double.MAX_VALUE};
    CMAESOptimizer optimizer = new CMAESOptimizer(lower, upper, bounds);
    optimizer.optimize(new FitnessFunction() {
        @Override
        public double evaluate(double[] params) {
            return 0; // dummy implementation to avoid actual evaluation
        }
    });
    // assertion to check if NaN is passed to the fitness function
    assertNotEquals(Double.NaN, optimizer.getBestFitness());
}