java
public void testCMAESOptimizerBounds() {
    double lowerBound = Double.MAX_VALUE;
    double upperBound = Double.MAX_VALUE + 1;
    double[] lowerBounds = new double[] {lowerBound};
    double[] upperBounds = new double[] {upperBound};
    
    CMAESOptimizer optimizer = new CMAESOptimizer(10, 100, lowerBounds, upperBounds, new FitnessFunction() {
        @Override
        public double evaluate(double[] parameters) {
            return 0; // dummy implementation
        }
    });
    
    // Run the optimizer to trigger the NaN issue
    optimizer.optimize();
    
    // Verify that the parameters passed to the fitness function are NaN
    double[] parameters = optimizer.getBestParameters();
    for (double parameter : parameters) {
        assertTrue(Double.isNaN(parameter));
    }
}
