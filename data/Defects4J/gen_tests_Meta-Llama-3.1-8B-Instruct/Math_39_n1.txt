java
public void testIssueWithEmbeddedRungeKutta() {
    // Create a function that evaluates to a constant value outside the specified range
    Function function = new Function() {
        @Override
        public double value(double x) {
            return 10; // Value outside the specified range
        }
    };

    // Set a very short integration range
    double min = 0;
    double max = 0.0001;

    // Create an integrator with an embedded Runge-Kutta method
    OdeIntegrator integrator = new DormandPrince853Integrator(function, min, max, 1e-6, 1e-6);

    try {
        // Try to integrate with the default step size
        integrator.integrate();
        fail("Expected an OutOfRangeException");
    } catch (OutOfRangeException e) {
        // Expected exception
    }

    // Create an integrator with a Gragg-Bulirsch-Stoer method
    integrator = new GBSIntegrator(function, min, max, 1e-6, 1e-6);

    // Try to integrate with the default step size
    integrator.integrate();
}
