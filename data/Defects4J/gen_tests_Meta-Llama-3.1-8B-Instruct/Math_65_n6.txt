public void testAbstractLeastSquares() {
    // Create a sample AbstractLeastSquares object
    AbstractLeastSquares als = new AbstractLeastSquares() {
        @Override
        protected double[] getResiduals() {
            return new double[] {1.0, 2.0, 3.0};
        }

        @Override
        protected double[] getResidualWeights() {
            return new double[] {1.0, 2.0, 3.0};
        }
    };

    // Test getChiSquare() with weights in denominator
    als.setRows(3);
    als.setColumns(1);
    als.calculate();
    double originalChiSquare = als.getChiSquare();

    // Test getRMS() with weights in denominator
    double originalRMS = als.getRMS();

    // Test corrected getRMS() with weights in numerator
    als.setChiSquare(originalChiSquare);
    als.setRows(3);
    als.setColumns(1);
    als.calculate();
    double correctedRMS = Math.sqrt(als.getChiSquare() / als.getResidualWeights()[0] / als.getResidualWeights()[1] / als.getResidualWeights()[2]);

    //