public void testAssigningObjectLiteralToPrototype() {
    final Class<?> foo = new Class<?>(){
        public Class<?> getPrototype() {
            return null;
        }
    }.getClass();

    final Class<?> anon = new Class<?>(){
        {
            try {
                foo.setPrototype(new Class<?>(){
                    public Object getMethod(String name) {
                        if (name.equals("alert")) {
                            return new Method() {
                                @Override
                                public Object invoke(Object obj, Object... args) throws Throwable {
                                    System.out.println("hello world");
                                    return null;
                                }
                            };
                        } else {
                            return null;
                        }
                    }
                }.getMethod("alert");
            } catch (NoSuchMethodException e) {
                fail("NoSuchMethodException not thrown");
            }
        }
    }.getClass();

    try {
        Method method = anon.getMethod("getPrototype");
        fail("NoSuchMethodException not thrown");
    } catch (NoSuchMethodException e) {
        // expected
    }
}