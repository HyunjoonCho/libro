java
public void testExternalTypeIdHandling() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    ObjectWriter writer = mapper.writer().withDefaultPrettyPrinter();
    String json = writer.writeValueAsString(new TestBean());
    // Create a new mapper with a different order of property fields
    ObjectMapper mapper2 = new ObjectMapper();
    mapper2.setVisibility(PropertyAccessor.FIELD, Visibility.ANY);
    mapper2.setVisibility(PropertyAccessor.GETTER, Visibility.NONE);
    // Deserialize the JSON into a different class order
    TestBean2 bean2 = mapper2.readValue(json, TestBean2.class);
    // Verify that the External Type Id is correctly deserialized
    assertEquals("ExternalType", bean2.getExternalType());
}

class TestBean {
    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXTERNAL_PROPERTY)
    private String externalType;

    public String getExternalType() {
        return externalType;
    }
}

class TestBean2 {
    private String externalType;
    public String getExternalType() {
        return externalType;
    }
}
