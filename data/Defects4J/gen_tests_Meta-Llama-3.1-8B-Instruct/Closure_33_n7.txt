java
import org.junit.Test;
import static org.junit.Assert.*;

public class IssueTest {

    @Test
    public void testIssue() {
        // Create a function with a record type that has a property 'text' with type'string'
        Function temp1 = new Function() {
            @Override
            public Object apply(Object... args) {
                String text = (String) args[0];
                return text;
            }
        };

        // Create a function with a record type that has a property 'activity' with type 'Object'
        Function temp2 = new Function() {
            @Override
            public Object apply(Object... args) {
                // Use a local function with @notypecheck to bypass type checking
                Function _inner = new Function() {
                    @Override
                    public Object apply(Object... args) {
                        String text = (String) ((Object[]) args[0])[0];
                        return text;
                    }
                };
                return _inner.apply((Object[]) args[0]);
            }
        };

        // Create a function with a record type that has properties 'n', 'text', and 'b'
        Function temp3 = new Function() {
            @Override
            public Object apply(Object... args)