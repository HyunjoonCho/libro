java
public void testFractionPercentageValueOverflow() {
    // Create a fraction with a numerator greater than Integer.MAX_VALUE / 100
    Fraction fraction = new Fraction(200000000, 1000000000);
    
    // This should not cause an overflow when multiplied by 100
    double doubleValue = fraction.doubleValue();
    double expectedPercentageValue = doubleValue * 100;
    
    // But this should cause an overflow
    try {
        double actualPercentageValue = fraction.percentageValue();
        fail("Expected an ArithmeticException, but no exception was thrown");
    } catch (ArithmeticException e) {
        // expected
    }
    
    // Test the patched method
    fraction = new Fraction(200000000, 1000000000);
    doubleValue = fraction.doubleValue();
    expectedPercentageValue = doubleValue * 100;
    assertEquals(expectedPercentageValue, fraction.percentageValue(), 0.0001);
}
