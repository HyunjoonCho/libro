public void testUnboundedSolutionException() {
    ENTITIES_COUNT = 15;
    SimplexSolver solver = new SimplexSolver();
    try {
        solver.solve(minimizationProblem());
        fail("Expected UnboundedSolutionException");
    } catch (UnboundedSolutionException e) {
        // expected
    }
}

private ObjectiveFunction minimizationProblem() {
    // create variables
    Variable[] variables = new Variable[ENTITIES_COUNT];
    for (int i = 0; i < ENTITIES_COUNT; i++) {
        variables[i] = new Variable("t" + i, 1.0);
    }
    for (int i = 0; i < ENTITIES_COUNT; i++) {
        variables[i] = new Variable("L" + i, 1.0);
    }
    
    // create constraints
    Constraint[] constraints = new Constraint[ENTITIES_COUNT];
    for (int i = 0; i < ENTITIES_COUNT; i++) {
        Constraint constraint = new Constraint("q" + i);
        for (int j = 0; j < ENTITIES_COUNT; j++) {
            constraint.addCoefficient(Q.get(i, j), variables[j]);
        }
        constraint.setRightSide(