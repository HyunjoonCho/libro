java
public void testHandleUnknownTypeIdReturningVoid() {
    // Create a custom DeserializationProblemHandler that returns Void.class
    DeserializationProblemHandler handler = new DeserializationProblemHandler() {
        @Override
        public Object handleUnknownTypeId(DeserializationContext ctxt, JavaType type, String typeId, TypeIdResolver idResolver, String problemMsg) {
            return Void.class;
        }
    };

    // Enable default typing
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping(DefaultTyping.NON_PRIMITIVE);

    // Create a bean with a field of unknown type
    JavaType javaType = mapper.getTypeFactory().constructType(HashMap.class, HashMap.class);
    Object bean = mapper.readValue("{\"unknownType\":\"value\"}", javaType);

    // The NPE should occur when trying to access the field
    try {
        ((Map<?,?>) bean).get("unknownType");
        fail("Expected NPE");
    } catch (NullPointerException e) {
        // Expected NPE
    }
}
