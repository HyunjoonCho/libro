java
import org.junit.Test;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.text.Rule;

public class FastDateFormatTest {

    @Test(expected = java.io.ObjectStreamException.class)
    public void testFastDateFormatNotSerializable() throws Exception {
        FastDateFormat fdf = new FastDateFormat("yyyy-MM-dd");
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bos);
        oos.writeObject(fdf);
        oos.close();
        ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));
        ois.readObject(); // Should throw ObjectStreamException because mRules is not serializable
    }

    @Test
    public void testFastDateFormatSerializable() throws Exception {
        FastDateFormat fdf = new FastDateFormat("yyyy-MM-dd");
        fdf.addRule(new Rule() {
            @Override
            public String apply(String input) {
                return input.toUpperCase();
            }
        });
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bos);
        oos.writeObject(fdf);
        oos.close();
        ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
        ObjectInputStream ois =