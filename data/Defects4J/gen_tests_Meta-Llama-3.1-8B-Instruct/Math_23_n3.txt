java
public void testBrentOptimizerBestPoint() {
    // Create a simple function that has a clear minimum
    Function f = new Function() {
        @Override
        public double value(double x) {
            return x * x;
        }
    };

    BrentOptimizer brentOptimizer = new BrentOptimizer(1e-10, 1e-10);
    double[] params = {0.5};
    brentOptimizer.optimize(f, params);

    // Check that the last point evaluated is indeed the best
    double bestPoint = brentOptimizer.getBestPoint();
    double lastPoint = brentOptimizer.getPoint(params);
    double lastValue = f.value(lastPoint);
    double bestValue = f.value(bestPoint);

    // Check that the best point is actually better than the last point
    assertTrue("Last point is not better than best point", lastValue >= bestValue);
}
