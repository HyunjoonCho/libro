java
public void testAlwaysAsIdOnClass() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    ObjectNode root = mapper.createObjectNode();
    root.putPOJO("a", new ReallyAlwaysAsId(1));
    root.putPOJO("b", new ReallyAlwaysAsId(2));
    String json = mapper.writeValueAsString(root);
    assertEquals("{\"a\":1,\"b\":2}", json);
}

@JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class, property = "id")
@JsonIdentityReference(alwaysAsId = true)
static class ReallyAlwaysAsId {
    public int value;

    public ReallyAlwaysAsId() {
        this(0);
    }

    public ReallyAlwaysAsId(int v) {
        value = v;
    }
}

@JsonIdentityReference(alwaysAsId = true)
static class ReallyAlwaysContainer {
    @JsonIdentityReference(alwaysAsId = true)
    public ReallyAlwaysAsId a = new ReallyAlwaysAsId(13);

    public ReallyAlwaysAsId b = new ReallyAlwaysAsId(13);
}

public void testAlwaysAsIdOnClassAndProperty() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    ReallyAlwaysContainer container = new ReallyAlwaysContainer();
    String json = mapper.writeValueAsString