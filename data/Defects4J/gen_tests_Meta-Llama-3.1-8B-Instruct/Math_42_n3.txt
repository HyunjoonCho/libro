java
public void testNegativeValueWithRestrictNonNegative() {
    // Define a function to optimize
    final Function function = new AbstractFunction(2) {
        @Override
        public double value(double[] point) {
            return point[0] * 1 + point[1] * 1;
        }
    };

    // Define constraints
    final Constraint[] constraints = new Constraint[] {
        new LinearConstraint(new double[] { 1, 0 }, Relationship.EQUAL, 1)
    };

    // Optimize the function with restrictNonNegative flag
    SimplexSolver solver = new SimplexSolver();
    double[] result = solver.optimize(function, constraints, GoalType.MINIMIZE, true);

    // Check if the result is within the expected range
    assert result[0] == 1;
    assert result[1] >= 0; // The result should not be negative
}
