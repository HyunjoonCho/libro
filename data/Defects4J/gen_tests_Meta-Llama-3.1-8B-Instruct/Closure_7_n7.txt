javascript
describe('goog.isFunction and friends', () => {
    it('should not throw an error when calling length on a number', () => {
        expect(function() {
            var i = 10.length;
        }).not.toThrow();
    });

    it('should not throw an error when calling length on a string', () => {
        expect(function() {
            var i = "hello".length;
        }).not.toThrow();
    });

    it('should not throw an error when calling length on an array', () => {
        expect(function() {
            var i = [1, 2, 3].length;
        }).not.toThrow();
    });

    it('should throw an error when calling length on a number with goog.isDef and goog.isFunction', () => {
        expect(function() {
            var object = 10;
            goog.isDef(object);
            goog.isFunction(object);
            object.length;
        }).toThrow();
    });

    it('should throw an error when calling length on a string with goog.isDef and goog.isFunction', () => {
        expect(function() {
            var object = "hello";
            goog.isDef(object);
            goog.isFunction(object);
            object.length;
        }).toThrow();
   