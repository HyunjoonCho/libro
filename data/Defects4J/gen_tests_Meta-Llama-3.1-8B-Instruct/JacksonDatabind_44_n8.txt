public void testPolymorphicTypes() {
    ObjectMapper mapper = new ObjectMapper();
    JavaType type = mapper.getTypeFactory().constructType(ArrayList.class, new TypeReference<ArrayList<Object>>() {});
    mapper.activateDefaultTyping(DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);
    mapper.addMixIn(Object.class, MixInClass.class);
    
    JsonNode json = mapper.valueToTree(new ArrayList<Object>() {{
        add("property1");
        add("property2");
    }});
    JsonNode mixinJson = mapper.valueToTree(new MixInObject());
    
    JsonNode actual = mapper.treeAsTokens(json);
    JsonNode expected = mapper.treeAsTokens(mixinJson);
    
    assertEquals(expected, actual);
}

public class MixInClass {
    public static class MixInObject {
        public String mixinProperty;
    }
}