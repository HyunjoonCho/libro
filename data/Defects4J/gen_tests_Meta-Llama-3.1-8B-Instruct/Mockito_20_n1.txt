java
public class TestAbstractClassSpying {

    @Mock
    private UserAccount userAccount;

    @Test
    public void testFakeUserAccount() {
        // Using mockito's default behavior, we can't easily stub the getEmails() method
        // because it's not a void method, so we can't use when().thenThrow() or when().thenReturn()

        // But we can create a fake UserAccount instance and use it
        FakeUserAccount fakeUserAccount = new FakeUserAccount();
        fakeUserAccount.addEmail("email1");
        fakeUserAccount.addEmail("email2");

        assertEquals(2, fakeUserAccount.getEmails().size());
    }

    public static class FakeUserAccount implements UserAccount {
        private final List<String> emails = new ArrayList<>();

        @Override
        public void addEmail(String email) {
            emails.add(email);
        }

        @Override
        public List<String> getEmails() {
            return ImmutableList.copyOf(emails);
        }
    }
}
