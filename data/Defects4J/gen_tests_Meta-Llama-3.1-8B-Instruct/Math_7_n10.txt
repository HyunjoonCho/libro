java
public void testResetState() {
    // Create an ODE solver and an event handler that triggers a reset state
    ODE ode = new ODE() {
        @Override
        public double[] derivative(double t, double[] y) {
            return new double[0];
        }
    };

    Event event1 = new Event() {
        @Override
        public boolean isTriggered(double t, double[] y) {
            return true;
        }

        @Override
        public void eventOccurred(double t, double[] y) {
            // Trigger a reset state
            ode.resetState();
        }
    };

    Event event2 = new Event() {
        @Override
        public boolean isTriggered(double t, double[] y) {
            return false;
        }

        @Override
        public void eventOccurred(double t, double[] y) {
            // This event should not be triggered because event1 triggered a reset state
        }
    };

    // Integrate the ODE with both events
    double[] y = new double[0];
    double[] result = ode.integrate(0, 1, y, new Event[]{event1, event2});

    // Verify that the state is not updated