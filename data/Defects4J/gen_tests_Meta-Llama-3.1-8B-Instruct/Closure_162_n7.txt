javascript
describe('Type aliases in type annotations', function() {
    it('should throw an error when used before their definitions', function() {
        var goog = {
            provide: function() {},
            scope: function(func) {
                return func();
            }
        };

        goog.provide('foo.Foo');
        goog.provide('foo.Foo.Bar');

        var Foo = goog.scope(function() {
            /**
             * @param {foo.Foo.Bar} bar
             * @constructor
             */
            foo.Foo = function(bar) {
                this.bar = bar;
            };

            /**
             * @type {foo.Foo.Bar}
             */
            Foo.prototype.bar = null;

            /**
             * @constructor
             */
            Foo.Bar = function() {};
        });

        expect(function() {
            /**
             * @param {Foo.Bar} bar
             * @constructor
             */
            foo.Foo = function(bar) {
                this.bar = bar;
            };
        }).toThrowError('Bad type annotation. Unknown type Foo.Bar');
    });
});
