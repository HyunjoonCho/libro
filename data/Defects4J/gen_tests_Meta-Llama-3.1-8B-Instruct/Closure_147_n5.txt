java
import org.junit.Test;

public class JSCUsedGlobalThisTest {

    @Test
    public void testJSCUsedGlobalThis() {
        Object NS = new Object() {
            int foo;

            public int read() {
                return this.foo; // should warn "JSC_USED_GLOBAL_THIS: dangerous use of the global this object"
            }

            public void write() {
                this.foo = 123; // should warn "JSC_USED_GLOBAL_THIS: dangerous use of the global this object"
            }
        };

        // only the non-inline notation should warn
        Object NSWrite2 = new Object() {
            int foo;

            public void write2() {
                this.foo = 123; // should warn "JSC_USED_GLOBAL_THIS: dangerous use of the global this object"
            }
        };

        // check that warnings are generated
        // Note: JUnit does not directly support warnings, so we will check the exception is thrown
        try {
            NS.read();
        } catch (Exception e) {
            // expected
        }

        try {
            NS.write();
        } catch (Exception e) {
            // expected
        }

        try {
            NSWrite2.write2();
        } catch (Exception