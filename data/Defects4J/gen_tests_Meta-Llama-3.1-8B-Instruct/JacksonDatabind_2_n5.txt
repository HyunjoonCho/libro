java
@Test
public void testUnwantedPOJOsInTree() throws JsonProcessingException {
    // Create a custom class with a custom serializer
    class X<T> {
        String s;
        List<T> items;

        public X(String s, List<T> items) {
            this.s = s;
            this.items = items;
        }
    }

    List<X<String>> list = new ArrayList<>();
    list.add(new X<>("test", Arrays.asList("item1", "item2")));

    // Create a custom serializer for List<X<String>>
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(new JsonSerializer<X<String>>() {
        @Override
        public void serialize(X<String> value, JsonGenerator jgen, SerializerProvider provider) throws IOException {
            jgen.writeStartObject();
            jgen.writeStringField("s", value.s);
            jgen.writeObjectField("items", value.items);
            jgen.writeEndObject();
        }
    });
    mapper.registerModule(module);

    // Serialize the list to a JsonNode
    JsonNode tree = mapper.valueToTree(list);

    // Verify that the tree contains the embedded object
    assertEquals