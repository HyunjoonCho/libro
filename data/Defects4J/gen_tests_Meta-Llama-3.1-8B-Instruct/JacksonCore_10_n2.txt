java
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.testng.annotations.Test;

import java.io.ByteArrayInputStream;
import java.nio.charset.StandardCharsets;

public class TestByteQuadsCanonicalizer {

    private static final int SEED = -523743345;

    private static void injectReproducibleSeed(JsonFactory jsonFactory, int seed) throws Exception {
        Field byteSymbolCanonicalizerField = JsonFactory.class.getDeclaredField("_byteSymbolCanonicalizer");
        byteSymbolCanonicalizerField.setAccessible(true);

        Method factoryMethod = ByteQuadsCanonicalizer.class.getDeclaredMethod("createRoot", int.class);
        factoryMethod.setAccessible(true);
        byteSymbolCanonicalizerField.set(jsonFactory, factoryMethod.invoke(null, seed));
    }

    @Test
    public void testByteQuadsCanonicalizer() throws Exception {
        JsonFactory jsonFactory = new JsonFactory();
        injectReproducibleSeed(jsonFactory, SEED);

        ObjectMapper objectMapper = new ObjectMapper(jsonFactory);
        String json = "{\"expectedGCperPosition\": null}";
        for (int i = 0; i < 60;