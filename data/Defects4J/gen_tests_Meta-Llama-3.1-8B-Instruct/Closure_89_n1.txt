java
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class TestClosureCompiler {
    @Test
    public void testRemoveProperties() {
        // Create a map to simulate the addToMap function
        java.util.HashMap<String, Function> map = new java.util.HashMap<>();

        // Create two functions
        Function f1 = () -> System.out.println("f1");
        f1.setAlwaysCall(true); // Simulate setting the 'alwaysCall' property

        Function f2 = () -> System.out.println("f2");

        // Add the functions to the map
        map.put("f1", f1);
        map.put("f2", f2);

        // Simulate the callFunctionByKey function
        Function func = map.get(Math.random() > 0.5? "f1" : "f2");

        // Check if the 'alwaysCall' property is still present
        assertTrue(func instanceof FunctionWithAlwaysCall);
        ((FunctionWithAlwaysCall) func).getAlwaysCall(); // This should not throw a NullPointerException

        // Check if the function is called
        func.call(); // This should print "f1" or "f2"
    }

   