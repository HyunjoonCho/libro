java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

import static org.mockito.Mockito.when;
import static org.mockito.Mockito.verify;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Callable;

import org.junit.Assert;

@RunWith(MockitoJUnitRunner.class)
public class AbstractClassMockingTest {

    @Mock
    private UserAccount userAccount;

    @Test
    public void testFakeUserAccount() {
        List<String> emails = new ArrayList<>();
        when(userAccount.getEmails()).thenReturn(emails);
        userAccount.addEmail("email1");
        userAccount.addEmail("email2");
        Assert.assertEquals(2, userAccount.getEmails().size());
        Assert.assertTrue(userAccount.getEmails().contains("email1"));
        Assert.assertTrue(userAccount.getEmails().contains("email2"));
    }

    @Mock
    private AccountService accountService;

    @Test
    public void testMockAccountService() {
        UserAccount account = new UserAccountImpl();
        when(accountService.getAccount(anyString(), any(AsyncCallback.class))).thenAnswer(new Answer<Void>() {
            @Override
