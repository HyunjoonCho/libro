java
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.IOException;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class StdKeyDeserializerTest {

    @Test
    public void testDeserializeAsKey() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        Map<String, Double> map = mapper.readValue("{\"first.last\": 42}", new TypeReference<Map<String, Double>>() {
        });

        assertEquals("first.last", map.keySet().iterator().next());
    }

    @Test
    public void testDeserializeAsField() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        ValueOfAsField valueOfAsField = mapper.readValue("{\"name\": \"first.last\"}", ValueOfAsField.class);
        assertEquals("first", valueOfAsField.getName().getFirstname());
        assertEquals("last", valueOfAsField.getName().getLastname());
    }

    public static class ValueOfAsField {
        @JsonProperty("name")
        private final ValueOf valueOf;

        public ValueOfAsField(ValueOf valueOf) {
            this.valueOf = valueOf;
        }

        public ValueOf getName