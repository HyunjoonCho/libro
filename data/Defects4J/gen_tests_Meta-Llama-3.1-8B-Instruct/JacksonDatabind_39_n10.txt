public void testJacksonContinueParsingAfterDeserializationFeatureFailOnInvalidSubtypeError() {
    ObjectMapper mapper = new ObjectMapper().disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE,
            DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES);
    CallRecord call = new CallRecord();

    String json = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"event\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    CallRecord parsedCall = mapper.readValue(json, CallRecord.class);
    assertEquals(0.0f, parsedCall.version);
    assertEquals("123", parsedCall.application);
    assertNotNull(parsedCall.item);
    assertNotNull(parsedCall.item2);

    json = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    parsedCall = mapper.readValue(json, CallRecord.class);
    assertEquals(0.0f, parsedCall.version);
    assertEquals("123", parsedCall.application);
    assertNotNull(parsedCall.item);
    assertNotNull(parsedCall.item2);
}