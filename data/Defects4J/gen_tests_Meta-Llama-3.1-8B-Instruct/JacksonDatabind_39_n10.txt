java
public class JacksonTest {
    @JsonInclude(Include.NON_NULL)
    public static class CallRecord {
        public float version;
        public String application;
        public Item item;
        public Item item2;
    }

    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
    @JsonSubTypes({@Type(value = Event.class, name = Event.TYPE)})
    public interface Item {
    }

    public static final class Event implements Item {
        public String location;
        public static final String TYPE = "event";
    }

    @Test
    public void testIssue() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper().disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE);
        CallRecord call = new CallRecord();
        call.item = new Event();

        String json = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
        CallRecord result = mapper.readValue(json, CallRecord.class);
        assertNotNull(result.item2);
        assertEquals("123", result.application);

        json = "{\"version\":0.0,\"