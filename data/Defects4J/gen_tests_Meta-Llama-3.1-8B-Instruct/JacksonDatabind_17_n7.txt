java
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertThrows;

public class ObjectMapperTest {

    @Test
    public void testReadTreeWithDefaultTypingEnabled() {
        ObjectMapper mapper = new ObjectMapper().enableDefaultTyping();
        Foo foo = new Foo("bar");
        String serialized = mapper.writeValueAsString(foo);
        assertThrows(JsonMappingException.class, () -> mapper.readTree(serialized));
    }

    @Test
    public void testValueToTreeWithDefaultTypingEnabled() {
        ObjectMapper mapper = new ObjectMapper().enableDefaultTyping();
        Foo foo = new Foo("bar");
        assertThrows(JsonMappingException.class, () -> mapper.valueToTree(foo));
    }

    @Test
    public void testReadTreeWithDefaultTypingDisabled() {
        ObjectMapper mapper = new ObjectMapper().disableDefaultTyping();
        Foo foo = new Foo("bar");
        mapper.writeValueAsString(foo); // This should not throw any exception
        JsonNode jsonNode = mapper.readTree("{\"bar\" : \"bar\"}");
        // No exception is expected here
    }

    @Test
    public void testValueToTreeWithDefaultTypingDisabled() {
       