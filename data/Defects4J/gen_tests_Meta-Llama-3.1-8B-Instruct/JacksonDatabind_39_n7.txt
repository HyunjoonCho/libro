java
public void testJacksonContinueParsingAfterDeserializationFailure() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper().disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE,
            DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES);
    
    // Test case 1: invalid item
    String json = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    CallRecord call = objectMapper.readValue(json, CallRecord.class);
    assertEquals(0.0f, call.version);
    assertEquals("123", call.application);
    assertNull(call.item);
    assertNotNull(call.item2);
    assertEquals("location1", call.item2.location);
    
    // Test case 2: missing item2
    json = "{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}";
    call = objectMapper.readValue(json, CallRecord.class);
    assertEquals(0.0f, call.version);
    assertEquals("123", call.application);
    assertNull(call.item);
    assertNull(call.item2);
    
    // Test case 3: item before version and application