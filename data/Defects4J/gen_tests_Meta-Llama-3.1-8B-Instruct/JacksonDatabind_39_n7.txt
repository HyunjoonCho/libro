public void testIssue() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper().disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE);
    CallRecord call = new CallRecord();
    call.application = "123";
    String json = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    CallRecord parsedCall = objectMapper.readValue(json, CallRecord.class);
    assertEquals(0.0f, parsedCall.version);
    assertEquals("123", parsedCall.application);
    assertEquals("location1", ((Event) parsedCall.item).location);
    assertEquals("location1", ((Event) parsedCall.item2).location);
    
    json = "{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}";
    assertThrows(JsonMappingException.class, () -> objectMapper.readValue(json, CallRecord.class));
    
    json = "{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}, \"version\":0.0,\"application\":\"123\"}";
    parsedCall = objectMapper.readValue(json, CallRecord.class);
    assertEquals(0.0f, parsedCall.version);