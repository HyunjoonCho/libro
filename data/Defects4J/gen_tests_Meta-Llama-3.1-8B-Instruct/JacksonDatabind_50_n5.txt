import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

public void testJsonIdentityInfoDeserialization() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enable(DeserializationFeature.USE_DEFAULT_TYPING);
    mapper.setVisibility(PropertyAccessor.FIELD, Visibility.ANY);

    // Create objects
    ObjectNode node1 = mapper.createObjectNode();
    node1.put("id", 1);
    node1.put("name", "Object1");

    ObjectNode node2 = mapper.createObjectNode();
    node2.put("id", 2);
    node2.put("name", "Object2");

    ObjectNode node3 = mapper.createObjectNode();
    node3.put("id", 3);
    node3.put("name", "Object3");

    // Create a list with nodes
    ArrayNode list = mapper.createArrayNode();
    list.add(node1);
    list.add(node2);

    // Create a complex object with a field that contains a node
    JsonNode complex = mapper.createObjectNode();
    complex.put("id", 4);
    complex.put("name", "ComplexObject");
    complex.set("field", list);

    // Create a complex object with a field that contains a node, and another field that contains the