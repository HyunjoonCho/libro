java
public class TestSubTypeResolution {
    @Test
    public void testSubTypeResolution() {
        ObjectMapper mapper = new ObjectMapper();

        // Define a base type with a property
        @JsonTypeInfo(use = JsonTypeInfo.Id.NAME)
        @JsonSubTypes({
            @JsonSubTypes.Type(value = Child.class, name = "child")
        })
        public static abstract class Parent {
            @JsonProperty
            private String baseProperty = "base";
        }

        // Define a sub-type that extends the base type and has an additional property
        @JsonTypeName("child")
        public static class Child extends Parent {
            @JsonProperty
            private String childProperty = "child";
        }

        // Define a default implementation
        @JsonDeserialize(as = Parent.class, contentAs = Child.class)
        public static class DefaultImpl extends Parent {
            @JsonProperty
            private String defaultProperty = "default";
        }

        // Create a DefaultImpl instance and serialize it
        DefaultImpl defaultImpl = new DefaultImpl();
        String json = mapper.writeValueAsString(defaultImpl);

        // Verify that the base property is present
        ObjectMapper mapper2 = new ObjectMapper();
        Parent parent =