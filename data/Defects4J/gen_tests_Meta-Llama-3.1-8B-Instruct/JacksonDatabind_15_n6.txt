java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.fail;

public class IntegerListXmlAdapterTest {

    @Test
    public void testXmlAdapterError() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        SomeIntListHolder listHolder = new SomeIntListHolder();
        listHolder.setListOne(asList(1, 2, 3));

        // Test with XmlAdapter extending Object, which should fail
        mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);
        try {
            mapper.writeValueAsString(listHolder);
            fail("Expected JsonMappingException");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
            // Expected exception
        }

        // Test with XmlAdapter extending String, which should succeed
        mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);
        mapper.writeValueAsString(listHolder);
    }

    public static class IntegerListXmlAdapter extends XmlAdapter<Object, List<Integer>> {
        @Override
        public List<Integer> unmarshal(Object value) throws Exception {
            return null;
        }

        @Override
        public Object marshal(List<Integer