public void testCustomSerializerOverriddenByJsonValue() {
    MyClassPojo pojo = new MyClassPojo();
    Serializer<MyClassPojo> customSerializer = mock(Serializer.class);
    when(customSerializer.serialize(pojo)).thenReturn("customSerializerValue");
    
    try {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new SimpleModule() {
            @Override
            protected JsonSerializer<?> findSerializer(Class<?> type, Type type2, BeanProperty property, BeanProperty.Std defaultProperty) {
                if (type.equals(MyClassPojo.class)) {
                    return customSerializer;
                }
                return null;
            }
        });
        
        JsonNode json = mapper.writeValueAsBytes(pojo);
        fail("Expected custom serializer to be used");
    } catch (JsonProcessingException e) {
        // Expected custom serializer to be overridden by @JsonValue
    }
}

class MyClassPojo {
    @JsonValue
    public String getValue() {
        return "JsonValueValue";
    }
}