java
public class MixinTest {
    @Test
    public void testMixin() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        // Create a mixin with an annotation bundle
        SimpleModule module = new SimpleModule();
        module.addSerializer(new JsonSerializer<String>() {
            @Override
            public void serialize(String value, JsonGenerator gen, SerializerProvider provider) throws IOException {
                gen.writeString("renamed");
            }
        });
        module.addDeserializer(String.class, new JsonDeserializer<String>() {
            @Override
            public String deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
                return "renamed";
            }
        });
        mapper.registerModule(module);

        // Create a mixin class with the annotation bundle
        mapper.addMixIn(String.class, StringMixin.class);

        String result = mapper.writeValueAsString("original");
        assertEquals("renamed", result);
    }

    @Target(value = { ElementType.TYPE })
    @Retention(value = RetentionPolicy.RUNTIME)
    @JacksonAnnotationsInside
    public @interface MixIn {
    }

    public abstract class StringMixin {
        @MixIn
        public abstract String getRenamed();
    }
}
