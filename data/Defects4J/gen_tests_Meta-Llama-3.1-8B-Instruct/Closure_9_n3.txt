java
import org.junit.Test;
import static org.junit.Assert.fail;

public class TestAMDModules {

    @Test
    public void testCompilerFailsToFindAMDModuleInSubdirectory() throws Exception {
        // Create 1st AMD module in lib/Foo.js
        String fooJs = "define('module$lib$Foo', [], function() { return 'Foo'; });";

        // Create 2nd AMD module in Bar.js depending on lib/Foo.js
        String barJs = "define('Bar', ['module$lib$Foo'], function(Foo) { return 'Bar' + Foo; });";

        // Compile both files with Bar.js as main module
        String compilationCommand = "java -jar compiler.jar --transform_amd_modules --process_common_js_modules --common_js_entry_module=Bar.js --compilation_level=ADVANCED_OPTIMIZATIONS --js_output_file=out.js --js=Bar.js --js=lib/Foo.js";

        // Run the compilation command
        Process process = Runtime.getRuntime().exec(compilationCommand);
        int exitCode = process.waitFor();
        if (exitCode!= 0) {
            fail("Compilation