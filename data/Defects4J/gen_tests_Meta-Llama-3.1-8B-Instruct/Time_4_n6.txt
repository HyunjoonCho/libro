public void testConstructingInvalidPartials() {
    try {
        new Partial(new DateTimeFieldType[] { clockHourOfDay(), hourOfDay() }, new int[] { 1, 1 });
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {}

    Partial partial = new Partial(clockHourOfDay(), 1);
    try {
        partial.with(hourOfDay(), 1);
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {}

    partial = new Partial(hourOfDay(), 1);
    try {
        partial.with(clockHourOfDay(), 1);
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {}

    try {
        new Partial(new DateTimeFieldType[] { clockHourOfDay(), hourOfDay() }, new int[] { 1, 1}).isEqual(new Partial(hourOfDay(), 1));
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {}

    try {
        new Partial(hourOfDay(), 1).isEqual(new Partial(clockHourOfDay(), 1));
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {}
}