java
public void testMultivariateOptimizerMemoryIssue() {
    int n = 41200; // replace with a large number that causes the issue
    Weight[] weights = new Weight[n];
    for (int i = 0; i < n; i++) {
        weights[i] = new Weight(i, 1.0);
    }
    try {
        // attempt to use multivariate vector optimizer with large number of weights
        // this should throw an OutOfMemoryError or cause the test to fail due to excessive memory usage
        MultivariateOptimizer optimizer = new MultivariateOptimizer();
        optimizer.optimize(weights);
        fail("Expected OutOfMemoryError or test failure due to excessive memory usage");
    } catch (OutOfMemoryError e) {
        // expected exception
    }
}
