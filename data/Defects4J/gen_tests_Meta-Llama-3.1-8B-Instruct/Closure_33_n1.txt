java
import com.google.common.collect.ImmutableMap;
import com.google.testing.compile.CompilationRule;
import org.junit.Rule;
import org.junit.Test;

import static com.google.common.collect.ImmutableMap.of;
import static com.google.common.truth.Truth.assertThat;
import static com.google.common.truth.Truth.assertWithMessage;
import static org.junit.Assert.assertThrows;

public class IssueTest {
    @Rule
    public final CompilationRule compilationRule = new CompilationRule();

    @Test
    public void testIssue() {
        // Define a Java class that mimics the JavaScript behavior
        // We use a Java class with a method that takes a Map as a parameter
        // The Map has a single entry with a key "text" and a value of type String
        class Temp1 {
            public static String temp1(Map<String, String> optData) {
                return optData.get("text");
            }
        }

        // Define another method that takes a Map as a parameter
        // The Map has a single entry with a key "activity" and a value of type Object
        // We use the @SuppressWarnings("unchecked") annotation to suppress the warning
        @SuppressWarnings("unchecked")
        class Temp2 {
            public static String temp2(Map<String,