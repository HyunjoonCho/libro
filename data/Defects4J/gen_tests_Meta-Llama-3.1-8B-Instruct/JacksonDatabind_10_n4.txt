java
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class JsonAnyGetterTest {

    @Test
    public void testJsonAnyGetterWithJsonSerialize() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        MyClass instance = new MyClass();

        // This should fail
        String json = mapper.writeValueAsString(instance);
        // We don't expect this to pass, but it should throw an exception or return incorrect JSON
        // assertEquals("{\"parameters\":{\"key\":\"value\"}}", json);

        // This should pass
        mapper = new ObjectMapper();
        mapper.addMixIn(MyClass.class, MixIn.class);
        json = mapper.writeValueAsString(instance);
        assertEquals("{\"parameters\":{\"key\":\"value\"}}", json);
    }

    public static class MyClass {
        private Map<String, String> parameters = new HashMap<>();

        @JsonAnyGetter
        public Map<String, String> getParameters() {
            return parameters;
        }
    }

    public static class MixIn {
        @JsonSerialize(using = MySerializer.class)
        public Map<String, String> getParameters() {
            return new MyClass().parameters;
        }
