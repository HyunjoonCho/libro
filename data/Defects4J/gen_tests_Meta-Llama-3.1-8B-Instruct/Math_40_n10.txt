java
public void testBracketingNthOrderBrentSolver() {
    // Create a function that has a root at x = 12500.0
    Function f = new Function() {
        @Override
        public double value(double x) {
            return 3.7e-16 * (x - 12500.0);
        }
    };

    BracketingNthOrderBrentSolver solver = new BracketingNthOrderBrentSolver(f, 1e-15, 1e-15, 1000);
    double[] xA = {12500.0};
    double[] yA = {3.7e-16};
    double[] xB = {12500.03};
    double[] yB = {-7.0e-5};
    double[] agingA = {0};
    double[] agingB = {97};

    solver.bracket(xA, yA, xB, yB, agingA, agingB);

    // Assert that the bracketing interval is not balanced after the first iteration
    assertEquals(12500.0, xA[0], 1e-10);
    assertEquals(3.7e-16, yA[0