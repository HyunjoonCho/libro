javascript
// t.js
/**
 * @interface
 */
var OtherType = function() {}

/**
 * @implements {MyType}
 * @constructor
 */
var MyType = function() {}

/**
 * @type {MyType}
 */
var x = /** @type {!OtherType} */ (new Object());

// Test case to reproduce the bug
function testInfiniteRecursion() {
    // Create an instance of MyType that implements OtherType
    var myType = new MyType();

    // Test that we can successfully create an instance of OtherType
    var otherType = new OtherType();

    // Try to create a new instance of MyType, which should trigger the infinite recursion
    try {
        var newMyType = new MyType();
    } catch (e) {
        // If an exception is thrown, it indicates a stack overflow, which is the expected behavior
        // in this test case.
    }
}
