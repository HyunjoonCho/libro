java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import static org.junit.Assert.assertArrayEquals;

import org.apache.commons.math3.distribution.GammaDistribution;
import org.apache.commons.math3.random.Well19937c;
import org.apache.commons.math3.random.BitsStreamGenerator;

import java.io.ByteArrayOutputStream;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.io.ByteArrayInputStream;
import java.io.ObjectInputStream;

@RunWith(JUnit4.class)
public class TestGammaDistributionCloning {

    @Test
    public void testGammaDistributionCloning() throws IOException, ClassNotFoundException {
        GammaDistribution dist = new GammaDistribution(1.0, 1.0, new Well19937c());
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bos);
        oos.writeObject(dist);
        oos.close();
        byte[] serializedDist = bos.toByteArray();
        
        ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(serializedDist));
        GammaDistribution deserializedDist = (GammaDistribution) ois.readObject();
        ois.close();
        
        // Generate 1000 samples from both distributions and compare
        double[] samples1 = new double[1000];
        double[]