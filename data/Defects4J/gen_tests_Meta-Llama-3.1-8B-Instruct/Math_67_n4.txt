public void testMultiStartUnivariateRealOptimizerResult() {
    MultiStartUnivariateRealOptimizer optimizer = new MultiStartUnivariateRealOptimizer();
    // Assume we have some initial parameters and results
    double[] optima = new double[] {1.0};
    double[] optimaValues = new double[] {0.0};
    optimizer.setOptima(optima);
    optimizer.setOptimaValues(optimaValues);
    optimizer.optimize(); // Simulate running the optimizer
    // Simulate the last result being different from the best one
    double[] lastOptima = new double[] {2.0};
    double[] lastOptimaValues = new double[] {1.0};
    optimizer.setOptima(lastOptima);
    optimizer.setOptimaValues(lastOptimaValues);
    // Verify that getResult and getFunctionValue return the last result, not the best one
    assertEquals(lastOptima[0], optimizer.getResult(), 0.0);
    assertEquals(lastOptimaValues[0], optimizer.getFunctionValue(), 0.0);
}