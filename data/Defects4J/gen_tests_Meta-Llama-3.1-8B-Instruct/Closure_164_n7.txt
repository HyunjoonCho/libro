public void testFunctionAssignment() {
    Function<String, Number, Boolean> func = (s, n) -> true;
    Function<String, Boolean> paramFunc1 = () -> true;
    Function<String, Boolean> paramFunc2 = () -> true;
    
    // first call
    func.apply(null, null);
    
    // second call should fail at compile-time, but Java does not enforce strict function signature matching
    // However, we can use a JUnit assertion to check if it throws an exception
    try {
        func.apply(null, null);
        fail("Expected ClassCastException");
    } catch (ClassCastException e) {
        // expected
    }
}