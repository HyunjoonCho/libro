java
public void testMultivariateOptimizerMemoryIssue() {
    // Set the number of weights to a large value to reproduce the memory issue
    int numWeights = 10000;

    // Create a Weights object with the large number of weights
    Weights weights = new Weights(numWeights);

    // Try to use the multivariate optimizer with the large number of weights
    try {
        // This should throw an OutOfMemoryError due to the large matrix creation
        MultivariateOptimizer optimizer = new MultivariateOptimizer();
        optimizer.optimize(weights);
        fail("Expected OutOfMemoryError");
    } catch (OutOfMemoryError e) {
        // Expected exception
    }
}
