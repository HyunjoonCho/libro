public void testCMAESOptimizerBounds() {
    // Create an instance of CMAESOptimizer with checkFeasableCount set to 0
    CMAESOptimizer optimizer = new CMAESOptimizer(0);

    // Define the bounds
    double[] bounds = new double[] { 0, 10 };

    // Optimize the function, which is assumed to be a simple function that returns the input value
    double[] result = optimizer.optimize(new Function() {
        @Override
        public double value(double[] point) {
            return point[0];
        }
    }, bounds, 1000);

    // Check that the result is out of bounds
    assert result[0] > 10;
}