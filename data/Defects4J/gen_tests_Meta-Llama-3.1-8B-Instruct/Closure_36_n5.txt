javascript
public void testAddSingletonGetterPreventsUnusedClassRemoval() {
    // Create a class with a method that adds a value to the class instance
    class Foo {
        private values = [];

        public add(value) {
            this.values.push(value);
        }
    }

    // Add a singleton getter to the class
    Foo.addSingletonGetter(Foo);

    // Compile the class using the Closure Compiler
    // This should result in the class being removed, but it's not
    String compiledCode = compile(Foo.class);

    // The compiled code should not contain the class definition
    assertDoesNotContain(compiledCode, "class Foo {");
}

private String compile(Class<?> clazz) {
    // This is a simplified version of the Closure Compiler API
    // In a real test, you would use the actual Closure Compiler API
    return "function Foo() { this.values = []; } Foo.addSingletonGetter(Foo);";
}
