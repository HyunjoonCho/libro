public void testAddSingletonGetter() {
    // Create a class that is not used anywhere in the code
    public class UnusedClass {
        private static UnusedClass instance;

        public static UnusedClass getInstance() {
            if (instance == null) {
                instance = new UnusedClass();
            }
            return instance;
        }
    }

    // Compile the code using the Closure Compiler
    // The Closure Compiler should remove the UnusedClass and its getInstance method
    // However, due to the bug, it should not be removed
    String compiledCode = compileCode("goog.provide('unused');\n" +
            "goog.require('goog.object');\n" +
            "goog.addSingletonGetter(unused.UnusedClass);\n" +
            "unused.UnusedClass.prototype.init = function() {\n" +
            "    this.values = [];};\n" +
            "unused.UnusedClass.prototype.add = function(value) {\n" +
            "    this.values.push(value);}");

    // Check that the compiled code does not contain the UnusedClass
    assertTrue(compiledCode.contains("UnusedClass"));
}