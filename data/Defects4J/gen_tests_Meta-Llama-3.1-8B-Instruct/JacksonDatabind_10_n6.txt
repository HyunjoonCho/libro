public void testJsonAnyGetterWithSerialize() {
    Object obj = new TestObject();
    ObjectMapper mapper = new ObjectMapper();
    try {
        mapper.writeValueAsString(obj);
        fail("Expected a JsonMappingException");
    } catch (JsonMappingException e) {
        // expected
    }

    obj = new TestObject();
    mapper = new ObjectMapper();
    mapper.addMixIn(TestObject.class, TestMixin.class);
    try {
        mapper.writeValueAsString(obj);
        fail("Expected a JsonMappingException");
    } catch (JsonMappingException e) {
        // expected
    }
}

class TestObject {
    @JsonSerialize(using = MySerializer.class)
    @JsonAnyGetter
    public Map<String, String> getParameters(){
        return new HashMap<>();
    }
}

class TestMixin {
    @JsonSerialize(using = MySerializer.class)
    @JsonAnyGetter
    public Map<String, String> getParameters(){
        return new HashMap<>();
    }
}

class MySerializer extends JsonSerializer<Map<String, String>> {
    @Override
    public void serialize(Map<String, String> value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
        // do nothing
    }
}