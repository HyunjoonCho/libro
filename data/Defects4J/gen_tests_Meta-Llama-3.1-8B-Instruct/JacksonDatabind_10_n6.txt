java
public class JsonAnyGetterTest {
    
    @Test
    public void testJsonAnyGetterWithJsonSerialize() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        JsonAnyGetterBean bean = new JsonAnyGetterBean();
        String json = mapper.writeValueAsString(bean);
        
        // Should not work
        mapper = new ObjectMapper();
        mapper.enable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);
        try {
            bean = mapper.readValue(json, JsonAnyGetterBean.class);
            fail("Expected DeserializationException");
        } catch (DeserializationException e) {
            // Expected
        }
        
        // Should work with keyUsing
        mapper = new ObjectMapper();
        mapper.enable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);
        mapper.addMixIn(JsonAnyGetterBean.class, JsonAnyGetterBeanMixIn.class);
        bean = mapper.readValue(json, JsonAnyGetterBean.class);
        assertEquals("value1", bean.getParameters().get("key1"));
        assertEquals("value2", bean.getParameters().get("key2"));
        
        // Should work with custom converter
        mapper = new ObjectMapper();
        mapper.enable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);
        JsonAnyGetterBeanWithConverter