java
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import java.io.IOException;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertEquals;

public class JacksonTest {

    @Test
    public void testDeserializeNull() throws IOException {
        ObjectMapper objectMapper = new ObjectMapper();
        ObjectReader objectReader = objectMapper.readerFor(BeanWithAtomicReference.class);

        BeanWithAtomicReference intRef = objectReader.readValue("{\"refRef\": 2}");
        assertNotNull(intRef.getRefRef());
        assertNotNull(intRef.getRefRef().get());
        assertEquals(2, intRef.getRefRef().get().get());

        BeanWithAtomicReference nullRef = objectReader.readValue("{\"refRef\": null}");
        assertNotNull(nullRef.getRefRef());
        assertNotNull(nullRef.getRefRef().get());
        assertNull(nullRef.getRefRef().get().get());
    }

    public static class BeanWithAtomicReference {
        private AtomicReference<AtomicReference<Integer>> refRef;
        public AtomicReference<AtomicReference<Integer>> getRefRef() {
            return refRef;
        }
        public void setRefRef(AtomicReference<AtomicReference<Integer>> refRef) {
            this.refRef = refRef;
        }
    }
}
