java
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonSyntaxException;
import org.junit.Test;

public class GsonTypeVariableTest {

    public static class Foo<T> {
        private final T someField;

        public Foo(T value) {
            this.someField = value;
        }

        @Override
        public boolean equals(Object o) {
            if (!(o instanceof Foo)) {
                return false;
            } else {
                return someField.equals(((Foo)o).someField);
            }
        }
    }

    public static class Bar extends Foo<Integer> {
        public Bar(Integer i) {
            super(i);
        }
    }

    @Test(expected = JsonSyntaxException.class)
    public void testGsonTypeVariable() {
        Gson gson = new Gson();
        Bar bar1 = new Bar(1);
        String json = gson.toJson(bar1);
        gson.fromJson(json, Bar.class);
    }

    @Test
    public void testGsonTypeVariableEquals() {
        Gson gson = new Gson();
        Bar bar1 = new Bar(1);
        String json = gson.toJson(bar1);
        Bar bar2 = gson.fromJson(json, Bar.class);
        assertEquals(bar1, bar2);
   