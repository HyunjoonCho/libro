public void testBinomialCoefficientLargeResults() {
    assertEquals(binomialCoefficient(65,32) + binomialCoefficient(65,33),
            MathUtils.binomialCoefficient(66,33));
    assertEquals(binomialCoefficient(66,33), MathUtils.binomialCoefficient(66,33));
    assertEquals(binomialCoefficient(100,50), MathUtils.binomialCoefficient(100,50));
    try {
        binomialCoefficient(100, 51);
        fail("Expected ArithmeticException for large binomial coefficient");
    } catch (ArithmeticException e) {
        // expected
    }
}

public static long binomialCoefficient(int n, int k) {
    if (k == 0 || k == n)
        return 1;
    BigInteger result = BigInteger.ONE;
    for (int i = k + 1; i <= n; i++) {
        result = result.multiply(BigInteger.valueOf(i));
    }
    for (int i = 1; i <= n - k; i++) {
        result = result.divide(BigInteger.valueOf(i));
    }
    if (result.compareTo(BigInteger.valueOf(Long.MAX_VALUE)) > 0) {
        throw new ArithmeticException("Binomial coefficient overflow: " + n + ", " + k);