java
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.deser.DeserializationProblemHandler;
import org.junit.Test;

import java.io.IOException;
import java.util.UUID;

import static org.junit.Assert.fail;

public class UUIDDeserializerTest {

    @Test
    public void itUsesDeserializationProblemHandlerProperly() throws IOException {
        ObjectMapper mapper = new ObjectMapper().addHandler(new DeserializationProblemHandler() {
            @Override
            public Object handleWeirdStringValue(final DeserializationContext ctxt, final Class<?> targetType, final String valueToConvert, final String failureMsg) throws IOException {
                return null;
            }
        });

        try {
            mapper.readValue("{\"id\" : \"I am not a UUID\"}", UUIDBean.class);
            fail("Expected an exception to be thrown");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
            // Expected exception
        } catch (IOException e) {
            fail("Expected a JsonParseException, but got " + e.getClass().getName());
        }
    }

    public static class UUIDBean {
        private UUID id;

        public UUID getId() {
            return id;
        }

        public void