public void testArDelete() throws IOException {
    ArArchive ar = new ArArchive(new FileOutputStream("test.ar"));
    ar.add("test1.xml");
    ar.add("test2.xml");
    ar.close();

    ar = new ArArchive(new FileInputStream("test.ar"));
    ZipEntry entry = ar.getNextEntry();
    assertEquals("test1.xml", entry.getName());

    ar.deleteCurrentEntry();

    entry = ar.getNextEntry();
    assertNull(entry);

    ar.close();

    // Simulate deletion of test2.xml and adding test.txt
    new ArArchive(new FileOutputStream("test.ar")).add("test.txt");

    // Verify that the archive is still corrupted
    ArArchive ar2 = new ArArchive(new FileInputStream("test.ar"));
    ZipEntry entry2 = ar2.getNextEntry();
    assertEquals("test.txt", entry2.getName());
    ar2.close();

    // Verify that the archive is not readable
    try {
        ar2 = new ArArchive(new FileInputStream("test.ar"));
        fail("Expected ArException");
    } catch (ArException e) {
        // Expected
    }
}