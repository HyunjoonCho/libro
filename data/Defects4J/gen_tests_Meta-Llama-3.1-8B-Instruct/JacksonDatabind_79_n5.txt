java
public void testAlwaysAsIdOnClass() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    ObjectWriter writer = mapper.writerWithDefaultPrettyPrinter();

    // Test that @JsonIdentityReference(alwaysAsId=true) on class level works as expected
    ReallyAlwaysAsId a = new ReallyAlwaysAsId();
    String json = writer.writeValueAsString(a);
    assertEquals("{\"id\":0}", json);

    // Test that @JsonIdentityReference(alwaysAsId=true) on class level does not override @JsonIdentityReference(alwaysAsId=true) on field level
    ReallyAlwaysContainer container = new ReallyAlwaysContainer();
    json = writer.writeValueAsString(container);
    assertEquals("{\"a\":1,\"b\":2}", json);
}

@JsonIdentityInfo(generator=ObjectIdGenerators.IntSequenceGenerator.class, property="id")
@JsonIdentityReference(alwaysAsId=true)
static class ReallyAlwaysAsId
{
    public int value;

    public ReallyAlwaysAsId() { this(0); }
    public ReallyAlwaysAsId(int v) {
        value = v;
    }
}

@JsonPropertyOrder(alphabetic=true)
static class ReallyAlwaysContainer
{

    @JsonIdentityReference(alwaysAsId=true)
    public ReallyAlwaysAsId a = new ReallyAlwaysAsId