java
import org.joda.time.DateTime;
import org.joda.time.DateTimeFieldType;
import org.joda.time.Partial;

public void testConstructingInvalidPartials() {
    // Test 1: Duplicate fields in constructor
    try {
        new Partial(new DateTimeFieldType[] { DateTimeFieldType.clockHourOfDay(), DateTimeFieldType.hourOfDay() }, new int[] { 1, 1 });
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        // Expected
    }

    // Test 2: Duplicate fields with with() method
    Partial partial = new Partial(DateTimeFieldType.clockHourOfDay(), 1);
    try {
        partial.with(DateTimeFieldType.hourOfDay(), 1);
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        // Expected
    }

    // Test 3: Invalid equals() method
    partial = new Partial(DateTimeFieldType.hourOfDay(), 1);
    Partial invalidPartial = new Partial(DateTimeFieldType.clockHourOfDay(), 1);
    try {
        partial.isEqual(invalidPartial);
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        // Expected
    }
}
