java
public void testTypeHierarchyAdapters() {
    // Create a type hierarchy adapter for Vehicle
    TypeHierarchyAdapter<Vehicle> vehicleAdapter = new TypeHierarchyAdapter<Vehicle>() {
        @Override
        protected Class<? extends Vehicle> getDelegateType(Type type) {
            if (type.getName().equals("Car")) {
                return Car.class;
            } else if (type.getName().equals("Truck")) {
                return Truck.class;
            }
            return null;
        }
    };

    // Attempt to decode a JSON string as a Car
    try {
        String json = "{\"make\":\"Ford\",\"model\":\"F-150\"}";
        JsonValue decoded = Json.createValue(json);
        vehicleAdapter.decode(decoded, Car.class);
        fail("Expected JsonException");
    } catch (JsonException e) {
        // Expected exception
    }

    // Attempt to decode a JSON string as a Truck
    try {
        String json = "{\"make\":\"Ford\",\"model\":\"F-150\",\"payload\":5000}";
        JsonValue decoded = Json.createValue(json);
        vehicleAdapter.decode(decoded, Car.class);
        fail("Expected JsonException");
    } catch (JsonException e) {
        // Expected exception
    }
}
