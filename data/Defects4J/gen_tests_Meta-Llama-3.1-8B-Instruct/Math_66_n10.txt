java
public void testBrentOptimizer() {
    BrentOptimizer optimizer = new BrentOptimizer();
    double function = new Function() {
        @Override
        public double value(double x) {
            return Math.pow(x, 2) + 10 * Math.sin(x) - 5 * Math.cos(x) + 3;
        }
    };

    double result = optimizer.optimize(function, 0, 10, 1e-6, 100);
    assertTrue(result >= 0 && result <= 10); // BrentOptimizer should find a minimum in the given interval

    // Test the bug: BrentOptimizer should not get stuck in an infinite loop
    // This test case is inspired by the original Python implementation
    function = new Function() {
        @Override
        public double value(double x) {
            return x * x + 10 * Math.sin(x) - 5 * Math.cos(x) + 3;
        }
    };

    try {
        result = optimizer.optimize(function, -100, 100, 1e-6, 100);
        fail("BrentOptimizer should have thrown an exception");
    } catch (Exception e