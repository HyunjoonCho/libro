java
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.*;

public class JsonTest {

    private final ObjectMapper mapper;

    public JsonTest() {
        mapper = new ObjectMapper();
        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
        mapper.enableDefaultTyping();
    }

    @Test
    public void testPolymorphicTypeLost() throws JsonProcessingException {
        // Create a RemoteCall object
        RemoteCall remoteCall = new RemoteCall();
        remoteCall.setInstance(new RemoteInstance("b0e15098-f49e-4328-b072-fc5df42799bd", "com.ubitricity.devices.common.tasks.ResponseReceiver"));

        // Serialize it to JSON
        String json = mapper.writeValueAsString(remoteCall);

        // Deserialize the JSON back to a RemoteCall object
        RemoteCall deserializedRemoteCall = mapper.readValue(json, RemoteCall.class);

        // Verify that the deserialized object has the correct type
        assertNotNull(deserializedRemoteCall);
        assertEquals(RemoteCall.class, deserializedRemoteCall.getClass());
        assertEquals("b0e15098-f49e-4328-b072-fc5df42799