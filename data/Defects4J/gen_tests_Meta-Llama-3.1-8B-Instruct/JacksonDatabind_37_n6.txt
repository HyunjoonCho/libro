java
public class TestJsonSchema {
    @JsonType
    public static abstract class JsonSchema {
        public String name;
    }

    @JsonType
    public static class JsonMapSchema extends JsonSchema {
        public List<JsonTable> tables;
    }

    @JsonType
    public static class JsonTable {
        public String name;
    }

    @JsonType(defaultImpl = JsonMapSchema.class)
    public static abstract class JsonRoot {
        public List<JsonSchema> schemas;
    }

    @Test
    public void testJsonSchema() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        JsonRoot root = new JsonRoot();
        root.schemas = new ArrayList<>();
        JsonSchema schema = new JsonMapSchema();
        schema.name = "TestSchema";
        JsonTable table = new JsonTable();
        table.name = "TestTable";
        schema.tables = new ArrayList<>();
        schema.tables.add(table);
        root.schemas.add(schema);

        String json = mapper.writeValueAsString(root);

        JsonRoot deserializedRoot = mapper.readValue(json, JsonRoot.class);
        assertNotNull(deserializedRoot);
        assertEquals(1, deserializedRoot.schemas.size());
        JsonSchema deserializedSchema = deserializedRoot.schemas.get