public void testConstructorTypeInference() {
    // Test with constructor annotation
    @SuppressWarnings("unchecked")
    Object callz = new Object() {
        public void callz(Object parry) {
            if (((Map<String, Object>) parry).get("prop2")!= null && ((Number) ((Map<String, Object>) parry).get("prop2")).doubleValue() < 5) {
                System.out.println("alright!");
            }
            System.out.println(((String) ((Map<String, Object>) parry).get("prop1"));
        }
    };
    Map<String, Object> parry1 = new HashMap<>();
    parry1.put("prop1", "hi");
    ((callz.getClass().getMethod("callz", Object.class)).invoke(callz, parry1));

    // Test without constructor annotation
    callz = new Object() {
        public void callz(Map<String, Object> parry) {
            if (parry.get("prop2")!= null && (Integer) parry.get("prop2") < 5) {
                System.out.println("alright!");
            }
            System.out.println((String) parry.get("prop1"));
        }
    };
    Map