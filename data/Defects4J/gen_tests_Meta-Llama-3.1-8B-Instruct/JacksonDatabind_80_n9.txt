java
public void testExtraneousTypeMapping() {
    // Test case for base type with explicit name
    Type baseTypeWithExplicitName = new Type("ExplicitBaseType");
    Type type = new Type("ExplicitBaseType");
    type.addTypeMapping(baseTypeWithExplicitName);

    // Test case for base type with default name
    Type baseTypeWithDefaultName = new Type();
    Type typeWithDefaultName = new Type();
    typeWithDefaultName.addTypeMapping(baseTypeWithDefaultName);

    // Assert that only base type with explicit name is included in type resolution list
    assertEquals(1, type.getTypeMappings().size());
    assertEquals("ExplicitBaseType", type.getTypeMappings().get(0).getName());

    // Assert that base type with default name is not included in type resolution list
    assertEquals(0, typeWithDefaultName.getTypeMappings().size());
}
