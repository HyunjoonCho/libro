java
public void testBrentOptimizer() {
    // Create a simple function to test
    Function1<Double, Double> func = x -> x * x;
    
    // Set initial points
    double x0 = 1.0;
    double x1 = 2.0;
    
    // Use BrentOptimizer to find the minimum
    BrentOptimizer brentOptimizer = new BrentOptimizer(1e-6, 100, func);
    brentOptimizer.minimize(x0, x1);
    
    // Get the best point found by BrentOptimizer
    double bestX = brentOptimizer.getBestPoint();
    
    // Check if the best point found is indeed the best
    double currentValue = func.value(bestX);
    double previousValue = Double.POSITIVE_INFINITY;
    for (double x : brentOptimizer.getPoints()) {
        double value = func.value(x);
        if (value < currentValue) {
            currentValue = value;
            bestX = x;
        }
        if (value < previousValue) {
            // If the current value is better than the previous one, 
            // we can break the loop as we have found a better point
            break;
        }
        previousValue = value;
    }
