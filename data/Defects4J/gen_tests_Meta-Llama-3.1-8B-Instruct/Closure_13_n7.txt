public void testReplaceTrueFalse() {
    // Create a mock external reference
    ExternalRef externalRef = new ExternalRef();
    boolean anyExpression = true;

    // Create a function with the problematic behavior
    Function someFunction = new Function() {
        @Override
        public Object call(Object content) {
            if (anyExpression) {
                externalRef = externalRef;
                Function fn1 = new Function() {
                    @Override
                    public Object call(Object content) {
                        return externalRef.call(content);
                    }
                };
            }
            return new Function() {
                @Override
                public Object call(Object content) {
                    if (fn1!= null) {
                        fn1.call(content);
                    }
                    return true;
                }
            };
        }
    };

    // Call the function and assert the result
    Function result = someFunction.call(null);
    assertTrue(result instanceof Function);
    Function method1 = (Function) result;
    assertTrue(method1.call(null)); // This should return true
    assertTrue(((Boolean) method1.call(null))); // This should return true

    Function method2 = new Function() {
        @Override
        public Object call(Object content) {
            return false;
        }
    };