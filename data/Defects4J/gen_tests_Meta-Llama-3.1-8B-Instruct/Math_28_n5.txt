java
import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math3.optim.linear.LinearConstraint;
import org.apache.commons.math3.optim.linear.LinearConstraintSet;
import org.apache.commons.math3.optim.linear.SimplexSolver;

public class SimplexSolverTest {

    private static final int ENTITIES_COUNT = 15;
    private static final double[][] Q = new double[ENTITIES_COUNT][ENTITIES_COUNT];
    private static final double[] q = new double[ENTITIES_COUNT];
    private static final double[] XL = new double[ENTITIES_COUNT];

    @Before
    public void setup() {
        // Initialize Q, q and XL with random values
        for (int i = 0; i < ENTITIES_COUNT; i++) {
            for (int j = 0; j < ENTITIES_COUNT; j++) {
                Q[i][j] = Math.random();
            }
            q[i] = Math.random();
            XL[i] = Math.random();
        }
    }

    @Test(expected = org.apache.commons.math3.optim.linear.UnboundedSolutionException.class)
    public void testUnboundedSolution() {
        SimplexSolver solver = new SimplexSolver();
        LinearConstraint[] constraints = new LinearConstraint[ENT