public void testUnboundedSolutionException() {
    int ENTITIES_COUNT = 15;
    int R = ENTITIES_COUNT;
    int N = ENTITIES_COUNT * 2; // assuming Q has 2 columns

    double[][] Q = new double[N][R];
    double[][] X = new double[N][R];
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < R; j++) {
            Q[i][j] = Math.random();
            X[i][j] = Math.random();
        }
    }

    double[] L = new double[R];
    for (int i = 0; i < R; i++) {
        L[i] = Math.random();
    }

    try {
        // Create a minimization linear programming problem
        LinearProgram lp = new LinearProgram();
        lp.addVariable(new Variable("t"));
        lp.addVariable(new Variable("L"));
        for (int i = 0; i < R; i++) {
            lp.addConstraint(new LinearConstraint(Q[i], "<=", 0, "q" + i));
            lp.addConstraint(new LinearConstraint(X[i], ">=", 0, "x"