java
public void testPolymorphicTypeLostWithJsonValue() throws JsonProcessingException, IOException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
    mapper.enableDefaultTyping();

    RemoteCall remoteCall = new RemoteCall();
    String json = mapper.writeValueAsString(remoteCall);

    // Expected JSON with verbose typing and byte array deserialization
    String expectedJson = "{\"@class\":\"net.sf.lipermi.call.RemoteCall\",\"args\":[{\"@class\":\"[B\",\"value\":" +
            "AKQEAAnw8fLz9AAAAgA="}]";

    // Expected deserialized object
    RemoteCall deserializedRemoteCall = mapper.readValue(json, RemoteCall.class);
    assertEquals(expectedJson, mapper.writeValueAsString(deserializedRemoteCall));
}

class RemoteCall {
    private byte[] apdu;

    @JsonValue
    public byte[] getBytes() {
        return apdu.clone();
    }

    @JsonCreator
    public RemoteCall(@JsonProperty(value = "bytes") byte[] apdu) {
        this.apdu = apdu.clone();
    }
}
