java
public class TestJsonAnyGetter {
    
    @JsonSerialize(using = MySerializer.class)
    @JsonAnyGetter
    public Map<String, String> getParameters() {
        Map<String, String> map = new HashMap<>();
        map.put("key1", "value1");
        return map;
    }

    @JsonSerialize(keyUsing = MyKeySerializer.class)
    public Map<String, String> getParametersWithKeySerializer() {
        Map<String, String> map = new HashMap<>();
        map.put("key1", "value1");
        return map;
    }

    @JsonAnyGetter
    public Map<String, JsonNode> getParametersWithConverter() {
        Map<String, String> map = new HashMap<>();
        map.put("key1", "value1");
        return new MyConverter().convert(map);
    }

    public static class MySerializer extends JsonSerializer<Map<String, String>> {
        @Override
        public void serialize(Map<String, String> value, JsonGenerator gen, SerializerProvider provider) throws IOException {
            gen.writeStartObject();
            for (Map.Entry<String, String> entry : value.entrySet()) {
                gen.writeFieldName(entry.getKey());
                gen.writeString(entry.getValue());
            }
            gen.writeEndObject();
       