public void testClosureCompilerCrash() {
    String jsCode = "var g=function(m){return m*Math.random()|0},d=document,h=d.getElementById('h'),c=d.getElementById('c'),l;" +
            "(l=function(){requestAnimationFrame(l);h.style.textShadow='0 0 1px #000,'+(g(10)-5)+'px '+(g(10)-5)+'px 0 #888,0 0 180px rgb('+g(255)+','+g(255)+','+g(255)+")"})();" +
            "d.addEventListener('mousemove',function(v){c.style.marginTop=(v.pageY/10+15|0)+'px'})";
    String expectedErrorMessage = "Unexpected variable l";
    assertThrows(IllegalStateException.class, () -> new JavaScriptCompiler().compile(jsCode));
    // The above test will throw an exception, but we can't catch it directly in a unit test.
    // We can verify that the error message is as expected.
    // However, this would require mocking the JavaScriptCompiler and its methods.
    // For simplicity, let's just verify that the test fails.
    try {
        new JavaScriptCompiler().compile(jsCode);
        fail("Expected