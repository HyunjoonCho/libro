java
public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    double[] start = new double[] { 0, 0 };
    double[] min = new double[] { 1, 1 };
    brentOptimizer.optimize(new UnivariateFunction() {
        @Override
        public double value(double[] point) {
            double sum = 0;
            for (int i = 0; i < point.length; i++) {
                sum += Math.pow(point[i], 2);
            }
            return sum;
        }
    }, start, min);
    double[] finalPoint = brentOptimizer.getBestPoint();
    double currentValue = brentOptimizer.getBestValue();
    // Simulate one more evaluation with a slightly worse result
    brentOptimizer.optimize(new UnivariateFunction() {
        @Override
        public double value(double[] point) {
            double sum = 0;
            for (int i = 0; i < point.length; i++) {
                sum += Math.pow(point[i], 2);
            }
            return sum + 1e-10; // slightly worse result
        }
    }, finalPoint, min);
    double[] newFinalPoint = brent