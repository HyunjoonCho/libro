javascript
// Test case for issue #107
function testTypeChecker() {
  var ns = {};

  // Test case 1: ns.a is a property of the global object
  ns.a = function(b) {
    /** @param {string=} b */
  };

  function d() {
    ns.a();
    ns.a(123);
  }

  // Expecting one warning for the type error
  expectConsoleWarning(/called with incorrect type/);

  // Test case 2: ns.a is defined within an anonymous function
  ns = {};
  (function() {
    /** @param {string=} b */
    ns.a = function(b) {};
  })();

  d = function() {
    ns.a();
    ns.a(123);
  }

  // Expecting a warning for calling ns.a with 0 parameters, but not for the type error
  expectConsoleWarning(/called with 0 arguments/);

  // Test case 3: ns.a is defined within an anonymous function, but the calling code is not
  ns = {};
  (function() {
    /** @param {string=} b */
    ns.a = function(b) {};
