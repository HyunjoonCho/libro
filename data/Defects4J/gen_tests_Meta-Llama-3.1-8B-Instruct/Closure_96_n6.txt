java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertThrows;

@RunWith(Parameterized.class)
public class VarArgsTest {

    private Object[] args;

    @Parameters
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                {new Object[]{"hello"}, new Object[]{123}, new Object[]{"hello", 123}},
                {new Object[]{123}, new Object[]{"hello", 123}, new Object[]{123, "hello"}},
                {new Object[]{"hello", 123}, new Object[]{"hello", 123}, new Object[]{"hello", "hello", 123}}
        });
    }

    public VarArgsTest(Object[] args) {
        this.args = args;
    }

    @Test
    public void testVarArgs() {
        // Simulating the Closure Compiler behavior, where it should throw an error
        // when the first parameter is a string, but subsequent parameters are not.
        if (args[0] instanceof String &&!Arrays.stream(args).skip(1).allMatch(Object::equals)) {
            assertThrows(RuntimeException.class,