public void testMapDeserializerWithEnumKeyAndMissingTypeInfo() throws IOException {
    String json = "{\"someMap\": {\"FOO\": \"bar\"}}";
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule simpleModule = new SimpleModule();
    simpleModule.addDeserializer(SuperTypeEnum.class, new JsonDeserializer<SuperTypeEnum>() {
        @Override
        public SuperTypeEnum deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)
                throws IOException {
            return SuperTypeEnum.valueOf(jsonParser.getText());
        }
    });
    mapper.registerModule(simpleModule);

    JsonParser jsonParser = mapper.getFactory().createParser(new ByteArrayInputStream(json.getBytes()));
    DeserializationContext deserializationContext = mapper.getDeserializationConfig().createContext(jsonParser, null);
    MapDeserializer mapDeserializer = new MapDeserializer(mapper.getTypeFactory(), simpleModule.getKeyDeserializer(SuperTypeEnum.class), null, deserializationContext.getTypeFactory());
    Map<SuperTypeEnum, String> map = mapDeserializer.deserialize(jsonParser, deserializationContext);
    assertEquals("Deserialized someMap.FOO should equal bar", "bar", map.get(SuperTypeEnum.FOO));
}