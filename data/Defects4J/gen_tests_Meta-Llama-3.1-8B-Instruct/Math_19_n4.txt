java
public void testCMAESOptimizerNaNParameters() {
    double lowerBound = -Double.MAX_VALUE;
    double upperBound = Double.MAX_VALUE;
    double[] bounds = new double[] {lowerBound, upperBound};
    
    // Create a simple fitness function that returns the input parameter
    FitnessFunction fitnessFunction = new FitnessFunction() {
        @Override
        public double evaluate(double[] parameters) {
            return parameters[0];
        }
    };
    
    // Initialize the CMA-ES optimizer with the bounds
    CMAESOptimizer optimizer = new CMAESOptimizer(bounds, fitnessFunction);
    
    // Try to optimize with a large number of iterations
    optimizer.optimize(10000);
    
    // Check that the parameters passed to the fitness function are not NaN
    double[] parameters = optimizer.getBestParameters();
    for (double parameter : parameters) {
        if (Double.isNaN(parameter)) {
            fail("Fitness function received NaN parameter");
        }
    }
}
