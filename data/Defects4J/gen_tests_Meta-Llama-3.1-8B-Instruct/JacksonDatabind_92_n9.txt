public void testBlockPolymorphicDeserialization() {
    ObjectMapper mapper = new ObjectMapper();
    // List of types to block polymorphic deserialization for
    String[] blockedTypes = new String[] {
        "java.util.HashMap", "java.util.TreeMap", "java.util.concurrent.ConcurrentHashMap",
        "java.util.HashSet", "java.util.TreeSet", "java.util.concurrent.ConcurrentSkipListSet",
        "java.util.LinkedList", "java.util.Stack", "java.util.concurrent.CopyOnWriteArrayList",
        "java.util.concurrent.ConcurrentLinkedQueue", "java.util.concurrent.LinkedBlockingQueue",
        "java.util.concurrent.BlockingQueue", "java.util.concurrent.SynchronousQueue",
        "java.util.concurrent.ArrayBlockingQueue", "java.util.concurrent.LinkedBlockingDeque",
        "java.util.concurrent.ConcurrentHashMap$Segment", "java.util.concurrent.ConcurrentLinkedMap$HashEntry"
    };

    for (String type : blockedTypes) {
        try {
            Object input = mapper.readValue("{\"type\":\"" + type + "\"}", Object.class);
            fail("Polymorphic deserialization should be blocked for " + type);
        } catch (Exception e) {
            // expected
        }
    }
}