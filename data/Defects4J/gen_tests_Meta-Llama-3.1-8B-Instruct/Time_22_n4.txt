public void testToPeriodWithFixedTimeZone() {
    DateTimeZone fixedTimeZone = DateTimeZone.forID("Etc/GMT");
    DateTimeZone dstTimeZone = DateTimeZone.forID("America/Chicago");

    Duration aDuration = new Duration(30 * DateTimeConstants.MILLIS_PER_HOUR + 50 * DateTimeConstants.MILLIS_PER_MINUTE + 14 * DateTimeConstants.MILLIS_PER_SECOND);

    // Test with fixed time zone
    DateTimeZone.setDefault(fixedTimeZone);
    Period periodWithFixedTimeZone = aDuration.toPeriod();
    assertEquals(1, periodWithFixedTimeZone.getYears());
    assertEquals(0, periodWithFixedTimeZone.getMonths());
    assertEquals(0, periodWithFixedTimeZone.getDays());
    assertEquals(6, periodWithFixedTimeZone.getHours());
    assertEquals(50, periodWithFixedTimeZone.getMinutes());
    assertEquals(14, periodWithFixedTimeZone.getSeconds());

    // Test with DST time zone
    DateTimeZone.setDefault(dstTimeZone);
    Period periodWithDstTimeZone = aDuration.toPeriod();
    assertEquals(0, periodWithDstTimeZone.getYears());
    assertEquals(0, periodWithDstTimeZone.getMonths());
    assertEquals(30, periodWithDstTimeZone.getDays());
    assertEquals(6, periodWithDstTimeZone.getHours());