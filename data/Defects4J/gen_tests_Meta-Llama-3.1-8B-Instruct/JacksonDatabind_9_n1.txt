public void testMapWithClassAsKey() throws Exception {
    Map<Class<? extends Object>, String> map = new HashMap<>();
    map.put(ArrayList.class, "ArrayList");
    map.put(HashMap.class, "HashMap");

    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new SimpleModule()
           .addKeyDeserializer(Class.class, new KeyDeserializer() {
                @Override
                public Class<?> deserializeKey(String key, DeserializationContext ctxt) throws IOException {
                    try {
                        return Class.forName(key.substring(key.indexOf("java.") + 5));
                    } catch (ClassNotFoundException e) {
                        throw new RuntimeException(e);
                    }
                }
            }));

    String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(map);
    System.out.println(json);
    mapper.readValue(json, new TypeReference<Map<Class<? extends Object>, String>>(){});
}