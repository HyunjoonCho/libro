java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
import com.fasterxml.jackson.datatype.jsr310.deser.std.StdDateFormat;

import org.junit.Test;

import java.io.IOException;
import java.time.LocalDate;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

public class StdDateFormatTest {

    @Test
    public void testLenientParsing() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new JavaTimeModule());

        // Test with lenient parsing
        StdDateFormat dateFormat = new StdDateFormat();
        assertEquals(LocalDate.of(2015, 2, 1), mapper.readValue("\"2015-01-32\"", LocalDate.class));

        // Test with non-lenient parsing
        try {
            mapper.setDateFormat(dateFormat.withLenient(false));
            mapper.readValue("\"2015-01-32\"", LocalDate.class);
            fail("Expected IOException for invalid date");
        } catch (IOException e) {
            // Expected
        }
    }
}
