public void testMapDeserializerWithEnumKeyDeserializer() throws IOException {
    String json = "{\"someMap\": {\"FOO\": \"bar\"}}";
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule simpleModule = new SimpleModule();
    simpleModule.addDeserializer(SuperTypeEnum.class, new JsonDeserializer<SuperTypeEnum>() {
        @Override
        public SuperTypeEnum deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {
            return SuperTypeEnum.valueOf(jsonParser.getText());
        }
    });
    mapper.registerModule(simpleModule);

    // Test with missing type info
    JsonParser parser = mapper.getFactory().createParser(new ByteArrayInputStream("{\"someMap\": {\"FOO\": \"bar\"}}".getBytes()));
    DeserializationContext ctxt = mapper.getDeserializationConfig().createContext(parser, null);
    ctxt.getParser().nextToken(); // Advance to END_OBJECT
    MapDeserializer<SuperTypeEnum, String> mapDeserializer = new MapDeserializer<>(mapper.getTypeFactory(), ctxt.getTypeFactory(), ctxt.getParser(), ctxt);
    Map<SuperTypeEnum, String> map = mapDeserializer.deserialize(parser, ctxt);
    assertEquals(1, map.size());
    assertEquals("bar", map.get(SuperTypeEnum.FOO));
}