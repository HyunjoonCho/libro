java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
import java.io.IOException;
import java.time.Instant;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

public class TestStdDateFormat {

    public static void main(String[] args) throws IOException, DateTimeParseException {
        // Test that large ISO-8601 dates are formatted/serialized correctly
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSXXX");
        String largeDate = dtf.format(Instant.now().plusSeconds(1000000000L));
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new JavaTimeModule());
        String json = mapper.writeValueAsString(largeDate);
        System.out.println(json);

        // Test that large ISO-8601 dates can be parsed correctly
        try {
            mapper.readValue(largeDate, Instant.class);
        } catch (Exception e) {
            System.out.println("Caught expected exception: " + e.getMessage());
        }

        // Test that negative dates are not supported
        try {
