java
public void testErrorRecovery() throws Exception {
    // Create a JSON string with a syntax error
    String json = "{\"a\": {\"b\": {\"c\": {\"d\": {\"e\": {\"f\": \"value\"";

    // Try to parse the JSON, expecting a JsonProcessingException
    try {
        JsonFactory jsonFactory = new JsonFactory();
        JsonParser jp = jsonFactory.createParser(json.getBytes());
        MappingIterator it = JsonMapper.instance().readerFor(Map.class).readValues(jp);
        fail("Expected JsonProcessingException");
    } catch (JsonProcessingException e) {
        // Verify that the iterator is in a recoverable state
        JsonParser jp = jsonFactory.createParser(json.getBytes());
        MappingIterator it = JsonMapper.instance().readerFor(Map.class).readValues(jp);
        // Try to recover by expecting an END_OBJECT token
        jp.nextToken();
        assertEquals(JsonToken.END_OBJECT, jp.getCurrentToken());
    }
}

public void testDisableErrorRecovery() throws Exception {
    // Create a JSON string with a syntax error
    String json = "{\"a\": {\"b\": {\"c\": {\"d\": {\"e\": {\"f\": \"value