java
public void testCMAESOptimizerBounds() {
    // Create a sample objective function
    double[] x0 = new double[] { 0.0, 0.0 };
    double[] xOpt = new double[] { 1.0, 1.0 };
    double[] yOpt = new double[] { 1.0, 1.0 };
    ObjectiveFunction func = new ObjectiveFunction() {
        @Override
        public double value(double[] point) {
            return Math.pow(point[0] - xOpt[0], 2) + Math.pow(point[1] - xOpt[1], 2);
        }
    };

    // Create a CMAESOptimizer with bounds
    double[] lowerBound = new double[] { -10.0, -10.0 };
    double[] upperBound = new double[] { 10.0, 10.0 };
    CMAESOptimizer optimizer = new CMAESOptimizer(100, 0.01, 1000, lowerBound, upperBound);

    // Perform optimization
    optimizer.optimize(func);

    // Check that the solution is close to the optimal solution near the lower bound
    double[] solution = optimizer.get