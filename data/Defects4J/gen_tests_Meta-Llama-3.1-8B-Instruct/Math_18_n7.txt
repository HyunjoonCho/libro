public void testCMAESOptimizerResolution() {
    CMAESOptimizer optimizer = new CMAESOptimizer();
    int dimension = 1;
    int iterations = 100;
    double lowerBound = 1e-6;
    double upperBound = 1e6;
    double[] bounds = new double[] {lowerBound, upperBound};
    optimizer.init(dimension);
    optimizer.setPopulationSize(100);
    optimizer.setMu(0.25);
    optimizer.setLambda(4.0);
    optimizer.setTerminationCondition(1e-6);
    optimizer.setFitnessFunction(new TestFunction() {
        @Override
        public double evaluate(double[] x) {
            return x[0];
        }
    });
    optimizer.setBounds(bounds);
    optimizer.optimize(iterations);
    double[] fit = optimizer.getBestFitness();
    double[] params = optimizer.getBestParameters();
    assertEquals(1.0, fit[0], 1e-6);
    assertEquals(upperBound, params[0], 1e-6);
}