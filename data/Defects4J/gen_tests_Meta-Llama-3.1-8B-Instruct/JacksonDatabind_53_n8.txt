java
public class TestMyCustomIdInterface {

    @Test
    public void testDeserialize() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();

        // Create a custom deserializer for MyCustomIdInterface
        SimpleModule module = new SimpleModule();
        module.addAbstractTypeMapping(UUID.class, UUID.class);
        module.addAbstractTypeMapping(MyCustomIdInterface.class, Foo.class);
        mapper.registerModule(module);

        String json = "{\"something\":[{\"id\":\"a uuid\",\"property\":\"value\"}]}";
        JsonNode node = mapper.readTree(json);
        ArrayNode array = (ArrayNode) node.get("something");

        for (int i = 0; i < array.size(); i++) {
            JsonNode element = array.get(i);
            Object value = mapper.treeToValue(element, MyCustomIdInterface.class);
            assertNotNull(value);
            assertEquals("a uuid", ((MyCustomIdInterface) value).getId());
        }
    }
}

// MyCustomIdInterface.java
public interface MyCustomIdInterface {
    String getId();
}

// Foo.java
public class Foo implements MyCustomIdInterface {
    private String id;

    public String getId() {
        return id;
    }

    public void setId(String id)