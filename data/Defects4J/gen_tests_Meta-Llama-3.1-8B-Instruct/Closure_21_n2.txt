java
public void testClassifyNonRightmostExpressionsAsProblematic() {
    // Test case 1: foo((1, 2, 42)) is transformed into foo((1, 3))
    ExpressionTree expression1 = new ExpressionTree(new ExpressionTree(new Constant(1), new Constant(2), new Constant(42)));
    ExpressionTree expectedExpression1 = new ExpressionTree(new ExpressionTree(new Constant(1), new Constant(3)));
    assertEquals(expectedExpression1, classifyNonRightmostExpressionsAsProblematic(expression1));

    // Test case 2: foo((bar(), 2, 42)) is transformed into foo((bar(), 3))
    ExpressionTree expression2 = new ExpressionTree(new ExpressionTree(new FunctionCall("bar")), new Constant(2), new Constant(42));
    ExpressionTree expectedExpression2 = new ExpressionTree(new ExpressionTree(new FunctionCall("bar")), new Constant(3));
    assertEquals(expectedExpression2, classifyNonRightmostExpressionsAsProblematic(expression2));

    // Test case 3: foo(((1, 2, 3), (4, 5, 42))) is transformed into foo((1, 4, 42))
    ExpressionTree expression3 = new ExpressionTree(new