java
public void testTreeTraversingParserBoundsCheck() {
    ObjectMapper mapper = new ObjectMapper();
    TreeTraversingParser parser = new TreeTraversingParser(mapper);
    
    // Test overflow
    try {
        parser.parseIntField(2147483648L);
        fail("Expected overflow exception");
    } catch (IOException e) {
        assertEquals(Integer.MAX_VALUE, parser.getIntField());
    }

    try {
        parser.parseIntField(-2147483649L);
        fail("Expected overflow exception");
    } catch (IOException e) {
        assertEquals(Integer.MIN_VALUE, parser.getIntField());
    }

    try {
        parser.parseLongField(2147483648L);
        fail("Expected overflow exception");
    } catch (IOException e) {
        assertEquals(Long.MAX_VALUE, parser.getLongField());
    }

    try {
        parser.parseLongField(-2147483649L);
        fail("Expected overflow exception");
    } catch (IOException e) {
        assertEquals(Long.MIN_VALUE, parser.getLongField());
    }

    // Test invalid values
    try {
        parser.parseIntField(true);
        fail("Expected mismatched input exception");
    } catch (IOException e)