java
import org.junit.Test;
import org.junit.Assert;

import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;

public class JacksonTest {

    enum Type { BIG_DECIMAL }

    static class Wrapper {

        @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXTERNAL_PROPERTY, property = "type")
        @JsonSubTypes({ @JsonSubTypes.Type(name = "BIG_DECIMAL", value = BigDecimal.class) })
        private Object value;

        public void setValue(Object value) {
            this.value = value;
        }

        public Object getValue() {
            return value;
        }
    }

    @Test
    public void testBigDecimalSerialization() throws Exception {
        ObjectMapper m = new ObjectMapper();
        m.configure(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS, true);

        BigDecimal originalValue = new BigDecimal("-10000000000.0000000001");
        Wrapper w = new Wrapper();
        w.setValue(originalValue);

        String json = m.writeValueAsString(w);
        Wrapper w2 = m.readValue(json, Wrapper.class);

        Assert