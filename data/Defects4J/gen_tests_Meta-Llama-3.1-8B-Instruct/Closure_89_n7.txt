java
public void testCompilerRemovesProperties() {
    // Create a simple function with a property
    Function f1 = new Function() {
        public void execute() {
            System.out.println("f1");
        }
    };
    f1.setAlwaysCall(true);

    // Add the function to a map
    Map<String, Function> map = new HashMap<>();
    map.put("f1", f1);

    // Call the function through the map
    Function f = map.get("f1");
    if (f instanceof HasProperty && ((HasProperty) f).hasProperty("alwaysCall")) {
        ((HasProperty) f).getProperty("alwaysCall");
        f.execute();
    } else {
        System.out.println("Property 'alwaysCall' was not preserved");
    }
}

// Define an interface to simulate the HasProperty interface
interface HasProperty {
    boolean hasProperty(String propertyName);
    Object getProperty(String propertyName);
}
