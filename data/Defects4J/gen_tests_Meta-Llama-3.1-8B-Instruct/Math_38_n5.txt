public void testBOBYQAOptimizer() {
    int dim = 2;
    BOBYQAOptimizer optim = new BOBYQAOptimizer(2 * dim + 2);
    try {
        optim.optimize(100000, new TestFunction(dim), OptimizationAlgorithmGoal.MINIMIZE, new double[dim], null, null);
        fail("Expected IndexOutOfBoundsException");
    } catch (IndexOutOfBoundsException e) {
        // Expected exception
    }
}

class TestFunction implements DifferentiableUnivariateFunction {
    private int dim;
    
    public TestFunction(int dim) {
        this.dim = dim;
    }
    
    @Override
    public double value(double[] point) {
        return 0;
    }
    
    @Override
    public double valueAndGradient(double[] point) {
        return 0;
    }
    
    @Override
    public int getDimension() {
        return dim;
    }
}