java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.junit.Test;

import static org.junit.Assert.fail;

public class CustomCollectionTest {

    @Test
    public void testStringCollectionDeserialization() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        CustomImmutableCollection<String> collection = new CustomImmutableCollection<>();
        collection.add("string1");
        collection.add("string2");

        CustomObject obj = new CustomObject();
        obj.setStringCollection(collection);

        // This should fail with "Cannot construct instance of XXX"
        try {
            mapper.writeValueAsString(obj);
            fail("Expected exception");
        } catch (Exception e) {
            // expected
        }

        // This should not fail
        mapper.writeValueAsString(collection);
    }
}

class CustomImmutableCollection<T> extends ArrayList<T> {
    // custom implementation
}

class CustomObject {
    private CustomImmutableCollection<String> stringCollection;

    public void setStringCollection(CustomImmutableCollection<String> stringCollection) {
        this.stringCollection = stringCollection;
    }
}
