java
import org.junit.Test;
import com.google.common.collect.ImmutableList;
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.SourceFile;

public class IssueTest {
    @Test
    public void testIssue() {
        String code = "/**\n" +
                " * @type function\n" +
                " */\n" +
                "var callback;\n";

        Compiler compiler = new Compiler();
        compiler.setCompilationLevel(CompilationLevel.WHITESPACE_ONLY);
        compiler.process(ImmutableList.of(new SourceFile("test.js", code)), ImmutableList.of());
        String[] messages = compiler.getMessages();
        assert messages.length > 0;
        String warning = messages[0].getMessage();
        // Expected warning is something like "Parse error. Unexpected end of file"
        assert warning.contains("Parse error");
        assert warning.contains("Unexpected end of file");
    }
}
