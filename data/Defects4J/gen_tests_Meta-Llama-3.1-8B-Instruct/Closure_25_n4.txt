public void testAnonymousObjectInference() {
    // Test with constructor
    try {
        new Callz(new Object() {{
            String prop1 = "hi";
            Object prop2 = 3;
        }});
    } catch (Exception e) {
        fail("Expected no exception");
    }

    // Test without constructor
    try {
        new Callz(new Object() {{
            String prop1 = "hi";
        }});
        fail("Expected exception");
    } catch (Exception e) {
        assertEquals("actual parameter 1 of callz does not match formal parameter", e.getMessage());
    }
}

class Callz {
    public Callz(Object parry) {
        if (parry instanceof Object && ((Object) parry).getClass().getDeclaredFields().length == 2) {
            if (((Object) parry).getClass().getDeclaredFields()[0].getName().equals("prop1") && ((Object) parry).getClass().getDeclaredFields()[0].getType().equals(String.class)) {
                if (((Object) parry).getClass().getDeclaredFields()[1].getName().equals("prop2") && ((Object) parry).getClass().getClass().getDeclaredFields()[1].getType().equals