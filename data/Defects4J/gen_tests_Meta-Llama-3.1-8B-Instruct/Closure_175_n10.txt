public void testAdvancedOptimizationsIssue() throws IOException {
    // Create a file input.js with the given test case
    String inputJs = "window['anchor'] = function (obj, modifiesProp) {\n" +
            " return (function (saved) {\n" +
            " return modifiesProp(obj) + saved;\n" +
            " })(obj['prop']);\n";

    // Compile it with ADVANCED_OPTIMIZATIONS mode
    ProcessBuilder pb = new ProcessBuilder("java", "-jar", "compiler.jar",
            "--compilation_level", "ADVANCED_OPTIMIZATIONS",
            "--warning_level", "VERBOSE",
            "--externs", "window.js",
            "--js", "input.js",
            "--js_output_file", "output.js");

    // Run the compilation command and capture the output
    Process process = pb.start();
    process.waitFor();

    // Read the output
    String outputJs = new String(Files.readAllBytes(Paths.get("output.js")));

    // The expected output
    String expectedOutput = "window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD;};";

    // Assert that the actual output matches the expected output