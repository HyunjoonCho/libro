java
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.IOException;
import java.util.*;

public class StringCollectionDeserializerTest {
    private static class CustomStringCollection extends ArrayList<String> {
        public CustomStringCollection() {
            // force use of immutable version for deserialization
        }
    }

    @Test(expected = InstantiationException.class)
    public void testStringCollectionDeserializer() throws IOException {
        CustomStringCollection collection = new CustomStringCollection();
        collection.add("a");
        collection.add("b");
        collection.add("c");

        ObjectMapper mapper = new ObjectMapper();
        mapper.writeValueAsString(collection);

        // Test deserialization of custom collection of strings as a property
        // This should fail with InstantiationException
        mapper.readValue("{\"collection\": [\"a\", \"b\", \"c\"]}", CustomObject.class);
    }

    public static class CustomObject {
        private CustomStringCollection collection;

        public CustomStringCollection getCollection() {
            return collection;
        }

        public void setCollection(CustomStringCollection collection) {
            this.collection = collection;
        }
    }
}
