java
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.ObjectMapper;

public class ArrayDelegateDeserializationTest {

    public static class MyTypeImpl implements MyType {
        private final List<Integer> values;

        MyTypeImpl(List<Integer> values) {
            this.values = values;
        }

        @Override
        public List<Integer> getValues() {
            return values;
        }
    }

    public interface MyType {
        @JsonValue
        List<Integer> getValues();

        @JsonCreator
        static MyType of(List<Integer> values) {
            return new MyTypeImpl(values);
        }
    }

    public void testValueInstantiatorCanInstantiate() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        // Test with empty array
        MyType thing = mapper.readValue("[]", MyType.class);
        assertTrue(thing.getValues().isEmpty());

        // Test with non-empty array
        thing = mapper.readValue("[1, 2, 3]", MyType.class);
        assertEquals(3, thing.getValues().size());
        assertEquals(1, thing.getValues().get(0));
        assertEquals(2, thing.getValues().get(1));
        assertEquals(3, thing.get