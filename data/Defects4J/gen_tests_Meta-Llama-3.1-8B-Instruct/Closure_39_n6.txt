java
import com.google.javascript.jscomp.CompilationLevel;
import com.google.javascript.jscomp.JSCOMPTestOptions;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.jscomp.SourceMap;
import org.junit.Test;
import static org.junit.Assert.*;

public class ExternExportTypedefTest {

    @Test
    public void testTypedefExport() throws Exception {
        JSCOMPTestOptions options = new JSCOMPTestOptions();
        options.setCompilationLevel(CompilationLevel.WHITESPACE_ONLY);
        SourceFile externFile = SourceFile.fromCode(
                "typedef {a:b} T;\n" +
                "function foo(T t) {}\n" +
                "function bar(T t) { return t; }"
        );
        SourceFile codeFile = SourceFile.fromCode(
                "foo({a: 1});\n" +
                "var x = bar({a: 2});"
        );
        CompilationLevel WHITESPACE_ONLY = CompilationLevel.WHITESPACE_ONLY;
        Compiler compiler = new Compiler(options);
        compiler.compile(externFile, codeFile);
        CompilationResult compilationResult = compiler.getResult();
        String externExport = compilationResult.getExports();
        // Man