java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.PropertyNamingStrategy;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.annotation.JsonCreator;
import com.fasterxml.jackson.databind.annotation.JsonProperty;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class PropertyNamingStrategyTest {

    @JsonCreator
    public static class TestBean {
        @JsonProperty("foo")
        private final String foo;

        @JsonProperty("bar")
        private final String bar;

        public TestBean(String foo, String bar) {
            this.foo = foo;
            this.bar = bar;
        }
    }

    @Test
    public void testPropertyNamingStrategy() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.setSerializationInclusion(SerializationFeature.Include.NON_NULL);

        // Create a custom naming strategy that simply returns the original property name
        PropertyNamingStrategy namingStrategy = new PropertyNamingStrategy.StandardSERIALIZE;
        mapper.setPropertyNamingStrategy(namingStrategy);

        // Test that the property names are not renamed
        TestBean bean = new TestBean("fooValue", "barValue");
        String json = mapper.writeValueAsString(bean);
        assertEquals("{\"foo\":\"fooValue\",\"