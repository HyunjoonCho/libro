java
public void testSampleException() {
    List<Pair<Object, Double>> list = new ArrayList<>();
    list.add(new Pair<>(new Object() {}, new Double(0)));
    list.add(new Pair<>(new Object() {}, new Double(1)));
    DiscreteDistribution<Object> distribution = new DiscreteDistribution<>(list);
    try {
        distribution.sample(1);
        fail("Expected ClassCastException");
    } catch (ClassCastException e) {
        // expected
    }
}

public class Pair<K, V> {
    public K key;
    public V value;

    public Pair(K key, V value) {
        this.key = key;
        this.value = value;
    }
}

class DiscreteDistribution<T> {
    private List<Pair<T, Double>> probabilities;

    public DiscreteDistribution(List<Pair<T, Double>> probabilities) {
        this.probabilities = probabilities;
    }

    public T sample(int n) {
        // Simulate Array.newInstance(probabilities.get(0).getClass(), n);
        T[] array = (T[]) java.lang.reflect.Array.newInstance(probabilities.get(0).getClass(), n);
        return array[0]; // This will throw ClassCastException if the sample is of a different class
    }
}
