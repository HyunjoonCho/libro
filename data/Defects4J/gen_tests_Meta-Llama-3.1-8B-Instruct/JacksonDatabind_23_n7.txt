java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class AfterburnerTest {

    @Test
    public void testNonEmptyExclusion() throws Exception {
        ObjectMapper mapper = new ObjectMapper();

        // Using Jackson 2.5.4
        NonEmptyPojo pojo = new NonEmptyPojo("Hello", "World");
        String json = mapper.writeValueAsString(pojo);
        assertEquals("{\"nonEmptyField\":\"Hello\"}", json);

        // Using Jackson 2.5.4 with Afterburner
        ObjectMapper afterburnerMapper = new ObjectMapper();
        afterburnerMapper.registerModule(new AfterburnerModule());
        json = afterburnerMapper.writeValueAsString(pojo);
        assertEquals("{\"nonEmptyField\":\"Hello\",\"nonEmptyField2\":\"World\"}", json);
    }

    public static class NonEmptyPojo {
        @JsonSerialize(onEmpty = JsonSerialize.Value.EMPTY_STRING)
        @JsonDeserialize(contentAs = String.class)
        private String nonEmptyField;

        @JsonSerialize(onEmpty = JsonSerialize.Value.EMPTY_STRING)
        @JsonDeserialize(contentAs = String.class)
       