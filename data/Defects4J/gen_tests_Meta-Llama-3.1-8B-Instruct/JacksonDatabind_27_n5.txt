java
public void testDeserializeExternalTypeId() {
    ObjectMapper mapper = new ObjectMapper();
    ObjectWriter writer = mapper.writerWithDefaultPrettyPrinter();
    ObjectReader reader = mapper.readerFor(new TypeReference<MyBean>() {});

    MyBean bean = new MyBean();
    bean.setMyId(1L);

    String json = writer.writeValueAsString(bean);
    MyBean deserializedBean = reader.readValue(json);

    assertEquals(bean.getMyId(), deserializedBean.getMyId());
}

public class MyBean {
    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "myId")
    public static class MyType {}

    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "myId")
    public MyType myField;

    private Long myId;

    public Long getMyId() {
        return myId;
    }

    public void setMyId(Long myId) {
        this.myId = myId;
    }
}
