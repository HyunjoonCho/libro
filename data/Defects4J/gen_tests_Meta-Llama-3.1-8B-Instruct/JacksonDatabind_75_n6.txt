java
public void testJsonFormatShapeOnEnum() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping(DefaultTyping.STATIC);

    // Before 2.8, this should work
    @JsonFormat(shape = JsonFormat.Shape.NUMBER_INT)
    enum Color {
        RED,
        YELLOW,
        GREEN
    }

    Foo foo = new Foo(Color.GREEN);
    String json = mapper.writeValueAsString(foo);
    System.out.println(json); // Should print {"color":0}

    // In 2.8, this should also work
    enum Color2 {
        @JsonFormat(shape = JsonFormat.Shape.NUMBER_INT)
        RED,
        @JsonFormat(shape = JsonFormat.Shape.NUMBER_INT)
        YELLOW,
        @JsonFormat(shape = JsonFormat.Shape.NUMBER_INT)
        GREEN
    }

    Foo foo2 = new Foo(Color2.GREEN);
    String json2 = mapper.writeValueAsString(foo2);
    System.out.println(json2); // Should print {"color":0}

    // Test that the annotation is not applied when not present on the enum field
    enum Color3 {
        @JsonFormat(shape = JsonFormat.Shape.NUMBER_INT)
        RED,
        YELLOW,
        GREEN