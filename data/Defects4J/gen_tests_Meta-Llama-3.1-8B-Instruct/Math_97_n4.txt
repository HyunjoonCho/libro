java
public void testBrentSolver() {
    // Define a function for testing
    Function f = new AbstractUnivariateFunction() {
        @Override
        public double value(double x) {
            return x * x - 1;
        }
    };

    // Test case that should throw an IllegalArgumentException
    try {
        BrentSolver solver = new BrentSolver(f);
        solver.solve(0.0, 1.7976931348623157E308);
        fail("Expected IllegalArgumentException to be thrown");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }

    // Test case that should return 0 as the root
    try {
        BrentSolver solver = new BrentSolver(f);
        double result = solver.solve(0.0, -101945.04630982173);
        assertEquals(0, result, 0.0001);
    } catch (MaxIterationsExceededException | FunctionEvaluationException e) {
        fail("Unexpected exception");
    }
}
