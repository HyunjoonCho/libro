java
public void testTarArchiveInputStreamSilentlyFinishedOnEOF() throws IOException {
    String archivePath = PathUtil.join(testdataDir, "test.tar.bz2");
    TarArchiveInputStream input = new TarArchiveInputStream(new BZip2CompressorInputStream(
            GoogleFile.SYSTEM.newInputStream(archivePath), true));

    // Intentionally remove the last byte from the archive to simulate unexpected EOF
    byte[] data = Files.readAllBytes(Paths.get(archivePath));
    byte[] modifiedData = new byte[data.length - 1];
    System.arraycopy(data, 0, modifiedData, 0, data.length - 1);
    Files.write(Paths.get(archivePath), modifiedData);

    ArchiveEntry nextMatchedEntry = input.getNextEntry();
    try {
        while (nextMatchedEntry!= null) {
            logger.info(fmt("Extracting %s", nextMatchedEntry.getName()));
            String outputPath = PathUtil.join("/tmp/", nextMatchedEntry.getName());
            OutputStream out = new FileOutputStream(outputPath);
            ByteStreams.copy(input, out);
            out.close();
            nextMatchedEntry = input.getNextEntry();
        }
        fail("Expected IOException to be thrown when encountering unexpected EOF");
    } catch (IOException e