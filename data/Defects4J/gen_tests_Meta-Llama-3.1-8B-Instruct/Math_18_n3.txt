java
public void testCMAESOptimizerBounds() {
    // Define the objective function to optimize
    ObjectiveFunction objectiveFunction = new ObjectiveFunction() {
        @Override
        public double evaluate(double[] point) {
            return point[0];
        }
    };

    // Define the bounds
    double lowerBound = 0.0;
    double upperBound = 1.0;

    // Initialize the optimizer
    CMAESOptimizer optimizer = new CMAESOptimizer(1, 0.1, 1e-6, 1e-6);

    // Set the bounds
    optimizer.setLowerBound(lowerBound);
    optimizer.setUpperBound(upperBound);

    // Initialize the starting point
    double[] startPoint = new double[] { 0.5 };

    // Optimize
    optimizer.optimize(objectiveFunction, startPoint);

    // Test that the optimized point is close to the lower bound
    double[] optimizedPoint = optimizer.getOptimizedPoint();
    assertEquals(lowerBound, optimizedPoint[0], 1e-6);

    // Test that the optimized point is close to the upper bound
    // Note: This test may fail because the optimizer may converge to a point slightly below the upper bound due