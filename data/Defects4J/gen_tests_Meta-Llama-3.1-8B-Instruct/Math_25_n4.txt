java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import org.apache.commons.math3.optim.nonlinear.general.LeastSquaresBuilder;
import org.apache.commons.math3.optim.nonlinear.general.LeastSquaresOptimizer;
import org.apache.commons.math3.optim.nonlinear.general.SimpleBounds;
import org.apache.commons.math3.optim.nonlinear.general.SimplexOptimizer;

import o.a.c.m.optimization.fitting.HarmonicFitter;

import static org.junit.Assert.assertTrue;

@RunWith(JUnit4.class)
public class HarmonicFitterTest {

    @Test
    public void testParameterGuesser() {
        // Create a harmonic fitter with a simple function
        HarmonicFitter fitter = new HarmonicFitter(0, 1, 2, 3);

        // Create a guesser
        HarmonicFitter.ParameterGuesser guesser = fitter.getParameterGuesser();

        // Create a least squares optimizer
        LeastSquaresBuilder builder = new LeastSquaresBuilder();
        builder.setObjectiveFunction(fitter::getFunction);
        builder.setStartPoint(guesser.getInitialGuess());
        builder.setLowerBound(new SimpleBounds(-