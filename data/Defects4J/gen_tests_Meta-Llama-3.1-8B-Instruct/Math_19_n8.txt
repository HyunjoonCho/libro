java
public void testCMAESOptimizerNaNParameters() {
    // Create a simple fitness function
    class SimpleFitnessFunction implements FitnessFunction {
        @Override
        public double evaluate(Object[] parameters) {
            return parameters[0] + parameters[1];
        }
    }

    // Create a CMAESOptimizer with large bounds
    double lowerBound = -Double.MAX_VALUE;
    double upperBound = Double.MAX_VALUE;
    CMAESOptimizer optimizer = new CMAESOptimizer(lowerBound, upperBound, new SimpleFitnessFunction());

    // Run the optimizer
    optimizer.optimize(10);

    // Check that the parameters passed to the fitness function are not NaN
    assertTrue(!Double.isNaN(optimizer.getBestParameters()[0]));
    assertTrue(!Double.isNaN(optimizer.getBestParameters()[1]));
}
