public void testEmbeddedRungeKuttaTooLargeFirstStep() {
    // Create a function that throws an exception when evaluated outside the integration range
    final double[] y0 = new double[] { 0.0 };
    final double[] dydx = new double[] { 1.0 };
    final double lowerBound = 0.0;
    final double upperBound = 0.0001;
    final double[] lowerBound2 = new double[] { lowerBound };
    final double[] upperBound2 = new double[] { upperBound };
    final double[] func = new double[] { 0.0 };
    final int n = 1;
    
    final Function f = new Function() {
        @Override
        public double value(double x, double[] y, double[] dydx) {
            if (x < lowerBound || x > upperBound) {
                throw new RuntimeException("Evaluation outside the integration range");
            }
            return func[0];
        }
    };

    // Create an integrator with a very short integration range
    Integrator integrator = new DormandPrince853Integrator(f, y0, dydx, lowerBound2, upperBound2, 1e-10