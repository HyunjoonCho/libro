java
public void testRungeKuttaStepSize() {
    // Create an integrator with a very short integration range
    // and a function that returns a constant value, so we can easily test
    // if the function is being called outside the range
    final double constantValue = 1.0;
    final double[] integrand = new double[1];
    integrator = new AdaptiveIntegrator() {
        @Override
        public double integrate(double t, double y, double tStop, double[] dydt) {
            integrand[0] = constantValue;
            return constantValue;
        }
    };
    integrator.setTolerance(1e-12);
    integrator.setInitialStepSize(1e-10);
    integrator.integrate(0, 0, 1e-12, integrand);

    // Check if the function was called outside the range
    // This should be false for Gragg-Bulirsch-Stoer integrators, but true for embedded Runge-Kutta integrators
    // with very short integration ranges
    assertTrue("Function was called outside the range", integrand[0] == constantValue);
}
