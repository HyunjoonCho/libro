java
public void testClosureCompilerStackOverflowError() {
    String input = "var x = 0; while (x < 1000000) { x++; }";
    String expectedExceptionMessage = "java.lang.RuntimeException: java.lang.RuntimeException: java.lang.StackOverflowError";

    try {
        // Run the closure compiler with the input JavaScript code
        ProcessBuilder processBuilder = new ProcessBuilder("java", "-jar", "compiler.jar", "--js", input, "--js_output_file", "output.js");
        Process process = processBuilder.start();
        process.waitFor();

        // Check if the compiler threw a RuntimeException with the expected message
        if (process.exitValue()!= 0) {
            String errorOutput = getErrorOutput(process);
            assertTrue(errorOutput.contains(expectedExceptionMessage));
        } else {
            fail("Expected a RuntimeException with the message '" + expectedExceptionMessage + "', but none was thrown.");
        }
    } catch (Exception e) {
        fail("Unexpected exception: " + e.getMessage());
    }
}

private String getErrorOutput(Process process) {
    try {
        InputStream errorStream = process.getErrorStream();
        BufferedReader reader = new BufferedReader(new InputStreamReader(errorStream));
        StringBuilder errorOutput = new StringBuilder();
       