java
public void testExtraneousTypeMapping() {
    // Test case for concrete base type with explicit name
    Type type = new Type("ConcreteType", "java.lang.Object");
    TypeResolutionContext context = new TypeResolutionContext();
    context.addType(type);
    TypeResolutionResult result = TypeResolutionUtil.resolveType(type, context);
    assertTrue(result.getTypeIds().contains("java.lang.Object"));
    assertTrue(result.getTypeIds().contains("ConcreteType"));

    // Test case for abstract base type with default name
    Type abstractType = new Type("java.lang.Object", "java.lang.Object");
    context = new TypeResolutionContext();
    context.addType(abstractType);
    result = TypeResolutionUtil.resolveType(abstractType, context);
    assertTrue(result.getTypeIds().contains("java.lang.Object"));
    assertFalse(result.getTypeIds().contains("java.lang.Object")); // Should not contain default name
}
