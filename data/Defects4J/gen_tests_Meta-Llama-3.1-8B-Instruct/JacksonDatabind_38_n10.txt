public void testJavaTypeConstruct() {
    Class<?> clazz = List.class;
    Class<?> rawType = List.class;
    Class<?> rawElementType = String.class;
    Class<?> elementType = String.class;
    Class<?> genericType = List.class;
    Class<?> genericElementType = String.class;

    try {
        new JavaType(clazz);
        fail("Expected IllegalArgumentException for direct construction of JavaType with Class");
    } catch (IllegalArgumentException e) {
        // expected
    }

    try {
        new JavaType(rawType);
        fail("Expected IllegalArgumentException for direct construction of JavaType with raw Class");
    } catch (IllegalArgumentException e) {
        // expected
    }

    try {
        new JavaType(rawElementType);
        fail("Expected IllegalArgumentException for direct construction of JavaType with raw element Class");
    } catch (IllegalArgumentException e) {
        // expected
    }

    try {
        new JavaType(elementType);
        fail("Expected IllegalArgumentException for direct construction of JavaType with element Class");
    } catch (IllegalArgumentException e) {
        // expected
    }

    try {
        new JavaType(genericType);
        fail("Expected IllegalArgumentException for direct construction of JavaType with generic Class");
    } catch (IllegalArgumentException e) {
        // expected