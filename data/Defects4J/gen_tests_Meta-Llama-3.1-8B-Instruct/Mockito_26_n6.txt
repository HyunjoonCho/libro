java
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

@RunWith(MockitoJUnitRunner.class)
public class MockitoInjectMocksTest {

    @Mock
    private Service service;

    @InjectMocks
    private final MyFinalClass myFinalClass; // Note: final field

    @Before
    public void setup() {
        // This will throw an exception in Mockito 1.9.0 and above
        // because @InjectMocks no longer supports injecting into final fields
    }

    @Test(expected = RuntimeException.class)
    public void testInjectMocks() {
        // This test will fail in Mockito 1.9.0 and above
    }

    // Alternatively, you can use constructor injection
    public static class MyFinalClass {
        private final Service service;

        public MyFinalClass(Service service) {
            this.service = service;
        }
    }

    @Test
    public void testInjectMocksConstructor() {
        MyFinalClass myFinalClass = new MyFinalClass(service);
        // No exception will be thrown
    }
