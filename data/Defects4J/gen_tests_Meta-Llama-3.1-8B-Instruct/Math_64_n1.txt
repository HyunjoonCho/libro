public void testLevenbergMarquardtInconsistency() {
    // Create a SimpleUnivariateFunction with a known minimum
    SimpleUnivariateFunction f = new SimpleUnivariateFunction() {
        @Override
        public double value(double x) {
            return x * x;
        }

        @Override
        public double derivative(double x) {
            return 2 * x;
        }
    };

    LevenbergMarquardt optimizer = new LevenbergMarquardt(f, 1.0, 1e-6);
    VectorialPointValuePair result = optimizer.doOptimize();

    // Check that the result point matches the expected minimum
    assertEquals(0, result.getPoint()[0], 1e-6);
}