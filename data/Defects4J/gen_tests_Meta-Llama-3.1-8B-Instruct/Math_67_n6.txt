java
public void testMultiStartUnivariateRealOptimizer() {
    MultiStartUnivariateRealOptimizer optimizer = new MultiStartUnivariateRealOptimizer();
    // Initialize the optimizer with some data
    optimizer.optimize();

    // After optimizing, getResult and getFunctionValue should return the best result and function value
    double bestResult = 0.0;
    double bestFunctionValue = Double.POSITIVE_INFINITY;

    for (int i = 0; i < optimizer.getNumberOfRuns(); i++) {
        if (optimizer.getOptima()[i] < bestResult) {
            bestResult = optimizer.getOptima()[i];
            bestFunctionValue = optimizer.getOptimaValues()[i];
        }
    }

    assertEquals(bestResult, optimizer.getResult(), 0.0);
    assertEquals(bestFunctionValue, optimizer.getFunctionValue(), 0.0);
}
