public void testTarArchiveInputStreamWithInvalidOctal() {
    byte[] data = new byte[] {(byte) '0', (byte) '5', (byte) '4', (byte) 0, (byte) '1', (byte) '2', (byte) '{', (byte) '\0', (byte) '1', (byte) '1'};
    ByteArrayInputStream bis = new ByteArrayInputStream(data);
    TarArchiveInputStream tarIn = new TarArchiveInputStream(new BufferedInputStream(bis));
    try {
        TarArchiveEntry entry = tarIn.getNextTarEntry();
        fail("Expected IllegalArgumentException");
    } catch (IllegalArgumentException e) {
        assertEquals("Invalid byte 0 at offset 5 in '05412{NUL}11' len=8", e.getMessage());
    } finally {
        tarIn.close();
    }
}

This test creates a `TarArchiveInputStream` with a byte array that contains an invalid octal value in a tar archive entry header. The test then calls `getNextTarEntry()` and expects an `IllegalArgumentException` to be thrown. The `finally` block is used to close the `TarArchiveInputStream` to prevent resource