public void testIssue1() {
    try {
        Class<?> clazz = Class.forName("org.mockito.internal.util.DefaultMockingDetails");
        Field field = clazz.getDeclaredField("mockingDetails");
        field.setAccessible(true);
        Object mockingDetails = field.get(null);
        Method method = mockingDetails.getClass().getMethod("createMock", Class.class, Object[].class);
        method.invoke(mockingDetails, Bar.class, new Object[]{new Object[]{List.class, Observer.class}});
    } catch (Exception e) {
        fail("Expected exception");
    }
}

public void testIssue2() {
    try {
        Class<?> clazz = Class.forName("org.mockitoutil.ClassLoaders$LocalExcludingURLClassLoader");
        Field field = clazz.getDeclaredField("urlMap");
        field.setAccessible(true);
        Map<String, URL> urlMap = (Map<String, URL>) field.get(null);
        URL url = new URL("file:///test/SomeClass.class");
        urlMap.put(url.toString(), url);
        Class<?> clazzLoaded = Class.forName("org.mockito.internal.progress.TimesTest");
        fail("Expected exception");
    } catch (Exception e) {
        // expected
    }