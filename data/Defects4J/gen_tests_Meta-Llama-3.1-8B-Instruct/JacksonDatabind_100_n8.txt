java
import com.fasterxml.jackson.core.JsonNode;
import com.fasterxml.jackson.databind.JsonFactory;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.TreeTraversingParser;
import com.fasterxml.jackson.core.Base64Variant;
import com.fasterxml.jackson.core.JsonEncoding;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.io.IOContext;

import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

public class TreeTraversingParserTest {

    @Test
    public void testBase64Variant() throws Exception {
        JsonFactory jsonFactory = new JsonFactory();
        JsonParser jp = jsonFactory.createParser(IOContext.empty(), JsonEncoding.UTF8, new byte[0], 0, 0);
        jp.setCurrentValue(new TextNode("SGVsbG8gd29ybGQ="));

        Base64Variant base64Variant = Base64Variant.MIME_NO_LINEFEED;
        jp.setCodec(new TreeTraversingParser(jsonFactory, jp, base64Variant));

        jp.nextToken();
        byte[] expectedBytes = "Hello world".getBytes("UTF-8");
        assertArrayEquals(expectedBytes, jp.getCurrentValue());
    }
}
