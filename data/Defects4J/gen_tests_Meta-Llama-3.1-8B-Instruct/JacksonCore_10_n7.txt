java
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.nio.charset.StandardCharsets;

import static org.junit.Assert.assertThrows;

@RunWith(JUnit4.class)
public class ByteQuadsCanonicalizerTest {

    private static final int SEED = -523743345;

    private static void injectReproducibleSeed(JsonFactory jsonFactory) throws Exception {
        Field byteSymbolCanonicalizerField = JsonFactory.class.getDeclaredField("_byteSymbolCanonicalizer");
        byteSymbolCanonicalizerField.setAccessible(true);

        Method factoryMethod = ByteQuadsCanonicalizer.class.getDeclaredMethod("createRoot", int.class);
        factoryMethod.setAccessible(true);
        byteSymbolCanonicalizerField.set(jsonFactory, factoryMethod.invoke(null, SEED));
    }

    @Test
    public void testArrayIndexOutOfBoundsException() throws Exception {
        JsonFactory jsonFactory = new JsonFactory();
        injectReproducibleSeed(jsonFactory);

        // Create a string with a large number of keys to trigger the bug
        StringBuilder jsonString = new StringBuilder();
        for (int i = 0;