java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

import static org.mockito.Mockito.when;
import static org.junit.Assert.assertEquals;

@RunWith(MockitoJUnitRunner.class)
public class AbstractClassMockingTest {

    @Mock
    private abstract class FakeUserAccount implements UserAccount {
        private final List<String> emails = new ArrayList<>();

        @Override
        public void addEmail(String email) {
            emails.add(email);
        }

        @Override
        List<String> getEmails() {
            return ImmutableList.copyOf(emails);
        }
    }

    @Mock
    private abstract class MockAccountService implements AccountService {
        @Override
        public void getAccount(String id, AsyncCallback<UserAccount> callback) {
            callback.onSuccess(getAccount(id));
        }

        abstract UserAccount getAccount(String id);
    }

    @Mock
    private abstract class MockAccountRpcService implements AccountRpcService {
        @Override
        Future<Account> getAccount(RpcContext context, String id) {
            checkNotNull(context); // Common sanity test. Don't have to repeat it in tests.
            return getAccount(id);
        }

