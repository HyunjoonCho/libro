public void testBrentOptimizer() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    double[] x = {1.0, 2.0, 3.0};
    double[] f = {1.0, 2.0, 0.0};
    brentOptimizer.optimize(x, f);
    double bestX = x[0];
    double bestF = f[0];
    for (int i = 1; i < x.length; i++) {
        if (f[i] < bestF) {
            bestX = x[i];
            bestF = f[i];
        }
    }
    assertTrue("Best point is not the one returned by BrentOptimizer", bestF == brentOptimizer.getBestFunctionValue());
    assertTrue("BrentOptimizer did not return the best point", Math.abs(bestX - brentOptimizer.getBestPoint()) < 1e-6);
}