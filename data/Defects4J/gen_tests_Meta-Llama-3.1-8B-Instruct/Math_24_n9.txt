java
public void testBrentOptimizer() {
    // Create a simple function that we know has a minimum at x = 0
    Function1<Double, Double> func = x -> x * x;
    BrentOptimizer optimizer = new BrentOptimizer();
    double[] point = {1.0};
    double[] min = optimizer.optimize(func, point, 0.0001, 0.0001, 0.0001);
    // Since BrentOptimizer does not guarantee to find the best point, we cannot directly check for equality
    // Instead, we check if the function value at the found point is smaller than at the initial point
    double initialValue = func.value(point[0]);
    double minValue = func.value(min[0]);
    assertTrue(minValue <= initialValue);
}
