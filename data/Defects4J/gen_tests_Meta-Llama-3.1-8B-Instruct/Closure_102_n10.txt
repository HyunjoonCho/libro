java
public void testShadowingArguments() {
    // In Java, we don't have direct equivalent of JavaScript's var keyword, but we can use a local variable to simulate the issue
    Object[] arguments = new Object[1];
    Object[] c = arguments;

    // Expected behavior: arguments should not be shadowed, but in this test, we're checking if it's shadowed
    // However, in Java, we don't have a direct equivalent of JavaScript's arguments, so we'll use a different approach
    // We'll use a method with varargs to simulate the issue
    testShadowingArgumentsMethod("test", "value", 1);
}

public void testShadowingArgumentsMethod(String... args) {
    Object[] arguments = args;
    Object[] c = arguments;

    // Since we're using varargs, the 'arguments' variable is not being shadowed
    // But the method call in the original JavaScript code is actually passing the arguments object to the function
    // So, in this test, we're checking if the 'c' variable is being shadowed by the 'arguments' variable
    assertNotSame(c, arguments);
}
