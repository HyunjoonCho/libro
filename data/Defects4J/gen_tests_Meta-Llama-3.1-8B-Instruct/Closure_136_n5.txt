java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import com.google.gwt.core.client.JavaScriptObject;

@RunWith(JUnit4.class)
public class IssueTest {

    @Test
    public void testSuperReplacement() {
        // Create a JavaScriptObject with a method that uses $super
        final JavaScriptObject obj = JavaScriptObject.createObject().cast();
        obj.setFunction("method", new Function() {
            @Override
            public native Object execute() /*-{
                return $super.method();
            }-*/;
        });

        // Compile the JavaScriptObject with advanced optimizations
        // This step is not directly possible in Java, so we'll assume it's done
        // and the JavaScriptObject has been compiled

        // Check that $super is still present in the compiled code
        // This is a bit tricky as we're dealing with JavaScript, but we can use the
        // Function's toString() method to get its source code
        String sourceCode = obj.method.toString();
        assertTrue(sourceCode.contains("$super"));
    }
}
