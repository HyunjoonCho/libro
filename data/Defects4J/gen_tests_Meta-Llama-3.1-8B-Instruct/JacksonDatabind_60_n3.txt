java
public void testPolymorphicTypeLostWhenUsingJsonValue() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
    mapper.enableDefaultTyping();

    RemoteCall remoteCall = new RemoteCall();
    String json = mapper.writeValueAsString(remoteCall);

    // Verify that the JSON string is as expected
    assertEquals("{\"args\":[[\"[B\",\"AKQEAAnw8fLz9AAAAgA=\"],[\"net.sf.lipermi.call.RemoteInstance\",{\"instanceId\":\"b0e15098-f49e-4328-b072-fc5df42799bd\",\"className\":\"com.ubitricity.devices.common.tasks.ResponseReceiver\"}]]}", json);

    // Deserialize the JSON back to a RemoteCall object
    RemoteCall deserializedRemoteCall = mapper.readValue(json, RemoteCall.class);

    // Verify that the deserialized RemoteCall object has the correct type
    assertTrue(deserializedRemoteCall instanceof RemoteCall);

    // Verify that the byte array is not deserialized to a byte array, but to a List of byte arrays
    List<byte[]> args = (List<byte[]>) deserializedRemoteCall.getArgs();
   