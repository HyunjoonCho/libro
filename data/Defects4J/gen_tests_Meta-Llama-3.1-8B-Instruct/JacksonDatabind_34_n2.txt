java
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.apache.avro.Schema;
import org.apache.avro.io.JsonEncoder;
import org.apache.avro.io.JsonEncoderBase;
import org.apache.avro.io.JsonWriter;
import org.apache.avro.io.ResolvingDecoder;
import org.apache.avro.io.ResolvingDecoderFactory;
import org.apache.avro.io.BinaryEncoder;
import org.apache.avro.io.EncoderFactory;
import org.apache.avro.specific.SpecificDatumReader;
import org.apache.avro.specific.SpecificDatumWriter;
import org.apache.avro.util.Utf8;

import java.math.BigDecimal;
import java.math.BigInteger;

import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class BigDecimalSchemaTest {

    @Test
    public void testBigDecimalSchema() throws Exception {
        // Test that BigDecimal is correctly represented in schema
        Schema schema = new Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Test\",\"fields\":[{\"name\":\"value\",\"type\":\"double\"}]}");
        TestBean bean = new TestBean(BigDecimal.valueOf(123.456));
        SpecificDatumWriter<TestBean> writer = new SpecificDatumWriter<>(TestBean.class);
        BinaryEncoder encoder =