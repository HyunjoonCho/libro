javascript
describe('Test union type inference', () => {
    it('should allow object with only one property when function parameter is union type', () => {
        function func({ prop: string }) {
            window.console.log(prop);
        }

        function func2({ prop: string, prop2?: string } | string) {
            if (typeof record ==='string') {
                window.console.log(record);
            } else {
                window.console.log(record.prop);
            }
        }

        func({ prop: 'a' });
        func2({ prop: 'a' });
    });

    it('should not allow object with only one property when function parameter is union type with a specific type first', () => {
        function func2({ prop: string, prop2: string | undefined }) {
            if (typeof record ==='string') {
                window.console.log(record);
            } else {
                window.console.log(record.prop);
            }
        }

        expect(() => func2({ prop: 'a' })).toThrow();
    });
});
