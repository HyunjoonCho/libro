java
public void testMultivariateVectorOptimizerMemoryIssue() {
    int n = 41200;
    Weight[] weights = new Weight[n];
    for (int i = 0; i < n; i++) {
        weights[i] = new Weight(1.0);
    }
    try {
        // This should cause an OutOfMemoryError due to the creation of a large matrix
        // If the issue is fixed, this test should not throw an OutOfMemoryError
        MultivariateVectorOptimizer optimizer = new MultivariateVectorOptimizer();
        optimizer.optimize(weights);
    } catch (OutOfMemoryError e) {
        // expected
    }
}
