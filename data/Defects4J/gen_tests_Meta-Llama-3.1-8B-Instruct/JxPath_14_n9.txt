public void testRoundingFunctionsWithNanAndInfinity() {
    Double nan = Double.NaN;
    Double negativeInfinity = Double.NEGATIVE_INFINITY;
    Double positiveInfinity = Double.POSITIVE_INFINITY;
    
    assertEquals(Double.NaN, coreFunction("floor", "NaN", Double.class);
    assertEquals(Double.NEGATIVE_INFINITY, coreFunction("floor", "-2 div 0", Double.class);
    assertEquals(Double.POSITIVE_INFINITY, coreFunction("floor", "2 div 0", Double.class);
    
    assertEquals(Double.NaN, coreFunction("ceiling", "NaN", Double.class);
    assertEquals(Double.NEGATIVE_INFINITY, coreFunction("ceiling", "-2 div 0", Double.class);
    assertEquals(Double.POSITIVE_INFINITY, coreFunction("ceiling", "2 div 0", Double.class);
    
    assertEquals(Double.NaN, coreFunction("round", "NaN", Double.class);
    assertEquals(Double.NEGATIVE_INFINITY, coreFunction("round", "-2 div 0", Double.class);
    assertEquals(Double.POSITIVE_INFINITY, coreFunction("round", "2 div 0", Double.class);
}