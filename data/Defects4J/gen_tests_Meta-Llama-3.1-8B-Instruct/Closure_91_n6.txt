public void testLendsAnnotation() {
    ClosureCompiler compiler = new ClosureCompiler();
    String code = "goog.provide('MyClass');\n" +
            "goog.require('superClass1');\n" +
            "goog.require('superClass2');\n" +
            "goog.scope(function() {\n" +
            "  var MyClass = function() {\n" +
            "  };\n" +
            "  goog.inherits(MyClass, superClass1);\n" +
            "  goog.inherits(MyClass, superClass2);\n" +
            "  MyClass.prototype.foo = function() {\n" +
            "    // @lends MyClass.prototype\n" +
            "  };\n" +
            "  MyClass.prototype.bar = function() {\n" +
            "    // @lends MyClass.prototype\n" +
            "  };\n" +
            "};\n" +
            "goog.exportSymbol('MyClass', MyClass);";
    compiler.compile(code);
    // Assuming we are checking for errors in the compiled code
    // The actual check will depend on how the Closure Compiler is used in your project
}