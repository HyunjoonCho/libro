java
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

public class JsonValuePolymorphismTest {

    private static final ObjectMapper mapper = new ObjectMapper();

    @Test
    public void testJsonValuePolymorphism() throws Exception {
        RemoteCall remoteCall = new RemoteCall();
        remoteCall.setInstance(new RemoteInstance("b0e15098-f49e-4328-b072-fc5df42799bd", "com.ubitricity.devices.common.tasks.ResponseReceiver"));
        byte[] bytes = "AKQEAAnw8fLz9AAAAgA=".getBytes();
        remoteCall.setBytes(bytes);

        String json = mapper.writeValueAsString(remoteCall);
        System.out.println(json);

        RemoteCall deserialized = mapper.readValue(json, RemoteCall.class);
        assertArrayEquals(bytes, deserialized.getBytes());
    }

    public static class RemoteCall {
        @JsonValue
        private byte[] bytes;

        private RemoteInstance instance;

        public byte[] getBytes() {
            return bytes;
        }

        public void setBytes(byte[] bytes) {
            this.bytes = bytes;
        }

        public Remote