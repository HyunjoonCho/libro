public void testPrototypesWithQuotes() {
    // Java equivalent of JavaScript code
    MyClass myClass = new MyClass();
    myClass["MyMethod"] = new Method() {
        public Object invoke(Object a, Object... args) {
            myClass.a = a;
            return null;
        }
    };
    System.setProperty("js.console", "java.io.PrintStream");
    // Simulate JavaScript global object
    Class<?> global = Class.forName("java.lang.System");
    Field windowField = global.getField("out");
    java.io.PrintStream window = (java.io.PrintStream) windowField.get(null);
    window.println("warning: dangerous use of the global this object.");

    // Test MyParent interface implementation
    MyParent myParent = new MyParent();
    myParent.MyMethod = new Method() {
        public Object invoke(Object a, Object... args) {
            myParent.a2 = a;
            return null;
        }
    };
    try {
        // Check if MyMethod is implemented
        myParent.MyMethod("test");
        fail("Expected 'property MyMethod on interface MyParent is not implemented by type MyClass'");
    } catch (UnsupportedOperationException e) {
        // expected
    }
}

class MyClass {}