public void testLevenbergMarquardtOptimizerIgnoringVectorialConvergenceChecker() {
    final VectorialConvergenceChecker checker = new VectorialConvergenceChecker() {
        @Override
        public boolean isConverged(double[] modelParameters, double[] parameters) {
            return false; // always return false to simulate a custom stopping criterion
        }
    };
    
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(0.1, 1e-6, 1000);
    optimizer.setVectorialConvergenceChecker(checker);
    
    // The optimizer should continue running even though the custom checker says it should stop
    // We can check this by calling the optimize method multiple times
    for (int i = 0; i < 10; i++) {
        optimizer.optimize(); // should not stop after the first iteration
    }
}