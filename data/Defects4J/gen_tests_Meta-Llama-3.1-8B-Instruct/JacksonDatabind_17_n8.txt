java
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;

public class JacksonTest {

    @Test
    public void testReadTreeWithDefaultTypingEnabled() throws Exception {
        ObjectMapper mapper = new ObjectMapper()
               .enable(SerializationFeature.INDENT_OUTPUT)
               .enableDefaultTyping()
               .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        Foo foo = new Foo("bar");
        String serialized = mapper.writeValueAsString(foo);

        assertThrows(JsonMappingException.class, () -> mapper.readTree(serialized));
    }

    @Test
    public void testValueToTreeWithDefaultTypingEnabled() throws Exception {
        ObjectMapper mapper = new ObjectMapper()
               .enable(SerializationFeature.INDENT_OUTPUT)
               .enableDefaultTyping()
               .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        Foo foo = new Foo("bar");
        assertThrows(JsonMappingException.class, () -> mapper.valueToTree(foo));
    }

    @Test
    public void testReadTreeWithDefaultTypingDisabled