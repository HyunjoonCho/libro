java
public void testLevenbergMarquardt() {
    // Define a simple function to test
    double[] x = new double[] { 1.0 };
    double[] y = new double[] { 2.0 };
    double[] func = new double[] { Math.pow(x[0] - 1, 2) };
    
    LevenbergMarquardt optimizer = new LevenbergMarquardt();
    VectorialPointValuePair result = optimizer.doOptimize(1e-6, 1e-6, new SimpleBound(x), new SimpleBound(y), new SimplePointEvaluator(func));
    
    // Check that the point and function value match
    double[] optimumPoint = result.getPoint();
    double[] optimumFunction = result.getEvaluation().getPoint();
    assertEquals(1.0, optimumPoint[0], 1e-6);
    assertEquals(0.0, optimumFunction[0], 1e-6);
}
