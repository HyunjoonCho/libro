public void testLevenbergMarquardtInconsistency() {
    LevenbergMarquardt optimizer = new LevenbergMarquardt();
    // set up a simple objective function
    ObjectiveFunction func = new ObjectiveFunction() {
        @Override
        public double evaluate(double[] point) {
            return (point[0] - 2) * (point[0] - 2) + (point[1] - 3) * (point[1] - 3);
        }
    };
    // set up the initial point
    double[] initialPoint = new double[] {0, 0};
    // run the optimizer
    VectorialPointValuePair result = optimizer.doOptimize(func, initialPoint);
    // check if the result point and the cost are consistent
    double[] point = result.getPoint();
    double cost = result.getValue();
    double objective = func.evaluate(point);
    assertEquals(cost, objective, 1e-6);
}