public void testInconsistentResultFromLevenbergMarquardt() {
    // Set up a simple problem to test
    ObjectiveFunction func = new ObjectiveFunction() {
        @Override
        public double value(double[] point) {
            return point[0] * point[0] + point[1] * point[1];
        }
    };

    LevenbergMarquardt optimizer = new LevenbergMarquardt(func, new double[] { 1.0, 1.0 }, 1.0E-8, 100);

    // Run the optimizer
    VectorialPointValuePair result = optimizer.doOptimize();

    // Check that the cost returned by the optimizer matches the cost at the optimum point
    double[] optimumPoint = result.getPoint();
    double optimumCost = func.value(optimumPoint);
    assertEquals(optimumCost, result.getObjectiveValue(), 1.0E-8);
}