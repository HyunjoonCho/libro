java
public void testLevenbergMarquardt() {
    // Set up a simple problem with known solution
    double[] x0 = new double[] { 1.0, 2.0 };
    double[] objectiveFunction = new double[] { 1.0, 2.0 };
    double[] residuals = new double[] { 1.0, 2.0 };
    double cost = 5.0;
    
    // Perform optimization
    VectorialPointValuePair result = new LevenbergMarquardt().doOptimize(new SimpleBoundConstraint[] {}, new SimpleObjective(objectiveFunction), new SimplePointDefinition(x0));
    
    // Check if the result point matches the known solution
    assertArrayEquals(x0, result.getPoint(), 1e-6);
    
    // Check if the result cost matches the known cost
    assertEquals(cost, result.getValue(), 1e-6);
    
    // Check if the result residuals match the known residuals
    assertArrayEquals(residuals, result.getResiduals(), 1e-6);
}
