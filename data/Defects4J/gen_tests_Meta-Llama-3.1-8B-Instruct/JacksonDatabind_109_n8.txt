java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class JacksonTest {

    @Test
    public void testWriteBigDecimalAsPlain() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new JavaTimeModule());
        mapper.configure(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN, true);
        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
        
        // Test with JsonFormat annotation
        TestBeanWithJsonFormat value = new TestBeanWithJsonFormat(BigDecimal.valueOf(0.0000000005));
        String json = mapper.writeValueAsString(value);
        assertEquals("{\"value\":\"0.0000000005\"}", json);
        
        // Test without JsonFormat annotation
        TestBeanWithoutJsonFormat valueWithoutJsonFormat = new TestBeanWithoutJsonFormat(BigDecimal.valueOf(0.0000000005));
        json = mapper.writeValueAsString(valueWithoutJsonFormat);
        assertEquals("{\"value\":0.0000000005}", json);
    }
}

class TestBeanWithJsonFormat {
    @JsonFormat(shape = JsonFormat.Shape.STRING)
    private BigDecimal value;
    
   