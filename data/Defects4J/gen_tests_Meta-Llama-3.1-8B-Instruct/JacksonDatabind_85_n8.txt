java
@JsonFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSZ")
public class TestClass {
    @JsonProperty
    private Date date;

    public TestClass(Date date) {
        this.date = date;
    }
}

public void testDateTimeSerializerBase() throws Exception {
    // Create a test JSON factory with a custom date format
    ObjectMapper mapper = new ObjectMapper();
    mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ"));

    // Serialize the object with the custom date format
    TestClass testObject = new TestClass(new Date());
    String json = mapper.writeValueAsString(testObject);

    // Parse the JSON and verify the date format is preserved
    JsonNode jsonNode = new ObjectMapper().readTree(json);
    JsonNode dateNode = jsonNode.get("date");
    assertNotNull(dateNode);

    // Create a new serializer with the default format
    DateTimeSerializerBase serializer = new DateTimeSerializerBase(mapper, TestClass.class, "date");
    String serializedDate = serializer.serialize(null, TestClass.class, "date", dateNode, null);

    // Verify the date format was changed to the default
    assertEquals("2010-01-01T12:00:00.