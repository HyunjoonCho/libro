java
import com.fasterxml.jackson.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class JacksonDeserializationTest {

    @Test
    public void testIssue() throws IOException {
        ObjectMapper mapper = new ObjectMapper();

        MyCustomIdInterface foo = new Foo();
        Map<UUID, MyCustomIdInterface> myHashMap = new MyHashMap<>();
        myHashMap.put(UUID.randomUUID(), foo);

        String json = "{\"something\":[{\"id\":\"" + foo.getId() + "\",\"property\":\"value\"}]";

        Map<UUID, MyCustomIdInterface> deserializedMap = mapper.readValue(json, Map.class);
        assertEquals(1, deserializedMap.size());
        assertEquals(foo, deserializedMap.values().iterator().next());
    }
}

class MyCustomIdInterface {
    public String getId() {
        return "some-id";
    }
}

class Foo implements MyCustomIdInterface {
    @Override
    public String getId() {
        return "some-id";
    }
}

class MyHashMap<K, V extends My