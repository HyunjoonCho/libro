java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.JsonFormat;
import com.fasterxml.jackson.module.jakarta.cfg.JakartaModule;
import org.junit.jupiter.api.Test;
import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class JacksonTest {

    @Test
    public void testWriteBigDecimalAsPlainIgnoredWithJsonFormat() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new JakartaModule());
        mapper.configure(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN, true);
        JsonFormat jsonFormat = JsonFormat.shape(JsonFormat.Shape.STRING);
        mapper.configure(SerializationFeature.WRITE_NUMBER_AS_PLAIN_DIGITS, true);

        BigDecimal value = new BigDecimal("0.0000000005");
        String expected = "0.0000000005";

        String result = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(new Test(value, jsonFormat));
        assertEquals(expected, result);
    }

    static class Test {
        @JsonFormat(shape = JsonFormat.Shape.STRING)
        private BigDecimal value;
        @JsonFormat(shape = JsonFormat.Shape.STRING)
        private JsonFormat jsonFormat;

        public Test(BigDecimal value, JsonFormat jsonFormat) {
            this