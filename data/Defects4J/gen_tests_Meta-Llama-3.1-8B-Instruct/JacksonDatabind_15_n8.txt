java
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import java.io.IOException;
import java.io.StringWriter;
import java.util.List;

import static org.junit.Assert.assertEquals;

@RunWith(JUnit4.class)
public class XmlAdapterTest {

    @Test
    public void testXmlAdapter() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        SomeIntListHolder listHolder = new SomeIntListHolder();
        listHolder.setListOne(asList(1, 2, 3));

        // Test with XmlAdapter<Object, List<Integer>>
        XmlAdapter<Object, List<Integer>> adapter = new XmlAdapter<Object, List<Integer>>() {
            @Override
            public Object marshal(List<Integer> list) throws Exception {
                return Joiner.on(",").join(list);
            }

            @Override
            public List<Integer> unmarshal(Object value) throws Exception {
                return null;
            }
        };
        mapper.addMixIn(SomeIntListHolder.class, MixIn.class);
        String json = mapper