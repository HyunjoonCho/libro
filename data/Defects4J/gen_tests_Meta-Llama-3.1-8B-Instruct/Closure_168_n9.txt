public void testIssue107() {
    // Create a Person class with a method that takes an argument
    var Person = function(name) {
        this.initialize.apply(this, arguments);
    };
    Person.prototype.initialize = function(name) {
        this.name = name;
    };
    Person.prototype.getName = function() {
        return this.name;
    };
    Person.prototype.say = function(message) {
        window.console.log(this.getName(1) +'says:'+ message);
    };

    // Create instances of Person and call the say method with an argument
    var joe = new Person('joe');
    try {
        joe.say('hi');
        fail("Expected'say' method to throw an error");
    } catch (e) {
        // Expected error: Function Person.prototype.say: called with 1 argument(s). Function requires 0 argument(s)
    }

    // Create a Person class with a method that takes an argument, but is called in a setTimeout
    Person = function(name) {
        this.initialize.apply(this, arguments);
    };
    Person.prototype.initialize = function(name) {
        this.name = name;
    };
    Person.prototype.getName = function() {
        return this.name;
    };
    Person.prototype.say