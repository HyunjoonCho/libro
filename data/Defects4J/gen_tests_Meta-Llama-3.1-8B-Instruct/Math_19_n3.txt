java
public void testCMAESOptimizerBounds() {
    // Create a simple fitness function that returns the sum of its parameters
    FitnessFunction fitnessFunction = new FitnessFunction() {
        @Override
        public double evaluate(double[] parameters) {
            double sum = 0;
            for (double parameter : parameters) {
                sum += parameter;
            }
            return sum;
        }
    };

    // Create a CMAESOptimizer with large bounds
    CMAESOptimizer optimizer = new CMAESOptimizer(1, -Double.MAX_VALUE, Double.MAX_VALUE, fitnessFunction);

    // Run the optimizer
    double[] parameters = optimizer.optimize(100);

    // Check if any of the parameters are NaN
    for (double parameter : parameters) {
        assertNotEquals(Double.NaN, parameter);
    }
}
