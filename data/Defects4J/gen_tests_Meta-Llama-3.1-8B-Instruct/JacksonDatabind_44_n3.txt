java
@Test
public void testPolymorphicTypesLosingProperties() {
    // Define a base class
    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type")
    @JsonSubTypes({
            @JsonSubTypes.Type(name = "typeA", value = TypeA.class),
            @JsonSubTypes.Type(name = "typeB", value = TypeB.class)
    })
    public static abstract class BaseType {
        public String baseProperty = "base";
    }

    // Define a sub-class that extends the base class
    @JsonTypeName("typeA")
    public static class TypeA extends BaseType {
        public String subTypeAProperty = "subTypeA";
    }

    // Define another sub-class that extends the base class
    @JsonTypeName("typeB")
    public static class TypeB extends BaseType {
        public String subTypeBProperty = "subTypeB";
    }

    // Test that the base class properties are not lost
    ObjectMapper mapper = new ObjectMapper();
    TypeA typeA = new TypeA();
    String json = mapper.writeValueAsString(typeA);
    TypeA deserializedTypeA = mapper