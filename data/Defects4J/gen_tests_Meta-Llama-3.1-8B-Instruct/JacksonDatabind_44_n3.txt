public void testPolymorphicTypes() {
    ObjectMapper mapper = new ObjectMapper();
    JsonNode json = mapper.valueToTree(new BaseClass());
    assertEquals("BaseClass", json.get("type").asText());
    assertEquals("baseProperty", json.get("baseProperty").asText());
    assertEquals("subProperty", json.get("subProperty").asText());
    
    json = mapper.valueToTree(new SubClass());
    assertEquals("SubClass", json.get("type").asText());
    assertEquals("baseProperty", json.get("baseProperty").asText());
    assertEquals("subProperty", json.get("subProperty").asText());
    
    json = mapper.valueToTree(new BaseClass());
    mapper.addMixIn(BaseClass.class, DefaultImplBaseMixIn.class);
    assertEquals("BaseClass", json.get("type").asText());
    assertEquals("defaultBaseProperty", json.get("baseProperty").asText());
    assertEquals("baseProperty", json.get("subProperty").asText());
}