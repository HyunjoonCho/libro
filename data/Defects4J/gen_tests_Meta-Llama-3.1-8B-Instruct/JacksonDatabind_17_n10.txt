public void testDefaultTypingWithNoTypeInfo() throws IOException {
    ObjectMapper mapper = new ObjectMapper()
           .enableDefaultTyping()
           .enable(MapperFeature.AUTO_DETECT_GETTERS)
           .enable(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS)
           .disable(MapperFeature.USE_GETTERS_AS_SETTERS)
           .disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)
           .enable(SerializationFeature.INDENT_OUTPUT)
           .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

    String json = "{\"bar\":\"bar\"}";
    try {
        mapper.readTree(json);
        fail("Expected JsonMappingException");
    } catch (JsonMappingException e) {
        // expected
    }

    try {
        mapper.valueToTree(new Foo("bar"));
        fail("Expected JsonMappingException");
    } catch (JsonMappingException e) {
        // expected
    }

    // for comparison, test with defaultTyping disabled
    ObjectMapper mapperWithoutDefaultTyping = new ObjectMapper();
    mapperWithoutDefaultTyping.writeValueAsString(new Foo("bar")); // {"bar" : "bar"}
    mapperWithoutDefaultTyping.readTree("{\"bar\":\"bar\"}");
    mapperWithoutDefaultTyping.valueToTree(new Foo("