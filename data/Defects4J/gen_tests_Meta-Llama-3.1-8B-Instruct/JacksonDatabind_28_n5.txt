java
public class TestJsonDeserialization {

    private static final ObjectMapper MAPPER = new ObjectMapper();

    @Before
    public void setup() {
        MAPPER.activateDefaultTyping(LibraryKind.Jackson);
    }

    @Test
    public void testDeserializationFromEmptyObjectNode() throws JsonProcessingException {
        ObjectNode object = new ObjectNode(JsonNodeFactory.instance);

        String json = MAPPER.writeValueAsString(object);
        System.out.println("json: " + json);

        ObjectNode de1 = MAPPER.readValue(json, ObjectNode.class);  // this works
        System.out.println("Deserialized to ObjectNode: " + de1);

        try {
            MyValue de2 = MAPPER.readValue(json, MyValue.class);  // this should throw exception
            System.out.println("Deserialized to MyValue: " + de2);
            fail("Expected JsonMappingException");
        } catch (JsonMappingException e) {
            System.out.println("Caught expected exception: " + e.getMessage());
        }
    }

    @Test
    public void testDeserializationFromNonEmptyObjectNode() throws JsonProcessingException {
        ObjectNode object = new ObjectNode(JsonNodeFactory.instance);
        object.put("k", "v");

