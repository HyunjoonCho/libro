public void testToStringStyleMemoryLeak() throws Exception {
    // Create a ThreadLocal
    ThreadLocal<ToStringStyle> threadLocal = new ThreadLocal<>();

    // Set the ToStringStyle on the ThreadLocal
    ToStringStyle style = ToStringStyle.SIMPLE_STYLE;
    threadLocal.set(style);

    // Get the ThreadLocal to ensure it's not null
    ToStringStyle retrievedStyle = threadLocal.get();

    // Remove the ThreadLocal to prevent memory leak
    threadLocal.remove();

    // Now, let's simulate a web application reload by creating a new thread
    Thread thread = new Thread(() -> {
        try {
            // Access the ToStringStyle to create a reference chain
            retrievedStyle = ToStringStyle.SIMPLE_STYLE;
        } catch (Exception e) {
            fail("ToStringStyle should not be garbage collected");
        }
    });
    thread.start();
    thread.join();

    // Now, let's check if the ToStringStyle was garbage collected
    try {
        retrievedStyle = ToStringStyle.SIMPLE_STYLE;
        fail("ToStringStyle should be garbage collected");
    } catch (NullPointerException e) {
        // Expected
    }
}