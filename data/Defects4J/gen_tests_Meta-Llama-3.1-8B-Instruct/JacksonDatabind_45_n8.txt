java
public void testNumberShapePrecedence() {
    // Test case that fails before fix (should parse as NUMBER)
    assertEquals(NumberShape.NUMBER, parseShape("123", "en", "NUMBER"));
    
    // Test case that passes after fix (should not parse as NUMBER due to explicit shape)
    assertEquals(NumberShape.NUMBER, parseShape("123", "en", "NUMBER"));
    assertEquals(NumberShape.TEXT, parseShape("123", "en"));
}

private NumberShape parseShape(String value, String locale, String shape) {
    // Simulate the parsing logic here, or use a real method if it exists
    if (shape!= null && shape.equals("NUMBER")) {
        return NumberShape.NUMBER;
    } else {
        // For simplicity, assume parsing to NUMBER by default
        return NumberShape.NUMBER;
    }
}
