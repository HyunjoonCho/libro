public void testStringCollectionDeserializer() {
    // create a custom collection class with a no-arg constructor
    class CustomCollection<T> extends AbstractCollection<T> {
        private final List<T> delegate;

        public CustomCollection(List<T> delegate) {
            this.delegate = Collections.unmodifiableList(delegate);
        }

        @Override
        public boolean add(T e) {
            throw new UnsupportedOperationException();
        }

        @Override
        public Iterator<T> iterator() {
            return delegate.iterator();
        }

        @Override
        public int size() {
            return delegate.size();
        }
    }

    // create a test bean with a custom collection of strings
    class TestBean {
        @JacksonXmlElementWrapper(localName = "strings")
        @JacksonXmlProperty(localName = "string")
        private CustomCollection<String> strings = new CustomCollection<>(Arrays.asList("hello", "world"));

        public CustomCollection<String> getStrings() {
            return strings;
        }

        public void setStrings(CustomCollection<String> strings) {
            this.strings = strings;
        }
    }

    // serialize and deserialize the test bean
    TestBean bean = new TestBean();
    String json = mapper.writeValueAsString(bean);
    TestBean deserializedBean