java
import org.junit.Test;
import org.junit.runner.Description;
import org.junit.runner.JUnitCore;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;
import org.junit.runner.notification.RunListener;

import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

public class ArgumentCaptorTest {

    @Test
    public void testArgumentCaptorWithVarargs() {
        ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);
        when(mock(Iterable.class).iterator()).thenReturn(mock(Iterator.class));
        when(mock(Iterator.class).next()).thenReturn("arg1", "arg2", "arg3");

        RunListener listener = mock(RunListener.class);
        JUnitCore.runClasses(listener, new TestClass());
        verify(listener).testRunFinished(Result.result().wasSuccessful());

        verify(mock(Iterable.class).iterator()).next(captor.capture());
        String[] args = captor.getAllValues().toArray(new String[0]);
        assert args.length == 3;
        assert args[0].equals("arg1");
        assert args[1].equals("arg2");
        assert args[2].equals("arg3");
    }
}

class TestClass {
   