java
public void testSerializationTimeZone() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new SimpleModule());
    mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);

    // Test that setting a DateFormat does not affect the time zone in 2.5.x
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    mapper.setDateFormat(simpleDateFormat);
    assertEquals(simpleDateFormat.getTimeZone(), mapper.getSerializationConfig().getTimeZone());

    // Test that setting a DateFormat affects the time zone in 2.6.0
    DateTimeFormatter jodaFormatter = DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss").withZoneUTC();
    SimpleModule jodaModule = new SimpleModule();
    jodaModule.addSerializer(DateTime.class, new DateTimeSerializer(jodaFormatter));
    mapper.registerModule(jodaModule);
    mapper.setDateFormat(simpleDateFormat);
    assertEquals(simpleDateFormat.getTimeZone(), mapper.getSerializationConfig().getTimeZone());

    // Test serialization
    DateTime dt = new DateTime(1988, 6, 25, 20, 30, DateTimeZone.UTC);
    String json = mapper.writeValueAsString(dt);
    assertEquals("1988-06-25 