java
public void testExtraneousTypeMapping() {
    // Test case 1: Base type is concrete and has explicit name
    Class<?> concreteClass = MyClass.class;
    assertEquals(1, concreteClass.getTypeId().getName().length);
    assertEquals(concreteClass.getTypeId().getName(), concreteClass.getName());

    // Test case 2: Base type is abstract and has explicit name
    abstract Class<?> abstractClass = AbstractClass.class;
    assertEquals(1, abstractClass.getTypeId().getName().length);
    assertEquals(abstractClass.getTypeId().getName(), abstractClass.getName());

    // Test case 3: Base type is concrete and has default name
    Class<?> concreteDefaultClass = DefaultClass.class;
    assertEquals(0, concreteDefaultClass.getTypeId().getName().length);

    // Test case 4: Base type is abstract and has default name
    abstract Class<?> abstractDefaultClass = AbstractDefaultClass.class;
    assertEquals(0, abstractDefaultClass.getTypeId().getName().length);
}

// Example classes
class MyClass {}
class AbstractClass {}
class DefaultClass {}
class AbstractDefaultClass {}
