public void testLevenbergMarquardt() {
    // Set up a simple function for testing
    final Function1D func = new Function1D() {
        @Override
        public double value(double x) {
            return x*x + 2*x + 1;
        }
    };

    final LevenbergMarquardt optimizer = new LevenbergMarquardt(0.1, 1e-6, 1000);
    final VectorialPointValuePair result = optimizer.doOptimize(func, 1, 1);

    // Check that the point, cost and residuals are consistent
    assertEquals(1, result.getPoint()[0], 1e-6);
    assertEquals(-1, result.getPoint()[1], 1e-6);
    assertEquals(-1, result.getPoint()[2], 1e-6);
    assertEquals(0, result.getValue(), 1e-6);
    assertEquals(0, result.getF(), 1e-6);
}