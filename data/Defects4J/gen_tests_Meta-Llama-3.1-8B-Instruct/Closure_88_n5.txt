java
public void testIncorrectAssignmentRemoval() {
    String originalCode = "var nodeId; return ((nodeId=someNode.id) && (nodeId=parseInt(nodeId.substr(1))) && nodeId>0);";
    String compiledCode = "function closureCompilerTest(b){var a;return b.id&&(a=parseInt(a.substr(1)))&&a>0};";

    // Test that the original code is not modified when it contains assignments
    String[] expectedLines = originalCode.split("\n");
    String[] actualLines = compiledCode.split("\n");
    for (int i = 0; i < expectedLines.length; i++) {
        assertEquals(expectedLines[i], actualLines[i]);
    }

    // Test that the original code is modified when it does not contain assignments
    originalCode = "var nodeId; nodeId = someNode.id; return (nodeId && nodeId>0);";
    compiledCode = "function closureCompilerTest(b){var a;return b.id&&a>0};";
    expectedLines = originalCode.split("\n");
    actualLines = compiledCode.split("\n");
    for (int i = 0; i < expectedLines.length; i++) {
        assertEquals(expectedLines[i