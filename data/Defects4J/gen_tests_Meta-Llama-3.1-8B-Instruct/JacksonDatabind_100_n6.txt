java
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.base.ParserMinimalBase;
import com.fasterxml.jackson.core.util.Base64Variant;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.TextNode;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

public class TreeTraversingParserTest {

    @Test
    public void testBase64VariantIgnored() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        JsonParser jp = new TreeTraversingParser(mapper, null);
        jp.nextToken();
        jp.nextToken();
        jp.nextToken(); // Start of JSON array
        jp.nextToken(); // Start of JSON object
        jp.nextToken(); // Key
        jp.nextToken(); // Value
        JsonNode node = JsonNodeFactory.instance.fromString("SGVsbG8gd29ybGQ=");
        TextNode textNode = (TextNode) node;
        Base64Variant base64Variant = Base64Variants.MIME_NO_LINEFEEDS;
        byte[] expected = base64Variant.decode(textNode.asQuotedString());
        byte[] actual = textNode.binaryValue(base64Variant).getBytes();
        assertArrayEquals