public void testTypeIdResolver() {
    ObjectMapper mapper = new ObjectMapper();
    TypeIdResolver resolver = new TypeIdResolver() {
        @Override
        public String typeAsId(JavaType type) {
            return type.toString();
        }

        @Override
        public JavaType typeFromId(String id) {
            return TypeFactory.defaultInstance().constructType(List.class, String.class);
        }
    };
    mapper.setTypeIdResolver(resolver);
    try {
        String json = "{\"values\": [\"a\", \"b\"]}";
        JsonNode node = mapper.readTree(json);
        List<String> list = mapper.treeToValue(node, List.class);
        assertEquals(String.class, list.get(0).getClass());
    } catch (IOException e) {
        fail("Unexpected exception");
    }
}