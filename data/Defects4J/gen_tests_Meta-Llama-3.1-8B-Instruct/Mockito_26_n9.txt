java
// Given a class with a final field
public class MyClass {
    @InjectMocks
    private final MyService myService;
    
    // Other fields and methods...
}

// Test case
public class MyClassTest {
    @Test
    public void testMyService() {
        MyClass myClass = new MyClass();
        // The following line would fail with Mockito 1.9.0 and later
        // when trying to use @InjectMocks for a final field
        // myClass.myService = mock(MyService.class);
        
        // Workaround: Create a constructor for MyClass that takes MyService as a parameter
        MyClass myClassWithMockService = new MyClass(mock(MyService.class));
        
        // Now myClassWithMockService.myService is not final
        // and can be set to a mock
        myClassWithMockService.myService = mock(MyService.class);
        
        // Use the class with the mock service...
    }
}
