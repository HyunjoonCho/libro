java
public void testWideBoundsInCMAESOptimizer() {
    double lowerBound = Double.MAX_VALUE;
    double upperBound = Double.MAX_VALUE * 2;
    CMAESOptimizer optimizer = new CMAESOptimizer(1, lowerBound, upperBound, 1.0, 1.0);
    double[] parameters = new double[1];
    optimizer.optimize(new FitnessFunction() {
        @Override
        public double evaluate(double[] parameters) {
            return 0; // dummy fitness function
        }
    }, parameters);
    // Assert that at least one of the parameters is NaN
    for (int i = 0; i < parameters.length; i++) {
        assertTrue(Double.isNaN(parameters[i]));
    }
}
