java
public void testBrentOptimizerBestPoint() {
    BrentOptimizer brentOptimizer = new BrentOptimizer();
    double[] initialPoint = {1.0};
    double[] lowerBound = {0.0};
    double[] upperBound = {2.0};
    double[] stepSize = {1.0};
    brentOptimizer.optimize(new Function() {
        @Override
        public double value(double[] point) {
            return Math.pow(point[0] - 1.5, 2);
        }
    }, initialPoint, lowerBound, upperBound, stepSize);
    double[] bestPoint = brentOptimizer.getBestPoint();
    double bestValue = brentOptimizer.getBestValue();
    brentOptimizer.optimize(new Function() {
        @Override
        public double value(double[] point) {
            return Math.pow(point[0] - 1.5, 2);
        }
    }, initialPoint, lowerBound, upperBound, stepSize);
    double[] secondBestPoint = brentOptimizer.getBestPoint();
    double secondBestValue = brentOptimizer.getBestValue();
    // This assertion will fail if BrentOptimizer does not return the best point
    assertTrue(bestValue <= secondBestValue);
}
