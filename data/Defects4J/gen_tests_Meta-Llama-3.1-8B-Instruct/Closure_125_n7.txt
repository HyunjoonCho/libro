public void testIssue() throws Exception {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(WarningLevel.VERBOSE);
    options.setCompilationLevel(CompilationLevel.SIMPLE_OPTIMIZATIONS);
    compiler.compile("var test = {}; " +
            "test.T = function() {}; " +
            "/** @interface */" +
            "test.A = function() {}; " +
            "/** @constructor */" +
            "test.B = function() {}; " +
            "/** @constructor */" +
            "test.X = function() {" +
            " this.type = test.A;" +
            " this.t = this.f();" +
            "}; " +
            "/** @return {test.T} */" +
            "test.X.prototype.f = function() {" +
            " if (this.type === test.A) {" +
            " return new test.A();" +
            "} else if (this.type === test.B) {" +
            " return new test.B();" +
            "}" +
            "};", null, new PrintWriter(System.out));
    Assert.fail("Expected CompilerException");
}