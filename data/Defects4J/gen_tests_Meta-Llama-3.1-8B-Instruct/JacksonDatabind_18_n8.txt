public void testErrorRecoveryForReadValues() throws JsonProcessingException {
    JsonFactory factory = new JsonFactory();
    JsonParser jp = factory.createParser(new StringReader("{\"a\": [1, 2, 3]"));
    MappingIterator<Object> iter = new MappingIterator<>(jp, new TypeFactory.Std(), new DefaultDeserializationContext());
    ObjectReader or = ObjectReader.create(iter, new TypeFactory.Std());
    try {
        or.readValues(MapTypeFactory.defaultInstance().constructMapType(Map.class, String.class, Integer.class));
    } catch (JsonProcessingException e) {
        // Intentionally cause a tokenization error
        jp.nextToken();
    }
    // Try to recover by matching closing END_OBJECT
    jp.nextToken();
    jp.nextToken();
    jp.nextToken();
    assertEquals(JsonToken.END_OBJECT, jp.nextToken());
}