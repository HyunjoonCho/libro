import java.io.ByteArrayInputStream;
import java.io.IOException;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.junit.Test;
import static org.junit.Assert.*;

public void testTarInputStreamWithSymlink() {
    // Simulate a tar header that would be found in an AIX-created tar file containing a symlink.
    // This is a simplified representation of the header that might cause the issue.
    byte[] tarHeader = new byte[]{0, 0, 0, 0, 0, 0, 0, 0, '1', '7', '2', '2', 0, 0, 0, 0};
    
    ByteArrayInputStream bais = new ByteArrayInputStream(tarHeader);
    TarArchiveInputStream tarInputStream = new TarArchiveInputStream(bais);
    
    TarArchiveEntry entry = null;
    try {
        entry = tarInputStream.getNextTarEntry();
        fail("Expected IOException to be thrown");
    } catch (IOException e) {
        assertEquals("Invalid byte 0 at offset 0 in '{NUL}1722000726'len=12", 
                     e.getCause().getMessage());
    } finally {