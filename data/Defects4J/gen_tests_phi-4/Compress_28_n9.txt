public void testCorruptedTarArchiveInputStream() throws IOException {
    // Create a corrupted tar archive file
    File corruptedTarFile = createCorruptedTarFile("test.tar");

    try (TarArchiveInputStream input = new TarArchiveInputStream(new FileInputStream(corruptedTarFile))) {
        ArchiveEntry nextEntry;

        while ((nextEntry = input.getNextEntry())!= null) {
            // Expecting an IOException to be thrown due to unexpected EOF
            fail("IOException expected due to unexpected EOF in corrupted tar archive");
        }
    } catch (EOFException e) {
        // Expected exception
    } catch (IOException e) {
        fail("Unexpected IOException: " + e.getMessage());
    }
}

private File createCorruptedTarFile(String fileName) throws IOException {
    File file = new File(fileName);
    try (FileOutputStream fos = new FileOutputStream(file)) {
        // Write some random content to simulate a tar file
        byte[] buffer = new byte[1024];
        new Random().nextBytes(buffer);
        fos.write(buffer);
        // Truncate the file to simulate corruption
        fos.getChannel().truncate(512);
    }
    return file;
}