public void testMockitoAbstractClassIssue() {
    // Example 1: Fake with trivial logic
    MockitoAnnotations.openMocks(this);
    when(userAccount.getEmails()).thenReturn(Arrays.asList("test@example.com"));
    when(userAccount.addEmail(anyString())).thenAnswer(invocation -> {
        userAccount.getEmails().add(invocation.getArgument(0));
        return null;
    });

    // Test consistency
    assertEquals(Collections.emptyList(), userAccount.getEmails());
    userAccount.addEmail("test@example.com");
    assertEquals(Collections.singletonList("test@example.com"), userAccount.getEmails());

    // Example 2: Callback-style API
    MockitoAnnotations.openMocks(this);
    when(service.getAccount("id", any(AsyncCallback.class))).thenAnswer(invocation -> {
        AsyncCallback<UserAccount> callback = invocation.getArgument(1);
        callback.onSuccess(new FakeUserAccount());
        return null;
    });

    // Example 3: Uninteresting parameters
    MockitoAnnotations.openMocks(this);