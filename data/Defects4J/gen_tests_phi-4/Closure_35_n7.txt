import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class RecordReturnTypeTest {

    record Result(Object prop1, String prop2, String prop3) {}

    public Result func(boolean a, boolean b) {
        if (a) {
            return new Result(new Object() {{ put("a", 3); }}, null, null);
        }
        if (b) {
            return new Result(null, "prop2", null);
        } else {
            return new Result(null, null, "prop3");
        }
    }

    @Test
    public void testTypeMismatch() {
        assertThrows(ClassCastException.class, () -> {
            Result result = func(true, false);
            // Attempt to access prop2 or prop3 should cause a mismatch
            if (result.prop2!= null) {
                System.out.println(result.prop2);
            } else {
                System.out.println(result.prop3);
            }
        });
    }
}

This test method attempts to reproduce the type mismatch error by calling the function with parameters that lead to a partial assignment of the `Result` record. The `assertThrows` assertion checks for a `ClassCastException`, which would occur due to the type mismatch when