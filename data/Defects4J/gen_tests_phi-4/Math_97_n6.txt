public void testBrentSolverIllegalArgumentException() {
    Function<Double, Double> function = x -> {
        if (x < 1) return 0.0;
        return -x * 101945.04630982173;
    };

    BrentSolver solver = new BrentSolver(function, 1e-10, 100);
    
    try {
        solver.solve(-100000.0, 1.7976931348623157E308);
        fail("Expected IllegalArgumentException to be thrown");
    } catch (IllegalArgumentException e) {
        assertEquals("Function values at endpoints do not have different signs. " +
                "Endpoints: [-100000.0,1.7976931348623157E308] Values: [0.0,-101945.04630982173]", e.getMessage());
    }
}

This test method attempts to reproduce the `IllegalArgumentException` by using a function that evaluates to `0.0` at one endpoint and a negative value at the other, which should trigger the exception as described in the bug report. The test checks that the exception is thrown with the expected message.