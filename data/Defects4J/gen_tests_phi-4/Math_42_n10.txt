public void testNegativeValueWithRestrictNonNegative() {
    // Define the objective function coefficients
    double[] coefficients = new double[]{1, 1, 0};

    // Define the constraints
    RealMatrix lhs = MatrixUtils.createRealMatrix(new double[][]{{1, 0, 1}});
    RealVector rhs = MatrixUtils.createRealVector(new double[]{1});

    // Create the linear constraint
    LinearConstraint constraint = new LinearConstraint(lhs, ConstraintType.EQ, rhs);

    // Create the function to be minimized
    LinearObjectiveFunction objectiveFunction = new LinearObjectiveFunction(coefficients, 0);

    // Set up the solver
    SimplexSolver solver = new SimplexSolver();

    // Optimize with the restrictToNonnegative flag set to true
    Solution solution = solver.optimize(objectiveFunction, new LinearConstraint[]{constraint}, GoalType.MINIMIZE, true);

    // Check the solution
    double[] solutionValues = solution.getPoint();
    assertEquals(1.0, solutionValues[0], 1e-9); // x = 1
    assertEquals(-1.0, solutionValues[1], 1e-9); // y = -1
}