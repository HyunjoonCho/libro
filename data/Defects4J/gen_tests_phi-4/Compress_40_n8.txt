public void testOverflowInBitInputStream() {
    ByteArrayInputStream in = new ByteArrayInputStream(new byte[] {87, 45, 66, 15, 90, 29, 88, 61, 33, 74});
    BitInputStream bin = new BitInputStream(in, ByteOrder.LITTLE_ENDIAN);
    
    try {
        long ret1 = bin.readBits(5);
        long ret2 = bin.readBits(63);
        long ret3 = bin.readBits(12);
        
        // Since overflow occurs, we expect an unexpected or incorrect result in ret3
        // Asserting that ret3 does not match expected value can help identify the overflow issue
        assertEquals("Unexpected result due to overflow", expectedValue, ret3);
    } catch (IOException e) {
        fail("IOException should not have been thrown");
    }
}

Note: Replace `expectedValue` with the correct expected value for `bin.readBits(12);` to assert against the overflow behavior.