public void testSwitchedOrderChangeSemantic() {
    var customData = new HashMap<String, String>();
    customData.put("key", "value");

    String result = testRemoveKey("key");
    boolean hasKey = customData.containsKey("key");

    assertNull(result); // Expecting null because the order of operations has changed
    assertFalse(hasKey); // Expecting false because the key should be deleted
}

private String testRemoveKey(String key) {
    HashMap<String, String> dataSlot = new HashMap<>(customData);
    String retval = dataSlot!= null && dataSlot.containsKey(key)? dataSlot.get(key) : null;
    boolean hadKey = dataSlot!= null && dataSlot.containsKey(key);

    if (dataSlot!= null) {
        dataSlot.remove(key);
    }

    return hadKey? retval : null;
}