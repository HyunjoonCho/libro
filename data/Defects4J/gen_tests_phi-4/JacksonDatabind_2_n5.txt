public void testUnwantedPojosInTreeSerialization() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new SimpleModule().addSerializer(ListAttribute.class, new ListAttributeSerializer()));
    
    ListAttribute listAttribute = new ListAttribute();
    listAttribute.setItemJsonKey("exampleKey");
    listAttribute.setItems(Arrays.asList("item1", "item2"));

    // Serialize to a byte array
    byte[] jsonBytes = mapper.writeValueAsBytes(listAttribute);
    
    // Read the byte array into a JsonNode
    JsonNode tree = mapper.readTree(jsonBytes);

    // Check if the "items" field is a JsonNode array and not a VALUE_EMBEDDED_OBJECT
    assertTrue(tree.get("items").isArray());
    assertFalse(tree.get("items").isValueNode());
}

This test method checks if the `items` field is serialized as a JSON array rather than a `VALUE_EMBEDDED_OBJECT`. The workaround involves serializing to a byte array and then reading it into a `JsonNode`.