import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty.Access;
import com.fasterxml.jackson.databind.DeserializationFeature;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class JsonPropertyReadOnlyTest {

    @Test
    public void testJsonPropertyReadOnly() throws Exception {
        TestPojo pojo = new TestPojo();
        pojo.setFirstName("John");
        pojo.setLastName("Doe");

        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

        String json = "{\"firstName\":\"Jane\",\"lastName\":\"Smith\",\"fullName\":\"Jane Smith\"}";

        TestPojo deserializedPojo = mapper.readValue(json, TestPojo.class);

        assertEquals("Jane", deserializedPojo.getFirstName());
        assertEquals("Smith", deserializedPojo.getLastName());
        assertEquals("Jane Smith", deserializedPojo.getFullName());
    }
}

This test checks that the `fullName` field is not deserialized, and the `firstName` and `lastName` are correctly set, resulting in the expected `fullName`.