public void testClosureCompilerDefineAnnotationLineSplit() {
    String jsCode = "/** @define {string} */\n" +
                    "var CONSTANT = \"some very long string name that I want to wrap \" +\n" +
                    "\"and so break using a + since I don't want to \" +\n" +
                    "\"introduce a newline into the string.\";\n";

    // Simulate running closure-compiler on the jsCode and expecting an error
    String expectedError = "Error: Unexpected character ';'";
    String actualResult = runClosureCompiler(jsCode);

    assertEquals(expectedError, actualResult);
}

private String runClosureCompiler(String jsCode) {
    // Mocked method to simulate running closure-compiler on the JavaScript code
    // This should be replaced with actual logic to run closure-compiler
    if (jsCode.contains("\n")) {
        return "Error: Unexpected character ';'";
    }
    return "No error";
}

Note: The `runClosureCompiler` method is a placeholder to simulate the behavior of running `closure-compiler`. In a real test environment, you would replace this with actual logic to run the compiler and capture its output.