import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.annotation.JsonDeserialize;

import java.util.Map;
import java.util.UUID;

import static org.junit.jupiter.api.Assertions.assertThrows;

public void testJacksonDeserialization() throws JsonProcessingException {
    String json = "{ \"something\": [{ \"id\": \"123e4567-e89b-12d3-a456-426614174000\", \"property\": \"value\" }] }";

    ObjectMapper objectMapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addDeserializer(MyCustomIdInterface.class, new MyCustomIdInterfaceDeserializer());
    
    objectMapper.registerModule(module);

    assertThatExceptionOfType(JsonProcessingException.class)
           .isThrownBy(() -> objectMapper.readValue(json, YourPojoClass.class))
           .withMessageContaining("Can not construct instance of MyCustomIdInterface");
}