import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertThrows;

public class DeserializationTest {

    public static class MyValue {
        private final ObjectNode object;

        public MyValue(ObjectNode object) {
            this.object = object;
        }

        public ObjectNode getObject() {
            return object;
        }
    }

    @Test
    public void testDeserializationFromEmptyObject() throws Exception {
        ObjectMapper om = new ObjectMapper();

        ObjectNode object = new ObjectNode(JsonNodeFactory.instance);

        String json = om.writeValueAsString(object);
        System.out.println("json: " + json);

        assertDoesNotThrow(() -> om.readValue(json, ObjectNode.class));

        JsonMappingException exception = assertThrows(JsonMappingException.class, () -> {
            om.readValue(json, MyValue.class);
        });

        System.out.println("Exception: " + exception.getMessage());
    }

    private static class JsonMappingException extends Exception {
        public JsonMappingException(String message) {
            super(message);
        }
    }
}