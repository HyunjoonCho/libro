public void testAllowMultipleMatches() {
    FilteringGeneratorDelegate generatorDelegate = new FilteringGeneratorDelegate(new GeneratorDelegateImpl());
    generatorDelegate.setFilter(new SimpleBeanPropertyFilter.filterOutAllExcept("property1", "property2"));
    generatorDelegate.setAllowMultipleMatches(true);

    // Create a test object with properties
    MyObject myObject = new MyObject();
    myObject.setProperty1("value1");
    myObject.setProperty2("value2");
    myObject.setProperty3("value3");

    // Serialize the object using the generator delegate
    StringWriter writer = new StringWriter();
    generatorDelegate.serialize(myObject, writer);

    // Read the output
    String result = writer.toString();

    // Check if only the allowed properties are serialized
    assertTrue(result.contains("\"property1\":\"value1\""));
    assertTrue(result.contains("\"property2\":\"value2\""));
    assertFalse(result.contains("\"property3\":\"value3\""));
}

In this test, we assume the existence of a `GeneratorDelegateImpl` and a `MyObject` class with properties `property1`, `property2`, and `property3`. The test checks that `_allowMultipleMatches` is respected by ensuring only the specified properties are included in the serialized output.