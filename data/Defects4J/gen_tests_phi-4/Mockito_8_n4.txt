public void testStackOverflowErrorWithGenericsSelfReference() {
    interface GenericsSelfReference<T extends GenericsSelfReference<T>> {
        T self();
    }

    // Simulate the behavior that leads to the StackOverflowError
    GenericMetadataSupport genericMetadata = inferFrom(GenericsSelfReference.class)
       .resolveGenericReturnType(firstNamedMethod("self", GenericsSelfReference.class));

    assertEquals(GenericsSelfReference.class, genericMetadata.rawType());
}

This test reproduces the `StackOverflowError` by attempting to resolve the generic return type of the `self` method in an interface `GenericsSelfReference` that has a self-referential generic type. The error is caused by the recursive nature of the type resolution process.