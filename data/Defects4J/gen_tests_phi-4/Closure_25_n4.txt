import org.junit.Test;
import static org.junit.Assert.*;

public class AnonymousObjectTypeInferenceTest {

    @Test(expected = IllegalArgumentException.class)
    public void testConstructorParameterTypeInference() {
        class Callz {
            /** @param {{prop1: string, prop2: (number|undefined)}} parry */
            Callz(Object parry) {
                if (parry instanceof Map) {
                    Map<?,?> map = (Map<?,?>) parry;
                    if (map.containsKey("prop2") && map.get("prop2")!= null && (Integer) map.get("prop2") < 5) {
                        throw new IllegalArgumentException("alright!");
                    }
                }
                if (parry instanceof Map) {
                    Map<?,?> map = (Map<?,?>) parry;
                    if (map.containsKey("prop1")) {
                        String prop1 = (String) map.get("prop1");
                        System.out.println(prop1);
                    }
                }
            }
        }

        new Callz(Map.of("prop1", "hi"));
    }
}

This test method simulates the behavior described in the bug report by using a Java class and a constructor to mimic the JavaScript constructor call. It expects an `IllegalArgumentException`