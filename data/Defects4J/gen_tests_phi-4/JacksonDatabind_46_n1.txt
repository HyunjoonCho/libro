public void testGenericSignatureGeneration() {
    JavaType javaType = someTypeFactory.constructType(new ParameterizedTypeReference<AtomicReference<String>>() {});
    String expectedSignature = "()Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/String;>;";
    assertEquals(expectedSignature, javaType.getGenericSignature());

    // Simulate the incorrect behavior by manually checking
    String actualSignature = javaType.getGenericSignature();
    assertTrue("Expected signature: " + expectedSignature + " but was: " + actualSignature, actualSignature.endsWith(";"));
}

This test method checks that the generic signature generated by `getGenericSignature()` includes the closing `>` and ends with a semicolon, as expected. Adjust `someTypeFactory` to match your actual type factory or context.