public void testBase64VariantHandling() {
    Base64Variant base64Variant = new Base64Variant() {
        @Override
        public boolean matchesPattern(String pattern) {
            return pattern.equals("myVariant");
        }

        @Override
        public String[] fromAscii(char[] in, int off, int len, boolean isUrl) {
            return new String[] { new String(in, off, len) }; // Simplified for test
        }

        @Override
        public int fromChar(char ch) {
            return -1; // Simplified for test
        }

        @Override
        public int toChar(int i) {
            return -1; // Simplified for test
        }

        @Override
        public boolean requiresPadding() {
            return true;
        }

        @Override
        public int getMaxLineLength() {
            return 76;
        }

        @Override
        public String getEncoding() {
            return "Base64";
        }

        @Override
        public String getVariantName() {
            return "myVariant";
        }
    };

    // Set up a tree node with a base64 string using the variant
    JsonNode rootNode = JsonNodeFactory.instance.objectNode();
    ((