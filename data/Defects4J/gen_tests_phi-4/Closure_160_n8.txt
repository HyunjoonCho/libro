public void testCheckVarsUndefinedVarsDiagnostics() {
    String expectedError = "test.js:1: ERROR - variable foo is undefined\nfoo = {};\n^";
    String expectedWarning = "test.js:2: WARNING - dangerous use of the global this object";

    String outputCheckVars = executeCompiler("--js test.js --jscomp_warning checkVars");
    String outputUndefinedVars = executeCompiler("--js test.js --jscomp_warning undefinedVars");
    String outputVerbose = executeCompiler("--js test.js --warning_level VERBOSE");

    assertNotEquals(expectedError, outputCheckVars);
    assertNotEquals(expectedError, outputUndefinedVars);
    assertEquals(expectedError, outputVerbose);
    assertEquals(expectedWarning, outputVerbose);
}

private String executeCompiler(String args) {
    try {
        ProcessBuilder builder = new ProcessBuilder("java", "-jar", "compiler.jar", args);
        Process process = builder.start();

        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
        StringBuilder output = new StringBuilder();
        String line;
        while ((line = reader.readLine())!= null) {
            output.append(line).append("\n");
        }
        process.waitFor();
        return output.toString();
    } catch (IOException | InterruptedException e) {