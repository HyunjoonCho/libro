public void testJsonSerializeAsBehavior() throws JsonProcessingException {
    Foo foo = new Foo();
    ObjectWriter writer = new ObjectMapper().writer().forType(Foo.class);

    try {
        String result = writer.writeValueAsString(foo);
        fail("Expected JsonMappingException due to incorrect type widening");
    } catch (JsonMappingException e) {
        assertTrue(e.getMessage().contains("Class org.pharmgkb.model.BaseAccessionIdentifier not a super-type of"));
    }
}

class Foo {
    @JsonSerialize(as = BaseAccessionIdentifier.class)
    @JsonDeserialize(as = BaseAccessionIdentifier.class)
    public AccessionIdentifier getReference() {
        return new AccessionIdentifierImpl();
    }
}

class AccessionIdentifierImpl implements AccessionIdentifier {
}

interface AccessionIdentifier {
}

class BaseAccessionIdentifier implements AccessionIdentifier {
}