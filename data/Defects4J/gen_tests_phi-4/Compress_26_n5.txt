public void testIOUtilsSkipWithCipherInputStream() throws Exception {
    InputStream cipherInputStream = new CipherInputStream(new ByteArrayInputStream(new byte[1024]), new DummyCipher());
    InputStream tarInputStream = new TarInputStream(cipherInputStream);

    int numToSkip = 512;
    long skipped = IOUtils.skip(tarInputStream, numToSkip);

    // Expecting the skip to return 0 because CipherInputStream stops at the end of each byte buffer
    assertEquals(0, skipped);
}

// Dummy Cipher class for the purpose of this test
private static class DummyCipher extends Cipher {
    @Override
    public int update(byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset) {
        System.arraycopy(input, inputOffset, output, outputOffset, inputLen);
        return inputLen;
    }

    @Override
    public byte[] doFinal() {
        return new byte[0];
    }

    @Override
    public int update(byte[] input, int inputOffset, int inputLen, byte[] output) {
        return update(input, inputOffset, inputLen, output, 0);
    }

    @Override
    public int getBlockSize() {
        return 1;
    }