import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;

public void testZipFileCorruptionWithHashCollision() {
    try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
         ZipOutputStream zipOutputStream = new ZipOutputStream(byteArrayOutputStream)) {
        
        String commonFileName = "commonName.txt";
        String uniqueSuffix1 = "_1";
        String uniqueSuffix2 = "_2";
        
        // Create two entries with the same hash but different full names
        ZipArchiveEntry entry1 = new ZipArchiveEntry(commonFileName + uniqueSuffix1);
        ZipArchiveEntry entry2 = new ZipArchiveEntry(commonFileName + uniqueSuffix2);
        entry2.setComment("Different entry");
        
        // Write entries to zip
        zipOutputStream.putArchiveEntry(entry1);
        zipOutputStream.closeArchiveEntry();
        
        zipOutputStream.putArchiveEntry(entry2);
        zipOutputStream.closeArchiveEntry();
        
        // Verify that the entries are distinct and correctly stored
        zipOutputStream.finish();
        
        // At this point, we would need to extract and verify the contents
        // to confirm the corruption, but this is