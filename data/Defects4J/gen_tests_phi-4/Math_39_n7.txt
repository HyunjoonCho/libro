public void testLargeFirstStepWithEmbeddedRungeKutta() {
    double[] y0 = {1.0}; // Initial condition
    double t0 = 0.0;     // Start time
    double tEnd = 1e-10; // Extremely short integration range

    // Configure the Dormand-Prince 8(5,3) integrator
    EmbeddedRungeKuttaIntegrator integrator = new DormandPrince853Integrator(1e-8, 1e-10, 1.0e2, 1.0e-10, 1.0e2);

    // Set the integrator to compute the first step size by itself
    integrator.setInitialStepSize(null);

    // Define a simple test ODE: dy/dt = -y
    FirstOrderDifferentialEquations ode = new FirstOrderDifferentialEquations() {
        @Override
        public int getDimension() {
            return 1;
        }

        @Override
        public void computeDerivatives(double t, double[] y, double[] yDot) {
            yDot[0] = -y[0];
        }
    };

    // Attempt to integrate over