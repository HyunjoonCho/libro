public void testOverzealousArgumentsOptimisation() {
    Object expected = new Object();
    Object actual = new Object();

    // Original function behavior
    d3_callUsingTemporaryVariable(() -> expected);

    // Optimised function behavior
    d3_callWithoutTemporaryVariable(() -> actual);

    assertNotEquals("The first argument should not be overwritten by 'this'", expected, actual);
}

private Object d3_callUsingTemporaryVariable(Callable<Object> callback) {
    Object f = callback.call();
    Object[] args = { f };
    args[0] = this;
    return callback.call();
}

private Object d3_callWithoutTemporaryVariable(Callable<Object> callback) {
    Object a = callback.call();
    Object[] args = { a };
    args[0] = this;
    return callback.call();
}