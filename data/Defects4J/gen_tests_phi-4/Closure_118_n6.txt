public void testPrototypeMethodRemoval() {
    final Object foo = new Object();
    final Object bar = new Object() {
        public void bar1() {
            System.out.println("bar1");
        }
    };

    final Object foobar = new Object() {
        public Object getPrototype() {
            return bar;
        }
    };

    // Simulating the prototype assignment
    java.lang.reflect.Field prototypeField = foobar.getClass().getDeclaredField("prototype");
    prototypeField.setAccessible(true);
    prototypeField.set(foobar, bar);

    Object result = foobar.getClass().getMethod("getPrototype").invoke(foobar);
    Object bar1 = result.getClass().getMethod("bar1").invoke(result);

    assertNotNull(bar1);
}