public void testRedefinitionInThirdParty() {
    // Initial function definition
    Function<Integer> f = () -> 1;

    // Assertion before redefinition
    assertFunctionEquals(f, 1);

    // Redefinition of f
    f = () -> 2;

    // Assertion after redefinition
    assertFunctionEquals(f, 2);

    // Redefinition as a function declaration (simulating third-party pre-compilation)
    f = new Function<Integer>() {
        @Override
        public Integer apply(Integer t) {
            return 1;
        }
    };

    // This assertion should fail because the redefinition changed the behavior
    assertFunctionEquals(f, 1);
}

private void assertFunctionEquals(Function<Integer> function, int expected) {
    assertEquals(expected, function.apply(0));
}