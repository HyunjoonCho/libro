public void testPolymorphicTypeResolution() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping(DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);

    // Base class
    abstract class Base {
        public String baseProperty = "baseValue";
    }

    // Subclass
    class Sub extends Base {
        public String subProperty = "subValue";
    }

    // JSON representation of Sub with default implementation
    String json = "{\"@class\":\"Sub\", \"subProperty\":\"subValue\"}";

    // Deserialize
    Sub result = mapper.readValue(json, Sub.class);

    // Check properties
    assertEquals("baseValue", result.baseProperty);
    assertEquals("subValue", result.subProperty);
}