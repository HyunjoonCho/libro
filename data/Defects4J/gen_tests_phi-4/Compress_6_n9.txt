import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;

public void testZipFileCreationWithHashCollision() {
    String filename1 = "file1.txt";
    String filename2 = "file2.txt";

    try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
         ZipArchiveOutputStream zipOutputStream = new ZipArchiveOutputStream(byteArrayOutputStream)) {

        ZipArchiveEntry entry1 = new ZipArchiveEntry(filename1);
        ZipArchiveEntry entry2 = new ZipArchiveEntry(filename1); // Intentional hash collision

        zipOutputStream.putArchiveEntry(entry1);
        zipOutputStream.closeArchiveEntry();
        zipOutputStream.putArchiveEntry(entry2);
        zipOutputStream.closeArchiveEntry();

        zipOutputStream.finish();

        // Check that the zip file is created correctly
        // Here, you would typically assert that the zip file can be read without errors,
        // but for simplicity, we just ensure it doesn't throw an exception
        byte[] zipBytes = byteArrayOutputStream.toByteArray();
        assertNotNull(zipBytes);
    } catch (IOException e) {
        fail("Exception should not have been thrown: " + e.getMessage());
    }
}