public void testCustomSerializerNotUsedWithJsonValue() {
    ObjectMapper mapper = new ObjectMapper();
    
    // Register a custom serializer for the custom class
    SimpleModule module = new SimpleModule();
    module.addSerializer(CustomClass.class, new CustomClassSerializer());
    mapper.registerModule(module);

    // Create an instance of the custom class with @JsonValue
    CustomClass instance = new CustomClass("test");

    // Serialize the instance
    String result = mapper.writeValueAsString(instance);

    // Assert that the custom serializer was not used
    assertEquals("\"test\"", result);
}

class CustomClass {
    @JsonValue
    private String value;

    public CustomClass(String value) {
        this.value = value;
    }
}

class CustomClassSerializer extends JsonSerializer<CustomClass> {
    @Override
    public void serialize(CustomClass value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        gen.writeString("custom-serializer-used");
    }
}