import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import org.junit.Test;

import java.io.IOException;
import java.util.Map;
import java.util.Map.Entry;

import static org.junit.Assert.assertEquals;

public class KeyVsFieldTest {

    @Test
    public void deserializeAsKey() throws IOException {
        Map<FullName, Double> map = new ObjectMapper().readValue("{\"first.last\": 42}", new TypeReference<Map<FullName, Double>>() {});
        // This will fail with:
        // com.fasterxml.jackson.databind.exc.InvalidFormatException: Can not construct Map key of type KeyVsFieldTest$FullName from String "first.last": not a valid representation: wrong number of arguments

        Entry<FullName, Double> entry = map.entrySet().iterator().next();

        assertEquals("first", entry.getKey().getFirstname());
        assertEquals("last", entry.getKey().getLastname());
        assertEquals(42.0, entry.getValue().doubleValue(), 0);
    }

    public static class FullName {
        private final String firstname;
        private final String lastname;

        private FullName(String firstname, String lastname) {
            this.firstname = firstname