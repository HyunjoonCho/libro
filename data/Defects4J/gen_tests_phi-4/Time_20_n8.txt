public void testDateTimeZoneDiscrepancy() {
    // Example time zone that reportedly causes issues
    String expectedTimeZoneId = "America/Atka";
    DateTimeZone expectedZone = DateTimeZone.forID(expectedTimeZoneId);
    
    DateTime dateTime = DateTime.now().withZone(expectedZone);
    String formattedDateTime = formatter.print(dateTime);
    
    // Parse the formatted date time back
    DateTime parsedDateTime = formatter.parseDateTime(formattedDateTime);
    
    // Check if the time zone ID matches
    String actualTimeZoneId = parsedDateTime.getZone().getID();
    
    // Assert that the time zone ID does not match the expected one
    assertNotEquals(expectedTimeZoneId, actualTimeZoneId, 
        "Expected time zone ID: " + expectedTimeZoneId + 
        ", but got: " + actualTimeZoneId);
}

This test method focuses on the discrepancy between the expected and actual time zone IDs when parsing and formatting dates with Joda-Time. It uses an