import org.junit.Test;
import org.mockito.Mockito;
import static org.junit.Assert.assertEquals;

public class AbstractClassMockTest {

    @Test(expected = MockitoException.class)
    public void testMockingAbstractClassWithoutSupport() {
        // Attempt to mock an abstract class directly
        MockAccountService service = Mockito.mock(MockAccountService.class);

        // Attempt to define behavior for the abstract method
        Mockito.when(service.getAccount("id")).thenReturn(new FakeUserAccount());

        // Call the method to trigger the exception
        UserAccount account = service.getAccount("id");
        assertEquals(1, account.getEmails().size());
    }

    // Define the abstract class and concrete class as per the bug report
    interface UserAccount {
        List<String> getEmails();
        void addEmail(String email);
    }

    abstract class MockAccountService implements AccountService {
        @Override
        public void getAccount(String id, AsyncCallback<UserAccount> callback) {
            callback.onSuccess(getAccount