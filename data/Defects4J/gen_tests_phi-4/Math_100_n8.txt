public void testAbstractEstimatorBoundParameters() {
    Problem problem = new Problem();
    problem.setBoundParameters(Arrays.asList(0)); // Assume parameter at index 0 is bound
    problem.setUnboundParameters(Arrays.asList(1, 2)); // Assume parameters at index 1 and 2 are unbound
    
    AbstractEstimator estimator = new TestEstimator(problem);
    
    try {
        estimator.getCovariances();
        fail("Expected ArrayIndexOutOfBoundsException");
    } catch (ArrayIndexOutOfBoundsException e) {
        // Expected exception
    }
    
    try {
        estimator.guessParametersErrors();
        fail("Expected ArrayIndexOutOfBoundsException");
    } catch (ArrayIndexOutOfBoundsException e) {
        // Expected exception
    }
}

// Mock classes for testing purposes
class TestEstimator extends AbstractEstimator {
    public TestEstimator(Problem problem) {
        super(problem);
    }
}

class Problem {
    private List<Integer> boundParameters;
    private List<Integer> unboundParameters;

    public List<Integer> getBoundParameters() {
        return boundParameters;
    }

    public void setBoundParameters(List<Integer> boundParameters) {
        this.boundParameters = boundParameters;
    }

    public List<Integer> getUnboundParameters