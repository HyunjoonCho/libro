public void testLevenbergMarquardtOptimizerConvergenceChecker() {
    VectorialConvergenceChecker<Vector> customChecker = new VectorialConvergenceChecker<Vector>() {
        @Override
        public boolean hasConverged(Vector previous, Vector current) {
            return previous.subtract(current).getNorm() < 0.0001;
        }
    };

    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(customChecker);
    
    // Assuming `problem` is a predefined Problem instance
    IterativeOptimizer.Optimum optimum = optimizer.optimize(problem);
    
    // Check if the custom convergence checker was used
    assertTrue("Optimizer did not use the custom convergence checker as expected",
               customChecker.hasConverged(optimum.getEvaluations().get(0).getPoint(), optimum.getEvaluations().get(1).getPoint()));
}