public void testChangeListSeparationByType() {
    // Assuming a method `generateChangeList` exists with parameters for commit range and labels
    List<Change> changes = ChangeListGenerator.generateChangeList(
        "47a701638ebf4673ed0f1c8680d4d8f9f79c4f6e", "refs/heads/master", "releaseLabels"
    );

    // Verify that changes are organized by type
    Map<String, List<Change>> changesByType = changes.stream()
       .collect(Collectors.groupingBy(Change::getType));

    // Check for expected types and ensure they are not empty
    assertTrue("Changes of type 'bug' should exist", changesByType.get("bug")!= null &&!changesByType.get("bug").isEmpty());
    assertTrue("Changes of type 'feature' should exist", changesByType.get("feature")!= null &&!changesByType.get("feature").isEmpty());
    assertTrue("Changes of type'refactor' should exist", changesByType.get("refactor")!= null &&!changesByType.get("refactor").isEmpty());

    // Check for unknown changes
    List<Change> unknownChanges = changesByType