public void testExtraneousTypeIdMapping() {
    // Assuming TypeResolver is the class responsible for type resolution
    TypeResolver resolver = new TypeResolver();
    
    Class<?> baseType = ConcreteBaseType.class; // Example concrete base type
    resolver.addTypeMapping(baseType);

    // Simulate type resolution
    List<TypeId> resolvedTypes = resolver.resolveTypes(baseType);

    // Verify that the base type itself is not included in the resolution list
    boolean isExtraneous = resolvedTypes.stream()
       .anyMatch(typeId -> typeId.getType().equals(baseType));

    assertFalse("Base type itself should not be included in the resolution list", isExtraneous);
}

Note: This test assumes the existence of a `TypeResolver` class and a `TypeId` class. Adjust the class and method names according to your actual implementation.