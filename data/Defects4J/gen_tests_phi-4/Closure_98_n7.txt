import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class ClosureCompilerTest {

    public void testBadVariableInliningInClosure() throws InterruptedException {
        ExecutorService executor = Executors.newFixedThreadPool(5);
        CountDownLatch latch = new CountDownLatch(5);

        int[] arr = {1, 2, 3, 4, 5};
        for (int i = 0; i < arr.length; i++) {
            final int j = arr[i];
            executor.execute(() -> {
                int k = j;
                try {
                    Thread.sleep(10); // Simulate setTimeout with delay
                    System.out.println(k);
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                } finally {
                    latch.countDown();
                }
            });
        }

        latch.await(1, TimeUnit.SECONDS);
        executor.shutdown();
    }
}