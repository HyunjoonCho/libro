import static org.junit.Assert.assertEquals;
import org.apache.commons.math3.linear.Array2DRowRealMatrix;
import org.apache.commons.math3.linear.SingularValueDecomposition;
import org.junit.Test;
import java.util.Arrays;

public class TestSingularValueDecomposition {

    @Test
    public void testSVDNaNSingularValue() {
        double[][] alist = {
            {1.0, 2.0, 3.0},
            {2.0, 3.0, 4.0},
            {3.0, 5.0, 7.0}
        };

        Array2DRowRealMatrix matrix = new Array2DRowRealMatrix(alist);
        SingularValueDecomposition svd = new SingularValueDecomposition(matrix);
        double[] singularValues = svd.getSingularValues();

        double[] expectedValues = {11.218599757513008, 0.3781791648535976, Double.NaN};
        assertArrayEquals(expectedValues, singularValues, 1e-6);
    }
    
    private void assertArrayEquals(double[] expected, double[] actual, double delta) {
        assertEquals(expected.length, actual.length);
        for (int i