public void testOverzealousOptimization() {
    double uid;
    boolean exceptionThrown = false;

    try {
        reset();
        double _uid = uid;

        if (uid < 0.5) {
            doStuff();
        }

        if (_uid!= uid) {
            throw new IllegalStateException("reset() was called");
        }
    } catch (IllegalStateException e) {
        exceptionThrown = true;
    }

    assertTrue("reset() should have been called and exception thrown", exceptionThrown);
}

private void reset() {
    uid = Math.random();
}

private void doStuff() {
    reset();
    double _uid = uid;

    if (uid < 0.5) {
        doStuff();
    }

    if (_uid!= uid) {
        throw new IllegalStateException("reset() was called");
    }
}