public void testZipVersionNeededToExtractMismatch() {
    try (ZipArchiveOutputStream zipOut = new ZipArchiveOutputStream(new BufferedOutputStream(new ByteArrayOutputStream()))) {
        ZipEntry entry = new ZipEntry("test.txt");
        zipOut.putArchiveEntry(entry);
        
        // Simulate deflated compression
        zipOut.setMethod(ZipEntry.DEFLATED);
        
        // Write some data
        zipOut.write("Sample content".getBytes());
        zipOut.closeArchiveEntry();
        zipOut.finish();
        
        // Read back the zip and check the version needed to extract
        byte[] zipData = ((ByteArrayOutputStream) zipOut.getStream()).toByteArray();
        ZipFile zipFile = new ZipFile(new ByteArrayInputStream(zipData));
        
        // Fetch the local file header for the entry
        ZipEntry localEntry = zipFile.getEntry("test.txt");
        byte[] localHeader = zipFile.getRawEntry(localEntry).getLocalHeader();
        int localVersionNeededToExtract = (localHeader[14] & 0xFF) | ((localHeader[15] & 0xFF) << 8);
        
        // Fetch the central directory header for the entry
        byte[] centralDirectoryHeader = zipFile.getRawCentralDirectoryEntry(localEntry