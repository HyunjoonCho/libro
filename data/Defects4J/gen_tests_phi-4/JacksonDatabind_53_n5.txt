public void testJsonDeserializeWithSpecialization() throws Exception {
    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);

    String json = "{ \"something\": [ { \"id\": \"123e4567-e89b-12d3-a456-426614174000\", \"property\": \"value\" } ] }";

    MyPojo pojo = objectMapper.readValue(json, MyPojo.class);
    assertNotNull(pojo);
    assertTrue(pojo.getSomething().containsKey(UUID.fromString("123e4567-e89b-12d3-a456-426614174000")));
    assertEquals("value", pojo.getSomething().get(UUID.fromString("123e4567-e89b-12d3-a456-426614174000")).getProperty());
}

Note: This test assumes you have the necessary classes (`MyPojo`, `MyHashMap`, `Foo`, `MyCustomIdInterface`) defined in your codebase, and that they are compatible with the described behavior. Adjust the test as needed to fit your exact class definitions and Jackson configuration.