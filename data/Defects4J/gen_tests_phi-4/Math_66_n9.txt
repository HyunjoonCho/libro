public void testBrentOptimizer() {
    // Assuming the function to optimize is f(x) = (x-2)^2
    Function<Double, Double> function = x -> Math.pow(x - 2, 2);

    // Set the interval [a, b] where the minimum is expected
    double a = 0.0;
    double b = 4.0;

    // Set a tolerance for the optimization result
    double tol = 1e-6;

    // Create an instance of BrentOptimizer
    BrentOptimizer optimizer = new BrentOptimizer();

    // Perform the optimization
    BrentOptimizer.OptimizationResult result = optimizer.optimize(function, a, b, tol);

    // Check if the result is within the expected range
    assertEquals(2.0, result.getMinimizer(), tol);

    // Check if the function value at the minimizer is close to the expected minimum
    assertEquals(0.0, result.getMinValue(), tol);
}