public void testPearsonsCorrelationPValuesPrecision() {
    // Create data with large t-statistic
    double[] x = new double[100];
    double[] y = new double[100];
    for (int i = 0; i < x.length; i++) {
        x[i] = i;
        y[i] = i * 10; // Strong linear relationship
    }

    // Calculate Pearson's correlation coefficient
    PearsonsCorrelation correlation = new PearsonsCorrelation();
    double r = correlation.correlation(x, y);

    // Calculate t-statistic
    int n = x.length;
    double t = r * Math.sqrt((n - 2) / (1 - r * r));

    // Calculate p-value using the existing method
    double pValue = correlation.getCorrelationPValues(x, y)[0];

    // Calculate p-value using the corrected formula
    TDistribution tDistribution = new TDistribution(n - 2);
    double correctedPValue = 2.0 * tDistribution.cumulativeProbability(-t);

    // Assert that the corrected p-value is not zero
    assertTrue("P-value should not be zero", correctedPValue > 0);

    // Assert