public void testInvalidHttpCharsetHeader() {
    String invalidCharset = "UFT8"; // Incorrect charset name
    byte[] byteData = "Sample HTML content".getBytes();
    String expectedContent = "Sample HTML content";
    
    try {
        Validate.notEmpty(invalidCharset, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
        String docData = Charset.forName(invalidCharset).decode(ByteBuffer.wrap(byteData)).toString();
        assertEquals(expectedContent, docData);
    } catch (UnsupportedCharsetException e) {
        // Fallback to charset detection
        String parsedContent = parseByteData(byteData, null, null, null);
        assertEquals(expectedContent, parsedContent);
    }
}

**Note:** This test assumes the existence of a `parseByteData` method that can handle charset detection when the charset is not specified. It tests the scenario where an invalid charset causes an exception, and the fallback mechanism is triggered.