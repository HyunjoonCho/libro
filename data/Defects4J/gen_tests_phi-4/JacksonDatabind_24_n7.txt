public void testDateTimeSerializationWithDateFormat() throws JsonProcessingException {
    // Create ObjectMapper with configured date format
    ObjectMapper mapper = createObjectMapper();
    
    // Serialize DateTime instance
    String serializedDate = mapper.writeValueAsString(new DateTime(1988, 6, 25, 20, 30, DateTimeZone.UTC));
    
    // Assert the serialized date is as expected for Jackson 2.6.0
    assertEquals("\"1988-06-25 21:30:00\"", serializedDate);
}

private ObjectMapper createObjectMapper() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(createJodaModule());
    mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);
    mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"));
    return mapper;
}

private SimpleModule createJodaModule() {
    SimpleModule module = new SimpleModule();
    module.addSerializer(DateTime.class, new DateTimeSerializer(
            new JacksonJodaDateFormat(DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss").withZoneUTC())));
    return module;
}

This test method reproduces the behavior described in the bug report, checking that setting the `DateFormat` on the `ObjectMapper` results in the time