import static org.junit.Assert.fail;

public void testWeirdObjectLiteralInvalidPropertyError() {
    try {
        // Simulated JavaScript execution environment setup
        Object optDataForTemp1 = new Object() {{ put("text", "some text"); }};
        Object optDataForTemp2 = new Object() {{ put("activity", new Object() {{ put("text", "activity text"); }}); }};
        Object optDataForTemp3 = new Object() {{ put("n", 0); put("text", "a string"); put("b", true); }};

        // Simulate the function calls
        String result1 = (String) temp1(optDataForTemp1);
        String result2 = temp2(optDataForTemp2);
        String result3 = temp3(optDataForTemp3);

        // Check if the error is thrown as expected
        if (!"n: 0, t: a string.".equals(result3)) {
            fail("Expected temp3 to return 'n: 0, t: a string.', but got: " + result3);
        }
    } catch (Exception e) {
        // Check if the exception message matches the expected error
        if (!e.getMessage().