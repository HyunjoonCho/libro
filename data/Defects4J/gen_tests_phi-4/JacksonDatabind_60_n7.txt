public void testPolymorphicTypeLostWithJsonValue() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
    mapper.enableDefaultTyping();

    CommandAPDU original = new CommandAPDU(new byte[]{0x01, 0x02, 0x03, 0x04});
    
    // Serialize
    String json = mapper.writeValueAsString(original);
    
    // Deserialize
    RemoteCall deserialized = mapper.readValue(json, RemoteCall.class);
    
    // Check if the deserialized object is of type CommandAPDU
    assertTrue(deserialized.getArgs()[0][1] instanceof CommandAPDU);
    CommandAPDU deserializedCommandAPDU = (CommandAPDU) deserialized.getArgs()[0][1];
    
    // Check if the byte array is correctly deserialized
    assertArrayEquals(new byte[]{0x01, 0x02, 0x03, 0x04}, deserializedCommandAPDU.getBytes());
}

Note: This assumes the existence of the `RemoteCall` class with a method `getArgs()` that returns an `Object[][]` and that `CommandAPDU` is a subclass of `RemoteCall