public void testCaptorExample() {
    // Setup mock
    MyService myService = Mockito.mock(MyService.class);
    ArgumentCaptor<MyArgument> captor = ArgumentCaptor.forClass(MyArgument.class);

    // Incorrect usage example from Javadoc
    myService.performAction(captor.capture());
    Mockito.verify(myService).performAction(captor.getValue());

    // This should fail because captor.getValue() is called before verify()
    // The correct usage should be:
    // Mockito.verify(myService).performAction(captor.capture());
    // captor.getValue(); // This should be done after the verify call
}

This test method sets up a mock and attempts to use `captor.getValue()` before the `verify()` call, which would cause the test to fail, replicating the incorrect example from the Javadoc.