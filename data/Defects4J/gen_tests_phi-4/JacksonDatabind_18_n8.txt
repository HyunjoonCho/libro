import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.MappingIterator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;

public void testObjectReaderErrorRecovery() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    JsonFactory jsonFactory = mapper.getFactory();
    String jsonString = "{\"validKey\": \"validValue\", \"corrupted\": {\"key\": \"value\"}}";

    try (JsonParser parser = jsonFactory.createParser(jsonString)) {
        MappingIterator<?> iterator = mapper.readerFor(Map.class).readValues(parser);

        // Read first valid object
        assertNotNull(iterator.next());

        // Attempt to read the next object, which should trigger an error
        assertThrows(JsonProcessingException.class, iterator::next);

        // Check if iterator is in a valid state to continue
        assertNotNull(iterator.next());
    }
}