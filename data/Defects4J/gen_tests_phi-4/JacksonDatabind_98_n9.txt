import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.exc.InvalidDefinitionException;
import com.fasterxml.jackson.databind.module.SimpleModule;
import org.junit.Test;
import static org.junit.Assert.assertThrows;

public class EnumPolymorphismTest {

    public enum Kind {
        CONTACT, GROUP, UNKNOWN
    }

    public static class Invite {
        @JsonDeserialize(as = Kind.class)
        private Kind kind;

        public Invite(Kind kind) {
            this.kind = kind;
        }

        public Kind getKind() {
            return kind;
        }

        public void setKind(Kind kind) {
            this.kind = kind;
        }
    }

    @Test
    public void testEnumPolymorphicDeserialization() {
        ObjectMapper mapper = new ObjectMapper();
        SimpleModule module = new SimpleModule();
        // You would add any module setup here if needed
        mapper.registerModule(module);

        String json = "{ \"kind\": \"CONTACT\", \"to\": { \"name\": \"Foo\" } }";

        assertThrows(InvalidDefinitionException.class, () -> {
            mapper.readValue(json, Invite.class);
        });
    }
}