public void testCMAESOptimizerBounds() {
    double[][] bounds = {{-10, 10}, {-10, 10}};
    CMAESOptimizer optimizer = new CMAESOptimizer(2, bounds);
    optimizer.setCheckFeasibilityCount(0); // Ensures isFeasible is not called
    optimizer.optimize(() -> {
        double x = 11; // Value intentionally outside the bounds
        double y = -11; // Value intentionally outside the bounds
        return x * x + y * y; // Objective function
    });

    double[] solution = optimizer.getBestSolution();
    assertTrue("Solution x should be within bounds", solution[0] >= -10 && solution[0] <= 10);
    assertTrue("Solution y should be within bounds", solution[1] >= -10 && solution[1] <= 10);
}