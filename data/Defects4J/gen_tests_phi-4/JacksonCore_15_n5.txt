public void testAllowMultipleMatches() {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.setFilterProvider(new FilterProvider() {
        @Override
        public JsonFilter getFilter(String filterId) {
            return null;
        }

        @Override
        public Map<String, String> getFilters() {
            return null;
        }

        @Override
        public FilteringGeneratorDelegate getFilteringDelegate() {
            FilteringGeneratorDelegate delegate = new FilteringGeneratorDelegate(delegate);
            delegate.setAllowMultipleMatches(true);
            return delegate;
        }
    });
    mapper.registerModule(module);

    String json = "{\"name\": \"John\", \"age\": 30, \"name\": \"Doe\"}";
    JsonNode node = mapper.readTree(json);
    FilteringParserDelegate parserDelegate = new FilteringParserDelegate(delegate);
    parserDelegate.setAllowMultipleMatches(true);
    JsonParser parser = mapper.getFactory().createParser(json);
    JsonNode result = parserDelegate.createParser(parser, node).readValueAsTree();

    // Assuming the expected behavior is to include all "name" fields
    assertEquals(2, result.findValues("name").size());
}