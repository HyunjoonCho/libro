public void testTypeIdResolverWithGeneric() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerTypeIdResolver(new CustomTypeIdResolver());

    String json = "{\"field\":\"value\"}";

    // Assuming MyClass is the class with a generic type field
    MyClass myObject = mapper.readValue(json, MyClass.class);

    // Verify that the field is not correctly deserialized
    assertNotNull(myObject);
    assertEquals("ExpectedValue", myObject.getField());
}

This test assumes you have a `CustomTypeIdResolver` and a `MyClass` with a generic field that should be deserialized correctly. The test checks if the field is deserialized as expected. Adjust the assertions and class names as per your actual implementation.