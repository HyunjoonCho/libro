public void testNonEmptyExclusion() throws Exception {
    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.registerModule(new AfterburnerModule());

    // Test with an integer
    objectMapper.enable(SerializationFeature.WRITE_NULL_MAP_VALUES);
    objectMapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);
    String json = objectMapper.writeValueAsString(new SimpleBean(0));
    assertEquals("{}", json);

    // Test with a string
    objectMapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);
    json = objectMapper.writeValueAsString(new SimpleBean(" "));
    assertEquals("{}", json);

    // Test with non-empty values
    SimpleBean nonEmptyInt = new SimpleBean(1);
    SimpleBean nonEmptyString = new SimpleBean("test");
    json = objectMapper.writeValueAsString(nonEmptyInt);
    assertEquals("{\"value\":1}", json);
    json = objectMapper.writeValueAsString(nonEmptyString);
    assertEquals("{\"value\":\"test\"}", json);
}

private static class SimpleBean {
    private int value;
    private String valueString;

    public SimpleBean(int value) {
        this.value = value;
    }

    public SimpleBean(String valueString) {
        this.valueString = valueString;
    }
}