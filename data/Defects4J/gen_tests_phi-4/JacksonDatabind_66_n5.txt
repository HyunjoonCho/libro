public void testEnumKeyDeserializerFailure() throws IOException {
    String json = "{\"someMap\": {\"FOO\": \"bar\"}}";
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule simpleModule = new SimpleModule();
    simpleModule.addDeserializer(SuperTypeEnum.class, new JsonDeserializer<SuperTypeEnum>() {
        @Override
        public SuperTypeEnum deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {
            return SuperTypeEnum.valueOf(jsonParser.getText());
        }
    });
    mapper.registerModule(simpleModule);

    try {
        SuperType superType = mapper.readValue(json, SuperType.class);
        assertEquals("Deserialized someMap.FOO should equal bar", "bar", superType.getSomeMap().get(SuperTypeEnum.FOO));
    } catch (Exception e) {
        // Expecting an exception due to incorrect JsonParser usage in the key deserializer
        assertTrue("Exception should be thrown due to incorrect JsonParser handling", e instanceof IOException);
    }
}