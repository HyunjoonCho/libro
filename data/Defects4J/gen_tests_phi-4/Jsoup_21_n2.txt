public void testSelectorParsingWithCommasInRegex() {
    try {
        // Simulate the selector parsing logic that causes the failure
        parseSelector("div, li:matches([0-9,]+)");
        fail("Expected PatternSyntaxException due to comma in regex");
    } catch (PatternSyntaxException e) {
        // Expected exception, ensure it's the correct one
        assertTrue(e.getMessage().contains("unclosed character class"));
    }
}

// Mock method to simulate the parsing behavior described in the bug report
private void parseSelector(String selector) {
    // Simulate the parsing logic that leads to the issue
    String[] parts = selector.split(",(?![^\\[]*\\])"); // Basic split ignoring commas in brackets
    for (String part : parts) {
        if (part.contains(":matches") && part.contains(",")) {
            throw new PatternSyntaxException("unclosed character class", part, part.indexOf(","));
        }
    }
}