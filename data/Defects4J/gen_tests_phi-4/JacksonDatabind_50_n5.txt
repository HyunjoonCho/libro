public void testJsonIdentityInfoDeserialization() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enable(SerializationFeature.INDENT_OUTPUT);
    mapper.enable(DeserializationFeature.UNWRAP_ROOT_VALUE);

    String json = "{\"id\":\"1\", \"name\":\"Parent\", \"child\":{\"id\":\"2\", \"name\":\"Child\"}}";
    
    Parent parent = mapper.readValue(json, Parent.class);
    
    assertEquals("1", parent.getId());
    assertEquals("Parent", parent.getName());
    assertNotNull(parent.getChild());
    assertEquals("2", parent.getChild().getId());
    assertEquals("Child", parent.getChild().getName());
}

// Assuming the existence of these classes
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
class Parent {
    private String id;
    private String name;
    private Child child;

    @JsonCreator
    public Parent(@JsonProperty("id") String id, @JsonProperty("name") String name,
                  @JsonProperty("child") Child child) {
        this.id = id;
        this.name = name;
        this.child = child;
    }

    public String getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public Child getChild() {