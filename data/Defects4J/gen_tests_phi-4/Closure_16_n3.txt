public void testJSCompilerTypedefResolution() {
    String code = 
        "goog.provide('a.b.c');\n" +
        "goog.scope(function() {\n" +
        "    var b = a.b;\n" +
        "    var c = b.c;\n" +
        "\n" +
        "    /**\n" +
        "     * @typedef {string}\n" +
        "     */\n" +
        "    c.MyType;\n" +
        "\n" +
        "    /**\n" +
        "     * @param {c.MyType} x The variable.\n" +
        "     */\n" +
        "    c.myFunc = function(x) {};\n" +
        "});";
    
    try {
        // Simulate compilation process
        compileJSCode(code);
        fail("Expected compiler error due to unresolved typedef");
    } catch (CompilationException e) {
        assertTrue(e.getMessage().contains("undefined name 'c.MyType'"));
    }
}

// Mock method to simulate JS compilation and throw an exception for errors
private void compileJSCode(String code) throws CompilationException {
    if (code.contains("c.My