public void testCompilerRemovesFunctionProperties() {
    // Simulate the function and property setup
    Function f1 = () -> System.out.println("f1");
    f1.alwaysCall = true;  // Simulated property
    Function f2 = () -> System.out.println("f2");

    Map<String, Function> map = new HashMap<>();
    map.put("f1", f1);
    map.put("f2", f2);

    // Simulate the callFunctionByKey function
    Function callFunctionByKey = key -> {
        Function f = map.get(key);
        if (f.alwaysCall) {  // Check for the property
            f.run();
        }
    };

    // Call with both functions to verify behavior
    callFunctionByKey("f1");
    callFunctionByKey("f2");
}

// Helper class to simulate a function with a property
class Function {
    boolean alwaysCall;

    public void run() {
        // Placeholder for the actual function logic
    }
}

Note: This test simulates the Java equivalent of the described JavaScript behavior. The `Function` class is a placeholder to demonstrate adding properties to functions in Java. JUnit will need to be set up to recognize