public void testDeserializeNullInNestedAtomicReference() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper();
    ObjectReader objectReader = objectMapper.readerFor(MyBean.class);

    // Deserialize a valid integer
    MyBean intRef = objectReader.readValue("{\"refRef\": 2}");
    Assertions.assertNotNull(intRef.refRef);
    Assertions.assertNotNull(intRef.refRef.get());
    Assertions.assertEquals(Integer.valueOf(2), intRef.refRef.get().get());

    // Deserialize a null value
    MyBean nullRef = objectReader.readValue("{\"refRef\": null}");
    Assertions.assertNotNull(nullRef.refRef);
    Assertions.assertNull(nullRef.refRef.get()); // This should be an AtomicReference<AtomicReference<Integer>> with null value, not just null
}