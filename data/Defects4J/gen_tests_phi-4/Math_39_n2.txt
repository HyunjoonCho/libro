public void testLargeFirstStepWithEmbeddedRungeKutta() {
    AdaptiveStepsizeIntegrator integrator = new DormandPrince853Integrator(1e-8, 1e-10, 0.0, 1.0);
    double[] initialState = {1.0}; // Initial state
    double start = 0.0;
    double end = 1e-6; // Extremely short integration range

    // Attempt to integrate
    double[] result = integrator.integrate(new OrdinaryDifferentialEquations(), start, end, initialState);

    // Check if the integrator failed to stop within the range
    assertNotEquals(Double.POSITIVE_INFINITY, result[0]);
    assertNotEquals(Double.NEGATIVE_INFINITY, result[0]);
    assertTrue(result[0] <= end);
}