public void testBrentOptimizerFailure() {
    BrentOptimizer optimizer = new BrentOptimizer();
    Function<Double, Double> function = x -> Math.pow(x - 3, 2) + 2; // Simple quadratic function

    // The bug was that the optimizer was not converging properly.
    // Let's assume the expected minimum is at x = 3 for the function f(x) = (x-3)^2 + 2.
    Double result = optimizer.optimize(function, 0.0, 6.0, 1e-6, 1000);
    
    // The test should fail if the result is not close to 3.
    assertTrue(result!= null);
    assertEquals(3.0, result, 1e-6);
}