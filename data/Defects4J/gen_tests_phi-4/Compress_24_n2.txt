public void testTarArchiveInputStreamBigUserId() throws IOException {
    byte[] headerBytes = new byte[512];
    Arrays.fill(headerBytes, (byte) 0);
    // Set the user ID field (bytes 124-131) to a value that will cause the parse to fail
    headerBytes[124] = 52; // '4' in ASCII
    headerBytes[125] = 48; // '0' in ASCII
    headerBytes[126] = 49; // '1' in ASCII
    headerBytes[127] = 53; // '5' in ASCII
    headerBytes[128] = 52; // '4' in ASCII
    headerBytes[129] = 52; // '4' in ASCII
    headerBytes[130] = 52; // '4' in ASCII
    headerBytes[131] = 0;  // Null terminator

    ByteArrayInputStream bais = new ByteArrayInputStream(headerBytes);
    TarArchiveInputStream tarInputStream = new TarArchiveInputStream(bais);

    try {
        TarArchiveEntry entry = tarInputStream.getNextTarEntry();
        fail("Expected IllegalArgumentException to be thrown");
    } catch (IllegalArgumentException e) {
        assertEquals("Invalid