public void testTreeTraversingParserIntBounds() {
    ObjectMapper mapper = new ObjectMapper();
    String jsonInput = "{\"x\": 2147483649}";
    String fromTree;
    try {
        JsonNode tree = mapper.readTree(jsonInput);
        fromTree = mapper.readerFor(IntClass.class).readValue(tree).toString();
    } catch (IOException e) {
        fromTree = e.getClass().getSimpleName();
    }

    String fromString;
    try {
        fromString = mapper.readerFor(IntClass.class).readValue(jsonInput).toString();
    } catch (IOException e) {
        fromString = e.getClass().getSimpleName();
    }

    assertEquals("JsonMappingException", fromString);
    assertEquals("-2147483647", fromTree); // Expected overflow behavior
}

This test method reproduces the failure behavior described in the bug report, demonstrating the inconsistency between parsing from a tree and parsing from a string. The expected behavior is that both should throw a `JsonMappingException` for values that exceed the `int` bounds, but the tree parser does not.