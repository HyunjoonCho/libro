public void testSpyingOnAbstractClasses() {
    // Mock the RpcContext as it's an uninteresting parameter
    RpcContext context = mock(RpcContext.class);
    
    // Attempt to mock the AccountRpcService with abstract methods
    AccountRpcService service = mock(AccountRpcService.class);
    
    // Define the expected behavior using Mockito
    Future<Account> futureAccount = mock(FutureAccount.class);
    when(service.getAccount(isA(RpcContext.class), eq("id"))).thenReturn(futureAccount);
    
    // Call the method with the mocked context
    FutureAccount result = service.getAccount(context, "id");
    
    // Verify the interactions
    verify(service).getAccount(isA(RpcContext.class), eq("id"));
    assertEquals(futureAccount, result);
}

This test method demonstrates the issue where all parameters must be wrapped in `eq()` or `isA()`, which can be cumbersome and error-prone, especially when dealing with uninteresting parameters. The proposed solution in the bug report suggests using