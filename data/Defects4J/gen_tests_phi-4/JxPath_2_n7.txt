public void testNodeSetHandling() {
    ExpressionContext context = createContext();
    JXPathContext jPathContext = createContextJXPath();
    
    NodeSet expectedNodeSet = observations(context);
    
    List<Node> actualNodes = jPathContext.selectNodes("ems:observations()");
    
    assertEquals("Unexpected number of nodes returned", expectedNodeSet.size(), actualNodes.size());
    
    for (int i = 0; i < expectedNodeSet.size(); i++) {
        Node expectedNode = expectedNodeSet.get(i);
        Node actualNode = actualNodes.get(i);
        assertEquals("Node mismatch at index " + i, expectedNode, actualNode);
    }
}

private NodeSet observations(ExpressionContext context) {
    List<NodePointer> ptrs = extractObservations((NodePointer) context.getContextNodePointer(), new ArrayList<>());
    BasicNodeSet result = new BasicNodeSet();
    for (NodePointer ptr : ptrs) {
        result.add(ptr);
    }
    return result;
}

// Mock implementations for context creation and extraction
private ExpressionContext createContext() {
    // Implement context creation logic
    return new ExpressionContextImpl();
}

private JXPathContext createContextJXPath() {
    // Implement JXPathContext creation logic
    return