public void testSingletonGetterPreventsUnusedClassRemoval() {
    // Arrange: Setup the environment for the Closure Compiler
    String input = 
        "// ==ClosureCompiler==\n" +
        "// @compilation_level ADVANCED_OPTIMIZATIONS\n" +
        "// @output_file_name default.js\n" +
        "// @use_closure_library true\n" +
        "// @formatting pretty_print,print_input_delimiter\n" +
        "// @warning_level VERBOSE\n" +
        "// @debug true\n" +
        "// ==/ClosureCompiler==\n\n" +
        "goog.provide('foo');\n\n" +
        "var foo = function() { this.values = []; };\n" +
        "goog.addSingletonGetter(foo);\n\n" +
        "foo.prototype.add = function(value) {this.values.push(value)};";

    // Act: Simulate the Closure Compiler process
    String output = simulateClosureCompiler(input);

    // Assert: Check that the singleton pattern prevents removal
    String expectedOutput = 
        "(function($ctor$$) {\n" +
        " $ctor$$.$getInstance$ = function $$ctor$$$$getInstance$$() {\n" +
        " return $ctor$$