import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.SingularValueDecompositionImpl;
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class TestSingularValueDecomposition {

    @Test
    public void testNaNSingularValueFromSVD() {
        double[][] alist = {
            {1.0, 2.0, 3.0},
            {2.0, 3.0, 4.0},
            {3.0, 5.0, 7.0}
        };

        Array2DRowRealMatrix A = new Array2DRowRealMatrix(alist);
        SingularValueDecompositionImpl decomp = new SingularValueDecompositionImpl(A);
        double[] singularValues = decomp.getSingularValues();

        assertEquals(11.218599757513008, singularValues[0], 1e-10);
        assertEquals(0.3781791648535976, singularValues[1], 1e-10);
        assertTrue(Double.isNaN(singularValues[2]));
    }
}