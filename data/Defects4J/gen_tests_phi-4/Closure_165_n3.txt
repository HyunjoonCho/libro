import org.junit.Assert;
import org.junit.Test;

public class RecordTypeTest {

    @Test(expected = NoSuchFieldError.class)
    public void testPropertiesOnUnrelatedRecordTypes() {
        // Define the first record type
        interface RecordType1 {
            String name();
            int id();
        }

        // Define the second record type
        interface RecordType2 {
            String name2();
        }

        // Function expecting a RecordType1
        java.util.function.Consumer<RecordType1> func = (rec) -> {
            // Attempt to access a field not defined on RecordType1
            System.out.println(rec.name2()); // This should cause a NoSuchFieldError
        };

        // Pass an object matching RecordType1 structure
        func.accept(new RecordType1() {
            @Override
            public String name() {
                return "jim";
            }

            @Override
            public int id() {
                return 0;
            }
        });
    }
}