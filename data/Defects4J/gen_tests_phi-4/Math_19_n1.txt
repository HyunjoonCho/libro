public void testWideBoundsToNaN() {
    double lowerBound = -Double.MAX_VALUE;
    double upperBound = Double.MAX_VALUE;
    CMAESOptimizer optimizer = new CMAESOptimizer(lowerBound, upperBound);
    optimizer.setFitnessFunction(new TestFitnessFunction());
    optimizer.optimize();
    
    assertTrue(optimizer.isNaNParametersPassed());
}

class TestFitnessFunction implements FitnessFunction {
    @Override
    public double evaluate(double[] parameters) {
        return parameters[0]; // Simple check to see if NaN was passed
    }
}

Note: The `CMAESOptimizer` class and `FitnessFunction` interface are assumed to be part of the existing codebase, and `optimizer.isNaNParametersPassed()` is a hypothetical method to verify if NaN parameters were passed. This would need to be implemented or adjusted based on the actual codebase.