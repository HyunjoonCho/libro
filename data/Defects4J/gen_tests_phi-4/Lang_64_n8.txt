public void testValuedEnumCompareTo() {
    EnumWithValue<Integer> enumA = new EnumWithValue<>(10);
    EnumWithValue<Integer> enumB = new EnumWithValue<>(10);

    // Assuming EnumWithValue is a subclass of ValuedEnum
    assertEquals(0, enumA.compareTo(enumB));
    
    // Different sub-classes with the same value
    EnumWithValue<Double> enumC = new EnumWithValue<>(10.0);
    assertEquals(0, enumA.compareTo(enumC));
}

Note: This test assumes that `EnumWithValue` is a subclass of `ValuedEnum` and that it overrides the `compareTo` method. Adjust the class names as necessary to fit your actual implementation.