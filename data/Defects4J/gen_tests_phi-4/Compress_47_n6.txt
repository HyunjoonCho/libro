public void testZipArchiveInputStreamNextZipEntry() {
    // Mock a ZipEntry with an unknown compressed size
    ZipEntry entry = mock(ZipEntry.class);
    when(entry.getCompressedSize()).thenReturn(ArchiveEntry.SIZE_UNKNOWN);
    when(entry.getMethod()).thenReturn(ZipMethod.BZIP2.getCode());

    // Mock the input stream
    InputStream in = mock(InputStream.class);

    // Initialize ZipArchiveInputStream with the mocked entry
    ZipArchiveInputStream zipInputStream = new ZipArchiveInputStream(in);
    zipInputStream.getNextZipEntry(entry);

    // Assert that an exception is thrown when trying to read from the stream
    try {
        zipInputStream.read();
        fail("Expected an exception due to unknown compressed size");
    } catch (IOException e) {
        assertTrue(e.getMessage().contains("Compressed size is unknown"));
    }
}