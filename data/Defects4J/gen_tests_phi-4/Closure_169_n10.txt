public void testStrangeWarning() {
    // Simulating the call that triggers the warning
    @SuppressWarnings("unused")
    Object result = test1(createFnStruc1());

    // Ensure the test runs without additional exceptions
    assert result!= null;
}

private Object test1(Object obj) {
    // Simulated function body
    return obj;
}

private Object createFnStruc1() {
    Object fnStruc1 = new Object();
    java.lang.reflect.Field funcField;
    try {
        funcField = fnStruc1.getClass().getDeclaredField("func");
        funcField.setAccessible(true);
        funcField.set(fnStruc1, createFunction());
    } catch (NoSuchFieldException | IllegalAccessException e) {
        throw new RuntimeException(e);
    }
    return fnStruc1;
}

private Object createFunction() {
    return new Object() {
        public void func() {
            // Dummy function body
        }
    };
}