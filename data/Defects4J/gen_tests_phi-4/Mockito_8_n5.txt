public void testStackOverflowErrorWithGenericsSelfReference() {
    interface GenericsSelfReference<T extends GenericsSelfReference<T>> {
        T self();
    }

    // Simulate the behavior of GenericMetadataSupport and inferFrom
    GenericMetadataSupport genericMetadata = inferFrom(GenericsSelfReference.class)
       .resolveGenericReturnType(firstNamedMethod("self", GenericsSelfReference.class));

    assertThrows(StackOverflowError.class, () -> {
        genericMetadata.rawType();
    });
}

// Mock methods to simulate the test environment
private GenericMetadataSupport inferFrom(Class<?> cls) {
    // Simulate the behavior of inferFrom
    return new GenericMetadataSupport();
}

private MethodSignature firstNamedMethod(String name, Class<?> cls) {
    // Simulate finding the first method named 'name' in the class 'cls'
    return new MethodSignature(name, cls);
}

// Mock classes to simulate the test environment
class GenericMetadataSupport {
    public Class<?> rawType() {
        // Simulate the behavior that causes StackOverflowError
        return GenericsSelfReference.class;
    }

    public GenericMetadataSupport resolveGenericReturnType(MethodSignature methodSignature) {
        // Simulate resolving the generic return type
        return this;