public void testRuntimeExceptionWithExternPrototype() {
    try {
        // Simulate the command line execution
        String[] command = {
            "java",
            "-jar",
            "compiler.jar",
            "--compilation_level",
            "ADVANCED_OPTIMIZATIONS",
            "--externs",
            "prototype.js",
            "--js",
            "bootloader.js"
        };
        ProcessBuilder processBuilder = new ProcessBuilder(command);
        processBuilder.redirectErrorStream(true);
        Process process = processBuilder.start();

        // Read the output and error streams
        StringBuilder output = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {
            String line;
            while ((line = reader.readLine())!= null) {
                output.append(line).append("\n");
            }
        }

        int exitCode = process.waitFor();
        if (exitCode!= 0) {
            throw new RuntimeException("Compiler failed with exit code " + exitCode + ": " + output);
        }

        // Check for the specific error message
        boolean containsError = output.toString().contains("INTERNAL COMPILER ERROR.");
        assert containsError : "Expected INTERNAL COMPILER ERROR message not found in output.";

    } catch (Exception e) {