public void testJsoupParseHangsOnBogusInput() throws Exception {
    // Assuming the presence of a utility method to check for hang
    assertFalse("JSoup.parse should not hang on bogus input", checkForHang(() -> {
        Jsoup.parse(new StringInputStream(bogusInputData, StandardCharsets.UTF_8));
    }));
}

// Helper method to simulate hang detection
private boolean checkForHang(Runnable parseAction) throws Exception {
    Thread parseThread = new Thread(parseAction);
    parseThread.start();
    if (!parseThread.join(5000)) { // Wait for 5 seconds for the thread to finish
        parseThread.interrupt();
        assertTrue("Thread should be interrupted", parseThread.isInterrupted());
        return true; // Indicates that the thread hung
    }
    return false; // No hang detected
}

// Helper class to simulate InputStream from string
private static class StringInputStream extends InputStream {
    private final byte[] data;
    private int cursor = 0;

    public StringInputStream(byte[] data, Charset charset) {
        this.data = data;
    }

    @Override
    public int read() throws IOException {
        if (cursor >= data.length) {
            return -1;