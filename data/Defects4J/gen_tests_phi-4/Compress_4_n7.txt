import org.junit.Assert;
import org.junit.Test;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import net.jpountz.lz4.LZ4Factory;
import net.jpountz.lz4.LZ4CompressorOutputStream;

public class ArchiveOutputStreamTest {

    @Test
    public void testFinishMethodSafety() throws IOException {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        LZ4Factory factory = LZ4Factory.fastestInstance();
        LZ4CompressorOutputStream compressorOutputStream = new LZ4CompressorOutputStream(factory.fastCompressor(), byteArrayOutputStream);

        // Write some data
        compressorOutputStream.write(new byte[]{1, 2, 3, 4, 5});
        
        // Call finish() externally
        try {
            compressorOutputStream.finish();
            compressorOutputStream.close();
        } catch (IOException e) {
            Assert.fail("finish() should not throw an exception when called externally");
        }

        // Write more data after finish() to test corruption
        compressorOutputStream.write(new byte[]{6, 7, 8, 9, 0});
        
        // Close the stream
        compressorOutputStream.close();

        // Check if the output is corrupted
        byte[] expectedOutput = LZ4Factory.fastestInstance