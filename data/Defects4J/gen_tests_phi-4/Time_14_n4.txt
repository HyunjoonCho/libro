public void testIssue151() {
    final MonthDay isoLeap = MonthDay.of(DateTimeConstants.FEBRUARY, 29);
    try {
        isoLeap.plusDays(2);
        fail("Expected an IllegalFieldValueException to be thrown");
    } catch (IllegalFieldValueException e) {
        assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
    }
    
    // Additional checks for other operations that should fail
    try {
        isoLeap.plusMonths(1);
        fail("Expected an IllegalFieldValueException to be thrown");
    } catch (IllegalFieldValueException e) {
        assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
    }
    
    try {
        isoLeap.minusMonths(-1);
        fail("Expected an IllegalFieldValueException to be thrown");
    } catch (IllegalFieldValueException e) {
        assertEquals("Value 29 for dayOfMonth must be in the range [1,28]", e.getMessage());
    }
    
    // Check for operations that should succeed
    assertEquals(MonthDay.of(DateTimeConstants.FEBRUARY, 28), isoLeap.minusDays(1));
    assertEquals(MonthDay.of(DateTime