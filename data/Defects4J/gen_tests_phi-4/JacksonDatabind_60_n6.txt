public void testPolymorphicTypeLostWithJsonValue() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
    mapper.enableDefaultTyping();

    CommandAPDU commandAPDU = new CommandAPDU(new byte[]{0x01, 0x02, 0x03});
    String json = mapper.writeValueAsString(commandAPDU);

    RemoteCall remoteCall = new RemoteCall();
    remoteCall.setArgs(new Object[][]{{"[B", "AQIDBA=="}, {"net.sf.lipermi.call.RemoteInstance", new RemoteInstance("b0e15098-f49e-4328-b072-fc5df42799bd", "com.ubitricity.devices.common.tasks.ResponseReceiver")}});

    CommandAPDU deserialized = mapper.readValue(mapper.writeValueAsString(remoteCall), RemoteCall.class).getCommandAPDU();
    assertArrayEquals(commandAPDU.getBytes(), deserialized.getBytes());
}

This test method serializes an instance of `CommandAPDU` to JSON, then deserializes it back to an object, checking if the byte array is correctly deserialized into the `CommandAPDU` instance. Adjust the `RemoteCall` and `