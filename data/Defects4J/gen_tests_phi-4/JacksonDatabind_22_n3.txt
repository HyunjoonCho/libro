public void testCustomSerializerNotUsedIfPOJOWithJsonValue() throws Exception {
    // Sample POJO with @JsonValue
    class SamplePojo {
        private String value;

        public SamplePojo(String value) {
            this.value = value;
        }

        @JsonValue
        public String toJsonValue() {
            return "{\"value\":\"" + value + "\"}";
        }
    }

    // Register a custom serializer (for demonstration purposes, assuming `ObjectMapper` is being used)
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(SamplePojo.class, new JsonSerializer<SamplePojo>() {
        @Override
        public void serialize(SamplePojo value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
            gen.writeStartObject();
            gen.writeStringField("value", value.value);
            gen.writeEndObject();
        }
    });
    mapper.registerModule(module);

    // Serialize the POJO
    SamplePojo pojo = new SamplePojo("test");
    String result = mapper.writeValueAsString(pojo);

    // Expected result according to custom serializer, not @JsonValue
    assertEquals("{\"value\":\"test\"}", result);

    // If the custom serializer is not