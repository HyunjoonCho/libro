import org.junit.Test;
import static org.junit.Assert.*;

public class TestAnonymousObjectTypeInference {

    @Test(expected = IllegalArgumentException.class)
    public void testConstructorTypeInference() {
        // Assuming 'callz' is a JavaScript function that has been compiled to Java
        // and wrapped appropriately to be called from Java.
        // This is a conceptual representation since JavaScript cannot be directly executed in Java.
        
        // Direct function call
        callz({prop1: "hi"}); // Assuming this works as expected

        // Constructor call
        new callz({prop1: "hi"}); // This should trigger the type mismatch error

        // Note: The actual implementation of 'callz' and how it's called from Java
        // would depend on the specifics of the JavaScript to Java compilation/setup.
    }

    // Mock-up of the 'callz' function to illustrate the concept
    // In reality, this would be part of the compiled JavaScript code
    private void callz(Object parry) {
        // Simulate the behavior and error
        if (parry instanceof HashMap) {
            HashMap<String, Object> map = (HashMap<String, Object>) parry;
            if (!map.containsKey("