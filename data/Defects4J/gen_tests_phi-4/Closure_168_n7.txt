import org.junit.Test;
import static org.junit.Assert.fail;

public class PersonTest {

    @Test
    public void testAliasErrorNotReported() {
        try {
            var makeClass = (protoMethods) -> {
                var clazz = () -> {
                    this.initialize.apply(this, java.lang.reflect.Array.newInstance(java.lang.Object.class, 0));
                };
                for (var i : protoMethods.keySet()) {
                    clazz.prototype[i] = protoMethods.get(i);
                }
                return clazz;
            };

            class Person {
                String name;

                Person(String name) {
                    this.name = name;
                }
            }

            Person = makeClass(Map.of(
                "initialize", (Function) (name) -> {
                    this.name = name;
                },
                "getName", (Function) () -> {
                    return this.name;
                },
                "say", (Function) (message) -> {
                    var self = this;
                    new java.util.concurrent.ScheduledExecutorService().schedule(() -> {
                        try {
                            System.out.println(self.getName(1) + " says: " + message);
                        } catch (Exception e) {
                            fail("Expected exception due to wrong argument count.");
                        }
                    }, 500, java.util