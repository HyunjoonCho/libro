public void testPolymorphicTypePropertyLoss() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerSubtypes(new DefaultImplSubtype());

    String json = "{\"type\":\"defaultImpl\",\"name\":\"Test\",\"value\":42}";
    TestObject obj = mapper.readValue(json, TestObject.class);

    assertNotNull(obj);
    assertEquals("Test", obj.getName());
    assertEquals(42, obj.getValue());

    // Ensure polymorphic resolution and properties are correct
    assertTrue(obj instanceof DefaultImpl);
    assertEquals("Test", ((DefaultImpl) obj).getName());
    assertEquals(42, ((DefaultImpl) obj).getValue());
}

This test assumes you have classes `TestObject`, `DefaultImpl`, and `DefaultImplSubtype` properly set up to demonstrate the issue. Adjust the class names and properties as needed to fit your actual implementation.