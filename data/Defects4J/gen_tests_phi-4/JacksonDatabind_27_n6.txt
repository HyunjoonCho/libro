public void testDeserializationWithExternalTypeId() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enable(SerializationFeature.INDENT_OUTPUT);
    mapper.registerModule(new AfterburnerModule());

    String json = "{\"_type\":\"com.example.MyClass\",\"field1\":\"value1\"}";

    try {
        MyType obj = mapper.readValue(json, MyType.class);
        assertNull(obj);
    } catch (JsonProcessingException e) {
        fail("Deserialization should succeed but failed: " + e.getMessage());
    }
}

This test assumes `MyType` is a class annotated with `@JsonDeserialize(using = MyTypeDeserializer.class)` where `MyTypeDeserializer` is a custom deserializer handling the external type ID logic. Adjust the class and type ID as per your actual setup.