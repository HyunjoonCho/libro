public void testPublicTagPreventsCompression() {
    // Simulate the input code
    Object Glow = new Object();
    Object versions = new Object() {
        public Object[] values = {1, 2, 3};
    };
    Object showVersions = new Object() {
        public void execute() {
            System.out.println(versions.values);
        }
    };

    // Simulate the compiler's transformation
    Object compressedGlow = new Object();
    Object compressedVersions = new Object() {
        public Object[] values = {1, 2, 3};
    };
    Object compressedShowVersions = new Object() {
        public void execute() {
            System.out.println(compressedVersions.values);
        }
    };

    // Assign to window scope
    Map<String, Object> window = new HashMap<>();
    window.put("Glow", compressedGlow);
    compressedGlow.a = compressedVersions;
    compressedGlow.b = compressedShowVersions;
    compressedVersions = compressedGlow.a;
    compressedShowVersions = compressedGlow.b;

    // Simulate user code
    Object userGlow = window.get("Glow");
    Object userVersions = new Object() {
        public Object[] values = {4