public void testAdvancedModeCompilerWarning() {
    // Setup code to mimic the ClosureCompiler environment
    // Note: JUnit alone cannot directly test ClosureCompiler behavior, 
    // so this test assumes that the environment is set up accordingly.

    // Simulating the behavior where Bar.prototype.add and Bar.prototype.sub 
    // should produce warnings when overridden with different signatures.
    
    // Mock objects to simulate Foo and Bar
    Foo foo = new Bar();
    Bar bar = new Bar();

    // Trigger the calls that should produce warnings
    foo.add(3, 4);
    try {
        bar.add(3, 4);
        fail("Expected JSC_WORNG_ARGUMENT_COUNT warning for bar.add(3, 4)");
    } catch (IllegalArgumentException expected) {
        // Expected exception due to wrong argument count
    }

    bar.sub(5); // Should not produce a warning as it matches the signature
}

Note: This test assumes that the environment is set up to simulate the ClosureCompiler's behavior and that the necessary dependencies and configurations are in place. The test checks for the expected behavior by triggering the method calls that should produce warnings.