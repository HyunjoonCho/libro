public void testAssignmentToObjectInConditional() {
    // Simulate the behavior of the JavaScript function in Java
    // Define a record to mimic the return type structure
    record ResultRecord(Object prop1, String prop2, String prop3) {}

    ResultRecord func(boolean a, boolean b) {
        ResultRecord results = new ResultRecord(null, null, null);
        if (a) {
            results = new ResultRecord(new Object() {{}}, results.prop2(), results.prop3());
        }
        if (b) {
            results = new ResultRecord(results.prop1(), "prop2", results.prop3());
        } else {
            results = new ResultRecord(results.prop1(), results.prop2(), "prop3");
        }
        return results;
    }

    // Test case that reproduces the issue
    ResultRecord result = func(true, false);
    assertEquals(new Object() {}, result.prop1());
    assertEquals(null, result.prop2());
    assertEquals("prop3", result.prop3());
}

This Java test method uses a record to simulate the JavaScript function's return type and checks for the type mismatch issue described in the bug report. The test ensures that the conditional logic correctly initializes the `results` object.