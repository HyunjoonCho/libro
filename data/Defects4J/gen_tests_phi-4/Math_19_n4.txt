public void testWideBoundsToCMAESOptimizer() {
    double[] lowerBounds = {-Double.MAX_VALUE, -Double.MAX_VALUE};
    double[] upperBounds = {Double.MAX_VALUE, Double.MAX_VALUE};
    CMAESOptimizer optimizer = new CMAESOptimizer(lowerBounds, upperBounds, 10, 1e-6);
    
    // Assuming the optimizer has a method to run or initialize the optimization process
    optimizer.optimize();
    
    // Assuming there is a way to access the last evaluated parameters
    double[] lastParams = optimizer.getLastEvaluatedParameters();
    
    for (double param : lastParams) {
        assertTrue(Double.isNaN(param));
    }
}