public void testTreeTraversingParserBase64Variant() {
    Base64Variant variant = Base64Variants.MIME_NO_PADDING;
    ObjectMapper mapper = new ObjectMapper();
    ObjectNode rootNode = mapper.createObjectNode();
    ((ObjectNode) rootNode).put("key", "SGVsbG8gd29ybGQ="); // "Hello world" in Base64

    TreeTraversingParser parser = new TreeTraversingParser(rootNode, null, variant);
    JsonParser parser2 = mapper.getFactory().createParser("{}");
    TreeTraversingParser parser3 = new TreeTraversingParser(parser2, null, variant);

    // Simulate the issue by accessing binary value without using variant
    JsonNode node = rootNode.get("key");
    byte[] binaryValue = ((TextNode) node).binaryValue(); // Should use MIME_NO_PADDING variant

    // Assert that the binary value is incorrect due to using default variant
    assertNotEquals("Hello world".getBytes(StandardCharsets.UTF_8), binaryValue);

    // Expected correct behavior
    byte[] correctBinaryValue = ((TextNode) node).getBinaryValue(variant);
    assertEquals("Hello world".getBytes(StandardCharsets.UTF_8), correct