public void testConstWithTypeCast() throws Exception {
    // Define the interface and its default implementation
    interface TwoNumbers {
        double getFirst();
        double getSecond();
    }

    TwoNumbers SOME_DEFAULT = new TwoNumbers() {
        public double getFirst() {
            return 1;
        }

        public double getSecond() {
            return 2;
        }
    };

    // Class using the TwoNumbers interface
    class HasTwoNumbers {
        private final TwoNumbers twoNumbers;

        public HasTwoNumbers() {
            this.twoNumbers = getTwoNumbers();
        }

        private TwoNumbers getTwoNumbers() {
            return SOME_DEFAULT;
        }

        public double getFirst() {
            return twoNumbers.getFirst();
        }

        public double getSecond() {
            return twoNumbers.getSecond();
        }
    }

    // Test to ensure no compilation issues when using @const equivalent
    HasTwoNumbers instance = new HasTwoNumbers();
    assertEquals(1, instance.getFirst(), 0.0);
    assertEquals(2, instance.getSecond(), 0.0);
}