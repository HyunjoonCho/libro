public void testObjectIdAndTypeIdAsWrapperObject() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enable(SerializationFeature.INDENT_OUTPUT);
    mapper.registerModule(new JaxbAnnotationModule());

    // Assuming RootType is a class with @XmlRootElement and @XmlSeeAlso annotations
    Class<RootType> rootTypeClass = RootType.class;
    Class<ChildType> childTypeClass = ChildType.class;

    // Create a JSON tree with object and type ids
    ObjectNode rootNode = mapper.createObjectNode();
    rootNode.putObjectProperty("object", mapper.createObjectNode());
    rootNode.get("object").put("@type", "child");

    // Write the JSON tree
    String json = mapper.writeValueAsString(rootNode);

    // Parse the JSON back to an object
    JsonNode parsedNode = mapper.readTree(json);
    RootType result = mapper.treeToValue(parsedNode, rootTypeClass);

    // Assert the result
    assertNotNull(result);
    assertTrue(result instanceof ChildType);
}

**Note:** Replace `RootType` and `ChildType` with the actual class names used in your specific use case. This test assumes that `RootType` is a class with JAXB annotations and that `ChildType