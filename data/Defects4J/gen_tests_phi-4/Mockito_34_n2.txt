public void testSourceFilesInBinaryJar() {
    URL sourceJar = getClass().getResource("/path/to/mockito-core-sources.jar");
    URL binaryJar = getClass().getResource("/path/to/mockito-core.jar");

    assertNotNull("Source JAR should be available", sourceJar);
    assertNotNull("Binary JAR should be available", binaryJar);

    try (JarFile sourceJarFile = new JarFile(sourceJar.openStream())) {
        assertTrue("Source JAR should contain source files",
            Arrays.stream(sourceJarFile.entries())
                 .anyMatch(entry -> entry.getName().endsWith(".java")));
    } catch (IOException e) {
        fail("Failed to open source JAR: " + e.getMessage());
    }

    try (JarFile binaryJarFile = new JarFile(binaryJar.openStream())) {
        assertFalse("Binary JAR should not contain source files",
            Arrays.stream(binaryJarFile.entries())
                 .anyMatch(entry -> entry.getName().endsWith(".java")));
    } catch (IOException e) {
        fail("Failed to open binary JAR: " + e.getMessage());
    }
}