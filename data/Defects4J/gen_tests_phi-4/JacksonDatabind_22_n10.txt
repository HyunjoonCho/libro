import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class CustomSerializerTest {

    public static class CustomSerializer extends JsonSerializer<MyPojo> {
        @Override
        public void serialize(MyPojo value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
            gen.writeString("custom-serialization");
        }
    }

    public static class MyPojo {
        public String value;

        public MyPojo(String value) {
            this.value = value;
        }

        @JsonValue
        public String toJsonValue() {
            return "default-serialization";
        }
    }

    @Test
    public void testCustomSerializerOverriddenByJsonValue() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        SimpleModule module = new SimpleModule();
        module.addSerializer(MyPojo.class, new CustomSerializer());
        mapper.registerModule(module);

        MyPojo pojo = new MyPojo("test");
        String result = mapper.writeValueAsString(pojo);

        assertEquals("default-serialization", result);
    }
}