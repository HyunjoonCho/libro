public void testPropertiesDefinedOnAnyRecordType() {
    // Create a record type with fields name and id
    @JsType(isNative = true, name = "Object")
    public static class RecordType1 {
        public String name;
        public int id;
    }

    // Create another record type with field name2
    @JsType(isNative = true, name = "Object")
    public static class RecordType2 {
        public String name2;
    }

    // Define a function that expects a RecordType1 object
    @JsFunction
    public interface Func {
        void apply(RecordType1 rec);
    }

    // Create a function that tries to access a non-existent field name2
    Func func = new Func() {
        @JsFunction
        @Override
        public void apply(RecordType1 rec) {
            System.out.println(rec.name2);  // This should cause a problem
        }
    };

    // Execute the function with a RecordType1 object
    func.apply(new RecordType1() {{
        this.name = "jim";
        this.id = 0;
    }});

    // Check if there's an error due to accessing non-existent field name2