public void testConstructingInvalidPartials() {
    DateTimeFieldType[] types = { DateTimeFieldType.clockhourOfDay(), DateTimeFieldType.hourOfDay() };
    int[] values = { 1, 1 };
    
    try {
        new Partial(types, values);
        fail("Expected Types array must not contain duplicate exception");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }

    Partial partial1 = new Partial(DateTimeFieldType.clockhourOfDay(), 1).with(DateTimeFieldType.hourOfDay(), 1);
    Partial partial2 = new Partial(DateTimeFieldType.hourOfDay(), 1).with(DateTimeFieldType.clockhourOfDay(), 1);
    
    try {
        partial1.isEqual(partial2);
        fail("Expected objects must have matching field types exception");
    } catch (IllegalArgumentException e) {
        // Expected exception
    }
}