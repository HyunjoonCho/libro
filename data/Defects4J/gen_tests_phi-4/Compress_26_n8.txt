public void testIOUtilsSkipWithCipherInputStream() {
    try {
        byte[] data = "test data".getBytes();
        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
        cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(data, "AES"), new IvParameterSpec(data));
        
        CipherInputStream cipherInputStream = new CipherInputStream(new ByteArrayInputStream(data), cipher);
        TarInputStream tarInputStream = new TarInputStream(cipherInputStream);
        
        long initialSize = tarInputStream.available();
        IOUtils.skip(tarInputStream, initialSize / 2);
        
        long remaining = tarInputStream.available();
        
        // If skip worked as expected, remaining should be less than initialSize / 2
        // However, due to the bug, remaining will often be 0 if end of cipher buffer is reached
        assertTrue(remaining < initialSize / 2 || remaining > 0);
        
    } catch (Exception e) {
        fail("Exception should not be thrown: " + e.getMessage());
    }
}