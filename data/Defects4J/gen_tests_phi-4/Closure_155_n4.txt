public void testOverzealousArgumentsOptimization() {
    Object expected = new Object();
    Object actual = new Object();
    
    // Simulating the original function behavior
    Object originalOutput = d3_call((callback) -> {
        assert callback == expected : "Callback should be the original argument";
        return actual;
    }, expected);
    
    // Simulating the optimized function behavior
    Object optimizedOutput = d3_callOptimized((callback) -> {
        assert callback == originalOutput : "Callback should be the modified argument";
        return actual;
    });

    assertNotEquals(originalOutput, optimizedOutput : "Original and optimized outputs should differ");
}

private Object d3_call(Runnable callback, Object expected) {
    Object f = callback;
    Object thisContext = new Object();
    Object[] args = new Object[]{expected};
    args[0] = thisContext;
    callback.run();
    return thisContext;
}

private Object d3_callOptimized(Runnable callback) {
    Object thisContext = new Object();
    callback.run();
    return thisContext;
}