public void testPosixParserInterruptsTargetOption() {
    Options options = new Options();
    Option targetOption = new Option("t", "target", true, "Generate files for the specified target machine");
    options.addOption(targetOption);

    PosixParser parser = new PosixParser();
    try {
        CommandLine cmd = parser.parse(options, new String[]{"-target", "foobar.com"});
        assertEquals("foobar.com", cmd.getOptionValue("target"));
    } catch (ParseException e) {
        fail("ParseException should not have been thrown");
    }

    try {
        CommandLine cmd = parser.parse(options, new String[]{"-t", "foobar.com"});
        assertEquals("foobar.com", cmd.getOptionValue("target"));
    } catch (ParseException e) {
        fail("ParseException should not have been thrown");
    }

    try {
        CommandLine cmd = parser.parse(options, new String[]{"-target"});
        assertNull(cmd.getOptionValue("target"));
    } catch (ParseException e) {
        fail("ParseException should not have been thrown");
    }

    try {
        CommandLine cmd = parser.parse(options, new String[]{"-t"});
        assertNull(cmd.getOptionValue("target"));
    } catch (ParseException e) {
        fail("ParseException