public void testTreeTraversingParserIntBounds() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    String jsonInput = "{\"x\": 2147483649}";
    
    // Read directly from tree
    JsonNode tree = mapper.readTree(jsonInput);
    String fromTree;
    try {
        fromTree = mapper.readerFor(IntClass.class).readValue(tree).toString();
    } catch (Exception e) {
        fromTree = e.getClass().getSimpleName();
    }
    
    // Read from string
    String fromString;
    try {
        fromString = mapper.readerFor(IntClass.class).readValue(jsonInput).toString();
    } catch (Exception e) {
        fromString = e.getClass().getSimpleName();
    }
    
    assertEquals("JsonMappingException", fromString);
    assertEquals("-2147483647", fromTree); // Expected overflow behavior
}

This test method checks the behavior of the `TreeTraversingParser` when parsing an integer value that exceeds the bounds of a 32-bit signed integer. The expected behavior is that reading from a string throws a `JsonMappingException`, while reading directly from a tree results in an overflow, returning `-2147483647`.