public void testInconsistentHandlingOfNonJSDocComments() {
    String input = "/\* @preserve Foo License \*/\nalert(\"foo\");";
    String expectedWarning = "stdin:1: WARNING - Parse error. Non-JSDoc comment has annotations. Did you mean to start it with '/\\*\\*'?";

    // Simulate the command line execution of Closure Compiler
    String output = executeClosureCompiler(input);

    assertTrue(output.contains(expectedWarning));
    assertTrue(output.contains("alert(\"foo\");"));
}

private String executeClosureCompiler(String input) {
    // Simulate the behavior of the Closure Compiler as described in the bug report
    if (input.startsWith("/\* @preserve")) {
        return "stdin:1: WARNING - Parse error. Non-JSDoc comment has annotations. Did you mean to start it with '/\\*\\*'?"
                + "\n /\* @license Foo License \*/\n^"
                + "\n 0 error(s), 1 warning(s)\n" + input.split("\n")[1];
    }

    // Handle other cases or default behavior
    return input;
}