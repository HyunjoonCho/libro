public void testWideBoundsNaNParameters() {
    double lowerBound = -Double.MAX_VALUE;
    double upperBound = Double.MAX_VALUE;
    double[] bounds = {lowerBound, lowerBound, lowerBound, lowerBound, lowerBound, lowerBound,
                       upperBound, upperBound, upperBound, upperBound, upperBound, upperBound};
    
    CMAESOptimizer optimizer = new CMAESOptimizer(12, bounds);
    optimizer.optimize(new FitnessFunction() {
        @Override
        public double evaluate(double... parameters) {
            for (double parameter : parameters) {
                assertNotSame(Double.NaN, parameter);
            }
            return 0.0; // Dummy fitness value
        }
    }, 100); // Number of iterations, can be adjusted
}