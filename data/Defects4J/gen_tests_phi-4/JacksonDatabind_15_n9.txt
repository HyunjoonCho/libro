public void testXmlAdapterResultMarshalingError() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.setAnnotationIntrospector(new JaxbAnnotationIntrospector());

    SomeIntListHolder listHolder = new SomeIntListHolder();
    listHolder.setListOne(asList(1, 2, 3));

    assertThrows(JsonMappingException.class, () -> {
        mapper.writeValueAsString(listHolder);
    });
}

public static class IntegerListXmlAdapter extends XmlAdapter<Object, List<Integer>> {
    @Override
    public List<Integer> unmarshal(Object value) throws Exception {
        return null;
    }

    @Override
    public Object marshal(List<Integer> list) throws Exception {
        return Joiner.on(",").join(list);
    }
}

@XmlRootElement
@XmlAccessorType(XmlAccessType.NONE)
public static class SomeIntListHolder {
    @XmlAttribute
    @XmlJavaTypeAdapter(IntegerListXmlAdapter.class)
    private List<Integer> listOne;

    public List<Integer> getListOne() {
        return listOne;
    }

    public void setListOne(List<Integer> listOne) {
        this.listOne = listOne;
    }
}