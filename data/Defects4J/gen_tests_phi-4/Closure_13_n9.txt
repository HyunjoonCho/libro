public void testTrueFalseReplacement() {
    // Simulate the behavior described in the bug report
    boolean anyExpression = true;
    Function<String, String> externalRef = content -> "external result";

    Function<String, Function<String, String>> createFn1 = anyExpr -> {
        if (anyExpr) {
            return content -> externalRef.apply(content);
        }
        return null;
    };

    // First version
    Function<String, Function<String, String>> fn1 = createFn1.apply(anyExpression);

    // Expected replacement logic
    boolean isFn1NotNull = fn1!= null;
    boolean resultMethod1 = isFn1NotNull? fn1.apply("").equals("external result") : false;
    boolean resultMethod2 = false;

    // Assertions to check the expected behavior
    assertEquals(true, resultMethod1);
    assertEquals(false, resultMethod2);

    // Second version
    Function<String, Function<String, String>> optimizedFn1 = anyExpr -> {
        if (anyExpr) {
            return content -> externalRef.apply(content);
        }
        return null;
    };

    // Expected optimized replacement logic
    boolean isOptimizedFn1NotNull = optimizedFn1!= null;
    boolean optimizedResult