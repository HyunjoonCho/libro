public void testCoreRoundingFunctions() {
    assertEquals(Double.NaN, evaluateXPath("floor('NaN')", context), 0);
    assertEquals(Double.NEGATIVE_INFINITY, evaluateXPath("floor(-2 div 0)", context), 0);
    assertEquals(Double.POSITIVE_INFINITY, evaluateXPath("floor(2 div 0)", context), 0);

    assertEquals(Double.NaN, evaluateXPath("ceiling('NaN')", context), 0);
    assertEquals(Double.NEGATIVE_INFINITY, evaluateXPath("ceiling(-2 div 0)", context), 0);
    assertEquals(Double.POSITIVE_INFINITY, evaluateXPath("ceiling(2 div 0)", context), 0);

    assertEquals(Double.NaN, evaluateXPath("round('NaN')", context), 0);
    assertEquals(Double.NEGATIVE_INFINITY, evaluateXPath("round(-2 div 0)", context), 0);
    assertEquals(Double.POSITIVE_INFINITY, evaluateXPath("round(2 div 0)", context), 0);
}

Note: The method `evaluateXPath` is assumed to be a helper method that evaluates the XPath expression and returns a `Double`. The `context` is the context in which the XPath evaluation is performed. Adjust these according to your actual implementation.