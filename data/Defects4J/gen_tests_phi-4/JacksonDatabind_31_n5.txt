import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.SerializerProviderBase;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.io.IOException;
import java.io.StringWriter;

public class JsonStreamContextTest {

    @Test
    public void testJsonStreamContexts() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);

        // Serialize using writeValue
        ObjectNode node = mapper.createObjectNode();
        node.put("key", "value");
        StringWriter sw = new StringWriter();
        mapper.writeValue(sw, node);
        String serializedWriteValue = sw.toString();

        // Serialize using convertValue
        StringWriter swConvert = new StringWriter();
        mapper.convertValue(node, JsonNode.class).writeValue(swConvert);
        String serializedConvertValue = swConvert.toString();

        // Compare the outputs
        assertEquals(serializedWriteValue, serializedConvertValue);
    }

    // Custom serializer to capture context differences
    static class CustomSerializer extends com.fasterxml.jackson