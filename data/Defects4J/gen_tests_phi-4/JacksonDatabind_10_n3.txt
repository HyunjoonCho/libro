public void testJsonAnyGetterWithJsonSerialize() {
    ObjectMapper mapper = new ObjectMapper();

    // Sample class to test
    class Sample {
        @JsonAnyGetter
        @JsonSerialize(using = MySerializer.class)
        public Map<String, String> getParameters() {
            Map<String, String> parameters = new HashMap<>();
            parameters.put("key", "value");
            return parameters;
        }
    }

    Sample sample = new Sample();
    try {
        String json = mapper.writeValueAsString(sample);
        assertEquals("{\"key\":\"value\"}", json);
    } catch (JsonProcessingException e) {
        fail("Expected no exception but got: " + e.getMessage());
    }
}

// Custom serializer for the test
class MySerializer extends JsonSerializer<Map<String, String>> {
    @Override
    public void serialize(Map<String, String> value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        gen.writeStartObject();
        for (Map.Entry<String, String> entry : value.entrySet()) {
            gen.writeStringField(entry.getKey(), entry.getValue());
        }
        gen.writeEndObject();
    }
}