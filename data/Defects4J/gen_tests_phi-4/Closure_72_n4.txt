public void testInternalCompilerErrorOnBullet() {
    try {
        // Simulate the environment setup for the test
        String bulletJs = "/* Simulated content of bullet_1_1_q1.js */";
        String command = "java -jar apr5compiler.jar --compilation_level ADVANCED_OPTIMIZATIONS --variable_map_output_file js.vars --js " + bulletJs + " --js_output_file bullet_1_1_q1.cc.js";

        // Execute the command
        Process process = Runtime.getRuntime().exec(command);

        // Read output and error streams
        String output = new java.util.Scanner(process.getInputStream()).useDelimiter("\\A").next();
        String error = new java.util.Scanner(process.getErrorStream()).useDelimiter("\\A").next();

        // Assert that the expected error message appears in the output
        assertTrue(error.contains("INTERNAL COMPILER ERROR"));
        assertTrue(error.contains("Please report this problem"));

        // Ensure the test fails if the compiler does not throw the expected error
        fail("Expected INTERNAL COMPILER ERROR but did not receive it.");
    } catch (Exception e) {
        fail("An exception was thrown during test execution: " + e.getMessage());
    }
}