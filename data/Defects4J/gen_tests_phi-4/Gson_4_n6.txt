public void testRfc7159TopLevelValueTypes() {
    JsonFactory factory = new JsonFactory();
    factory.enable(JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS);
    factory.enable(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES);

    try (JsonParser parser = factory.createParser("{\"integer\": 0x1a}")) {
        assertTrue(parser.nextToken() == JsonToken.START_OBJECT);
        assertTrue(parser.nextToken() == JsonToken.FIELD_NAME);
        assertEquals("integer", parser.getCurrentName());
        assertTrue(parser.nextToken() == JsonToken.VALUE_INT);
        assertEquals(26, parser.getIntValue());
    } catch (IOException e) {
        fail("Parsing failed with IOException: " + e.getMessage());
    }
}