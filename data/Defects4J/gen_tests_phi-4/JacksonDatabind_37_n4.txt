public void testFieldInBaseClassNotRecognized() throws Exception {
    String jsonInput = "{ \"version\": \"1.0\", \"schemas\": [ { \"name\": \"FoodMart\", \"tables\": [ { \"name\": \"time_by_day\", \"columns\": [ { \"name\": \"time_id\" } ] }, { \"name\": \"sales_fact_1997\", \"columns\": [ { \"name\": \"time_id\" } ] } ] } ] }";

    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.registerModule(new JodaModule()); // Assuming JodaModule is needed for other parts of the code

    // Assuming JsonRoot, JsonMapSchema, and other related classes are correctly annotated
    JsonRoot root = objectMapper.readValue(jsonInput, JsonRoot.class);

    // Verify the deserialization result
    assertEquals("FoodMart", root.getSchemas().get(0).getName());
}

**Explanation:**

- The test method `testFieldInBaseClassNotRecognized` is designed to reproduce the failure described in the bug report.
- It uses a JSON string that includes the field `name` within a nested structure.
- The `ObjectMapper` is used to deserialize the JSON into the expected Java PO