public void testInstanceMethodContextLoss() {
    Path path = new Path();
    int[][] points = {{1, 1}, {2, 2}};
    for (int i = 0; i < points.length; i++) {
        // Simulating the problematic behavior
        if (i == 0) {
            try {
                Function2<Integer, Integer, Void> moveTo = path::moveTo;
                moveTo.apply(points[i][0], points[i][1]);
            } catch (Exception e) {
                // Expect an exception due to loss of 'this' context
                assertTrue(e instanceof IllegalStateException);
            }
        } else {
            Function2<Integer, Integer, Void> lineTo = path::lineTo;
            lineTo.apply(points[i][0], points[i][1]);
        }
    }
}

class Path {
    private int someField = 10;

    public void moveTo(int x, int y) {
        if (someField == null) {
            throw new IllegalStateException("someField is undefined");
        }
    }