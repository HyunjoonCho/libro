import org.junit.Test;
import static org.junit.Assert.assertThrows;

public class BugReportTest {

    @Test
    public void testWeirdObjectLiteralInvalidPropertyError() {
        assertThrows(IllegalArgumentException.class, () -> {
            Object obj = new Object() {
                public String getSomeText() {
                    return "example";
                }
            };

            // Simulate the behavior where the property is incorrectly identified
            if (obj instanceof ObjectWithText) {
                String text = ((ObjectWithText) obj).getText();
                System.out.println("Text: " + text);
            } else {
                throw new IllegalArgumentException("Object does not have the expected type.");
            }
        });
    }

    interface ObjectWithText {
        String getText();
    }
}

**Explanation:**
- The test method `testWeirdObjectLiteralInvalidPropertyError` is designed to simulate the scenario described in the bug report.
- It uses an anonymous `Object` with a method `getSomeText()`, which is analogous to the `text` property in the JavaScript example.
- The test checks if the object can be cast to a hypothetical interface `ObjectWithText` that has a `getText()` method.
- If the cast fails, it throws an