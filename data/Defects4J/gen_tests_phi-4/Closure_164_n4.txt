import static org.junit.Assert.fail;

import org.junit.Test;

public class TestFunctionAssignment {

    public interface Function1 {
        boolean apply(String s, int i);
    }

    public interface Function2 {
        boolean apply(String s, int i, boolean b);
    }

    public interface Function3 {
        boolean apply(String s);
    }

    public void func(Function1 param) {}

    @Test
    public void testFunctionAssignment() {
        // first call
        try {
            func(this::paramFunc1Impl);
        } catch (Exception e) {
            fail("First call should not throw an exception.");
        }

        // second call
        try {
            func(this::paramFunc2Impl);
            fail("Second call should throw an exception.");
        } catch (ClassCastException e) {
            // Expected exception
        }
    }

    public boolean paramFunc1Impl(String s, int i) {
        return true;
    }

    public boolean paramFunc2Impl(String s) {
        return true;
    }
}