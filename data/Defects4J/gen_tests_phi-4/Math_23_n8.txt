public void testBrentOptimizer() {
    Optimizer optimizer = new BrentOptimizer(1e-10, 1000);
    Function<Double, Double> f = x -> Math.pow(x - 2, 2) + 0.01 * Math.sin(10 * x);
    
    double min = optimizer.optimize(0.0, 4.0, f);
    double minVal = f.value(min);
    
    double prevMin = Double.POSITIVE_INFINITY;
    boolean bestPointCheck = true;
    
    for (int i = 0; i < optimizer.getEvaluations(); i++) {
        double candidate = optimizer.next();
        double candidateVal = f.value(candidate);
        
        if (candidateVal < prevMin) {
            prevMin = candidateVal;
        }
        
        if (prevMin < minVal) {
            bestPointCheck = false;
            break;
        }
    }
    
    assertTrue("BrentOptimizer did not return the best point encountered.", bestPointCheck);
}