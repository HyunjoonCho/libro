public void testBrentOptimizer() {
    BrentOptimizer optimizer = new BrentOptimizer();
    // Assuming the optimizer requires specific setup or function to optimize
    // The function should have a known minimum for testing

    // Configure optimizer with a sample function, e.g., f(x) = (x-2)^2
    // Assuming a setup method to configure the optimizer
    optimizer.setFunction(x -> Math.pow(x - 2, 2));
    optimizer.setMaxIteration(1000);
    optimizer.setEpsilon(1e-6);

    // Perform optimization
    double result = optimizer.optimize(0, 4); // Assuming the interval [0, 4]

    // Check if the returned point is indeed the best one encountered
    // Assuming the optimizer has a method to get the best point found
    double bestPointValue = optimizer.getBestPointValue();

    assertEquals("Optimizer did not report the best point encountered", 0.0, result, 1e-6);
    assertEquals("The reported best point is not the best encountered", 0.0, bestPointValue, 1e-6);
}