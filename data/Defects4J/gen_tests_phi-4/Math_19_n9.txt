public void testWideBoundsNaNParameters() {
    double lowerBound = -Double.MAX_VALUE;
    double upperBound = Double.MAX_VALUE;
    CMAESOptimizer optimizer = new CMAESOptimizer(lowerBound, upperBound);
    optimizer.setInitialMean(new double[]{0.0});
    
    optimizer.optimize(() -> {
        double[] parameters = optimizer.getParameters();
        for (double param : parameters) {
            assertFalse(Double.isNaN(param), "Parameter should not be NaN");
        }
        return Math.random(); // Dummy fitness function returning a random value
    });
}