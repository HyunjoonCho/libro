public void testInferenceInconsistency() {
    Function<Object, Void> func = record -> {
        if (record instanceof Map) {
            Map<?,?> map = (Map<?,?>) record;
            System.out.println(map.get("prop"));
        }
        return null;
    };

    Function<Object, Void> func2 = record -> {
        if (record instanceof String) {
            System.out.println(record);
        } else if (record instanceof Map) {
            Map<?,?> map = (Map<?,?>) record;
            System.out.println(map.get("prop"));
        }
        return null;
    };

    Map<String, String> record = Map.of("prop", "a");
    
    func.apply(record); // Expected to work
    func2.apply(record); // Should cause a type mismatch issue in a similar context

    // Simulate the error by trying to pass a type that should not be accepted
    // In Java, this will not cause a