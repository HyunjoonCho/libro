public void testUidGidOverflow() {
    String tarContent = "uid=429496729\n";
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(tarContent.getBytes());
    TarArchiveInputStream archiveInputStream = new TarArchiveInputStream(new GzipCompressorInputStream(byteArrayInputStream));

    try {
        TarArchiveEntry entry;
        while ((entry = archiveInputStream.getNextTarEntry())!= null) {
            // Ensure we can read the entry without throwing NumberFormatException
        }
    } catch (NumberFormatException e) {
        fail("Expected to parse uid and gid as Long, but got NumberFormatException: " + e.getMessage());
    } catch (Exception e) {
        fail("Unexpected exception: " + e.getMessage());
    }
}

This test method attempts to read a tar entry with a `uid` value that exceeds the range of a 32-bit signed integer, which should trigger a `NumberFormatException` if not handled correctly. The test ensures that no `NumberFormatException` is thrown, indicating that the issue is resolved by parsing `uid` and `gid` as `Long`.