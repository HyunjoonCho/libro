public void testCMAESOptimizerBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer();
    optimizer.setCheckFeasibleCount(0); // Default value
    optimizer.setBounds(new double[][]{{0.0, 1.0}, {0.0, 1.0}});
    
    TestFunction function = new TestFunction();
    double[] result = optimizer.optimize(function, 2);
    
    for (double value : result) {
        assertTrue("Result exceeds bounds", value >= 0.0 && value <= 1.0);
    }
}

This test method checks if the `CMAESOptimizer` respects the bounds set for optimization. It sets the `checkFeasibleCount` to zero to reproduce the reported issue and verifies that the resulting values are within the specified bounds. Adjust the `TestFunction` and optimizer initialization as necessary to reflect the actual setup in your codebase.