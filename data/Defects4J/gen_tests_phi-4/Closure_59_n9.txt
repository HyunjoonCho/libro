public void testGlobalThisExclusion() {
    // Simulate running the command line utility with specified flags
    String[] command = {"utility", "--warning_level", "VERBOSE", "--jscomp_off", "globalThis", "--jscomp_off", "nonStandardJsDocs"};
    
    // Expected behavior: Only nonStandardJsDocs warnings are ignored
    CommandResult result = runCommand(command);
    
    // Check for globalThis warnings present in the result
    assertTrue(result.hasWarnings("globalThis"));
    // Check that nonStandardJsDocs warnings are indeed ignored
    assertFalse(result.hasWarnings("nonStandardJsDocs"));
}

// Assume this is a helper method to simulate running the command and capturing results
private CommandResult runCommand(String[] command) {
    // Mock implementation to simulate command execution
    // In a real test, this would involve invoking the utility and capturing the output
    CommandResult result = new CommandResult();
    result.addWarning("globalThis");
    return result;
}

// Mock class to represent command execution result
class CommandResult {
    private List<String> warnings = new ArrayList<>();

    void addWarning(String warning) {
        warnings.add(warning);
    }

    boolean hasWarnings(String warning) {
        return warnings