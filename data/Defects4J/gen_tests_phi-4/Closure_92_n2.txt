public void testImplicitNamespacesAcrossModules() {
    // Simulate module loading in the order: A, B, C
    Object moduleA = new Object() {
        {
            apps = new Object();
            apps.foo = new Object();
            apps.foo.bar = new Object(); // This will cause a runtime error
        }
    };

    Object moduleB = new Object() {
        {
            apps = new Object();
            apps.foo = new Object();
            apps.foo.bar = new Object();
            apps.foo.bar.B = new Object();
        }
    };

    Object moduleC = new Object() {
        {
            apps = new Object();
            apps.foo = new Object();
            apps.foo.bar = new Object();
            apps.foo.bar.C = new Object();
        }
    };

    // The order of execution is crucial here
    moduleB.apps.foo.bar.B; // This should not cause an error
    moduleC.apps.foo.bar.C; // This should not cause an error

    // The error would occur in moduleA due to the order of assignments
    // apps.foo.bar = new Object(); // This is incorrect if apps.foo is not initialized first
    assertThrows(IllegalStateException.class, () -> {
        moduleA