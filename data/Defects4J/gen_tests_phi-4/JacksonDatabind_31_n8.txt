import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.json.JsonMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.ser.ContextualSerializer;
import com.fasterxml.jackson.databind.ser.std.StdSerializer;
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonSerializer;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.module.SimpleModule;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class JsonStreamContextsTest {

    @Test
    public void testJsonStreamContextsDifference() throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        JsonMapper jsonMapper = (JsonMapper) objectMapper;

        SimpleModule module = new SimpleModule();
        module.addSerializer(ObjectNode.class, new ContextualSerializer<ObjectNode, Object>(ToStringSerializer.instance) {
            @Override
            public JsonSerializer<?> createContextual(SerializerProvider prov, 
                                                       TypeFactory typeFactory, 
                                                       BeanProperty property) {
                return ToStringSerializer.instance;
            }