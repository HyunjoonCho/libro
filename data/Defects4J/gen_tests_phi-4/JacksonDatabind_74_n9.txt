public void testAsPropertyTypeDeserializerWithEmptyString() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT, true);
    
    String json = "{\"property\":\"\"}";
    ObjectNode node = (ObjectNode) mapper.readTree(json);
    
    AsPropertyTypeDeserializer<?> deserializer = 
        new AsPropertyTypeDeserializer<>(String.class, mapper.getDeserializationConfig());
    
    try {
        deserializer.deserialize("", null, null);
        fail("Expected an exception to be thrown");
    } catch (JsonMappingException e) {
        assertEquals("FORBIDDEN_VALUE", e.getCode());
    }
    
    // Now test if it returns null when configured properly
    mapper.resetDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);
    deserializer = new AsPropertyTypeDeserializer<>(String.class, mapper.getDeserializationConfig());
    
    assertNull(deserializer.deserialize("", null, null));
}