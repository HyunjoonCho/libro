public void testBrentOptimizerBestPoint() {
    // Assuming BrentOptimizer has a method optimize that takes a UnivariateFunction and returns a PointValuePair
    UnivariateFunction function = x -> {
        // Example function: a parabola with minimum at x = 2
        return x * x - 4 * x + 4;
    };

    BrentOptimizer optimizer = new BrentOptimizer();
    optimizer.setAbsoluteAccuracy(1e-10);
    optimizer.setMaxEval(100);
    
    PointValuePair result = optimizer.optimize(function, -10.0, 10.0);

    // The minimum of the function is at x = 2
    assertEquals(2.0, result.getPoint().getValue(), 1e-10);
    assertEquals(0.0, result.getValue(), 1e-10);
}