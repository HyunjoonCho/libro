public void testBracketingNthOrderBrentSolver() {
    BracketingNthOrderBrentSolver solver = new BracketingNthOrderBrentSolver();
    solver.setMaxIterationCount(1000);

    // Define the function to find the root of
    UnaryOperator<Double> function = x -> Math.pow(x, 2) - 1; // Example: x^2 - 1, root at x = 1, -1

    // Initial bracketing points
    double xA = 12500.0;
    double yA = 3.7e-16;
    int agingA = 0;
    double xB = 12500.03;
    double yB = -7.0e-5;
    int agingB = 97;

    // Set bracketing points
    solver.setBracketingPoints(xA, yA, agingA, xB, yB, agingB);

    try {
        solver.solve(function, 1.0e-10, 1.0e-10);
        fail("Expected to exceed max iteration count due to unbalanced bracketing points.");
    } catch (MaxIterationsExceededException e) {
        // Expected exception