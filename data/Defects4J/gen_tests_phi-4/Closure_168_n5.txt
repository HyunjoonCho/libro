import org.junit.Test;
import static org.junit.Assert.fail;

public class PersonTest {

    @Test
    public void testAliasAndTimeout() {
        try {
            var makeClass = (protoMethods) -> {
                var clazz = () -> {};
                clazz.prototype = protoMethods;
                return clazz;
            };

            var Person = (name) -> { /* constructor body */ };
            Person = makeClass(Map.of(
                "initialize", (name) -> { /* initialize body */ },
                "getName", () -> { /* getName body */ return "Person"; },
                "say", (message) -> {
                    var self = new Object();
                    new java.util.concurrent.CountDownLatch(1) {
                        @Override
                        public void countDown() {
                            try {
                                Thread.sleep(600); // Allow setTimeout to execute
                            } catch (InterruptedException e) {
                                e.printStackTrace();
                            }
                            System.out.println(self.getName(1) + " says: " + message);
                        }
                    }.await();
                }
            ));

            var joe = Person.apply("joe");
            joe.say("hi");
            var jane = Person.apply("jane");
            jane.say("hello");

            fail("Expected an error due to wrong argument count