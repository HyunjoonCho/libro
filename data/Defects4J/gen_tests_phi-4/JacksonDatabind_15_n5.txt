public void testXmlAdapterIntegerList() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper().setAnnotationIntrospector(new JaxbAnnotationIntrospector());
    SomeIntListHolder listHolder = new SomeIntListHolder();
    listHolder.setListOne(asList(1, 2, 3));

    // This should throw a JsonMappingException due to the incorrect XmlAdapter usage
    try {
        mapper.writeValueAsString(listHolder);
        fail("Expected JsonMappingException");
    } catch (JsonMappingException e) {
        // Expected exception
        assertEquals("No serializer found for class java.lang.String and no properties discovered to create BeanSerializer", e.getMessage());
    }
}

// Supporting classes
@XmlRootElement
@XmlAccessorType(XmlAccessType.NONE)
public static class SomeIntListHolder {

    @XmlAttribute
    @XmlJavaTypeAdapter(IntegerListXmlAdapter.class)
    private List<Integer> listOne;

    public List<Integer> getListOne() {
        return listOne;
    }

    public void setListOne(List<Integer> listOne) {
        this.listOne = listOne;
    }
}

public static class IntegerListXmlAdapter extends XmlAdapter<Object, List<Integer>> {
    @Override
    public List<Integer> unmarshal