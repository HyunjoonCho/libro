public void testFunctionArgumentsNotOptimizedAway() {
    Function<String, String> foo = (bar, baz) -> bar;
    assertEquals(2, foo.toString().indexOf("bar, baz"));

    Function<String, String> optimizedFoo = (bar) -> bar;
    assertNotEquals(foo.toString(), optimizedFoo.toString());
    assertTrue(optimizedFoo.toString().indexOf("bar")!= -1);
}

Note: Since Java does not have a direct equivalent of JavaScript's function length property, this test checks that the original function signature is maintained and not optimized away, by comparing the string representation of the lambda expressions.