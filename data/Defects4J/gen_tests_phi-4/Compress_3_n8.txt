public void testExternalFinishCallCorruptsOutput() {
    // Assume ZipArchiveOutputStream is one of the ArchiveOutputStream implementations
    ZipArchiveOutputStream zipOut = new ZipArchiveOutputStream(new FileOutputStream("test.zip"));
    
    // Add a file entry to the archive
    ZipArchiveEntry entry = new ZipArchiveEntry("test.txt");
    zipOut.putArchiveEntry(entry);
    zipOut.write("Test content".getBytes());
    zipOut.closeArchiveEntry();
    
    // Close the stream normally
    try {
        zipOut.close();
    } catch (IOException e) {
        e.printStackTrace();
    }
    
    // Try to call finish() manually
    try {
        zipOut.finish();
    } catch (IOException e) {
        e.printStackTrace();
    }
    
    try (ZipArchiveInputStream zipIn = new ZipArchiveInputStream(new FileInputStream("test.zip"))) {
        ZipArchiveEntry currentEntry = zipIn.getNextZipEntry();
        assertNotNull(currentEntry);
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        byte[] buffer = new byte[1024];
        int len;
        while ((len = zipIn.read(buffer)) > 0) {
            baos.write(buffer, 0, len);
        }
        // Check if the content is corrupted