public void testNonStandardPeriodTypeWithoutYearThrowsException() {
    DateTime startDate = new DateTime(2023, 1, 1, 0, 0);
    DateTime endDate = new DateTime(2023, 2, 1, 0, 0);

    try {
        PeriodType customPeriodType = PeriodType.forFields(new DurationFieldType[]{
            DurationFieldType.months(), DurationFieldType.weeks()});
        Period p = new Period(startDate, endDate, customPeriodType)
               .normalizedStandard(customPeriodType);
        p.getMonths();
        fail("Expected UnsupportedOperationException to be thrown");
    } catch (UnsupportedOperationException e) {
        // Expected exception
    }

    PeriodType standardPeriodType = PeriodType.standard().withYearsRemoved();
    try {
        Period p = new Period(startDate, endDate, standardPeriodType)
               .normalizedStandard(standardPeriodType);
        p.getMonths();
        fail("Expected UnsupportedOperationException to be thrown");
    } catch (UnsupportedOperationException e) {
        // Expected exception
    }
}