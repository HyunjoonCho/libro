import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import static org.junit.Assert.*;

import java.io.IOException;

public class AppTest {

    @Test(expected = com.fasterxml.jackson.databind.JsonMappingException.class)
    public void testReadTreeWithDefaultTypingNoTypeInfo() throws IOException {
        ObjectMapper mapper = new ObjectMapper()
               .enableDefaultTyping() // This is where the issue occurs
               .enable(MapperFeature.AUTO_DETECT_GETTERS)
               .enable(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS)
               .disable(MapperFeature.USE_GETTERS_AS_SETTERS)
               .disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)
               .enable(SerializationFeature.INDENT_OUTPUT)
               .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

        App.Foo foo = new App.Foo("bar");
        String serialized = mapper.writeValueAsString(foo); // {"bar" : "bar"}

        JsonNode jsonNode = mapper.readTree(serialized); // Exception occurs here
    }
}