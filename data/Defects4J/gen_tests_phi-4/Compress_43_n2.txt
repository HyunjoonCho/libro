public void testVersionNeededToExtractMismatch() {
    try (ZipArchiveOutputStream zos = new ZipArchiveOutputStream(new BufferedOutputStream(new ByteArrayOutputStream()))) {
        ZipArchiveEntry entry = new ZipArchiveEntry("test.txt");
        zos.putArchiveEntry(entry);

        // Simulate writing data
        zos.write("Sample content".getBytes());
        zos.closeArchiveEntry();

        zos.finish();

        // Read the zip archive to verify the version needed to extract
        ByteArrayOutputStream baos = (ByteArrayOutputStream) zos.getOut();
        ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
        ZipInputStream zis = new ZipInputStream(bais);
        ZipEntry ze = zis.getNextEntry();

        // Read local file header
        byte[] localHeader = new byte[30];
        zis.read(localHeader, 0, 30);
        int localVersionNeeded = ((localHeader[6] & 0xFF) << 8) | (localHeader[7] & 0xFF);

        // Skip to central directory
        zis.closeEntry();
        zis.getNextEntry(); // Skip the file entry
        zis.closeEntry();

        // Locate the central directory
        byte[] centralDir = new byte[46