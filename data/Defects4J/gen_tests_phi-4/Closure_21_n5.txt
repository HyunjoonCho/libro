public void testClassifyNonRightmostExpressions() {
    // Mock or setup the environment to capture warnings
    WarningCollector warningCollector = new WarningCollector();

    // Simulate the transformation process and check the warnings
    ExpressionTransformer transformer = new ExpressionTransformer(warningCollector);

    // Test case 1: foo((1, 2, 42)) should transform to foo((1, 3)) and issue a warning for the first element
    Expression expr1 = transformer.transform(Expression.parse("foo((1, 2, 42))"));
    assertEquals("foo((1, 3))", expr1.toString());
    assertEquals(1, warningCollector.getWarnings().size());
    assertEquals("Warning for first element of first expression", warningCollector.getWarnings().get(0));

    // Test case 2: foo((bar(), 2, 42)) should transform to foo((bar(), 3)) and issue no warnings
    Expression expr2 = transformer.transform(Expression.parse("foo((bar(), 2, 42))"));
    assertEquals("foo((bar(), 3))", expr2.toString());
    assertEquals(0, warningCollector.getWarnings().size());

    // Test case 3: foo(((1, 2