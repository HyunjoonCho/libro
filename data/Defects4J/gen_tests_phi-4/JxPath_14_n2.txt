import static org.junit.Assert.*;
import org.junit.Test;

public class CoreRoundingFunctionsTest {

    @Test
    public void testFloorWithNaNAndInfiniteValues() {
        assertEquals(Double.NaN, floor("NaN"));
        assertEquals(Double.NEGATIVE_INFINITY, floor("-2.0 / 0"));
        assertEquals(Double.POSITIVE_INFINITY, floor("2.0 / 0"));
    }

    @Test
    public void testCeilingWithNaNAndInfiniteValues() {
        assertEquals(Double.NaN, ceiling("NaN"));
        assertEquals(Double.NEGATIVE_INFINITY, ceiling("-2.0 / 0"));
        assertEquals(Double.POSITIVE_INFINITY, ceiling("2.0 / 0"));
    }

    @Test
    public void testRoundWithNaNAndInfiniteValues() {
        assertEquals(Double.NaN, round("NaN"));
        assertEquals(Double.NEGATIVE_INFINITY, round("-2.0 / 0"));
        assertEquals(Double.POSITIVE_INFINITY, round("2.0 / 0"));
    }

    // Mock methods to simulate the XPath evaluation
    private Double floor(String expression) {
        // Implement logic to simulate the XPath floor function
        return evaluateExpression(expression, "floor");
    }

    private Double ceiling(String expression) {
        //