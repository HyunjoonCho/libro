public void testZipFileCreationWithHashCollision() {
    try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
         ZipOutputStream zipOutputStream = new ZipOutputStream(byteArrayOutputStream)) {

        String commonPrefix = "file_";
        int numberOfEntries = 1000;
        
        // Add entries with the same hash collision
        for (int i = 0; i < numberOfEntries; i++) {
            String entryName = commonPrefix + String.format("%04d", i);
            ZipEntry zipEntry = new ZipEntry(entryName);
            zipOutputStream.putNextEntry(zipEntry);
            zipOutputStream.write(("Content for " + entryName).getBytes());
            zipOutputStream.closeEntry();
        }

        // Simulate reading the zip and checking for integrity
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());
        ZipInputStream zipInputStream = new ZipInputStream(byteArrayInputStream);
        int entryCount = 0;
        while (zipInputStream.getNextEntry()!= null) {
            entryCount++;
            zipInputStream.closeEntry();
        }

        // Expect all entries to be present
        assertEquals("Not all entries were correctly added to the zip file", numberOfEntries, entryCount);
    } catch (IOException e) {
        fail("IOException was thrown