public void testAsPropertyTypeDeserializer() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT, true);

    // Assuming `AsPropertyTypeDeserializer` is used via a custom deserializer or similar setup
    mapper.registerModule(new Jdk8Module()); // Assuming Jdk8Module or similar for Optional handling

    Class<?> clazz = Class.forName("your.package.YourClassContainingAsPropertyType");
    SimpleModule module = new SimpleModule();
    module.addDeserializer(Optional.class, new AsPropertyTypeDeserializer(clazz));
    mapper.registerModule(module);

    String input = "\"\""; // Empty string to be interpreted as null
    YourClassContainingAsPropertyType result = mapper.readValue(input, YourClassContainingAsPropertyType.class);

    assertNull(result.getOptionalProperty());
}

Make sure to replace `"your.package.YourClassContainingAsPropertyType"` and `getOptionalProperty()` with the actual class and method names used in your context.