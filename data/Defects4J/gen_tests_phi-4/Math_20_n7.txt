public void testCMAESOptimizerBounds() {
    double[] lowerBounds = {0.0};
    double[] upperBounds = {1.0};
    CMAESOptimizer optimizer = new CMAESOptimizer(lowerBounds, upperBounds);
    
    double initialFitness = 0.5;
    double[] initialPoint = {0.5};
    optimizer.optimize(() -> {
        double x = initialPoint[0];
        return x * x; // Simple quadratic function
    }, initialPoint, initialFitness, 100);

    double[] optimizedPoint = optimizer.getBestSolution();
    assertTrue(optimizedPoint[0] >= lowerBounds[0] && optimizedPoint[0] <= upperBounds[0]);
}