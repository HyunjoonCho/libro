public void testBasicClassIntrospectorAutoDetect() {
    ObjectMapper om = new ObjectMapper();
    // Only use explicitly specified values to be serialized/deserialized (i.e., JSONProperty).
    om.configure(com.fasterxml.jackson.databind.MapperFeature.AUTO_DETECT_FIELDS, false);
    om.configure(com.fasterxml.jackson.databind.MapperFeature.AUTO_DETECT_GETTERS, false);
    om.configure(com.fasterxml.jackson.databind.MapperFeature.AUTO_DETECT_SETTERS, false);
    om.configure(com.fasterxml.jackson.databind.MapperFeature.AUTO_DETECT_IS_GETTERS, false);
    om.configure(com.fasterxml.jackson.databind.MapperFeature.USE_GETTERS_AS_SETTERS, false);
    om.configure(com.fasterxml.jackson.databind.MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS, true);
    om.configure(com.fasterxml.jackson.databind.MapperFeature.INFER_PROPERTY_MUTATORS, false);
    om.configure(com.fasterxml.jackson.databind.MapperFeature.USE_ANNOTATIONS, true);

    JavaType javaType = om.getTypeFactory().constructType(TCls.class);

    BasicClassIntrospector introspector = new BasicClassIntrospector();
    BasicBeanDescription bdesc = introspector.forSerialization(om.getSerializationConfig(), javaType, null);
    List<BeanPropertyDefinition> bprops = bdesc.findProperties();

    assertEquals(1, bprops.size(),