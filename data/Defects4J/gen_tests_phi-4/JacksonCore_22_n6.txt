import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.util.FilteringParserDelegate;
import org.junit.jupiter.api.Test;

import java.io.IOException;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class FilteringParserDelegateTest {

    public static class FilteringTestDeserializer extends StdDeserializer<Object> {

        public FilteringTestDeserializer() {
            super(Object.class);
        }

        @Override
        public Object deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {
            FilteringParserDelegate fpd = new FilteringParserDelegate(jp, ctxt);
            // Simulate parsing logic that should increase matchCount
            while (fpd.nextToken()!= null) {
                if (fpd.currentToken() == JsonToken.VALUE_STRING) {
                    fpd.getMatchCount();
                }
            }
            return null;
        }
    }

    @Test
    public void testMatchCountUtilization() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"key\":\"value\", \"number\":123, \"key\":\"value\"}";