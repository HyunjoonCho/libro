public void testBobyqaOptimizerInterpolationPoints() {
    int dim = 5; // Example dimension size
    int maxEvaluations = 1000;
    NonLinearVectorialFunction func = new NonLinearVectorialFunction() {
        @Override
        public RealVector value(RealVector point) {
            // Example function implementation
            return RealVector.dense(new double[]{Math.pow(point.getEntry(0) - 1, 2) + Math.pow(point.getEntry(1) - 2, 2)});
        }

        @Override
        public int getDimension() {
            return dim;
        }
    };
    GoalType goal = GoalType.MINIMIZE;
    RealVector startPoint = RealVector.dense(new double[]{0, 0, 0, 0, 0});
    double[][] boundaries = new double[][]{{-5, -5, -5, -5, -5}, {5, 5, 5, 5, 5}};

    BOBYQAOptimizer optim = new BOBYQAOptimizer(2 * dim + 2);
    RealPointValuePair result = optim.optimize(maxEvaluations, func, goal, startPoint, boundaries[0