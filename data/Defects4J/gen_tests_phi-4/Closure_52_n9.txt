import static org.junit.Assert.assertEquals;

public void testLiteralObjectConversion() {
    String jsonString = "{\"0102\":\"Zero One Zero Two\"}";
    // Simulating the parsing behavior that causes the issue
    String parsedJsonString = parseAndConvertKeys(jsonString);

    // Simulated expected result after faulty parsing
    String expected = "{\"102\":\"Zero One Zero Two\"}";

    assertEquals(expected, parsedJsonString);

    // Verify the access issue
    assertEquals("Zero One Zero Two", getObjectValue(parsedJsonString, "0102"));
    assertEquals(null, getObjectValue(parsedJsonString, "102")); // Should be null due to key conversion
}

private String parseAndConvertKeys(String jsonString) {
    // Simulated faulty parsing logic that removes leading zeros
    return jsonString.replace("\"0102\"", "\"102\"");
}

private String getObjectValue(String jsonString, String key) {
    // Simulated logic to access object values
    if (jsonString.contains("\"102\":\"Zero One Zero Two\"")) {
        return key.equals("0102")? "Zero One Zero Two" : null;
    }
    return null;
}