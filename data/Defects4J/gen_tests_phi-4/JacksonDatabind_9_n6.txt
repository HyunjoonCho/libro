public void testDeserializingMapWithClassAsKey() throws Exception {
    Map<Class<? extends Object>, String> map = new HashMap<>();
    map.put(ArrayList.class, "ArrayList");
    map.put(HashMap.class, "HashMap");

    ObjectMapper mapper = new ObjectMapper();
    String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(map);

    // Assert that the serialization produces the expected JSON format
    assertEquals("{\n" +
                 "  \"class java.util.ArrayList\" : \"ArrayList\",\n" +
                 "  \"class java.util.HashMap\" : \"HashMap\"\n" +
                 "}", json);

    // Attempt to deserialize and expect an exception
    Exception exception = assertThrows(
        InvalidFormatException.class,
        () -> mapper.readValue(json, new TypeReference<Map<Class<? extends Object>, String>>() {})
    );

    // Assert that the exception message contains the expected content
    assertTrue(exception.getMessage().contains("Can not construct Map key of type java.lang.Class from String \"class java.util.ArrayList\": not a valid representation"));
}