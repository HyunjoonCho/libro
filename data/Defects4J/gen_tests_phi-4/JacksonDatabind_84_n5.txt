public void testRecursiveTypeSerialization() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    TypeFactory typeFactory = mapper.getTypeFactory();

    // Create base type instance
    Base base = new Base();
    // Use TypeFactory to construct a type for the base class
    JavaType baseType = typeFactory.constructType(base.getClass());

    // Serialize the base class instance
    ObjectNode baseNode = mapper.convertValue(base, ObjectNode.class);
    mapper.writerWithDefaultPrettyPrinter().writeValueAsString(baseNode);

    // Create sub type instance
    Sub sub = new Sub();
    // Manually add the missing base property
    ((ObjectNode) mapper.convertValue(sub, ObjectNode.class)).put("base", base.base);

    // Serialize the sub class instance
    String output = mapper.writeValueAsString(sub);
    assertEquals("{\"base\":1,\"sub\":2}", output);
}