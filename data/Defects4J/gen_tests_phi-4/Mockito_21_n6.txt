public void testSpyOnAbstractClass() {
    @Fake
    private FakeUserAccount userAccount = Mockito.mock(FakeUserAccount.class);
    
    userAccount.addEmail("test@example.com");
    List<String> emails = userAccount.getEmails();
    
    assertEquals(1, emails.size());
    assertEquals("test@example.com", emails.get(0));
}

This test method demonstrates the proposed use of an abstract class, `FakeUserAccount`, to simplify mocking an interface with interdependent methods. The test ensures that the `addEmail` and `getEmails` methods are logically consistent. Note that the `@Fake` annotation and Mockito extension to support abstract classes are conceptual and would require implementation as described in the bug report.