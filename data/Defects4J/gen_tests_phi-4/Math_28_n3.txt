public void testUnboundedSolutionException() {
    int ENTITIES_COUNT = 15; // Set to 15 to reproduce the issue
    double[][] Q = new double[ENTITIES_COUNT][ENTITIES_COUNT];
    double[][] X = new double[ENTITIES_COUNT][ENTITIES_COUNT];
    
    // Initialize Q and X with random values as per the requirements
    for (int i = 0; i < ENTITIES_COUNT; i++) {
        for (int j = 0; j < ENTITIES_COUNT; j++) {
            Q[i][j] = Math.random();
            X[i][j] = Math.random();
        }
    }
    
    // Define the problem
    SimplexSolver solver = new SimplexSolver();
    
    // Objective function coefficients
    double[] objective = new double[ENTITIES_COUNT + 1];
    for (int i = 0; i < ENTITIES_COUNT; i++) {
        objective[i] = 0;
    }
    objective[ENTITIES_COUNT] = 1; // t coefficient

    // Constraints
    double[][] constraints = new double[ENTITIES_COUNT * 3][ENTITIES_COUNT + 1];
    for (int r = 0;