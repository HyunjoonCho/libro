public void testGoogleSingletonGetter() {
    // Simulate the behavior of the Google Closure Compiler's ADVANCED_OPTIMIZATIONS
    // by testing if the singleton pattern is preventing class removal.

    // Define a class with a singleton pattern
    class Foo {
        private static Foo instance;
        private List<String> values = new ArrayList<>();

        private Foo() {}

        public static Foo getInstance() {
            if (instance == null) {
                instance = new Foo();
            }
            return instance;
        }

        public void add(String value) {
            values.add(value);
        }
    }

    // Create an instance of the class
    Foo foo = Foo.getInstance();

    // Attempt to add a value
    foo.add("test");

    // Check if the value was added
    assertEquals("test", foo.values.get(0));
}