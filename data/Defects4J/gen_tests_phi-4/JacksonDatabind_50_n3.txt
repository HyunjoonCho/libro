public void testJsonIdentityInfoDeserialization() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enable(SerializationFeature.INDENT_OUTPUT);
    mapper.enable(SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS);
    
    String json = "{\"key1\":{\"id\":\"1\",\"child\":[{\"id\":\"2\",\"parent\":{\"$ref\":\"1\"}}]}}";
    MyObject obj = mapper.readValue(json, MyObject.class);
    
    assertEquals("1", obj.getKey1().getId());
    assertEquals("2", obj.getKey1().getChild().get(0).getId());
    assertEquals("1", obj.getKey1().getChild().get(0).getParent().getId());
}

// Assuming the existence of these classes
class MyObject {
    private MyInnerObject key1;

    public MyInnerObject getKey1() {
        return key1;
    }
}

class MyInnerObject {
    private String id;
    private List<MyInnerObject> child;
    private MyInnerObject parent;

    public String getId() {
        return id;
    }

    public List<MyInnerObject> getChild() {
        return child;
    }

    public MyInnerObject getParent() {
        return parent;
    }
}