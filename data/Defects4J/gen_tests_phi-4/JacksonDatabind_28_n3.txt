public void testDeserializationToObjectNodeField() throws Exception {
    ObjectMapper om = new ObjectMapper();

    ObjectNode object = new ObjectNode(JsonNodeFactory.instance);

    String json = om.writeValueAsString(object);
    
    // Deserialize to ObjectNode, which should succeed
    ObjectNode de1 = om.readValue(json, ObjectNode.class);
    
    // This should throw an exception
    try {
        MyValue de2 = om.readValue(json, MyValue.class);
        fail("Expected JsonMappingException");
    } catch (JsonMappingException e) {
        assertEquals("Can not deserialize instance of com.fasterxml.jackson.databind.node.ObjectNode out of END_OBJECT token", e.getMessage());
    }
}

Note: The `fail` method is used to ensure the test fails if the exception is not thrown, and `assertEquals` checks if the exception message matches the expected one. Adjust the exception message string as necessary to match the exact output of your environment.