public void testODEIntegrationEventDetection() {
    // Setup the ODE solver and event detection
    ODESolver solver = new ODESolver();
    solver.setSwitchingFunction(s -> {
        if (s < 90.0) return s - 90.0;
        return 135.0 - s;
    });

    // Initial conditions and time span
    double[] initialConditions = {0.0};
    double startTime = 67.5;
    double endTime = 153.0;

    // Execute the solver
    solver.integrate(initialConditions, startTime, endTime);

    // Check if the events are detected correctly
    List<Double> detectedEvents = solver.getDetectedEvents();
    assertTrue(detectedEvents.contains(90.0));
    assertTrue(detectedEvents.contains(135.0));

    // Check if the event at 135.0 is not missed when the first event is detected slightly before 90.0
    solver.setConvergenceTolerance(1e-7);
    solver.integrate(initialConditions, startTime, endTime);
    detectedEvents = solver.getDetectedEvents();
    assertTrue(detectedEvents.contains(90.0));
    assertTrue(detectedEvents.contains(135.0));
}