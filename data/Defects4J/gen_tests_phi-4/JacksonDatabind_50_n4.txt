import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Assert;
import org.junit.Test;

import java.util.List;

public class JsonIdentityInfoDeserializationTest {

    @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
    public static class Node {
        public int id;
        public List<Node> children;

        @JsonCreator
        public Node(int id) {
            this.id = id;
        }
    }

    @Test
    public void testDeserializationWithForwardReferencesAndJsonCreator() throws Exception {
        ObjectMapper mapper = new ObjectMapper();

        String json = "{ \"id\": 1, \"children\": [{ \"id\": 2 }, { \"$ref\": \"1\" }] }";

        Node root = mapper.readValue(json, Node.class);

        // The expected structure is:
        // Node(id=1, children=[