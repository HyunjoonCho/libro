import static org.junit.Assert.assertTrue;

public void testAnonymousObjectTypeInferenceInconsistency() {
    // Mock functions equivalent to `func` and `func2` in JavaScript
    java.util.function.Consumer<java.util.Map<String, String>> func = record -> {
        System.out.println(record.get("prop"));
    };

    java.util.function.Consumer<Object> func2 = record -> {
        if (record instanceof String) {
            System.out.println(record);
        } else if (record instanceof java.util.Map) {
            System.out.println(((java.util.Map<String, String>) record).get("prop"));
        }
    };

    // Test func
    func.accept(java.util.Map.of("prop", "a"));

    // Test func2 with a map
    try {
        func2.accept(java.util.Map.of("prop", "a"));
        assertTrue(true); // This should succeed without exception
    } catch (Exception e) {
        assertTrue(false); // Should not reach here
    }

    // Test func2 with a string
    func2.accept("string value");

    // This would be the failing test if translated to a type-checking scenario
    try {
        func2.accept(java.util.Map.of("prop", "a"));