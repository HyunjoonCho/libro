public void testObjectReaderReadValues() {
    ObjectMapper mapper = new ObjectMapper();
    ObjectReader reader = mapper.readerFor(int[].class);
    String json = "[1, 2, 3, 4, 5]";
    int[] fullArray = reader.readValue(json);

    ObjectReader partialReader = reader.with(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY);
    String partialJson = "[1, 2, 3, 4, 5]";
    int[] expectedPartialArray = { 3, 4, 5 };
    
    int[] actualPartialArray = partialReader
       .forType(int[].class)
       .with(new TruncatedValuesProvider(2, 3))
       .readValue(partialJson);

    assertArrayEquals(expectedPartialArray, actualPartialArray);
}

Note: This assumes the existence of a `TruncatedValuesProvider` class or similar mechanism to set the offset and length. If such a class does not exist, this test would need to be adjusted accordingly to simulate the behavior described in the bug report.