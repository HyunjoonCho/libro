public void testWrongConstructorDeserialization() throws JsonParseException, IOException {
    ObjectMapper mapper = new ObjectMapper();
    String json = "{ \"intField\": 1, \"stringField\": \"foo\" }";
    
    // Expecting an exception to be thrown due to constructor selection issue
    try {
        SimplePojo pojo = mapper.readValue(json, SimplePojo.class);
        assertEquals(1, pojo.getIntField());
        assertEquals("foo", pojo.getStringField());
        fail("Expected JsonMappingException to be thrown due to constructor selection issue");
    } catch (JsonMappingException e) {
        // Expected exception
    }
}

This test method is designed to reproduce the failure behavior described in the bug report by expecting a `JsonMappingException` due to the constructor selection issue when both constructors are annotated with `@JsonProperty` but only one with `@JsonCreator`.