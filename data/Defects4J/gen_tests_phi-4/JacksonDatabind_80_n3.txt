public void testExtraneousTypeIdMapping() {
    TypeResolutionContext context = new TypeResolutionContext();
    
    // Assuming we have a method to resolve types and it adds a base type itself
    List<TypeId> resolvedTypes = context.resolveTypes("BaseType");
    
    boolean hasBaseType = resolvedTypes.stream()
       .anyMatch(typeId -> typeId.getName().equals("BaseType") && typeId.isDefaultName());
    
    assertFalse("Base type itself should not be included in the resolution list with a default name.", hasBaseType);
}