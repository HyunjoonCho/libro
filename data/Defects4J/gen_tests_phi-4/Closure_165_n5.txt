import static org.junit.Assert.fail;

public void testPropertiesDefinedOnUnrelatedRecordTypes() {
    // Define RecordType1
    @SuppressWarnings("unused")
    class RecordType1 {
        String name;
        int id;
    }

    // Define RecordType2
    class RecordType2 {
        String name2;
    }

    // Function that should trigger an error when using a non-existing property
    @SuppressWarnings("unused")
    void func(RecordType1 rec) {
        try {
            System.out.println(rec.name2);
        } catch (NoSuchFieldError e) {
            // This should catch the error since name2 is not a field in RecordType1
            return;
        }
        fail("Expected NoSuchFieldError for accessing non-existent field 'name2' on RecordType1");
    }

    // Call the function with a RecordType1 instance
    func(new RecordType1() {{ name = "jim"; id = 0; }});
}