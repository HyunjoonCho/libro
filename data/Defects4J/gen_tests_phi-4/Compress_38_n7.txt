public void testPaxHeaderEntryNameEndingWithSlash() throws IOException {
    // Create a mock TarArchiveEntry with a PAX header having a name ending with '/'
    TarArchiveEntry entry = new TarArchiveEntry();
    entry.setName("pax-header/");
    entry.setPaxHeaders(Collections.singletonMap("path", "pax-header/"));
    entry.setLinkFlag(TarArchiveEntry.LINK_FLAG_PAX);

    // Simulate the parsing of the TAR header
    TarArchiveInputStream tarStream = new TarArchiveInputStream(new ByteArrayInputStream(new byte[0]));
    tarStream.putArchiveEntry(entry);

    // Verify the issue: isDirectory() should return false
    assertFalse("Directory check should return false for PAX header entry with trailing slash",
                entry.isDirectory());

    // Verify the content can be read correctly
    byte[] buffer = new byte[1024];
    int bytesRead = tarStream.read(buffer);
    assertNotNull("Content should be readable", bytesRead);

    // Close the stream to clean up
    tarStream.closeArchiveEntry();
    tarStream.close();
}