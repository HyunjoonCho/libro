public void testTruncatedZipArchive() throws IOException {
    // Create a truncated ZIP file in memory
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    try (ZipOutputStream zos = new ZipOutputStream(baos)) {
        zos.putNextEntry(new ZipEntry("test.txt"));
        zos.write("Hello, World!".getBytes());
        // Do not close the entry to simulate truncation
    }

    // Simulate truncated stream by not writing the central directory
    byte[] truncatedZip = baos.toByteArray();
    
    try (ByteArrayInputStream bais = new ByteArrayInputStream(truncatedZip);
         ZipArchiveInputStream zais = new ZipArchiveInputStream(bais)) {
         
        byte[] buffer = new byte[1024];
        int bytesRead = zais.read(buffer);
        assertTrue("Expected an IOException for truncated file", bytesRead == -1 || bytesRead == 0);
    } catch (IOException e) {
        assertTrue("Expected an IOException for truncated file", e.getMessage().contains("Truncated ZIP file"));
    }
}