public void testBrentOptimizerFailure() {
    // Assuming BrentOptimizer has a method optimize to find the minimum of a function
    BrentOptimizer optimizer = new BrentOptimizer();

    // Define a test function, for example, f(x) = (x - 3)^2, which has a minimum at x = 3
    UnivariateFunction testFunction = x -> Math.pow(x - 3, 2);

    // Set an initial bracket [a, b] that contains the minimum
    double a = 0.0;
    double b = 6.0;
    double tolerance = 1e-6;

    // Perform optimization
    double minimum = optimizer.optimize(testFunction, a, b, tolerance);

    // Check if the found minimum is close to the expected value (3.0)
    // Allowing a small error margin due to numerical methods' nature
    assertEquals("The BrentOptimizer failed to find the correct minimum.", 3.0, minimum, tolerance);
}