public void testPrefixMapClear() {
    SortedMap<String, Integer> prefixMap = trie.prefixMap("And");
    assertEquals(3, prefixMap.size());  // Ensure the prefix map has 3 entries initially
    assertEquals(new HashSet<>(Arrays.asList("Andrea", "Andreas", "Andres")), prefixMap.keySet());
    assertEquals(Arrays.asList(5, 4, 6), new ArrayList<>(prefixMap.values()));

    // Attempt to clear the prefix map, which should throw a NullPointerException
    try {
        prefixMap.clear();
        fail("Expected NullPointerException when clearing prefixMap");
    } catch (NullPointerException e) {
        // Expected exception, do nothing
    }

    // Verify the trie remains unmodified after the failed clear operation
    assertTrue(prefixMap.size() == 3);  // Prefix map should still contain 3 entries
    assertEquals(new HashSet<>(Arrays.asList("Anael", "Analu", "Anatole", "Anna")), trie.keySet());
    assertEquals(Arrays.asList(2, 3, 7, 1), new ArrayList<>(trie.values()));
}