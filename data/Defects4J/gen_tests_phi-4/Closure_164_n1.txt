import java.util.function.BiFunction;

public class FunctionTest {

    public interface TriFunction<T, U, V, R> {
        R apply(T t, U u, V v);
    }

    public interface Function<T, R> {
        R apply(T t);
    }

    public static void func(BiFunction<String, Integer, Boolean> param) {
        // Implementation not needed for the test
    }

    public static void func(TriFunction<String, Integer, Boolean, Boolean> param) {
        // Implementation not needed for the test
    }

    public static void func(Function<String, Boolean> param) {
        // Implementation not needed for the test
    }

    public static void testFunctionMisassignment() {
        // first call
        func((String s, Integer i) -> true);

        // second call - should cause a compilation error
        func(String::new); // This should fail to compile
    }
}

In this Java code:

- `func`