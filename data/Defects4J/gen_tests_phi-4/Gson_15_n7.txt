public void testJsonWriterValueLenience() throws IOException {
    JsonGenerator generator = Json.createGenerator(true); // Enable lenient mode
    generator.writeStartObject();
    generator.writeNumberField("finite", 123);
    generator.writeNumberField("notFinite", (Number) Double.valueOf(Double.NaN)); // Works in lenient mode
    generator.writeEnd();
    generator.close();

    JsonGenerator strictGenerator = Json.createGenerator(false); // Disable lenient mode
    strictGenerator.writeStartObject();
    strictGenerator.writeNumberField("finite", 123);
    try {
        strictGenerator.writeNumberField("notFinite", Double.NaN); // Should throw exception
        fail("Expected IllegalArgumentException for non-finite double in strict mode");
    } catch (IllegalArgumentException e) {
        assertTrue(e.getMessage().contains("Numeric values must be finite"));
    }
    strictGenerator.writeEnd();
    strictGenerator.close();
}