public void testPosixParserInterruptsTargetOption() {
    Options options = new Options();
    options.addOption(new Option("t", "target", true, "Generate files for the specified target machine"));

    PosixParser parser = new PosixParser();
    try {
        CommandLine cmd = parser.parse(options, new String[]{"-target", "foobar.com"});
        assertEquals("foobar.com", cmd.getOptionValue("t"));
    } catch (ParseException pe) {
        fail("ParseException should not have been thrown: " + pe.getMessage());
    }

    try {
        CommandLine cmd = parser.parse(options, new String[]{"-target"});
        fail("ParseException should have been thrown for '-target' without a value");
    } catch (ParseException pe) {
        assertTrue(pe.getMessage().contains("Missing option argument"));
    }

    try {
        CommandLine cmd = parser.parse(options, new String[]{"-t", "foobar.com"});
        assertEquals("foobar.com", cmd.getOptionValue("t"));
    } catch (ParseException pe) {
        fail("ParseException should not have been thrown: " + pe.getMessage());
    }

    try {
        CommandLine cmd = parser.parse(options, new String[]{"-target", "foobar.com"});
        assertEquals("arget", cmd.get