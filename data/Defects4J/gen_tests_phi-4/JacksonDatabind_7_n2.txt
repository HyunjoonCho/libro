public void testTokenBufferDelegateDeserialization() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    String jsonString = "{\"a\":1,\"b\":null}";
    TokenBuffer buffer = new TokenBuffer(mapper.getFactory());
    buffer.writeStartObject();
    buffer.writeFieldName("a");
    buffer.writeNumber(1);
    buffer.writeFieldName("b");
    buffer.writeNull();
    buffer.writeEndObject();

    Value value = mapper.readerFor(Value.class)
                       .with(JsonReadFeature.ALLOW_UNQUOTED_FIELD_NAMES)
                       .readValue(new TokenBufferParser(buffer));

    assertEquals(1, value.getA());
    assertNull(value.getB());
}

// Helper classes to simulate the environment
class Value {
    private int a;
    private Object b;

    public Value() {}

    @JsonCreator
    public static Value from(TokenBuffer buffer) throws IOException {
        JsonParser parser = new TokenBufferParser(buffer);
        Value value = new Value();
        DeserializationContext ctx = DeserializationContext.builder(mapper.getDeserializationConfig())
                                                           .build();
        BeanDeserializer<Value> deserializer = new BeanDeserializer<>(mapper.constructType(Value.class), ctx);
        deserializer.deserialize(parser, value);
        return value;
    }

    public int get