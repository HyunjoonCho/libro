public void testConstructingInvalidPartials() {
    DateTimeFieldType[] typeArray = new DateTimeFieldType[] { DateTimeFieldType.clockhourOfDay(), DateTimeFieldType.hourOfDay() };
    int[] values = new int[] { 1, 1 };

    try {
        new Partial(typeArray, values);
        fail("Expected IllegalArgumentException for duplicate DateTimeFieldType");
    } catch (IllegalArgumentException e) {
        assertEquals("Types array must not contain duplicate", e.getMessage());
    }

    Partial partial1 = new Partial(DateTimeFieldType.clockhourOfDay(), 1).with(DateTimeFieldType.hourOfDay(), 1);
    Partial partial2 = new Partial(DateTimeFieldType.hourOfDay(), 1).with(DateTimeFieldType.clockhourOfDay(), 1);

    try {
        partial1.isEqual(partial2);
        fail("Expected IllegalArgumentException for mismatched field types");
    } catch (IllegalArgumentException e) {
        assertEquals("objects must have matching field types", e.getMessage());
    }
}