public void testTarArchiveInputStreamBigUserId() throws IOException {
    // Create a TarArchiveEntry with a big user-id value
    TarArchiveEntry entry = new TarArchiveEntry();
    entry.setUserName("user");
    entry.setGroupId("group");
    
    // Set a user-id that is too large to be parsed correctly
    entry.setUserId(1000000000L);

    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    try (TarArchiveOutputStream taos = new TarArchiveOutputStream(baos)) {
        taos.putArchiveEntry(entry);
        taos.write(new byte[0]); // Write an empty file
        taos.closeArchiveEntry();
    }

    // Read the entry back using TarArchiveInputStream
    ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
    try (TarArchiveInputStream tais = new TarArchiveInputStream(bais)) {
        TarArchiveEntry readEntry = tais.getNextTarEntry();
        assertNotNull(readEntry);
        assertEquals("Invalid byte 52 at offset 7 in '62410554' len=8", "user", readEntry.getUserName());
    } catch (IllegalArgumentException e) {
        // This is the expected failure
        assertTrue(e.getMessage(), e.getMessage().contains("Invalid byte 52 at offset 7