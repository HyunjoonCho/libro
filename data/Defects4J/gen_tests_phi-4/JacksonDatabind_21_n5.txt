import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class EnumSerializationTest {

    public enum TestEnum {
        @JsonProperty("value1")
        VALUE_ONE;
    }

    @Test
    public void testEnumDeserialization() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(SerializationFeature.WRITE_ENUMS_USING_TO_STRING, true);

        String json = "{\"enumField\": \"value1\"}";
        TestEnum result = mapper.readValue(json, TestEnum.class);

        assertEquals(TestEnum.VALUE_ONE, result);
    }
}

This test checks if the custom JSON property `"value1"` correctly maps to the `TestEnum.VALUE_ONE` enum constant during deserialization. The test will fail if the current implementation does not support this mapping as described.