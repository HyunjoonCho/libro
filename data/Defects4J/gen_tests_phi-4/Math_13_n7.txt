public void testLargeNumberOfWeights() {
    double[] weights = new double[41200];
    for (int i = 0; i < weights.length; i++) {
        weights[i] = 1.0;
    }
    Vector weightVector = new Vector(weights);
    
    try {
        MultivariateVectorOptimizer optimizer = new MultivariateVectorOptimizer();
        optimizer.optimize(weightVector, dataPoints);
        
        fail("Expected OutOfMemoryError due to large matrix creation");
    } catch (OutOfMemoryError e) {
        // Expected behavior
    }
}

In this test, `dataPoints` should be defined as a suitable input for the optimizer, and it assumes that `MultivariateVectorOptimizer` and `Vector` are part of the existing codebase.