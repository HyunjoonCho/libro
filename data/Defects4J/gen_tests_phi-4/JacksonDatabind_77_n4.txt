public void testJacksonDefaultTypingVulnerability() throws IOException {
    // Create a malicious payload that exploits default typing
    String payload = "{\n" +
                     "  \"@type\" : \"java.lang.Runtime\",\n" +
                     "  \"@value\" : [{ \"@type\" : \"java.lang.String\", \"@value\" : \"calc\" }]\n" +
                     "}";

    // Create an ObjectMapper with default typing enabled
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping();

    // Deserialize the payload
    Object deserializedObject = mapper.readValue(payload, Object.class);

    // Verify that the deserialized object is of type Runtime
    assertTrue(deserializedObject instanceof Runtime);

    // Verify that the command executed is "calc"
    Runtime runtime = (Runtime) deserializedObject;
    Process process = runtime.exec((String[]) deserializedObject);

    process.waitFor();
    assertEquals(0,