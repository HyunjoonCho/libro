public void testNamespacedAttributeWildcard() {
    // Setup XML content
    String xmlContent = "<xml xmlns:x='foo' x:pop='a'/>";

    // Parse the XML
    Document xmlDocument = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xmlContent)));

    // Select node using the problematic expression
    String xpathExpression = "xml/@*";
    XPathFactory xPathFactory = XPathFactory.newInstance();
    XPath xpath = xPathFactory.newXPath();
    xpath.setNamespaceContext(new NamespaceContext() {
        public String getNamespaceURI(String prefix) {
            if (prefix.equals("x")) return "foo";
            return null;
        }

        public String getPrefix(String namespaceURI) {
            if (namespaceURI.equals("foo")) return "x";
            return null;
        }

        public Iterator getPrefixes(String namespaceURI) {
            return null;
        }
    });

    // Attempt to select single node
    Node selectedNode = (Node) xpath.evaluate(xpathExpression, xmlDocument, XPathConstants.NODE);

    // Assert that the selection returns null as described
    assertNull(selectedNode);

    // Additional test with the suggested fix
    xpathExpression = "xml/@x:*";