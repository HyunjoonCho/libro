public void testNumberShapePrecedence() {
    // Assuming we have a method `formatNumber` that takes a number, a shape, and a locale
    NumberFormat format = NumberFormat.getInstance(Locale.US);
    format.setMaximumFractionDigits(2);

    // Before fix: Locale might override the shape, allowing textual representation
    assertEquals("1,000.00", format.format(1000.0)); // Assuming 'NUMBER' is not respected

    // After fix: Explicit 'NUMBER' shape should take precedence
    assertEquals("1,000.00", NumberUtils.formatNumber(1000.0, "NUMBER", Locale.US)); // Assuming this method respects the shape
}

### Explanation:

- **Before Fix:** The test checks that the locale's default formatting might override the shape, allowing textual representation.
- **After Fix:** The test ensures that when the shape is explicitly