public void testAllowMultipleMatchesInFilteringParser() {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    
    FilteringParserDelegate<JsonParser> delegate = new FilteringParserDelegate<>(
        mapper,
        new MappingJsonFactory()
    ) {
        @Override
        protected boolean _allowMultipleMatches() {
            return true;
        }
    };
    
    String json = "{\"name\": \"John\", \"age\": 30}";
    JsonFactory factory = new MappingJsonFactory();
    JsonParser parser = factory.createParser(json);
    
    FilteringGeneratorDelegate<JsonGenerator> generatorDelegate = new FilteringGeneratorDelegate<>(
        mapper,
        new MappingJsonFactory()
    ) {
        @Override
        protected boolean _allowMultipleMatches() {
            return true;
        }
    };

    // Simulate parsing and generating to test the functionality
    while (parser.nextToken()!= JsonToken.END_OBJECT) {
        String fieldName = parser.getCurrentName();
        if (fieldName.equals("name")) {
            generatorDelegate.writeFieldName("name");
            generatorDelegate.writeString(parser.getText());
        } else if (fieldName.equals("age")) {
            generatorDelegate.writeFieldName("age");
            generatorDelegate.writeNumber(parser.getNumberValue());
        }