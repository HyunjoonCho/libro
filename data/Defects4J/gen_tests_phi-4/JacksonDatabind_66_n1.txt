public void testCustomEnumKeyDeserializerWithoutTypeInfo() throws IOException {
    String json = "{\"someMap\": {\"FOO\": \"bar\"}}";
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule simpleModule = new SimpleModule();
    simpleModule.addDeserializer(SuperTypeEnum.class, new JsonDeserializer<SuperTypeEnum>() {
        @Override
        public SuperTypeEnum deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)
                throws IOException {
            // Attempt to deserialize using the parser's text value
            return SuperTypeEnum.valueOf(jsonParser.getText());
        }
    });
    mapper.registerModule(simpleModule);

    // This should fail due to the issue described in the bug report
    try {
        SuperType superType = mapper.readValue(json, SuperType.class);
        // If no exception is thrown, the test should fail
        fail("Expected an exception due to incorrect parser state");
    } catch (Exception e) {
        //