public void testOverzealousOptimization() {
    Object uid = null;
    Object _uid = null;

    Function<Void, Void> doStuff = new Function<Void, Void>() {
        @Override
        public Void apply(Void input) {
            reset();
            _uid = uid;

            if ((Double) uid < 0.5) {
                doStuff.apply(null);
            }

            if (!_uid.equals(uid)) {
                throw new AssertionError("reset() was called");
            }
            return null;
        }
    };

    try {
        doStuff.apply(null);
        fail("Expected an AssertionError due to reset() being called");
    } catch (AssertionError e) {
        // Expected
    }
}

private void reset() {
    uid = Math.random();
}