import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.IOException;
import java.util.Map;
import java.util.Map.Entry;

import static org.junit.Assert.assertEquals;

public class KeyVsFieldTest {

    @Test
    public void deserializeAsKey() throws IOException {
        Map<FullName, Double> map =
            new ObjectMapper().readValue("{\"first.last\": 42}", new TypeReference<Map<FullName, Double>>() {});
        
        // This line should fail with the specified exception
        Entry<FullName, Double> entry = map.entrySet().iterator().next();

        assertEquals(entry.getKey().firstName, "first");
        assertEquals(entry.getKey().lastName, "last");
        assertEquals(entry.getValue().doubleValue(), 42, 0);
    }

    public static class FullName {
        private final String firstName;
        private final String lastName;

        private FullName(String firstName, String lastName) {
            this.firstName = firstName;
            this.lastName = lastName;
        }

        @JsonCreator
        public static FullName valueOf(String value) {
            String[] mySplit = value.split("\\.");
            return new FullName(mySplit[0], mySplit