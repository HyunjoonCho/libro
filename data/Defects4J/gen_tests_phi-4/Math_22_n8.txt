public void testIsSupportXxxInclusive() {
    RealDistribution distribution = new CustomRealDistribution(); // Assuming CustomRealDistribution implements RealDistribution

    double lowerBound = distribution.getSupportLowerBound();
    double upperBound = distribution.getSupportUpperBound();

    // Check if the density function returns a finite value at the bounds
    boolean supportsLowerInclusive =!Double.isInfinite(distribution.density(lowerBound)) &&!Double.isNaN(distribution.density(lowerBound));
    boolean supportsUpperInclusive =!Double.isInfinite(distribution.density(upperBound)) &&!Double.isNaN(distribution.density(upperBound));

    assertEquals(distribution.isSupportLowerInclusive(), supportsLowerInclusive);
    assertEquals(distribution.isSupportUpperInclusive(), supportsUpperInclusive);
}

In this test, replace `CustomRealDistribution` with the actual distribution class you are testing. The test checks if the density function returns a finite, non-NaN value at the lower and upper bounds, which aligns with the proposed definition for `isSupportXxxInclusive`.