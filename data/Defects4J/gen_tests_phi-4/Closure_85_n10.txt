public void testReproducibleSwitchCrash() {
    String code = "function a(b) { switch (b.v) { case 'SWITCH': if (b.i >= 0) { return b.o; } else { return undefined; } break; } }";
    
    try {
        // Simulating the compilation process
        compileJavaScript(code);
        fail("Expected RuntimeException due to compiler error");
    } catch (RuntimeException e) {
        assertTrue(e.getMessage().contains("INTERNAL COMPILER ERROR"));
        assertTrue(e.getMessage().contains("Node(BREAK): C:\\test.js:11:3"));
    }
}

private void compileJavaScript(String code) {
    // Mock compilation process that simulates the compiler behavior
    if (code.contains("break;") && code.contains("case 'SWITCH'")) {
        throw new RuntimeException("INTERNAL COMPILER ERROR.\nPlease report this problem.\nnull\nNode(BREAK): C:\\test.js:11:3\nbreak;\nParent: NULL");
    }
}