public void testObjectMapperTimeZoneChange() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(createJodaModule());
    mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);
    String initialTimeZone = mapper.getSerializationConfig().getTimeZone().getID();
    mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"));
    String changedTimeZone = mapper.getSerializationConfig().getTimeZone().getID();
    String serializedDate = mapper.writeValueAsString(new DateTime(1988, 6, 25, 20, 30, DateTimeZone.UTC));

    assertEquals("GMT", initialTimeZone);
    assertEquals("Europe/London", changedTimeZone);
    assertEquals("\"1988-06-25 21:30:00\"", serializedDate);
}

private static SimpleModule createJodaModule() {
    SimpleModule module = new SimpleModule();
    module.addSerializer(DateTime.class, new DateTimeSerializer(
            new JacksonJodaDateFormat(DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss").withZoneUTC())));
    return module;
}