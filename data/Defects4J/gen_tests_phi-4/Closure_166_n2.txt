import org.junit.Test;
import static org.junit.Assert.*;

public class TypeInferenceTest {

    @Test(expected = IllegalArgumentException.class)
    public void testAnonymousObjectTypeInferenceInconsistency() {
        // Simulate the behavior of func and func2 in Java
        interface Record {
            String getProp();
        }

        interface RecordWithProp2 extends Record {
            String getProp2();
        }

        // Simulate func
        class Func {
            void execute(Record record) {
                System.out.println(record.getProp());
            }
        }

        // Simulate func2
        class Func2 {
            void execute(Object record) {
                if (record instanceof String) {
                    System.out.println(record);
                } else if (record instanceof Record) {
                    System.out.println(((Record) record).getProp());
                } else {
                    throw new IllegalArgumentException("Invalid type");
                }
            }
        }

        Func func = new Func();
        Func2 func2 = new Func2();

        // Test func
        func.execute(new Record() {
            public String getProp() {
                return "a";
            }
        });

        // Test func2, expecting an exception
        func2.execute(new Record() {
            public String getProp()