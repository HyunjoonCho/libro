public void testAdvancedModeOverrideWarning() {
    // Simulate the environment setup
    // Note: This is a conceptual test, actual implementation may require a mock environment
    // or a custom setup to simulate Closure Compiler behavior.

    // Define the classes and methods as per the bug report
    class Foo {
        public int add(int a, int b) {
            return a + b;
        }

        public int sub(int a, int b) {
            throw new UnsupportedOperationException("Method not implemented");
        }
    }

    class Bar extends Foo {
        @Override
        public int add(int one) {
            return one;
        }

        @Override
        public int sub(int one) {
            return one;
        }
    }

    // Test the behavior
    Foo foo = new Bar();
    int result1 = foo.add(3, 4);
    assertEquals(3, result1); // Expecting 3, not 7

    Bar bar = new Bar();
    try {
        int result2 = bar.add(3, 4); // This should trigger an error
        fail("Expected JSC_WRONG_ARGUMENT_COUNT warning");
    } catch (UnsupportedOperationException e) {
        // Expected exception due to wrong argument count