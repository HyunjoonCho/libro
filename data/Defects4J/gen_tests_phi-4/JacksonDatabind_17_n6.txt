public void testReadTreeWithDefaultTyping() throws IOException {
    ObjectMapper mapper = new ObjectMapper()
           .enableDefaultTyping(ObjectMapper.DefaultTyping.JAVA_LANG_OBJECT, JsonTypeInfo.As.WRAPPER_OBJECT)
           .enable(MapperFeature.AUTO_DETECT_GETTERS)
           .enable(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS)
           .disable(MapperFeature.USE_GETTERS_AS_SETTERS)
           .disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)
           .enable(SerializationFeature.INDENT_OUTPUT)
           .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

    Foo foo = new Foo("bar");
    String serialized = mapper.writeValueAsString(foo);

    JsonMappingException exception = assertThrows(JsonMappingException.class, () -> {
        JsonNode jsonNode = mapper.readTree(serialized);
    });

    String expectedMessage = "Unexpected token (START_OBJECT), expected START_ARRAY: need JSON Array to contain As.WRAPPER_ARRAY type information for class com.fasterxml.jackson.databind.JsonNode";
    assertEquals(expectedMessage, exception.getMessage());
}