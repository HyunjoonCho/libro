public void testSkipBehaviorWithCipherInputStream() {
    try (ByteArrayInputStream baos = new ByteArrayInputStream(new byte[1024]);
         CipherInputStream cipherInputStream = new CipherInputStream(baos, createCipher("AES/ECB/PKCS5Padding", new byte[16])));
         TarInputStream tarInputStream = new TarInputStream(cipherInputStream)) {
        
        int bytesSkipped = IOUtils.skip(tarInputStream, 512);
        assertEquals(512, bytesSkipped, "Expected to skip 512 bytes, but skipped: " + bytesSkipped);
    } catch (Exception e) {
        fail("Exception occurred during test: " + e.getMessage());
    }
}

private Cipher createCipher(String transformation, byte[] key) throws Exception {
    SecretKeySpec secretKey = new SecretKeySpec(key, "AES");
    Cipher cipher = Cipher.getInstance(transformation);
    cipher.init(Cipher.ENCRYPT_MODE, secretKey);
    return cipher;
}