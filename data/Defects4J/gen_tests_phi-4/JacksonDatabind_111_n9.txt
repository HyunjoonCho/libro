public void testDeserializeNullInNestedAtomicReference() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper();
    ObjectReader objectReader = objectMapper.readerFor(MyBean.class);

    MyBean myBeanWithNull = objectReader.readValue("{\"refRef\": null}", MyBean.class);
    
    assertNotNull(myBeanWithNull.getRefRef()); // Check outer AtomicReference is not null
    assertNull(myBeanWithNull.getRefRef().get()); // Check inner AtomicReference is null (as expected)
}

This test method attempts to reproduce the described behavior by deserializing a JSON string with a nested `AtomicReference` that is `null`. According to the report, this should result in the outer `AtomicReference` being non-null while the inner one is null, which is what this test verifies.