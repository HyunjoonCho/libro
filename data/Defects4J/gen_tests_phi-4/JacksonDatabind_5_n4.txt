public void testMixinAnnotationsLost() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.disable(SerializationFeature.FAIL_ON_EMPTY_BEANS)
         .disable(SerializationFeature.AUTO_DETECT_FIELDS)
         .disable(SerializationFeature.AUTO_DETECT_GETTERS)
         .disable(SerializationFeature.AUTO_DETECT_IS_GETTERS)
         .disable(SerializationFeature.INFER_PROPERTY_MUTATORS);
    
    // Set mixin annotations with missing mixin registration for Contact
    module.setMixInAnnotation(Person.class, PersonMixin.class);

    mapper.registerModule(module);

    PersonImpl personImpl = new PersonImpl();
    personImpl.setCity("SomeCity");

    String serialized = mapper.writeValueAsString(personImpl);
    assertEquals("{\"city\":\"SomeCity\"}", serialized);
}

This test method attempts to reproduce the bug by configuring a `SimpleModule` without setting the mixin for `Contact`. When the `PersonImpl` instance is serialized, the expected behavior is that `city` will not be included due to the missing mixin registration for `Contact`. The assertion checks that `city` is present, indicating the issue does not occur when the workaround (registering `ContactMixin`) is applied.