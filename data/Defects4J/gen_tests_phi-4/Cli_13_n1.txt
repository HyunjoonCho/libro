public void testArgumentDefaultsPreventCommandlineUsage() {
    // Assuming a hypothetical CommandLine parser setup
    Options options = new Options();
    Option option = new Option("o", "option", true, "An option with a default value");
    option.setDefaultValue("default");
    options.addOption(option);

    CommandLineParser parser = new DefaultParser();
    CommandLine cmd = null;

    try {
        cmd = parser.parse(options, new String[]{"-o", "overrideValue"});
        fail("Expected ParseException to be thrown");
    } catch (ParseException e) {
        assertEquals("Invalid argument(s) for option: 'option'", e.getMessage());
    }

    // Test that the default value is used when no argument is provided
    try {
        cmd = parser.parse(options, new String[]{"-o"});
        assertEquals("default", cmd.getOptionValue("option"));
    } catch (ParseException e) {
        fail("Unexpected ParseException: " + e.getMessage());
    }
}