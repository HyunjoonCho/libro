import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.junit.jupiter.api.Test;
import java.io.IOException;
import java.util.Date;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class DateTimeSerializerTest {

    @Test
    public void testDateTimeSerializerIgnoredConfiguredDateFormat() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);

        Date date = new Date(0); // Epoch time

        // Annotate with custom format
        @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd-MM-yyyy")
        class CustomDate {
            public Date date;
            public CustomDate(Date date) {
                this.date = date;
            }
        }

        CustomDate customDate = new CustomDate(date);

        // Serialize with custom format
        String result = mapper.writeValueAsString(customDate);
        
        // Expected format should be "dd-MM-yyyy", but due to the bug, it might not be
        assertEquals("01-01-1970", result);
    }
}