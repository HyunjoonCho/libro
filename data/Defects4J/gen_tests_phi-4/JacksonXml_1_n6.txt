public void testDeserializationOfNestedNonWrappedListsWithEmptyInnerList() {
    String jsonInput = "{\"records\": [{\"fields\": []}]}";
    
    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.configure(SerializationFeature.WRAP_ROOT_VALUE, false);
    objectMapper.configure(DeserializationFeature.UNWRAP_ROOT_VALUE, false);

    Definition definition = objectMapper.readValue(jsonInput, Definition.class);

    assertNotNull(definition);
    assertNotNull(definition.getRecords());
    assertEquals(1, definition.getRecords().size());

    Record record = definition.getRecords().get(0);
    assertNotNull(record);
    assertNotNull(record.getFields());
    assertEquals(0, record.getFields().size());
}

Assuming `Definition` and `Record` are defined as:

public class Definition {
    private List<Record> records;

    public List<Record> getRecords() {
        return records;
    }

    public void setRecords(List<Record> records) {
        this.records = records;
    }
}

public class Record {
    private List<Field> fields;

    public List<Field> getFields() {
        return fields;
    }

    public void setFields(List<Field> fields) {
        this.fields = fields;
    }
}

public class Field {