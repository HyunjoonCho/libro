public void testExtraneousTypeIdMapping() {
    // Assuming a method getTypeResolutions that returns a list of type resolutions
    List<TypeResolution> resolutions = getTypeResolutions(BaseType.class);

    // Check if BaseType itself is included in the resolution list
    boolean baseTypeIncluded = resolutions.stream()
                                         .anyMatch(resolution -> resolution.getType().equals(BaseType.class));

    // Assuming BaseType is an abstract base type or uses a default name
    assertFalse("BaseType should not be included in its own resolution list.", baseTypeIncluded);
}