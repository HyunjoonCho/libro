public void testClosureCompilerOptimization() {
    final double initialValue = Math.random();
    final boolean[] resetCalled = {false};

    class Test {
        double uid = initialValue;

        void reset() {
            uid = Math.random();
            resetCalled[0] = true;
        }

        void doStuff() {
            reset();
            double _uid = uid;

            if (uid < 0.5) {
                doStuff();
            }

            if (_uid!= uid) {
                throw new AssertionError("reset() was called");
            }
        }
    }

    Test test = new Test();
    test.doStuff();

    assertFalse("reset() should not have been called recursively", resetCalled[0]);
}