public void testStrangeWarning() {
    // Define a callback function
    java.util.function.Function<Void, Void> func = () -> null;

    // Create an object with the function
    Object fnStruc1 = new Object();
    java.util.Map<String, java.util.function.Function<Void, Void>> map = new java.util.HashMap<>();
    map.put("func", func);
    java.util.Map<String, Object> fnStruc1Map = new java.util.HashMap<>();
    fnStruc1Map.put("func", map);
    ((java.util.Map<String, Object>) fnStruc1).put("func", fnStruc1Map);

    // Call the function with the object
    test1(fnStruc1);
}

// Dummy implementation of test1 to simulate the behavior
private void test1(Object obj) {
    java.util.Map<String, Object> objMap = (java.util.Map<String, Object>) obj;
    java.util.Map<String, java.util.function.Function<Void, Void>> funcMap = (java.util.Map<String, java.util.function.Function<Void, Void>>) objMap.get("func");
    java.util.function.Function<Void, Void> func = funcMap.get("func");

    // Simulate the warning by checking the