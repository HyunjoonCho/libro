public void testWideBoundsToCMAESOptimizer() {
    double lowerBound = -Double.MAX_VALUE;
    double upperBound = Double.MAX_VALUE;
    CMAESOptimizer optimizer = new CMAESOptimizer(lowerBound, upperBound, 10);
    optimizer.optimize(fitnessFunction -> {
        double[] parameters = optimizer.generateParameters();
        double fitness = fitnessFunction.evaluate(parameters);
        return fitness;
    });

    for (double param : optimizer.getParameters()) {
        assertTrue(!Double.isNaN(param), "Parameter should not be NaN");
    }
}

This test method sets extremely wide bounds and checks that the parameters generated by the `CMAESOptimizer` are not `NaN`. The `assertTrue` assertion ensures that any `NaN` values are caught, indicating a failure in the encoding/decoding process.