public void testJacksonDeserializationFeature() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper()
           .disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE)
           .disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)
           .disable(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES);

    // Test 1: Should not read item2
    String json1 = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    CallRecord callRecord1 = objectMapper.readValue(json1, CallRecord.class);
    assertEquals("0.0", callRecord1.version + "");
    assertEquals("123", callRecord1.application);
    assertNull(callRecord1.item2);

    // Test 2: Should not read application after invalid item
    String json2 = "{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}}";
    CallRecord callRecord2 = objectMapper.readValue(json2, CallRecord.class);
    assertEquals("0.0", callRecord2.version + "");
    assertNull(callRecord2.application);

    // Test 3: Order matters, can't read