import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.text.ParseException;
import java.util.Date;
import org.junit.Test;

public class MyTestCase {

    @Test
    public void testLargeISO8601DateParsing() {
        try {
            StdDateFormat formatter = new StdDateFormat();
            String maxDateFormatted = formatter.format(new Date(Long.MAX_VALUE));
            Date parsedMaxDate = formatter.parse(maxDateFormatted);
            assertEquals(Long.MAX_VALUE, parsedMaxDate.getTime());

            // This will fail due to incorrect parsing of large years
            String minDateFormatted = formatter.format(new Date(Long.MIN_VALUE));
            Date parsedMinDate = formatter.parse(minDateFormatted);
            assertEquals(Long.MIN_VALUE, parsedMinDate.getTime());
        } catch (ParseException e) {
            fail("Expected ParseException not thrown for large years: " + e.getMessage());
        } catch (Exception e) {
            fail("Unexpected exception: " + e.getMessage());
        }
    }
}