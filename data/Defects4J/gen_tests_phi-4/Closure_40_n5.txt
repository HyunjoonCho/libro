public void testSmartNameRemovalCompilerCrash() {
    // Simulating the setup for the test
    Class<?> nsPageSelectionModelFooEvent = createClass("ns.PageSelectionModel.FooEvent", "");
    Class<?> nsPageSelectionModelSelectEvent = createClass("ns.PageSelectionModel.SelectEvent", "");
    Class<?> nsPageSelectionModelChangeEvent = createClass("ns.PageSelectionModel.ChangeEvent", "");

    try {
        // Simulate the inheritance setup
        inherits(nsPageSelectionModelChangeEvent, nsPageSelectionModelFooEvent);

        // Expect an IllegalStateException due to missing reference
        fail("Expected IllegalStateException due to missing reference to PageSelectionModel");
    } catch (IllegalStateException e) {
        assertEquals("No reference to PageSelectionModel", e.getMessage());
    }
}

private Class<?> createClass(String className, String constructor) {
    // Mock class creation logic
    return Class.forName(className);
}

private void inherits(Class<?> child, Class<?> parent) {
    // Mock inheritance logic
    if (!child.getName().contains("ChangeEvent")) {
        throw new IllegalStateException("No reference to PageSelectionModel");
    }
}

In this test, we simulate the scenario described in the bug report by creating mock classes and setting up inheritance