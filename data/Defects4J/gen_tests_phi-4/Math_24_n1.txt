public void testBrentOptimizerFailure() {
    UnivariateFunction f = x -> Math.sin(x);
    BrentOptimizer optimizer = new BrentOptimizer();
    optimizer.setMaximize(true);
    optimizer.setAbsoluteAccuracy(1e-10);
    optimizer.setMaximumIterations(1000);
    double bestValue = optimizer.optimize(0, 2 * Math.PI, f);

    // Check if the best value is not the maximum of sin(x) within the range
    double expectedMaxValue = 1.0; // sin(pi/2)
    assertNotEquals(expectedMaxValue, bestValue, 1e-5);
}