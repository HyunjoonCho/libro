import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;
import static org.junit.jupiter.api.Assertions.*;

public void testCustomSerializerNotUsedWithJsonValue() {
    // Define a POJO with @JsonValue
    class CustomObject {
        private int value;

        public CustomObject(int value) {
            this.value = value;
        }

        @JsonValue
        public int getValue() {
            return value;
        }
    }

    // Define a custom serializer
    class CustomObjectSerializer extends com.fasterxml.jackson.databind.JsonSerializer<CustomObject> {
        @Override
        public void serialize(CustomObject value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider serializers) throws IOException {
            gen.writeString("CustomSerialized:" + value.getValue());
        }
    }

    // Create an ObjectMapper and register the custom serializer
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(CustomObject.class, new CustomObjectSerializer());
    mapper.registerModule(module);

    // Create an instance of the POJO
    CustomObject obj = new CustomObject(42);

    // Serialize the object
    String