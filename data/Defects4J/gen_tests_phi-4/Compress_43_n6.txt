public void testZipVersionNeededMismatch() throws IOException {
    // Create a ByteArrayOutputStream to capture the zip output
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    ZipArchiveOutputStream zos = new ZipArchiveOutputStream(new BufferedOutputStream(baos));

    // Create a dummy entry
    ZipArchiveEntry entry = new ZipArchiveEntry("test.txt");
    entry.setMethod(ZipArchiveEntry.DEFLATED);
    zos.putArchiveEntry(entry);
    zos.write("Test content".getBytes());
    zos.closeArchiveEntry();
    zos.finish();

    // Read the zip file from the ByteArrayOutputStream
    ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
    ZipInputStream zis = new ZipInputStream(bais);

    // Read the local file header
    byte[] localHeader = new byte[30]; // Local file header is 30 bytes
    zis.read(localHeader, 0, localHeader.length);

    // Extract the version needed to extract from the local file header
    int localVersionNeeded = (localHeader[6] & 0xFF) | ((localHeader[7] & 0xFF) << 8);

    // Move to the end of the central directory
    while (zis.getNextEntry()!= null)