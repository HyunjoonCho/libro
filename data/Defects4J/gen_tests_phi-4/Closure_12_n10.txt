import static java.util.concurrent.TimeUnit.SECONDS;
import static org.junit.Assert.assertEquals;

import java.util.concurrent.CountDownLatch;

import org.junit.Test;

public class TestClosureCompilerIssue {

    public void somefunction() {
        try {
            latch.await();
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
            throw new RuntimeException(e);
        }
    }

    private final CountDownLatch latch = new CountDownLatch(1);

    @Test
    public void testTryCatchIncorporation() {
        try {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    latch.countDown();
                }
            }).start();

            SECONDS.sleep(1);

            a();
            a();
        } finally {
            latch.countDown();
        }
    }

    public void a() {
        String x = "1";
        try {
            x += somefunction();
        } catch (Exception e) {
        }
        x += "2";
        try {
            x += somefunction();
        } catch (Exception e) {
        }
        assertEquals("1212", x);
    }
}

This test method `testTryCatchIncorporation` simulates the behavior described in the bug report. It uses a