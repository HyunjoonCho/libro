public void testLargeIso8601Dates() {
    StdDateFormat formatter = new StdDateFormat();
    try {
        formatter.format(new Date(Long.MAX_VALUE));
    } catch (Exception e) {
        assertTrue(e instanceof ParseException || e instanceof IndexOutOfBoundsException);
    }

    try {
        formatter.parse(formatter.format(new Date(Long.MAX_VALUE)));
    } catch (ParseException e) {
        fail("Parsing should not fail for Long.MAX_VALUE");
    }

    // Assert that parsing returns the correct time for Long.MAX_VALUE
    assertEquals(Long.MAX_VALUE, formatter.parse(formatter.format(new Date(Long.MAX_VALUE))).getTime());

    // Assert that parsing fails for Long.MIN_VALUE due to lack of support for negative dates
    try {
        formatter.parse(formatter.format(new Date(Long.MIN_VALUE)));
        fail("Parsing should fail for Long.MIN_VALUE due to unsupported negative dates");
    } catch (ParseException e) {
        // Expected exception
    }
}