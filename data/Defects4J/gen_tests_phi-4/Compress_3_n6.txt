public void testArchiveOutputStreamFinishMethod() {
    try (ArchiveOutputStream archiveOutputStream = new ZipArchiveOutputStream(new ByteArrayOutputStream())) {
        archiveOutputStream.putArchiveEntry(new ZipArchiveEntry("test.txt"));
        archiveOutputStream.finish();
        archiveOutputStream.closeEntry();
        archiveOutputStream.close();
    } catch (IOException e) {
        fail("Exception should not be thrown if finish() is called before closeEntry()");
    }
    
    try (ArchiveOutputStream archiveOutputStream = new ZipArchiveOutputStream(new ByteArrayOutputStream())) {
        archiveOutputStream.putArchiveEntry(new ZipArchiveEntry("test.txt"));
        archiveOutputStream.finish();
        archiveOutputStream.finish(); // This should be safe as finish() is idempotent
        archiveOutputStream.close();
    } catch (IOException e) {
        fail("Exception should not be thrown if finish() is called multiple times");
    }
}