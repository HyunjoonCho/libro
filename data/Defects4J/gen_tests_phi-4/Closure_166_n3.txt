public void testAnonymousObjectTypeInference() {
    // Simulating the behavior using Java classes and methods
    class Record {
        String prop;
        String prop2;

        Record(String prop, String prop2) {
            this.prop = prop;
            this.prop2 = prop2;
        }

        @Override
        public String toString() {
            return "Record{prop='" + prop + "', prop2='" + prop2 + "'}";
        }
    }

    // Simulating the first function
    void func(Record record) {
        System.out.println(record.prop);
    }

    // Simulating the second function
    void func2(Object record) {
        if (record instanceof String) {
            System.out.println(record);
        } else if (record instanceof Record) {
            System.out.println(((Record) record).prop);
        }
    }

    // Test case that should pass
    func(new Record("a", null));

    // Test case that should fail due to type mismatch
    try {
        func2(new Record("a", null));
        fail("Expected exception due to type mismatch");
    } catch (ClassCastException e) {
        // Expected exception
    }
}