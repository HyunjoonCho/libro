public void testReadTreeWithDefaultTyping() throws IOException {
    ObjectMapper mapper = new ObjectMapper()
       .enableDefaultTyping() // or.enableDefaultTypingAsProperty("class")
       .enable(MapperFeature.AUTO_DETECT_GETTERS)
       .enable(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS)
       .disable(MapperFeature.USE_GETTERS_AS_SETTERS)
       .disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)
       .enable(SerializationFeature.INDENT_OUTPUT)
       .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);

    Foo foo = new Foo("bar");
    String serialized = mapper.writeValueAsString(foo); // {"bar" : "bar"}

    try {
        JsonNode jsonNode = mapper.readTree(serialized); // exception here
        fail("Expected JsonMappingException to be thrown");
    } catch (JsonMappingException e) {
        assertEquals("Unexpected token (START_OBJECT), expected START_ARRAY: need JSON Array to contain As.WRAPPER_ARRAY type information for class com.fasterxml.jackson.databind.JsonNode", e.getMessage());
    }

    try {
        JsonNode node = mapper.valueToTree(foo); // and here
        fail("Expected JsonMappingException to be thrown");
    } catch (