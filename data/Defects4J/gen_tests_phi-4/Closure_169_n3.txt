public void testStrangeWarning() {
    // Define the function as described in the bug report
    java.io.PrintStream out = new java.io.PrintStream(System.out) {
        @Override
        public void println(String x) {
            // Capture the output to check the warning message
            if (x.contains("WARNING - actual parameter 1 of func does not match formal parameter")) {
                throw new AssertionError("Unexpected warning: " + x);
            }
        }
    };

    // Redirect System.out to capture the warning
    System.setOut(out);

    try {
        // Define the function as described in the bug report
        java.util.function.Consumer<Object> test1 = (obj) -> {};

        // Create an object with a method
        Object fnStruc1 = new Object();
        fnStruc1.getClass().getMethod("func").invoke(fnStruc1);

        // Call the function with the object, expecting a warning
        test1.accept(fnStruc1);

        // If no exception is thrown, the test should fail
        fail("Expected warning to be thrown");
    } catch (Exception e) {
        // Expected exception should not be caught here
    }

    // Restore the original System.out
    System