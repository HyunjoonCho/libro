public void testSuperReplacement() {
    // Mocking the environment to simulate the issue
    Compiler compiler = mock(Compiler.class);
    CodingConvention codingConvention = mock(CodingConvention.class);
    FunctionNode functionNode = mock(FunctionNode.class);
    Name name = new Name("$super");

    when(compiler.getCodingConvention()).thenReturn(codingConvention);
    when(codingConvention.isExported(name)).thenReturn(true);

    // Simulating the MakeDeclaredNamesUnique logic
    if (!codingConvention.isExported(name)) {
        // Simulate renaming logic that should not occur
        assertEquals("$super", name.getOriginalName());
    } else {
        // Check that renaming does not occur
        assertEquals("$super", name.getOriginalName());
    }
}