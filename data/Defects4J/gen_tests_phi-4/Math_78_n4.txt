public void testCloseEventsDetection() {
    // Mock or setup your ODE solver configuration
    ODESolver solver = new ODESolver();
    solver.setInitialCondition(67.5);
    solver.setFinalCondition(153.0);

    // Define the switching function with behavior as described
    Function switchingFunction = t -> {
        if (t >= 90.0 && t <= 135.0) {
            return Math.sin((t - 90.0) * Math.PI / 45.0); // Simplified model
        }
        return (t < 90.0)? -1 : 1;
    };

    // Simulate the integration process
    List<Double> detectedEvents = solver.integrate(switchingFunction);

    // Check if the event at t = 135.0 is detected
    assertTrue(detectedEvents.contains(135.0));
}

**Note:** This test assumes the existence of an `ODESolver` class with methods like `setInitialCondition`, `setFinalCondition`, and `integrate`, as well as a `Function` type for the switching function. You may need to adapt this to fit your actual implementation.