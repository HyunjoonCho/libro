public void testInvalidHttpCharset() throws Exception {
    String invalidCharset = "UFT8"; // Incorrectly specified charset
    byte[] byteData = "<html><head><meta charset=\"UTF-8\"></head><body>Test</body></html>".getBytes("UTF-8");
    String baseUri = "http://example.com";
    Parser parser = Parser.htmlParser();

    // Simulate the scenario where the charset is incorrectly specified
    try {
        Validate.notEmpty(invalidCharset, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
        String docData = Charset.forName(invalidCharset).decode(ByteBuffer.wrap(byteData)).toString();
        fail("Expected UnsupportedCharsetException to be thrown");
    } catch (UnsupportedCharsetException e) {
        // Expected exception, test passes
    }

    // Simulate fallback to charset detection
    String result = parseByteData(byteData, null, baseUri, parser);
    assertEquals("Test", result);
}

private String parseByteData(byte[] byteData, String charset, String baseUri, Parser parser) {
    if (charset == null) {
        Document doc = Jsoup.parse(byteData, baseUri,