public void testTernaryOperatorTypeCoercion() {
    // Setup a mock environment to simulate the behavior of the Google Closure Compiler
    // This is a conceptual test since Java doesn't directly use the Closure Compiler.
    
    String codeBefore = "var a = (Math.random() > 0.5? '1' : 2) + 3 + 4;";
    String codeAfter = "var a = (0.5 < Math.random()? 1 : 2) + 7;";

    String generatedCode = simulateClosureCompiler(codeBefore);

    assertEquals(codeAfter, generatedCode);
}

// Simulate the behavior of the Google Closure Compiler
private String simulateClosureCompiler(String code) {
    // This is a mock function to represent the transformation
    // that the Closure Compiler performs on the input code.
    return "var a = (0.5 < Math.random()? 1 : 2) + 7;";
}

Note: This test is conceptual because Java doesn't directly use the Google Closure Compiler. The test simulates the behavior by mocking the transformation process. In a real-world scenario, this would involve using the Closure Compiler directly or verifying its output through integration tests.