import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.fail;

public class StringCollectionDeserializerTest {

    @Test
    public void testStringCollectionDeserializerFailure() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"customCollection\": [\"one\", \"two\", \"three\"]}";

        try {
            mapper.readValue(json, MyObject.class);
            fail("Expected JsonMappingException due to lack of no-args constructor");
        } catch (Exception e) {
            // Expected exception
            assert e.getMessage().contains("Cannot construct instance of `XXX`");
        }
    }

    private static class MyObject {
        // Intentionally missing no-args constructor
        public MyObject(StringCollection customCollection) {
            // Constructor logic here
        }
    }

    private static class StringCollection extends java.util.AbstractCollection<String> {
        private final java.util.List<String> list;

        private StringCollection(java.util.List<String> list) {
            this.list = list;
        }

        @Override
        public java.util.Iterator<String> iterator() {
            return list.iterator();
        }

        @Override
        public int size() {