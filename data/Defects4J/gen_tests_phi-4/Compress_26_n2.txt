public void testIssueIOUtilsSkip() {
    try {
        InputStream cipherInput = new CipherInputStream(new ByteArrayInputStream(new byte[1024]), new DummyCipher());
        InputStream tarInput = new TarInputStream(cipherInput);
        
        int bytesRead = IOUtils.copy(tarInput, new ByteArrayOutputStream());
        
        tarInput.reset(); // Assuming reset is supported or mock the stream for testing
        long skipped = IOUtils.skip(tarInput, 512);
        
        // Expecting to skip less than 512 due to the behavior of CipherInputStream
        assertTrue(skipped < 512);
        
    } catch (IOException e) {
        fail("IOException should not be thrown");
    }
}

// Dummy Cipher class to simulate CipherInputStream behavior
private static class DummyCipher extends Cipher {
    @Override
    public void init(int mode, Key key, SecureRandom random) {
    }

    @Override
    public void init(int mode, AlgorithmParameterSpec params, Key key, SecureRandom random) {
    }

    @Override
    public void init(int mode, byte[] opsin, String opsmode) {
    }

    @Override
    public void init(int mode, byte[] opsin, AlgorithmParameterSpec params, String opsmode