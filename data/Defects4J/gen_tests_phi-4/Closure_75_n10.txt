public void testSwfobjectUrlEncodeError() {
    String input = "\"<>.;\"";
    String expected = "Error: Unterminated String";
    try {
        // Simulate the problematic closure-compiled function
        String result = closureCompiledUrlEncodeIfNecessary(input);
    } catch (UnterminatedStringException e) {
        assertEquals(expected, e.getMessage());
    }
}

// Mock function to simulate the behavior of the closure-compiled version
private String closureCompiledUrlEncodeIfNecessary(String s) throws UnterminatedStringException {
    if (s.contains("\"<>.;")) {
        throw new UnterminatedStringException("Unterminated String: '" + s + "'");
    }
    return s;
}

// Mock exception to simulate the JSMin_UnterminatedStringException
private static class UnterminatedStringException extends Exception {
    public UnterminatedStringException(String message) {
        super(message);
    }
}