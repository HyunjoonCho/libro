import org.junit.Test;
import static org.junit.Assert.*;

public class CompilerBugTest {

    @Test
    public void testFunctionPropertyRemoval() {
        // Simulate the behavior of the JavaScript code
        // Define a map and functions
        var map = new java.util.HashMap<String, Function>();
        var f1 = new Function() {
            boolean alwaysCall = true;

            @Override
            public void call() {
                System.out.println("f1");
            }
        };
        var f2 = new Function() {
            @Override
            public void call() {
                System.out.println("f2");
            }
        };

        map.put("f1", f1);
        map.put("f2", f2);

        // Simulate the random call
        var key = Math.random() > 0.5? "f1" : "f2";
        var f = map.get(key);

        // Check if the property is retained
        if ("f1".equals(key) && f.alwaysCall) {
            f.call();
            assertTrue(true); // f1 should always call
        } else {
            assertFalse(f.alwaysCall); // f2 should not have alwaysCall
        }
    }