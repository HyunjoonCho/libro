import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;
import org.junit.jupiter.api.Test;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class DateTimeSerializerTest {

    @Test
    public void testDateTimeSerializerBaseIgnoresConfiguredFormat() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        DateTimeFormatter customFormat = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        
        // Configure the mapper with a custom date format
        mapper.setDateFormat(customFormat);
        
        // Enable the JSR310 module to handle LocalDate
        mapper.registerModule(com.fasterxml.jackson.datatype.jsr310.JavaTimeModule.class);
        
        // Serialize the date using the configured format
        LocalDate date = LocalDate.of(2023, 10, 5);
        String serialized = mapper.writeValueAsString(date);
        
        // Expected string should match the custom format
        assertEquals("05/10/2023", serialized);
        
        // Deserialize to check if it uses the correct format
        LocalDate deserialized