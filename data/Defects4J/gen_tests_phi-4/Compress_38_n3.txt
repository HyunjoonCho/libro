public void testPaxHeaderEntryWithSlash() throws Exception {
    // Setup TarArchiveInputStream with a sample tar input containing a PAX header entry ending with "/"
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(
        "Your sample input tar data here".getBytes(StandardCharsets.UTF_8));
    TarArchiveInputStream tarInputStream = new TarArchiveInputStream(new GzipInputStream(byteArrayInputStream));

    TarArchiveEntry entry;
    boolean foundIssue = false;

    while ((entry = tarInputStream.getNextTarEntry())!= null) {
        if (entry.isPaxHeader() && entry.getName().endsWith("/")) {
            try {
                // Attempt to read content
                byte[] buffer = new byte[1024];
                int bytesRead = tarInputStream.read(buffer);
                foundIssue = bytesRead == -1;  // If no content can be read, it's an issue
            } catch (IOException e) {
                foundIssue = true;
            }
        }
    }

    assertTrue("Expected an issue with PAX header entry ending with '/'", foundIssue);
}

**Note:** Replace `"Your sample input tar data here"` with the actual binary data of a tar file that contains the PAX header issue as described in the bug report. This test