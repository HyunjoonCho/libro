public void testEventStateNotUpdatedOnResetState() {
    // Setup your ODE solver with multiple events
    ODESolver solver = new ODESolver();
    solver.addEventHandler(new EventHandlerA());
    solver.addEventHandler(new EventHandlerB());

    // Simulate an event that triggers RESET_STATE
    solver.solve();

    // Assertions to ensure the state of EventHandlerB is not updated
    // Assuming EventHandlerB has a method getState() that returns its current state
    EventHandlerB eventHandlerB = (EventHandlerB) solver.getEventHandler("EventHandlerB");
    double[] expectedState = new double[]{-1, 1}; // Expected state values
    assertArrayEquals(expectedState, eventHandlerB.getState(), 1e-9);

    // Further assertions to check if g(double t, double[] y) is called with incorrect state
    // Assuming there's a way to verify the input to g
    double[] incorrectState = eventHandlerB.getLastCalledState();
    assertTrue(Arrays.stream(incorrectState).anyMatch(value -> value > 1e9)); // Check for extremely high values
}