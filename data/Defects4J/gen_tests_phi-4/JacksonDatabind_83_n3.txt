public void testFromDeserializerIgnoresProblemHandler() throws IOException {
    ObjectMapper mapper = new ObjectMapper().addHandler(new DeserializationProblemHandler() {
        @Override
        public Object handleWeirdStringValue(DeserializationContext ctxt, Class<?> targetType, String valueToConvert, String failureMsg) throws IOException {
            if (targetType == UUID.class) {
                return null; // Handle the case where the value is not a valid UUID
            }
            return super.handleWeirdStringValue(ctxt, targetType, valueToConvert, failureMsg);
        }
    });

    try {
        mapper.readValue("{\"id\" : \"I am not a UUID\"}", IdBean.class);
        fail("Expected JsonMappingException due to invalid UUID format");
    } catch (IOException e) {
        assertTrue(e.getCause() instanceof JsonMappingException);
    }
}

public static class IdBean {
    private UUID id;

    public UUID getId() {
        return id;
    }

    public void setId(UUID id) {
        this.id = id;
    }
}