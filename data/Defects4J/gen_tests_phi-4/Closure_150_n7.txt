import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class TypeCheckerTest {

    @Test
    public void testAnnotationsOnFunctionsWithinFunctions() {
        var ns = new Object() {
            {
                Object a;
                /** @param {String=} b */
                ns.a = (b) -> {};

                function d() {
                    ns.a();
                    ns.a(123);
                }

                d();
            }
        };

        // Simulating the type checker behavior
        boolean warningForNoParam = ns.a(); // Should raise a warning
        boolean warningForTypeMismatch = ns.a(123); // Should not raise a warning

        // Assertion to check if the type checker behaves as expected
        assertTrue("Warning should be emitted for no parameters", warningForNoParam);
        assertFalse("Warning should not be emitted for type mismatch", warningForTypeMismatch);
    }
}

**Note:** This test is conceptual since Java does not have native support for JavaScript-like function annotations or type checking as described. The test simulates the expected behavior by using assertions to check the conditions described in the bug report. Adjustments might be needed based on the actual implementation details of the type checker.