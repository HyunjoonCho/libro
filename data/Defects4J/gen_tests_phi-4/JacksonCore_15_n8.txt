public void testAllowMultipleMatches() {
    ObjectMapper mapper = new ObjectMapper();
    JsonFactory jsonFactory = mapper.getFactory();
    jsonFactory.enable(JsonParser.Feature.ALLOW_COMMENTS);
    jsonFactory.enable(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES);
    
    String jsonInput = "{ /* comment */ unquotedField: true, _allowMultipleMatches: false }";
    
    FilteringGeneratorDelegate generatorDelegate = new FilteringGeneratorDelegate(mapper.getSerializerProvider(), jsonFactory.createGenerator(new StringWriter()));
    generatorDelegate.setSkipChildren(false);
    generatorDelegate.setAllowMultipleMatches(true);
    
    try {
        generatorDelegate.writeStartObject();
        generatorDelegate.writeStringField("unquotedField", "true");
        generatorDelegate.writeBooleanField("_allowMultipleMatches", false);
        generatorDelegate.writeEndObject();
        
        fail("Expected an IllegalArgumentException due to multiple matches for _allowMultipleMatches");
    } catch (IllegalArgumentException e) {
        // Expected exception because _allowMultipleMatches is not handled correctly
    }
}