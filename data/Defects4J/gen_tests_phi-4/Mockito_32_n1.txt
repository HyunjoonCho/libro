public void testMockitoPackagePrivateClass() {
    // Assuming there's a class 'PublicChild' extending a package-private 'Parent'
    PublicChild mock = Mockito.mock(PublicChild.class);
    Mockito.doReturn("stubbed").when(mock).someMethod();

    // Call the method to verify it returns the stubbed response instead of invoking the real method
    assertEquals("stubbed", mock.someMethod());

    // Attempt to create another mock to trigger the exception
    try {
        Mockito.mock(PublicChild.class);
        fail("Expected an exception due to incorrect mock behavior");
    } catch (Exception e) {
        // Optionally verify that the exception message is meaningful
        assertTrue(e.getMessage().contains("Mockito"));
    }
}