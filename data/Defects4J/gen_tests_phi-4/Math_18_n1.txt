public void testCMAESOptimizerBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer(0, 100, 10); // Assuming constructor with lower bound, upper bound, and dimension
    double[] solution = optimizer.optimize(() -> {
        double x = optimizer.getParameter(0); // Assuming getParameter retrieves the parameter at index 0
        return Math.pow(x - 50, 2); // Simple quadratic function centered at 50
    });

    double lowerBoundFit = optimizer.getParameter(0); // Assuming this retrieves the parameter value after optimization
    double upperBoundFit = optimizer.getParameter(1); // Assuming this retrieves another parameter value for comparison

    // Check if the fit is finer near the lower bound
    assertTrue(lowerBoundFit < 10); // Assuming a finer fit near the lower bound (0) would result in a value less than 10

    // Check if the fit is coarser near the upper bound
    assertTrue(upperBoundFit > 90); // Assuming a coarser fit near the upper bound (100) would result in a value greater than 90
}