public void testExternalPropertyDeserialization() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    String json = "{\"externalProperty\":\"someValue\",\"internalProperty\":\"data\"}";

    MyObject obj = mapper.readValue(json, MyObject.class);

    assertNotNull("External property should not be null", obj.getExternalProperty());
    assertEquals("someValue", obj.getExternalProperty());
    assertEquals("data", obj.getInternalProperty());
}

class MyObject {
    private String externalProperty;
    private String internalProperty;

    @JsonDeserialize(using = MyObject.MyPropertyDeserializer.class)
    public String getExternalProperty() {
        return externalProperty;
    }

    public void setExternalProperty(String externalProperty) {
        this.externalProperty = externalProperty;
    }

    public String getInternalProperty() {
        return internalProperty;
    }

    public void setInternalProperty(String internalProperty) {
        this.internalProperty = internalProperty;
    }

    static class MyPropertyDeserializer extends JsonDeserializer<String> {
        @Override
        public String deserialize(JsonParser jp, DeserializationContext