public void testGoogIsArray() {
    // Hypothetical setup similar to Closure Compiler environment
    Object[] testArray = new Object[]{1, 2, 3};
    Object nonArrayObject = "not an array";

    Object resultArray = test(testArray);
    assertArrayEquals(new Object[]{1, 2, 3}, (Object[]) resultArray);

    Exception exception = assertThrows(IllegalArgumentException.class, () -> {
        test(nonArrayObject);
    });

    assertEquals("Expected type Array but found Object", exception.getMessage());
}

private Object test(Object object) {
    if (isGoogleArray(object)) {
        Object x = object; // In real scenario, this should have type hinting
        return x;
    } else {
        throw new IllegalArgumentException("Expected type Array but found " + object.getClass().getSimpleName());
    }
}

private boolean isGoogleArray(Object object) {
    return object instanceof Object[]; // Simulating goog.isArray
}