import static org.junit.Assert.assertEquals;

public void testWrongTypeNameOnMissingPropertyError() {
    // Mocking the behavior of the code snippet described in the bug report
    Throwable exception = assertThrows(RuntimeException.class, () -> {
        C3 c3Instance = new C3(new C2());
        c3Instance.use(c3Instance.c2_.prop);
    });

    String expectedMessage = "Property prop never defined on C2";
    String actualMessage = exception.getMessage();

    assertEquals(expectedMessage, actualMessage);
}

class C2 {
    // Simulating a property that is expected to be defined
}

class C3 {
    C2 c2_;

    public C3(C2 c2) {
        this.c2_ = c2;
    }

    void use(Object prop) {
        if (prop == null) {
            throw new RuntimeException("Property prop never defined on C2");
        }
    }
}

This test method simulates the described behavior by creating instances of `C2` and `C3`, attempting to access a non-existent property, and then checking if the exception message matches the expected output. Note that the actual implementation details (like the `use` method) might need to be adjusted to match