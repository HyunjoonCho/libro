public void testCorruptedZipFileCreation() {
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    try (ZipOutputStream zos = new ZipOutputStream(baos)) {
        String fileName1 = "file1.txt";
        String fileName2 = "file2.txt";
        // Create entries with the same hash code
        ZipEntry entry1 = new ZipEntry(fileName1);
        ZipEntry entry2 = new ZipEntry(fileName2);
        
        zos.putNextEntry(entry1);
        zos.write("Content for " + fileName1);
        zos.closeEntry();
        
        zos.putNextEntry(entry2);
        zos.write("Content for " + fileName2);
        zos.closeEntry();
    } catch (IOException e) {
        fail("IOException should not have been thrown");
    }

    byte[] zipBytes = baos.toByteArray();
    assertTrue(isZipCorrupted(zipBytes));
}

private boolean isZipCorrupted(byte[] zipBytes) {
    try (ZipInputStream zis = new ZipInputStream(new ByteArrayInputStream(zipBytes))) {
        ZipEntry entry;
        while ((entry = zis.getNextEntry())!= null) {
            zis.closeEntry();
        }
    } catch (ZipException e) {
        return true; //