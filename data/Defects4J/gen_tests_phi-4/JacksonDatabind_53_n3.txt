public void testJsonDeserializeAsWithMaps() throws Exception {
    String json = "{ \"something\": [ { \"id\": \"a-uuid\", \"property\": \"value\" } ] }";

    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping();
    mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);

    // Assuming MyHashMap and Foo are defined elsewhere in the codebase
    MyPOJO pojo = mapper.readValue(json, MyPOJO.class);

    Map<UUID, Foo> map = pojo.getSomething();
    
    assertNotNull(map);
    assertEquals(1, map.size());
    Foo foo = map.get(UUID.fromString("a-uuid"));
    assertNotNull(foo);
    assertEquals("value", foo.getProperty());
}

**Note:** This test assumes the existence of `MyPOJO`, `MyHashMap`, and `Foo` classes with the appropriate Jackson annotations and implementations. Adjust the test to fit the actual class structure and expected behavior.