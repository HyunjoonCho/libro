public void testWideBoundsToCMAESOptimizer() {
    double[] lowerBound = new double[]{-Double.MAX_VALUE};
    double[] upperBound = new double[]{Double.MAX_VALUE};
    CMAESOptimizer optimizer = new CMAESOptimizer(lowerBound, upperBound, 1);
    optimizer.setFitnessFunction(new FitnessFunction() {
        @Override
        public double evaluate(double... parameters) {
            // Test to see if parameters contain NaN
            for (double param : parameters) {
                assertFalse(Double.isNaN(param));
            }
            return 0.0; // Dummy fitness value
        }
    });
    optimizer.optimize();
}