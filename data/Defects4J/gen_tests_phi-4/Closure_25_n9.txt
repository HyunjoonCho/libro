public void testAnonymousObjectTypeInference() {
    @SuppressWarnings("unused")
    class Callz {
        private final String prop1;
        private final Integer prop2;

        /**
         * @param {{prop1: string, prop2: (number|undefined)}} parry
         * @constructor
         */
        Callz(Object parry) {
            this.prop1 = (String) ((Map<?,?>) parry).get("prop1");
            this.prop2 = ((Map<?,?>) parry).get("prop2") instanceof Integer? (Integer) ((Map<?,?>) parry).get("prop2") : null;
            if (this.prop2!= null && this.prop2 < 5) {
                throw new AssertionError("alright!");
            }
            throw new AssertionError(this.prop1);
        }
    }

    // This should compile but cause a type inference error as described
    try {
        new Callz(Map.of("prop1", "hi"));
        throw new AssertionError("Expected a type inference error");
    } catch (IllegalArgumentException e) {
        // Expected exception due to type inference issue
    }
}