public void testLargeIso8601Dates() {
    StdDateFormat formatter = new StdDateFormat();
    
    // Test with Long.MAX_VALUE
    try {
        String formattedMaxDate = formatter.format(new Date(Long.MAX_VALUE));
        Date parsedMaxDate = formatter.parse(formattedMaxDate);
        assertEquals(Long.MAX_VALUE, parsedMaxDate.getTime());
    } catch (ParseException e) {
        fail("Parsing failed for Long.MAX_VALUE: " + e.getMessage());
    }
    
    // Test with a year > 9999
    Calendar calendar = Calendar.getInstance();
    calendar.set(10000, Calendar.JANUARY, 1, 0, 0, 0);
    calendar.set(Calendar.ERA, Calendar.AD);
    Date largeYearDate = calendar.getTime();
    
    try {
        formatter.format(largeYearDate);
        fail("Expected an exception for year > 9999");
    } catch (IndexOutOfBoundsException e) {
        // Expected exception
    }
    
    // Test with a negative date
    calendar.set(-1, Calendar.JANUARY, 1, 0, 0, 0);
    calendar.set(Calendar.ERA, Calendar.BC);
    Date largeNegativeDate = calendar.getTime();