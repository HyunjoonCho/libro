import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.zip.Deflater;
import java.util.zip.DeflaterOutputStream;
import java.util.zip.InflaterInputStream;
import org.apache.commons.compress.compressors.CompressorException;
import org.apache.commons.compress.compressors.CompressorStreamFactory;
import org.junit.Assert;
import org.junit.Test;

public void testCompressorStreamFactoryZlibHeader() {
    try {
        byte[] header = {(byte) 0x78, (byte) 0x9c}; // zlib header
        byte[] data = "example data".getBytes();
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        try (DeflaterOutputStream dos = new DeflaterOutputStream(bos, new Deflater())) {
            dos.write(header); // add zlib header
            dos.write(data);
        }
        byte[] compressedData = bos.toByteArray();

        try (ByteArrayInputStream bais = new ByteArrayInputStream(compressedData)) {
            CompressorStreamFactory factory = new CompressorStreamFactory();
            factory.createCompressorInputStream(bais);
        }
        Assert.fail("Expected CompressorException for zlib header");
    } catch (CompressorException e) {
        Assert.assertTrue(e.getMessage().contains("No Compressor found for the stream signature."));
    } catch