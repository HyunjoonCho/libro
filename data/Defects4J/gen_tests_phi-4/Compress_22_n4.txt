public void testBZip2CompressorInputStreamReadsLessFromTruncated() throws IOException {
    // Create a sample compressed file using BZip2 compression
    String sampleData = "A" * 10000; // Repeat 'A' 10,000 times
    Path tempFile = Files.createTempFile("testBzip2", ".bz2");
    try (OutputStream os = new FileOutputStream(tempFile.toFile());
         BZ2CompressorOutputStream bzip2Out = new BZ2CompressorOutputStream(os)) {
        bzip2Out.write(sampleData.getBytes(StandardCharsets.UTF_8));
    }

    // Truncate the bz2 file to 769 bytes
    RandomAccessFile raf = new RandomAccessFile(tempFile.toFile(), "rw");
    raf.setLength(769);
    raf.close();

    // Attempt to read from the truncated file
    try (InputStream is = new BZip2CompressorInputStream(new FileInputStream(tempFile.toFile()))) {
        byte[] buffer = new byte[1024];
        int bytesRead = is.read(buffer);
        assertEquals(769, bytesRead); // Expected number of bytes read from the truncated file
    }
}