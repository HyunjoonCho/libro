public void testRawTypeWarning() {
    List rawList = new ArrayList();
    rawList.add("test");
    // This cast is unsafe and would typically cause a raw type warning
    List<String> safeList = rawList;
    safeList.add(123); // This would lead to a ClassCastException at runtime
    assertEquals("test", safeList.get(0));
}

In this test, `rawList` is a raw type, and assigning it to `safeList` without specifying the type parameter `<String>` is what typically triggers a raw type warning. The test demonstrates the unsafe casting that can lead to runtime errors. This is a common issue that static analysis tools or compilers would flag with a warning.