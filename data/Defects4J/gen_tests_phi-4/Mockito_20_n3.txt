public void testMockingAbstractClassesWithoutConvenientSpying() {
    // Attempt to mock an abstract class directly
    AccountRpcService service = mock(AccountRpcService.class);

    // This will fail because Mockito cannot handle abstract classes directly
    RpcContext context = mock(RpcContext.class);
    FutureAccount futureAccount = mock(FutureAccount.class);

    // The test should fail due to Mockito's inability to handle abstract classes
    when(service.getAccount(isA(RpcContext.class), eq("id"))).thenReturn(futureAccount);

    // Assert that the service behaves as expected, which it won't due to the limitation
    FutureAccount result = service.getAccount(context, "id");
    assertNotNull(result);
}

This test method attempts to mock the `AccountRpcService` abstract class directly, which should fail and demonstrate the limitation described in the bug report. The `when` clause will not work as expected because Mockito cannot handle abstract classes without additional support.