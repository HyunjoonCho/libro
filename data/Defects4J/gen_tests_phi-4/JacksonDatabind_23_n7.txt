public void testNonEmptyExclusion() {
    ObjectMapper mapper = new ObjectMapper();
    JsonInclude.Include include = JsonInclude.Include.NON_EMPTY;

    // Register the Afterburner module for optimized serialization/deserialization
    mapper.registerModule(new AfterburnerModule());

    // Test class with various fields
    class TestClass {
        public int number = 0;
        public String text = "";
        public String nonEmptyText = "non-empty";
    }

    TestClass testInstance = new TestClass();

    // Serialize with default ObjectMapper
    String jsonDefault = mapper.setSerializationInclusion(include).writeValueAsString(testInstance);
    assertTrue(jsonDefault.contains("\"nonEmptyText\":\"non-empty\""));
    assertFalse(jsonDefault.contains("\"number\":0"));
    assertFalse(jsonDefault.contains("\"text\":\"\""));

    // Serialize with Afterburner module
    String jsonAfterburner = mapper.setSerializationInclusion(include).writeValueAsString(testInstance);
    assertTrue(jsonAfterburner.contains("\"nonEmptyText\":\"non-empty\""));
    assertFalse(jsonAfterburner.contains("\"number\":0"));
    assertFalse(jsonAfterburner.contains("\"text\":\"\""));
}