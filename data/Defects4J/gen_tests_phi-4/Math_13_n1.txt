public void testLargeNumberOfWeights() {
    int largeNumber = 41200;
    double[] weights = new double[largeNumber];
    for (int i = 0; i < largeNumber; i++) {
        weights[i] = 1.0; // Assigning a default weight
    }
    
    // Assuming Weight is a class that takes a double array
    Weight weight = new Weight(weights);
    
    // Assuming MultivariateVectorOptimizer is the class with the issue
    try {
        MultivariateVectorOptimizer optimizer = new MultivariateVectorOptimizer(weight);
        optimizer.optimize(); // Assuming this method triggers the matrix creation
    } catch (OutOfMemoryError e) {
        // Expected failure due to excessive memory usage
        assertTrue(true);
    } catch (Exception e) {
        fail("Unexpected exception: " + e.getMessage());
    }
}