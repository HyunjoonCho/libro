public void testJsonAnyGetterWithJsonSerialize() throws Exception {
    ObjectMapper mapper = new ObjectMapper();

    class TestObject {
        @JsonSerialize(using = MySerializer.class)
        @JsonAnyGetter
        public Map<String, String> getParameters() {
            return Map.of("key", "value");
        }
    }

    TestObject testObject = new TestObject();
    String result = mapper.writeValueAsString(testObject);

    // Assuming MySerializer should have serialized the map in a specific way
    // Adjust the expected string based on what MySerializer is supposed to do
    assertEquals("{\"key\":\"value\"}", result);
}

This test checks if `@JsonSerialize` is ignored when used with `@JsonAnyGetter`. Adjust the expected string based on the behavior of `MySerializer`.