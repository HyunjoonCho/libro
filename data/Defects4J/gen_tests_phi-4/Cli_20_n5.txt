public void testPosixParserStopAtNonOption() {
    Options options = new Options();
    options.addOption("a", false, "option A");
    options.addOption("b", true, "option B");

    PosixParser parser = new PosixParser();
    try {
        parser.parse(options, new String[]{"--zop", "-abfoo"});
        fail("Expected ParseException for unrecognized option --zop");
    } catch (ParseException e) {
        // Expected exception due to unrecognized option --zop
    }

    try {
        parser.parse(options, new String[]{"-abfoo"});
        fail("Expected ParseException for unrecognized option --zop");
    } catch (ParseException e) {
        // Expected exception due to unrecognized option --zop
    }

    try {
        parser.parse(options, new String[]{"-ab", "foo"});
        Options parsedOptions = parser.getParsedOptions();
        assertEquals(1, parsedOptions.nonOptionArgs().size());
        assertEquals("foo", parsedOptions.nonOptionArgs().get(0));
    } catch (ParseException e) {
        fail("Unexpected ParseException: " + e.getMessage());
    }
}