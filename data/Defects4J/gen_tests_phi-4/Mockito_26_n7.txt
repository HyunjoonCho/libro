public void testInjectMocksWithFinalField() {
    class TestClass {
        private final SomeDependency finalField = new SomeDependency();

        public void doSomething() {
            finalField.performAction();
        }
    }

    TestClass testInstance = new TestClass();
    MockitoAnnotations.openMocks(testInstance); // Before 2.0.0-beta, this would inject mocks into final fields

    Mockito.when(testInstance.finalField.performAction()).thenReturn("mocked");

    assertEquals("mocked", testInstance.doSomething());
}

**Explanation:**
- The test method `testInjectMocksWithFinalField` is designed to reproduce the failure when using Mockito's `@InjectMocks` on a final field, which is not supported in Mockito 2.0.0 and later.
- The `TestClass` has a final field `finalField` of type `SomeDependency`.
- The test initializes `testInstance` and tries to mock `finalField` using `MockitoAnnotations.openMocks`, which used to inject mocks into final fields in versions before 2.0.0.
- The test then verifies that the mocked behavior is applied by checking the return value of `doSomething()`.