public void testMockitoAbstractClassLimitations() {
    // Example 1: Fake with trivial Logic
    FakeUserAccount userAccount = Mockito.mock(FakeUserAccount.class);
    userAccount.addEmail("test@example.com");
    assertEquals(Collections.singletonList("test@example.com"), userAccount.getEmails());

    // Example 2: Callback-style API
    MockAccountService service = Mockito.mock(MockAccountService.class);
    UserAccount mockAccount = Mockito.mock(UserAccount.class);
    when(service.getAccount("id")).thenReturn(mockAccount);

    AsyncCallback<UserAccount> callback = new AsyncCallback<UserAccount>() {
        @Override
        public void onFailure(Throwable caught) {
            fail("Callback should not fail");
        }

        @Override
        public void onSuccess(UserAccount result) {
            assertEquals(mockAccount, result);
        }
    };

    service.getAccount("id", callback);

    // Example 3: Uninteresting parameters
    MockAccountRpcService rpcService = Mockito.mock(MockAccountRpcService.class);
    FutureAccount futureAccount = Mockito.mock(FutureAccount.class);