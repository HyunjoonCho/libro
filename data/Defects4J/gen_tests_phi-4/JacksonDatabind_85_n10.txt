public void testDateTimeSerializerBaseIgnoresConfiguredDateFormat() {
    ObjectMapper mapper = new ObjectMapper();
    StdDateFormat dateFormat = new StdDateFormat();
    dateFormat.setPattern("yyyy-MM-dd");
    mapper.setDateFormat(dateFormat);

    JavaType type = mapper.constructType(ExampleClass.class);
    JsonSerializer<?> serializer = mapper.getSerializerInstance(type, null, null);

    ObjectNode node = mapper.createObjectNode();
    node.put("dateField", "2023-10-01");

    // Serialize using the custom date format
    String serialized = mapper.writeValueAsString(node);
    assertEquals("\"2023-10-01\"", serialized.replace("\"", ""));

    // Deserialize using the custom date format
    ExampleClass deserialized = mapper.readValue(serialized, ExampleClass.class);
    assertEquals("2023-10-01", deserialized.getDateField().toString());

    // Change the serializer to use ISO8601 format
    serializer = serializer.createContextual(mapper.getDeserializationConfig(), null);
    serialized = mapper.writeValueAsString(node);
    // Assert it defaults to ISO8601 format
    assertEquals("\"2023-10-01T00:00:00.000Z\"", serialized.replace("\"", ""));
}

class Example