public void testUnrecognizedFieldInBaseClass() throws IOException {
    ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.addMixIn(JsonMapSchema.class, JsonMapSchemaMixin.class);

    String json = "{ \"version\": \"1.0\", \"schemas\": [{ \"name\": \"FoodMart\", \"tables\": [{ \"name\": \"time_by_day\", \"columns\": [{ \"name\": \"time_id\" }] }, { \"name\": \"sales_fact_1997\", \"columns\": [{ \"name\": \"time_id\" }] }] }] }";

    try {
        objectMapper.readValue(json, JsonRoot.class);
        fail("Expected UnrecognizedPropertyException for field 'name' in base class");
    } catch (UnrecognizedPropertyException e) {
        assertEquals("Unrecognized field \"name\" (class org.apache.calcite.model.JsonMapSchema), not marked as ignorable", e.getMessage());
    }
}

// Mix-in to handle deserialization
abstract static class JsonMapSchemaMixin {
    @JsonDeserialize(using = JsonMapSchemaDeserializer.class)
    private static final Class<?> BASE_CLASS = JsonSchema.class;
}

// Custom deserializer to handle the base class field
static class JsonMapSchemaDeserializer extends JsonDeserializer<JsonMapSchema> {