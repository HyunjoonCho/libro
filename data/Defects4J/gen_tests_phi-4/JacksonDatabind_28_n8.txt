public void testDeserializationToObjectNodeField() throws Exception {
    ObjectMapper om = new ObjectMapper();

    ObjectNode object = new ObjectNode(JsonNodeFactory.instance);
    String json = om.writeValueAsString(object);

    // This deserialization works
    ObjectNode de1 = om.readValue(json, ObjectNode.class);

    // This deserialization fails
    try {
        MyValue de2 = om.readValue(json, MyValue.class);
    } catch (JsonMappingException e) {
        assertEquals("Can not deserialize instance of com.fasterxml.jackson.databind.node.ObjectNode out of END_OBJECT token", e.getMessage());
    }
}

// Helper classes needed for the test
public static class MyValue {
    private final ObjectNode object;

    @JsonCreator
    public MyValue(ObjectNode object) {
        this.object = object;
    }

    @JsonValue
    public ObjectNode getObject() {
        return object;
    }
}