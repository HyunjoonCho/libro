public void testUnboundedSolutionException() {
    int ENTITIES_COUNT = 15; // Set to 15 to reproduce the failure
    SimplexSolver solver = new SimplexSolver();
    // Setup the problem with ENTITIES_COUNT variables and constraints
    // Assuming createProblem is a method that sets up the problem
    Problem problem = createProblem(ENTITIES_COUNT);
    try {
        solver.solve(problem);
        fail("Expected UnboundedSolutionException was not thrown");
    } catch (UnboundedSolutionException e) {
        // Expected exception
    }
}

private Problem createProblem(int entitiesCount) {
    Problem problem = new Problem();
    // Define problem parameters based on the description
    // Add constraints and variables
    // This is a placeholder and should be implemented with actual logic
    return problem;
}

**Note:** The `createProblem` method is a placeholder and should be implemented with the actual logic to set up the problem based on the described constraints and variables. Adjust the setup according to the specifics of your `SimplexSolver` and `Problem` classes.