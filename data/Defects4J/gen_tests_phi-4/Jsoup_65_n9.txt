public void testParserErrorOnTemplateInsideTr() {
    String html = "<tr>"
                + "<th></th>"
                + "<th>Name</th>"
                + "<template is=\"dom-if\" if=\"{{smoothingEnabled}}\">"
                + "<th>Smoothed</th>"
                + "</template>"
                + "<th>Value</th>"
                + "<th>Step</th>"
                + "<th>Time</th>"
                + "<th>Relative</th>"
                + "</tr>";

    Document document = Jsoup.parse(html);
    
    // Assuming a method parseHtml that processes the HTML and throws errors
    try {
        parseHtml(document);
        fail("Expected an error parsing the <template> inside <tr>");
    } catch (ParserException e) {
        assertTrue(e.getMessage().contains("Unexpected token [StartTag] when in state [InTable]"));
        assertTrue(e.getMessage().contains("Unexpected token [EndTag] when in state [InTable]"));
        assertTrue(e.getMessage().contains("Unexpected token [EndTag] when in state [InBody]"));
    }
}

Note: This test assumes there is a `parseHtml` method that throws a `ParserException` when