public void testRecursiveTypeMissingProperties() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new SimpleModule().addSerializer(new JsonSerializer<Base>() {
        @Override
        public void serialize(Base value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
            gen.writeStartObject();
            gen.writeNumberField("base", value.base);
            gen.writeObjectField("sub", ((Sub) value));
            gen.writeEndObject();
        }
    }).addSerializer(new JsonSerializer<Sub>() {
        @Override
        public void serialize(Sub value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
            gen.writeStartObject();
            gen.writeNumberField("sub", value.sub);
            gen.writeEndObject();
        }
    }));

    Base baseInstance = new Base();
    Sub subInstance = new Sub();
    ((Base) subInstance).base = 1;
    String expectedJson = "{\"base\":1,\"sub\":{\"sub\":2}}";
    String actualJson = mapper.writeValueAsString(subInstance);
    assertEquals(expectedJson, actualJson);
}