import static org.junit.Assert.fail;

public void testAnonymousObjectTypeInferenceInconsistency() {
    // Assuming we have a custom logging mechanism for testing
    CustomConsole console = new CustomConsole();

    // Mock the console to capture output
    Window.console = console;

    // Define the functions as per the bug description
    Runnable func = () -> console.log("a");
    Runnable func2 = () -> {
        Object record = new Object();
        record.put("prop", "a"); // Simulating the object with a 'prop' key

        if (record instanceof String) {
            console.log(record);
        } else {
            console.log(record.get("prop"));
        }
    };

    // Call the functions
    try {
        func.run();
        func2.run();
    } catch (Exception e) {
        fail("Exception should not have been thrown: " + e.getMessage());
    }

    // Verify the output
    if (!console.getLogs().equals(Arrays.asList("a", "a"))) {
        fail("Expected logs to be ['a', 'a'], but got: " + console.getLogs());
    }
}

// Mock classes to simulate the behavior described in the bug report
class Window {
    static Custom