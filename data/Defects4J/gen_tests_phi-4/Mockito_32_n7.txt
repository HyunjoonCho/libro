public void testMockitoPackagePrivateClass() {
    // Arrange
    ParentClass parentMock = Mockito.mock(ParentClass.class);
    Mockito.when(parentMock.publicMethod()).thenReturn("mocked");

    // Act & Assert
    assertEquals("mocked", parentMock.publicMethod());
    
    // Attempt to mock the public child class that extends a package-private parent
    ChildClass childMock = Mockito.mock(ChildClass.class);
    Mockito.when(childMock.publicMethod()).thenReturn("childMocked");

    // Act & Assert
    assertEquals("childMocked", childMock.publicMethod());

    // Verify if the second creation throws an exception
    try {
        Mockito.mock(ChildClass.class);
        fail("Expected an exception to be thrown");
    } catch (Exception e) {
        assertTrue(e instanceof MockitoException);
    }
}

In this test, the first part checks that `ParentClass` can be mocked successfully, while the second part attempts to mock `ChildClass`, which extends a package-private class, and verifies the exception behavior.