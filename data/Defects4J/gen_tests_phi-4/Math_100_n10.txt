public void testCovariancesAndParameterErrors() {
    // Set up a problem with bound parameters
    ProblemDefinition problem = createProblemWithBoundParameters();
    
    AbstractEstimator estimator = new AbstractEstimator(problem) {
        @Override
        protected double[] computeResiduals(double[] parameters) {
            return new double[0];
        }
        
        @Override
        protected Matrix computeJacobian(double[] parameters) {
            return MatrixUtils.createRealMatrix(0, 0);
        }
    };

    // Intentionally use the incorrect getAllParameters() method to trigger the crash
    try {
        estimator.getCovariances();
        fail("Expected ArrayIndexOutOfBoundsException");
    } catch (ArrayIndexOutOfBoundsException e) {
        // Expected exception
    }

    try {
        estimator.guessParametersErrors();
        fail("Expected ArrayIndexOutOfBoundsException");
    } catch (ArrayIndexOutOfBoundsException e) {
        // Expected exception
    }
}

// Helper method to create a problem with bound parameters
private ProblemDefinition createProblemWithBoundParameters() {
    // Implementation to create a ProblemDefinition with bound parameters
    // This is a placeholder and should be replaced with actual logic
    return new ProblemDefinition() {
        @Override