public void testRemoveIgnoreCaseConcurrentModification() {
    LinkedHashMap<String, Attribute> attributes = new LinkedHashMap<>();
    attributes.put("attr1", new Attribute());
    attributes.put("attr2", new Attribute());

    Element element = mock(Element.class);
    when(element.select("abc")).thenReturn(Collections.singletonList(element));

    doAnswer(invocation -> {
        Map<String, Attribute> attrs = new LinkedHashMap<>();
        attrs.put("attr1", new Attribute());
        attrs.put("attr2", new Attribute());
        return attrs.entrySet().iterator();
    }).when(element).attributes();

    try {
        element.select("abc").get(0).removeAttr("attr1").removeAttr("attr2");
        fail("Expected ConcurrentModificationException");
    } catch (ConcurrentModificationException e) {
        // Expected exception
    }
}