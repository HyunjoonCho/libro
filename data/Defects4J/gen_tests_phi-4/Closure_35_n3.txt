import static org.junit.jupiter.api.Assertions.assertThrows;
import org.junit.jupiter.api.Test;

public class FunctionReturnTypeTest {

    public static class Results {
        public Object prop1;
        public String prop2;
        public String prop3;
    }

    public Results func(boolean a, boolean b) {
        Results results = null;
        if (a) {
            results = new Results();
            results.prop1 = new Object() {{ a = 3; }};
        }
        if (b) {
            if (results == null) {
                results = new Results();
            }
            results.prop2 = "prop2";
        } else {
            if (results == null) {
                results = new Results();
            }
            results.prop3 = "prop3";
        }
        return results;
    }

    @Test
    public void testAssignmentToObjectInConditional() {
        assertThrows(IllegalArgumentException.class, () -> {
            Results result = func(true, false);
        });
    }
}

This test method simulates the behavior described in the bug report, where the function `func` might return an inconsistent type based on the input conditions. The test checks for an exception to indicate the type mismatch, as the original description suggests a type