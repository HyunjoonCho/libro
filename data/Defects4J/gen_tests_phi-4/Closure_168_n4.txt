import org.junit.Test;
import static org.junit.Assert.fail;

public class PersonTest {

    @Test
    public void testAliasingWithoutErrorReporting() {
        try {
            Person person = new Person("John");
            person.say("Hello");
        } catch (Exception e) {
            fail("Expected no exception to be thrown, but got: " + e.getMessage());
        }
    }

    static class Person {
        private String name;

        public Person(String name) {
            this.name = name;
        }

        public String getName() {
            return name;
        }

        public void say(String message) {
            try {
                // This should fail when checked, but doesn't due to aliasing in setTimeout
                String result = getName(1);
                System.out.println(result + " says: " + message);
            } catch (Exception e) {
                throw new RuntimeException("Error in say method", e);
            }

            // Aliasing to simulate setTimeout behavior
            final Person self = this;
            new java.util.Timer().schedule(
                new java.util.TimerTask() {
                    @Override
                    public void run() {
                        try {
                            // This call should fail but it doesn't due to aliasing
                            String result =