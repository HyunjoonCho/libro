import static org.mockito.Mockito.*;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;
import org.mockito.Mockito;

public class AbstractClassMockingTest {

    @Test(expected = MockitoException.class)
    public void testMockingAbstractClass() {
        // Attempt to mock an abstract class directly
        UserAccount userAccount = mock(UserAccount.class);

        // Setup behavior for the mocked methods
        List<String> emails = new ArrayList<>();
        emails.add("test@example.com");

        when(userAccount.getEmails()).thenReturn(emails);
        doNothing().when(userAccount).addEmail(anyString());

        // Call the methods to trigger the behavior
        userAccount.getEmails();
        userAccount.addEmail("new@example.com");

        // Attempt to verify consistency, which is difficult without custom logic
        verify(userAccount).addEmail("new@example.com");
        verify(userAccount).getEmails();
    }

    interface UserAccount {
        List<String> getEmails();
        void addEmail