public void testBrentSolverIllegalArgumentException() {
    // Create a mock function with the specified behavior
    UnivariateRealFunction f = new UnivariateRealFunction() {
        @Override
        public double value(double x) {
            if (x == 0.0) {
                return 0.0;
            } else {
                return -101945.04630982173;
            }
        }
    };

    // Instantiate the BrentSolver
    BrentSolver solver = new BrentSolver(f, 1e-8, 100, 1e-10);

    // Attempt to solve the equation and expect an exception
    try {
        solver.solve(-100000.0, 1.7976931348623157E308);
        fail("Expected IllegalArgumentException to be thrown");
    } catch (IllegalArgumentException e) {
        assertEquals("Function values at endpoints do not have different signs. Endpoints: [-100000.0,1.7976931348623157E308] Values: [0.0,-101945.04630982173]", e.getMessage());
    }
}