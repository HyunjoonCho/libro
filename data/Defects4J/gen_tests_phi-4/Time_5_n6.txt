public void testPeriodTypeWithoutYearThrowsException() {
    DateTime startDate = new DateTime(2020, 1, 1, 0, 0);
    DateTime endDate = new DateTime(2020, 3, 1, 0, 0);

    try {
        PeriodType customPeriodType = PeriodType.forFields(new DurationFieldType[] { DurationFieldType.months(), DurationFieldType.weeks() });
        Period p = new Period(startDate.toDateTime(), endDate.toDateTime(), customPeriodType)
                       .normalizedStandard(customPeriodType);
        p.getMonths();
        fail("Expected UnsupportedOperationException to be thrown");
    } catch (UnsupportedOperationException e) {
        // Expected exception
    }

    // Testing with YearsRemoved, which should also throw exception
    try {
        Period p = new Period(startDate.toDateTime(), endDate.toDateTime(), PeriodType.standard().withYearsRemoved())
                       .normalizedStandard(PeriodType.standard().withYearsRemoved());
        p.getMonths();
        fail("Expected UnsupportedOperationException to be thrown");
    } catch (UnsupportedOperationException e) {
        // Expected exception
    }
}