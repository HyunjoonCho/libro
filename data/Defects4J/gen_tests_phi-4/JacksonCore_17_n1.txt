public void testJsonGenerationExceptionWithSurrogate() {
    char[] problematicInput = new char[65535]; // Maximum size for a single UTF-16 code unit
    for (int i = 0; i < problematicInput.length; i++) {
        problematicInput[i] = 'x';
    }
    problematicInput[problematicInput.length - 1] = '\uD800'; // High surrogate

    JsonFactory factory = new JsonFactory();
    StringWriter writer = new StringWriter();
    try (JsonGenerator gen = factory.createGenerator(writer)) {
        gen.writeStartObject();
        gen.writeStringField("key", new String(problematicInput));
        gen.writeEndObject();
    } catch (JsonGenerationException e) {
        assertEquals("Split surrogate on writeRaw() input (last character)", e.getMessage());
    }
}