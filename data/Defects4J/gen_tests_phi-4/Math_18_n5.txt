public void testCMAESOptimizerBoundsIssue() {
    double lowerBound = 0.0;
    double upperBound = 10.0;
    
    CMAESOptimizer optimizer = new CMAESOptimizer(1, new double[]{lowerBound, upperBound});
    double[] result = optimizer.optimize(() -> {
        double x = optimizer.getParameters()[0];
        // Example objective function that is sensitive to precision
        return Math.pow(x - 5, 2);
    });

    // Assuming the result is close to 5, check precision near lower and upper bounds
    double lowerBoundResult = optimizer.unmapParameters(0.0001);
    double upperBoundResult = optimizer.unmapParameters(0.9999);

    // Adjust these values based on expected precision
    assertNotEquals(lowerBoundResult, lowerBound, 1e-10); // Fine resolution check near lower bound
    assertEquals(upperBoundResult, upperBound, 1e-3); // Coarse resolution check near upper bound
}