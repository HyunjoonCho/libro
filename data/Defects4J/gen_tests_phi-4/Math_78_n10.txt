public void testEventDetectionNearStepBoundary() {
    double startTime = 67.5;
    double endTime = 112.5;
    double event1Time = 90.0;
    double event2Time = 135.0;
    double tolerance = 1e-8;

    // Mock solver behavior
    double firstEventDetected = detectEvent(startTime, endTime);
    if (Math.abs(firstEventDetected - event1Time) < tolerance) {
        startTime = firstEventDetected;
    }

    double secondEventDetected = detectEvent(startTime, endTime);
    assertEquals(event2Time, secondEventDetected, tolerance);
}

private double detectEvent(double start, double end) {
    // Mock implementation of the event detection logic
    double midpoint = (start + end) / 2.0;
    if (midpoint > 89.9999999 && midpoint < 90.0) {
        return midpoint; // Simulating detection just before 90.0
    }
    if (midpoint > 89.9999999 && midpoint < 135.0) {
        return 90.0; // Simulating detection at 90.0
    }
    if (midpoint