public void testTextNodeSelector() {
    // Assuming we have a method selectNodes that takes a CSS-like selector
    // and returns a list of nodes, and a method isTextNode that checks if a node is a text node

    // Sample HTML structure
    String html = "<div><span>First</span> Text Node <span>Second</span></div>";

    // Parse the HTML into a document
    Document document = Jsoup.parse(html);

    // Select the span and then the sibling text node
    Element firstSpan = document.select("div > span").first();
    List<Node> siblings = firstSpan.siblingNodes();

    boolean textNodeFound = false;
    for (Node sibling : siblings) {
        if (isTextNode(sibling)) {
            textNodeFound = true;
            assertEquals("Text Node", sibling.text());
            break;
        }
    }

    // Assert that the text node was found
    assertTrue("Text node should be found as a sibling of the first span", textNodeFound);
}

// Helper method to check if a node is a text node
private boolean isTextNode(Node node) {
    return node instanceof Text;
}