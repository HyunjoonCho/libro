public void testPosixParserInterruption() {
    Options options = new Options();
    Option generateTarget = new Option("t", "target", true, "Generate files for the specified target machine");
    options.addOption(generateTarget);

    PosixParser parser = new PosixParser();
    try {
        CommandLine parsedLine = parser.parse(options, new String[]{"-target", "foobar.com"});
        assertEquals("foobar.com", parsedLine.getOptionValue("t"));
    } catch (ParseException e) {
        fail("ParseException was thrown but not expected: " + e.getMessage());
    }
    assertEquals("foobar.com", parsedLine.getOptionValue("t"));

    try {
        CommandLine parsedLineError = parser.parse(options, new String[]{"-target", "foobar.com"});
        assertEquals("arget", parsedLineError.getOptionValue("t"));
    } catch (ParseException e) {
        fail("ParseException was thrown but not expected: " + e.getMessage());
    }
}