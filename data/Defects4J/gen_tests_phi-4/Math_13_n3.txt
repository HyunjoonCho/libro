public void testLargeNumberWeights() {
    int largeNumberOfPoints = 41200;
    double[] weightsArray = new double[largeNumberOfPoints];
    Arrays.fill(weightsArray, 1.0); // Assign weights (or any other logic)
    Weights weights = new Weights(weightsArray);
    
    PolynomialCurveFitter fitter = PolynomialCurveFitter.create(2); // Example: quadratic fitting
    RealVector[] x = new RealVector[largeNumberOfPoints];
    RealVector y = new RealVector(largeNumberOfPoints);
    
    // Initialize x and y with some data
    for (int i = 0; i < largeNumberOfPoints; i++) {
        x[i] = new ArrayRealVector(new double[]{(double)i, Math.random()});
        y.setEntry(i, Math.random());
    }
    
    try {
        fitter.withWeights(weights).fit(x, y);
        fail("Expected OutOfMemoryError due to large matrix allocation");
    } catch (OutOfMemoryError e) {
        // Expected behavior
    }
}