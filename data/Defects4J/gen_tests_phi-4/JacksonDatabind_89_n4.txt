import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator;
import com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.IOException;

public void testCVE201715095() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    PolymorphicTypeValidator ptv = BasicPolymorphicTypeValidator.builder()
       .allowIfBaseType("com.fasterxml.jackson.databind.ObjectMapper")
       .build();

    // Attempting to deserialize a potentially dangerous type
    String json = "{\"@class\":\"java.util.HashSet\"}";
    HashSet<Object> result = mapper.readValue(json, new TypeReference<HashSet<Object>>() {});
    
    // Expecting a deserialization exception due to blocked type
    assertThrows(IOException.class, () -> {
        mapper.readerFor(new TypeReference<HashSet<Object>>() {})
           .with(ptv)
           .readValue(json);
    });
}