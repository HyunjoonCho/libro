public void testInjectMocksWithFinalFields() {
    final SomeClass finalField = new SomeClass();
    MockitoAnnotations.initMocks(this);

    // Assuming SomeClass has a dependency that should be mocked
    SomeDependency mockDependency = Mockito.mock(SomeDependency.class);
    Mockito.when(mockDependency.someMethod()).thenReturn("Mocked Response");

    // InjectMocks should inject the mockDependency into finalField
    finalField.setDependency(mockDependency);

    assertEquals("Mocked Response", finalField.getDependency().someMethod());
}

// Supporting class for testing
final class SomeClass {
    private final SomeDependency dependency;

    @InjectMocks
    SomeClass() {
        this.dependency = Mockito.mock(SomeDependency.class);
    }

    public SomeDependency getDependency() {
        return dependency;
    }

    public void setDependency(SomeDependency dependency) {
        this.dependency = dependency;
    }
}

// Dependency class
class SomeDependency {
    public String someMethod() {
        return "Original Response";
    }
}