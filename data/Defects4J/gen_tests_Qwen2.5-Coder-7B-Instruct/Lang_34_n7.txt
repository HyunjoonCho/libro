public void testThreadLocalMemoryLeak() throws Exception {
    int initialSize = Runtime.getRuntime().freeMemory();
    for (int i = 0; i < 1000; ++i) {
        ToStringBuilder.reflectionToString(new Object(), new CustomToStringStyle());
    }
    Thread.sleep(5000); // Give some time for the memory leak to occur
    long finalSize = Runtime.getRuntime().freeMemory();
    assertTrue(finalSize < initialSize); // Memory usage should decrease
}

private static class CustomToStringStyle extends ToStringStyle {
    public CustomToStringStyle() {
        super.setUseShortClassName(true);
    }
}