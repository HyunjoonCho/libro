public void testTooLargeFirstStep() {
    double[] y0 = {1.0};
    double t0 = 0.0;
    double tf = 1e-6;
    double[] f0 = {-y0[0]};
    
    DormandPrince853Integrator integrator = new DormandPrince853Integrator();
    integrator.setInitialStepSize(1e-3);
    
    try {
        integrator.integrate(new FirstOrderDifferentialEquations() {
            @Override
            public int getDimension() {
                return 1;
            }

            @Override
            public double[] computeDerivatives(double t, double[] y) {
                return f0;
            }
        }, t0, y0, tf, y0);
        fail("Expected an exception to be thrown due to too large initial step size.");
    } catch (MaxCountExceededException e) {
        // Expected exception
    }
}