public void testJSCompilerTypedefResolution() throws Exception {
    String jsCode = 
        "goog.provide('a.b.c');\n" +
        "\n" +
        "goog.scope(function() {\n" +
        "  var b = a.b;\n" +
        "  var c = b.c;\n" +
        "\n" +
        "  /** @typedef {string} */\n" +
        "  c.MyType;\n" +
        "\n" +
        "  /** @param {c.MyType} x The variable. */\n" +
        "  c.myFunc = function(x) {}\n" +
        "});";

    JsErrorManager errorManager = new JsErrorManager();
    JsAstRoot astRoot = parseAndCheck(jsCode, errorManager);

    assertTrue(errorManager.hasErrors());
    assertEquals(1, errorManager.getErrorCount());

    JsError error = errorManager.getFirstError();
    assertEquals(JsErrorCode.TYPE_UNKNOWN, error.getCode());
    assertEquals("'MyType'", error.getMessage().trim());
}