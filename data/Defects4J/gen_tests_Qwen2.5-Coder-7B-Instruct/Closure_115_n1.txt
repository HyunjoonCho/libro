public void testAdvancedOptimizations() throws Exception {
    String inputJS = 
        "window['anchor'] = function (obj, modifiesProp) {"
      + " return (function (saved) {"
      + " return modifiesProp(obj) + saved;"
      + " })(obj['prop']);"
      + "}";
    
    String expectedJS =
        "window.foo = function(a, b) { var HOLD = a.prop; return b(a) + HOLD; }";
    
    String actualJS = compileWithOptimizationLevel(inputJS, CompilationLevel.ADVANCED_OPTIMIZATIONS);
    
    assertEquals(expectedJS, actualJS);
}

private String compileWithOptimizationLevel(String jsCode, CompilationLevel level) throws Exception {
    Compiler compiler = new Compiler();
    compiler.initLogging(null);
    compiler.setWarningLevel(DiagnosticType.WARNING, DiagnosticGroups.ALL_DIAGNOSTICS, CheckLevel.ERROR);
    compiler.setErrorLevel(DiagnosticType.ERROR, DiagnosticGroups.ALL_DIAGNOSTICS, CheckLevel.ERROR);

    CompilerInput input = CompilerInput.fromContent("input.js", jsCode);
    compiler.addInput(input);

    Result result = compiler.compile(new CompilerOptions(), null, null);
    if (!result.success) {
        throw