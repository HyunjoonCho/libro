public void testProcessClosurePrimitives() throws Exception {
    // Set up the compiler options
    CompilerOptions options = new CompilerOptions();
    options.setProcessClosurePrimitives(false);

    // Compile a file with the options set
    Compiler compiler = new Compiler();
    compiler.compile(new String[] { "testfile.js" }, null, null, options);

    // Check that the goog.provide/require tags were not processed
    Node root = compiler.getRootScope().getRootNode();
    boolean foundProvide = false;
    boolean foundRequire = false;
    for (Node n : root.children()) {
        if ("goog.provide".equals(n.getString())) {
            foundProvide = true;
        } else if ("goog.require".equals(n.getString())) {
            foundRequire = true;
        }
    }
    assertFalse("goog.provide tag was processed", foundProvide);
    assertFalse("goog.require tag was processed", foundRequire);

    // Reset the options to the default
    options.setProcessClosurePrimitives(true);

    // Compile another file with the default options
    compiler.compile(new String[] { "testfile.js" }, null, null, options);

    // Check that the goog.provide/require tags were processed
    root = compiler