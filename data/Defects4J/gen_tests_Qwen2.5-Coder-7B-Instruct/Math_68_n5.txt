public void testLevenbergMarquardtOptimizer() throws Exception {
    double[] target = {1.0, 2.0};
    double[] initial = {0.5, 1.5};
    MultivariateFunction f = new MultivariateFunction() {
        public double value(double[] point) {
            return Math.pow(point[0] - 1.0, 2) + Math.pow(point[1] - 2.0, 2);
        }
    };
    VectorialConvergenceChecker checker = new SimpleVectorialConvergenceChecker<>(1e-6, 1e-6);
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    optimizer.setConvergenceChecker(checker);
    PointValuePair result = optimizer.optimize(new LevenbergMarquardtOptimizer.LevenbergMarquardtProblem(f, target),
                                             new InitialGuess(initial));
    assertArrayEquals(target, result.getPoint().toArray(), 1e-5);
}