public void testMultivariateVectorOptimizersWithLargeWeights() {
    int numberOfWeights = 41200;
    Weight[] weights = new Weight[numberOfWeights];
    for (int i = 0; i < numberOfWeights; i++) {
        weights[i] = new Weight();
    }
    
    // Create a multivariate vector optimizer
    MultivariateVectorOptimizer optimizer = new Simple PowellOptimizer();

    // Try to optimize with the large number of weights
    double[] initialGuess = new double[numberOfWeights];
    double[] target = new double[numberOfWeights];
    try {
        optimizer.optimize(new MaxEval(1000), 
                          new ObjectiveFunction((double[] point) -> 0),
                          GoalType.MINIMIZE,
                          new InitialGuess(initialGuess),
                          new LinearConstraintMatrix(),
                          new NonNegativeConstraint(numberOfWeights));
        fail("Expected OutOfMemoryError to be thrown");
    } catch (OutOfMemoryError e) {
        // Expected exception
    }
}