public void testJsonAdapterAnnotationIgnoredForPrimitives() {
    Gson gson = new GsonBuilder().registerTypeAdapter(int.class, new IntToStringTypeAdapter()).create();
    MyClass obj = new MyClass(123);
    String json = gson.toJson(obj);
    assertEquals("{\"value\":[\"123\"]}", json);
}

private static class MyClass {
    @JsonAdapter(IntToStringTypeAdapter.class)
    int value;

    MyClass(int value) { this.value = value; }
}

private static class IntToStringTypeAdapter extends TypeAdapter<Integer> {
    @Override
    public void write(JsonWriter out, Integer value) throws IOException {
        out.value(value.toString());
    }

    @Override
    public Integer read(JsonReader in) throws IOException {
        return in.nextInt();
    }
}