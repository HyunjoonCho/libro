public void testFinishMethod() throws IOException {
    ArchiveOutputStream aos = mock(ArchiveOutputStream.class);
    try (ArchiveOutputStream out = new ArchiveOutputStreamWrapper(aos)) {
        // Perform some operations on the archive output stream
    }
    verify(aos).close();
    verify(aos, never()).finish();
}

private static class ArchiveOutputStreamWrapper extends ArchiveOutputStream {
    private final ArchiveOutputStream delegate;

    public ArchiveOutputStreamWrapper(ArchiveOutputStream delegate) {
        this.delegate = delegate;
    }

    @Override
    public void putArchiveEntry(ArchiveEntry entry) throws IOException {
        delegate.putArchiveEntry(entry);
    }

    @Override
    public void write(byte[] b, int off, int len) throws IOException {
        delegate.write(b, off, len);
    }

    @Override
    public void closeArchiveEntry() throws IOException {
        delegate.closeArchiveEntry();
    }

    @Override
    public void finish() throws IOException {
        throw new UnsupportedOperationException("finish() method should not be called externally");
    }

    @Override
    public void close() throws IOException {
        delegate.finish();
        delegate.close();
    }
}