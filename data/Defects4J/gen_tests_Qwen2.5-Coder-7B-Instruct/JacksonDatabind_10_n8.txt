public void testJsonAnyGetterWithJsonSerialize() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    
    MyClass obj = new MyClass();
    obj.parameters.put("key", "value");

    String json = mapper.writeValueAsString(obj);

    assertEquals("{\"parameters\":{\"key\":\"value\"}}", json);
}

class MyClass {
    private Map<String, String> parameters = new HashMap<>();

    @JsonSerialize(converter = MyConverter.class)
    @JsonAnyGetter
    public Map<String, String> getParameters() {
        return parameters;
    }
}

class MyConverter extends JsonSerializer<Map<String, String>> {
    @Override
    public void serialize(Map<String, String> value, JsonGenerator gen, SerializerProvider serializers) 
            throws IOException {
        gen.writeObject(value);
    }
}