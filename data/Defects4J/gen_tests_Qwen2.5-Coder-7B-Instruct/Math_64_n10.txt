public void testInconsistentResultFromLevenbergMarquardt() throws Exception {
    // Arrange
    double[] start = { 0.5 };
    NonLinearConjugateGradientOptimizer optimizer = new NonLinearConjugateGradientOptimizer(
            NonLinearConjugateGradientOptimizer.Formula.POLAK_RIBIERE);
    SimpleValueChecker checker = new SimpleValueChecker(1e-6, 1e-6);

    // Act
    PointValuePair result = optimizer.optimize(checker, GoalType.MINIMIZE,
            new MockUnivariateObjectiveFunction(), new InitialGuess(start));

    // Assert
    double expected = -0.5;
    double actual = result.getPoint()[0];
    assertEquals(expected, actual, 1e-6);
}