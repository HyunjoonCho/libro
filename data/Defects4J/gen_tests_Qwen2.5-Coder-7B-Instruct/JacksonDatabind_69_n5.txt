import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.ObjectMapper;

public class TestJackson {

    public static class Pojo {
        private final int intValue;
        private final String stringValue;

        public Pojo(@JsonProperty("intValue") int intValue) {
            this.intValue = intValue;
            this.stringValue = null;
        }

        public Pojo(@JsonProperty("stringValue") String stringValue) {
            this.stringValue = stringValue;
            this.intValue = -1;
        }

        @JsonCreator
        public Pojo(@JsonProperty("intValue") int intValue, @JsonProperty("stringValue") String stringValue) {
            this.intValue = intValue;
            this.stringValue = stringValue;
        }

        public int getIntValue() {
            return intValue;
        }

        public String getStringValue() {
            return stringValue;
        }
    }

    @org.junit.Test
    public void testJackson() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        Pojo pojo = mapper.readValue("{\"intValue\": 1, \"stringValue\": \"foo\"}", Pojo.class);
        assertEquals(1, pojo.getIntValue());
        assertEquals("foo", pojo.getStringValue());
    }
}