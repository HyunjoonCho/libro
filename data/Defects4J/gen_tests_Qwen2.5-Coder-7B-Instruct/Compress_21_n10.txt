import org.junit.Test;
import net.sf.sevenzipjbinding.IInArchive;
import net.sf.sevenzipjbinding.SevenZip;
import net.sf.sevenzipjbinding.impl.RandomAccessFileInStream;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import static org.junit.Assert.assertTrue;

public class SevenZipTest {

    @Test(expected = IOException.class)
    public void testEmptyEntries() throws Exception {
        Path tempDir = Files.createTempDirectory("test");
        try {
            for (int i = 0; i < 8; i++) {
                Path filePath = tempDir.resolve("file" + i + ".txt");
                Files.createFile(filePath);
            }

            File archiveFile = new File(tempDir.toFile(), "archive.7z");
            try (FileOutputStream fos = new FileOutputStream(archiveFile)) {
                SevenZip.compressFiles(fos, null, new String[]{tempDir.toString()});
            }

            try (RandomAccessFileInStream randomAccessFileInStream = new RandomAccessFileInStream(archiveFile)) {
                IInArchive inArchive = SevenZip.openInArchive(null