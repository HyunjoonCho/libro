public void testAllowMultipleMatchesNotUtilized() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(String.class, new JsonSerializer<String>() {
        @Override
        public void serialize(String value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
            gen.writeStartArray();
            for (char c : value.toCharArray()) {
                gen.writeString(Character.toString(c));
            }
            gen.writeEndArray();
        }
    });
    module.setMixInAnnotation(SimpleBean.class, FilteringParserDelegate.class);
    mapper.registerModule(module);

    SimpleBean bean = new SimpleBean();
    bean.setValue("test");

    String json = mapper.writeValueAsString(bean);
    assertEquals("[\"t\",\"e\",\"s\",\"t\"]", json);
}

class SimpleBean {
    private String value;

    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }
}