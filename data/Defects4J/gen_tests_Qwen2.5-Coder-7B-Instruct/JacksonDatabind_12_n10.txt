import static org.junit.Assert.*;

import java.io.IOException;
import java.util.Map;

import org.junit.Test;

import com.fasterxml.jackson.databind.ObjectMapper;

public class DeserializeTest {

    @Test(expected=IOException.class)
    public void testCustomDeserializerOverwrite() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        String json = "{\"map1\":{\"a\":1},\"map2\":{\"a\":1}}";

        mapper.readValue(json, TestBean.class);
    }

    public static class TestBean {

        @JsonDeserialize(contentUsing = CustomDeserializer.class)
        private Map<String, Integer> map1;

        private Map<String, Integer> map2;

        // Getters and setters...
    }

    public static class CustomDeserializer extends StdDeserializer<Integer> {

        public CustomDeserializer() {
            super(Integer.class);
        }

        @Override
        public Integer deserialize(JsonParser p, DeserializationContext ctxt) 
                throws IOException, JsonProcessingException {
            Integer value = p.getValueAsInt();
            return value * 100;
        }
    }
}