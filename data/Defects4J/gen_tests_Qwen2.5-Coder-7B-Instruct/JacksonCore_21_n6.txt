public void testFilteringParserDelegateMissesLastClosingEndObject() throws Exception {
    String json = "{ \"a\":123, \"array\":[1,2], \"ob\": { \"value0\":2, \"value\":3, \"value2\":4 }, \"b\":true }";
    JsonFactory f = new JsonFactory();
    JsonParser p0 = f.createParser(json);
    FilteringParserDelegate p = new FilteringParserDelegate(p0,
            new NameMatchFilter("value"), 
            true, // includePath
            false // multipleMatches
    );

    List<String> expectedPaths = Arrays.asList("/ob/value", "/ob/value2");
    List<String> actualPaths = new ArrayList<>();

    while (p.nextToken()!= null) {
        JsonToken token = p.currentToken();
        if (token == JsonToken.START_OBJECT || token == JsonToken.END_OBJECT) {
            String path = p.getCurrentName();
            if (path!= null &&!path.isEmpty()) {
                actualPaths.add(path);
            }
        }
    }

    assertEquals(expectedPaths, actualPaths);
}