public void testCMAESOptimizerBounds() throws Exception {
    double[] initialPoint = { 5.0 };
    double[] lowerBound = { 0.0 };
    double[] upperBound = { 10.0 };

    Problem<Vector> problem = new AbstractRealVectorProblem() {
        @Override
        public int getDimension() {
            return 1;
        }

        @Override
        public Vector evaluate(Vector point) {
            return point;
        }
    };

    CMAESOptimizer optimizer = new CMAESOptimizer();
    optimizer.setLowerBound(lowerBound);
    optimizer.setUpperBound(upperBound);

    PointValuePair result = optimizer.optimize(problem, new InitialGuess(initialPoint));

    assertTrue(result.getPoint().getEntry(0) >= 0.0);
    assertTrue(result.getPoint().getEntry(0) <= 10.0);
}