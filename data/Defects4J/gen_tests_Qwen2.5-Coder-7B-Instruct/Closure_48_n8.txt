import static org.mockito.Mockito.*;
import org.junit.Test;
import org.mockito.Mockito;

public class MyClassTest {

    @Test(expected = NullPointerException.class)
    public void testFunctionReplacementError() {
        MyClass myClass = new MyClass();
        myClass.fn(true); // This call works fine

        // Replace fn with a stub
        doNothing().when(myClass).fn(anyBoolean());

        // Call the replaced function
        myClass.fn(); // This should cause a NullPointerException because myClass.fn() now returns null
    }
}

class MyClass {
    public void fn(boolean success) {
        if (!success) {
            throw new IllegalArgumentException("Success must be true");
        }
    }
}

In this test, we replace the `fn` method with a stub that doesn't perform any action. When we then call `myClass.fn()` without passing a boolean argument, it results in a `NullPointerException`. The `expected` annotation ensures that the test fails as expected.