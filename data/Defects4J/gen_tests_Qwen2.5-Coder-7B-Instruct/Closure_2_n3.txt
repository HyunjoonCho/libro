public void testCombiningInterfaceAndMultipleExtendsCrash() {
    String jsCode = 
        "/**\n" +
        "* @interface\n" +
        "* @extends {Object}\n" +
        "* @extends {Object}\n" +
        "*/\n" +
        "function Foo() {}\n";
    
    CompilerOptions options = new CompilerOptions();
    options.setCodingConvention(new JsDocCodingConvention());

    Compiler compiler = new Compiler();
    compiler.init(
        ImmutableList.<SourceFile>of(SourceFile.fromCode("test.js", jsCode)),
        ImmutableSet.<String>of(),
        options);

    try {
        compiler.parseInputs();
        compiler.checkTypes();
        fail("Expected NullPointerException");
    } catch (NullPointerException e) {
        // Expected exception
    }
}