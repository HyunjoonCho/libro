public void testClosureCompilerDefineAnnotation() throws Exception {
    String input = "/** @define {string} */\n" +
                   "var CONSTANT = \"some very long string name that I want to wrap \" +\n" +
                   " \"and so break using a + since I don't want to \" +\n" +
                   " \"introduce a newline into the string.\";";
    List<String> expectedOutput = Arrays.asList(
        "/** @define {string} */",
        "var CONSTANT = \"some very long string name that I want to wrap \" +",
        " \"and so break using a + since I don't want to \" +",
        " \"introduce a newline into the string.\";");
    Compiler compiler = new Compiler();
    compiler.init(new Options(), null, null);
    compiler.compile(SourceFile.fromCode("test.js", input), null, null);
    List<SourceFile> jsRoots = Collections.singletonList(SourceFile.fromCode("test.js", input));
    List<SourceFile> externs = Collections.emptyList();
    List<SourceFile> additionalExterns = Collections.emptyList();
    compiler.compile(externs, additionalExterns, jsRoots);
    Node root = compiler.getRootScope