import static org.junit.Assert.assertEquals;

public class ClosureCompilerTest {

    @Test
    public void testFunctionArgumentsOptimization() {
        String input = 
            "function foo(bar, baz) { return bar; }" +
            "alert(foo.length);" +
            "function foo(bar, baz) { return bar; }" +
            "alert(foo.length);";

        String expectedOutput = 
            "2\n" +
            "1\n";

        String actualOutput = compile(input);

        assertEquals(expectedOutput, actualOutput);
    }

    private String compile(String input) {
        // Use the Closure Compiler API to compile the input and return the output
        // This is a simplified example and would require actual implementation details
        return input.replaceFirst("function foo\\(bar, baz\\) { return bar; }", "function foo(a,b){return a}");
    }
}