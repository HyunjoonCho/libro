public void testSuperNotReplaced() {
    // Arrange
    Compiler compiler = mock(Compiler.class);
    CodingConvention convention = mock(CodingConvention.class);
    when(convention.isExported("$super")).thenReturn(false);
    when(compiler.getCodingConvention()).thenReturn(convention);

    MakeDeclaredNamesUnique makeDeclaredNamesUnique = new MakeDeclaredNamesUnique();
    makeDeclaredNamesUnique.setCompiler(compiler);

    Node tree = parse("function MyClass() { this.$super(); }");

    // Act
    makeDeclaredNamesUnique.process(tree, null);

    // Assert
    assertTrue(tree.toStringTree().contains("$super"));
}