public void testInheritanceNotDetected() {
  // This will cause the warning
  window['SubClassInstance'] = new (function() {
    function SubClass() {}
    SubClass.prototype = new SuperClass();
    return SubClass;
  })();
  
  // This will not cause the warning
  inherit(window['SubClassInstance'], SuperClass);
  
  // Additional assertions to verify the state of the instance
  assertNotNull(window['SubClassInstance']);
  assertTrue(window['SubClassInstance'] instanceof SuperClass);
  assertTrue(window['SubClassInstance'] instanceof SubClass);
  assertEquals("value", window['SubClassInstance'].myProperty);
}

private static native void inherit(Object child, Object parent) /*-{
  child.prototype = new parent();
}-*/;