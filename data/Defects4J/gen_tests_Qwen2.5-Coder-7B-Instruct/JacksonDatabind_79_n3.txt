public void testReallyAlwaysAsId() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.setSerializerModifier(new BeanSerializerModifier() {
        @Override
        public JsonSerializer<?> modifySerializer(SerializationConfig config, BeanDescription beanDesc,
                JsonSerializer<?> serializer) {
            if (beanDesc.getBeanClass().equals(ReallyAlwaysAsId.class)) {
                return new JsonSerializer<ReallyAlwaysAsId>() {
                    @Override
                    public void serialize(ReallyAlwaysAsId value, JsonGenerator gen, SerializerProvider serializers) 
                            throws IOException {
                        gen.writeStartObject();
                        gen.writeObjectField("value", value.value);
                        gen.writeEndObject();
                    }
                };
            }
            return serializer;
        }
    });
    mapper.registerModule(module);

    String json = mapper.writeValueAsString(new ReallyAlwaysContainer());
    assertEquals("{\"a\":{\"value\":13},\"b\":{\"value\":13}}", json);
}