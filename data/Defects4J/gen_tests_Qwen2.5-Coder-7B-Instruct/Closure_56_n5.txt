public void testLastWarningOrErrorTruncated() throws Exception {
    File inputFile = new File("test.js");
    PrintWriter writer = new PrintWriter(inputFile);
    writer.println("alert(foo);");
    writer.println("alert(bar);");
    writer.close();

    Process process = Runtime.getRuntime().exec("java -jar compiler.jar --warning_level VERBOSE --js " + inputFile.getAbsolutePath());
    BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
    String line;
    StringBuilder output = new StringBuilder();
    while ((line = reader.readLine())!= null) {
        output.append(line).append("\n");
    }
    int exitCode = process.waitFor();

    assertTrue(output.toString().contains("variable foo is undefined"));
    assertTrue(output.toString().contains("variable bar is undefined"));
    assertFalse(output.toString().contains("^")); // caret indicating error position should not be truncated
}