public void testTryCatchBlockCompilation() throws Exception {
    String source = 
        "function a() {\n" +
        "  var x = '1';\n" +
        "  try {\n" +
        "    x += somefunction();\n" +
        "  } catch(e) {\n" +
        "  }\n" +
        "  x += \"2\";\n" +
        "  try {\n" +
        "    x += somefunction();\n" +
        "  } catch(e) {\n" +
        "  }\n" +
        "  document.write(x);\n" +
        "}\n" +
        "\na();\n" +
        "a();";

    String expectedOutput = "1212";
    String actualOutput = compileAndExecute(source);

    assertEquals(expectedOutput, actualOutput);
}

private String compileAndExecute(String source) throws Exception {
    // Use the Closure Compiler API to compile the source code
    SourceFile input = SourceFile.fromCode("source.js", source);
    Compiler compiler = new Compiler();
    compiler.initOptions(new Options());
    compiler.compile(input, null, null);
    Node root = compiler.getRoot();