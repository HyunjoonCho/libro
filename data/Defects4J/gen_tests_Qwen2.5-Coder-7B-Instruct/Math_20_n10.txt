public void testCMAESOptimizerBounds() {
    double[] lowerBound = {0.0};
    double[] upperBound = {1.0};
    Problem<Vector> problem = new AbstractRealVectorProblem<Vector>() {
        public Vector evaluate(Vector point) {
            return point;
        }
        public int getDimension() {
            return 1;
        }
    };
    CMAESOptimizer optimizer = new CMAESOptimizer();
    optimizer.setLowerBound(lowerBound);
    optimizer.setUpperBound(upperBound);
    PointValuePair result = optimizer.optimize(new MaxEval(1000), problem, GoalType.MINIMIZE, new ArrayRealVector(new double[]{2.0}));
    assertTrue(result.getValue().getEntry(0) >= 0.0 && result.getValue().getEntry(0) <= 1.0);
}