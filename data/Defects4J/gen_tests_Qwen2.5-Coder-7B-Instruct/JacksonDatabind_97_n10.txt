import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.module.SimpleModule;
import org.junit.BeforeClass;
import org.junit.Test;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class TestCustomSerializer {

    private static final ObjectMapper mapper = new ObjectMapper();

    @BeforeClass
    public static void setUp() {
        SimpleModule module = new SimpleModule();
        module.addSerializer(new TestCase.Data(), new TestCase.CustomSer());
        mapper.registerModule(module);
        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
    }

    @Test
    public void testCustomSerializerInMap() throws IOException {
        TestCase.Data data = new TestCase.Data();
        data.aStr = "Hello";

        Map<String, Object> mapTest = new HashMap<>();
        mapTest.put("data", data);

        String mapOut = mapper.writerWithDefaultPrettyPrinter()
               .withAttribute("myAttr", "Hello!")
               .writeValueAsString(mapTest);

        String expectedMapOut = "{\"data\":{\"aStr\":\"The value is: Hello!\"}}";
        assertEquals(expectedMapOut, mapOut.trim());
    }

    @Test
    public void