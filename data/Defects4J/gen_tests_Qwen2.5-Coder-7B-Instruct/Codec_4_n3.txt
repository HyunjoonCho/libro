import org.apache.commons.codec.binary.Base64;

import java.io.UnsupportedEncodingException;

public class TestBase64 {

    @Test
    public void testEncodeWithCRLF() throws UnsupportedEncodingException {
        String input = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
        byte[] encodedBytes = new Base64().encode(input.getBytes("UTF-8"));
        String encodedString = new String(encodedBytes, "UTF-8");
        
        // Check for CRLF at the end
        assertTrue(encodedString.endsWith("\r\n"));
        
        // Check chunk size
        String[] chunks = encodedString.split("\r\n");
        for (String chunk : chunks) {
            assertEquals(76, chunk.length());
        }
    }

    @Test
    public void testEncodeWithoutCRLF() throws UnsupportedEncodingException {
        String input = "aaaaaaaaaa";
        byte[] encodedBytes = new Base64(false).encode(input.getBytes("UTF-8")); // false disables line wrapping
        String encodedString = new String(encodedBytes, "UTF-8");
        
        // Check for absence of CRLF
        assertFalse(encodedString.endsWith("\r\n"));
        
        // Check chunk size (should be single chunk)
        String[] chunks =