public void testEbeMultiplyNaNInfinity() {
    RealVector vectorWithNaN = new ArrayRealVector(new double[]{Double.NaN, 2.0});
    RealVector vectorWithInfinity = new ArrayRealVector(new double[]{Double.POSITIVE_INFINITY, 2.0});

    OpenMapRealVector openMapVectorWithNaN = new OpenMapRealVector(vectorWithNaN.toArray());
    OpenMapRealVector openMapVectorWithInfinity = new OpenMapRealVector(vectorWithInfinity.toArray());

    RealVector resultWithNaN = openMapVectorWithNaN.ebeMultiply(vectorWithNaN);
    RealVector resultWithInfinity = openMapVectorWithInfinity.ebeMultiply(vectorWithInfinity);

    assertTrue(Double.isNaN(resultWithNaN.getEntry(0)));
    assertEquals(4.0, resultWithNaN.getEntry(1));

    assertTrue(Double.isInfinite(resultWithInfinity.getEntry(0)));
    assertEquals(4.0, resultWithInfinity.getEntry(1));
}

public void testEbeDivideNaNInfinity() {
    RealVector vectorWithNaN = new ArrayRealVector(new double[]{Double.NaN, 2.0});
    RealVector vectorWithInfinity = new ArrayRealVector(new double[]{Double.POSITIVE_INFINITY, 2.0});

    OpenMap