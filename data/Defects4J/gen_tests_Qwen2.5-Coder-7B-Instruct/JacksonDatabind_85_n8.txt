public void testDateTimeSerializerBase() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(Date.class, new CustomDateSerializer());
    mapper.registerModule(module);

    Date date = new SimpleDateFormat("yyyy-MM-dd").parse("2022-01-01");
    MyClass obj = new MyClass(date);

    String json = mapper.writeValueAsString(obj);
    assertEquals("{\"date\":\"2022-01-01\"}", json);
}

class CustomDateSerializer extends JsonSerializer<Date> {
    @Override
    public void serialize(Date value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        gen.writeString(value.toString()); // This uses the default ISO8601 format
    }
}

class MyClass {
    private Date date;

    public MyClass(Date date) {
        this.date = date;
    }

    public Date getDate() {
        return date;
    }

    public void setDate(Date date) {
        this.date = date;
    }
}