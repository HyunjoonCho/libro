public void testObjectIdRegression() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(MyObject.class, new JsonSerializer<MyObject>() {
        @Override
        public void serialize(MyObject value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
            gen.writeStartObject();
            gen.writeObjectField("value", value.getValue());
            gen.writeEndObject();
        }
    });
    module.setSerializerInclusion(JsonInclude.Include.CUSTOM);
    module.setSerializationInclusion(JsonInclude.Include.NON_NULL);
    mapper.registerModule(module);

    MyObject obj = new MyObject(42);
    String json = mapper.writeValueAsString(obj);
    assertEquals("{\"value\":42}", json);
}

class MyObject {
    private int value;

    public MyObject(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }
}