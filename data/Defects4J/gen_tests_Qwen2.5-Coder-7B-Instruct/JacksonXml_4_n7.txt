public void testXmlSerializerProvider() throws Exception {
    ObjectMapper mapper = new XmlMapper();
    SimpleModule module = new SimpleModule();
    module.setSerializerModifier(new BeanSerializerModifier() {
        @Override
        public JsonSerializer<?> modifyNullSerializer(SerializationConfig config,
                JsonSerializer<Object> serializer) {
            return new JsonSerializer<Object>() {
                @Override
                public void serialize(Object value, JsonGenerator gen, SerializerProvider serializers)
                        throws IOException {
                    gen.writeStartObject();
                    gen.writeStringField("custom", "null-value");
                    gen.writeEndObject();
                }
            };
        }
    });
    mapper.registerModule(module);

    MyBean bean = new MyBean(null);
    String xml = mapper.writeValueAsString(bean);
    assertTrue(xml.contains("<custom>null-value</custom>"));
}

class MyBean {
    private final Object field;

    public MyBean(Object field) {
        this.field = field;
    }

    public Object getField() {
        return field;
    }
}