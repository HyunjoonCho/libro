import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;
import org.junit.Test;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class TestCustomEnumDeserializer {

    @Test(expected = IOException.class)
    public void testCustomEnumDeserializerFailsWithoutTypeInfo() throws IOException {
        String json = "{\"someMap\": {\"FOO\": \"bar\"}}";
        ObjectMapper mapper = new ObjectMapper();
        SimpleModule module = new SimpleModule();
        module.addDeserializer(MyEnum.class, new JsonDeserializer<MyEnum>() {
            @Override
            public MyEnum deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
                return MyEnum.valueOf(p.getText());
            }
        });
        mapper.registerModule(module);

        MyContainer container = mapper.readValue(json, MyContainer.class);
    }

    static class MyContainer {
        private Map<MyEnum, String> someMap;

        // getters and setters
    }

    static enum MyEnum {
        FOO
    }
}