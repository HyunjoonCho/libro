import static org.junit.Assert.*;

import java.io.IOException;
import java.util.Map;

import org.junit.Before;
import org.junit.Test;

import com.fasterxml.jackson.databind.ObjectMapper;

public class DeserializeTest {

    private ObjectMapper mapper;

    @Before
    public void setUp() {
        mapper = new ObjectMapper();
    }

    @Test(expected = IllegalArgumentException.class)
    public void testCustomDeserializerOverwrite() throws IOException {
        String json = "{\"map1\":{\"a\":1},\"map2\":{\"a\":1}}";
        mapper.readValue(json, TestBean.class);
    }

    public static class TestBean {

        @JsonDeserialize(contentUsing = CustomDeserializer.class)
        Map<String, Integer> map1;

        Map<String, Integer> map2;

        // Getters and setters omitted for brevity
    }

    public static class CustomDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer<Integer> {

        @Override
        public Integer deserialize(com.fasterxml.jackson.core.JsonParser p, com.fasterxml.jackson.databind.DeserializationContext ctxt) 
                throws IOException, com.fasterxml.jackson.core.JsonProcessingException {
            Integer value = p.getValueAsInt();
            return value * 100;
        }
    }
}