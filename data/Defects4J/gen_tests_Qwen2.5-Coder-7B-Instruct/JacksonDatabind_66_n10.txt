import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
import com.fasterxml.jackson.databind.module.SimpleModule;
import org.junit.Test;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class TestCustomEnumKeyDeserializer {

    @Test
    public void testCustomEnumKeyDeserializer() throws IOException {
        String json = "{\"map\":{\"FOO\":\"value\"}}";

        ObjectMapper mapper = new ObjectMapper();
        SimpleModule module = new SimpleModule();
        module.addKeyDeserializer(SuperTypeEnum.class, new StdKeyDeserializer<>(SuperTypeEnum.class) {
            @Override
            protected Object _deserialize(String key, DeserializationContext ctxt) throws IOException {
                return SuperTypeEnum.valueOf(key);
            }
        });
        mapper.registerModule(module);

        Map<SuperTypeEnum, String> map = mapper.readValue(json, new TypeReference<Map<SuperTypeEnum, String>>() {});

        assertEquals("Value for key FOO should be 'value'", "value", map.get(SuperTypeEnum.FOO));
    }
}