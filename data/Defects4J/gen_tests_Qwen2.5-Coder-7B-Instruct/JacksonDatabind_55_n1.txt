public void testEnumMapKeysNotUsingJsonPropertyValues() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    EnumMap<MyEnum, String> map = new EnumMap<>(MyEnum.class);
    map.put(MyEnum.VALUE_1, "value1");
    map.put(MyEnum.VALUE_2, "value2");

    String json = mapper.writeValueAsString(map);

    // Verify that the JSON keys are using the original enum names
    assertTrue(json.contains("\"" + MyEnum.VALUE_1.name() + "\""));
    assertTrue(json.contains("\"" + MyEnum.VALUE_2.name() + "\""));

    // Verify that the JSON values are using the @JsonProperty annotated values
    assertTrue(json.contains("\"value1\""));
    assertTrue(json.contains("\"value2\""));
}

enum MyEnum {
    @JsonProperty("VALUE_1")
    VALUE_1,
    @JsonProperty("VALUE_2")
    VALUE_2;
}