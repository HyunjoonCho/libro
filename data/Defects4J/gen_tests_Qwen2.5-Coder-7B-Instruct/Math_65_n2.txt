public void testWeightVersusSigma() {
    double[] residuals = {1.0, 2.0, 3.0};
    double[] weights = {0.5, 1.0, 2.0};
    
    LeastSquaresProblem problem = mock(LeastSquaresProblem.class);
    when(problem.getResiduals()).thenReturn(residuals);
    when(problem.getObservationMatrix()).thenReturn(new RealMatrixImpl(new double[][]{{1}, {1}, {1}}));
    when(problem.getJacobian()).thenReturn(new RealMatrixImpl(new double[][]{{1}, {1}, {1}}));
    when(problem.getInitialGuess()).thenReturn(new double[]{0});
    when(problem.getTarget()).thenReturn(new double[]{0});
    
    AbstractLeastSquares solver = new AbstractLeastSquares(problem) {
        @Override
        protected double[] solveInternal(double[] target, double[] weights) throws NonLinearConvergenceException {
            return new double[0];
        }
    };
    
    solver.setObservationWeights(weights);
    
    double rms = solver.getRMS();
    double chiSquare = solver.getChiSquare();
    
    assertEquals(rms * rms * 0.5 + rms * rms * 1.