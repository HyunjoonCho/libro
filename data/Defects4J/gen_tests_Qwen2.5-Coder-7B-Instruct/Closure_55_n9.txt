public void testGetterException() throws Exception {
    String js = 
      "var o = { get name() { return 'test'; } }; "
      + "o.name();";

    Compiler compiler = new Compiler();
    compiler.init();
    compiler.addExterns(JSDocInfoParser.JSDOC_INFO_FACTORY.createExterns());
    compiler.setOptionsForTest(new CompilerOptions());
    compiler.addInput("test", js);
    try {
      compiler.check();
      fail("Expected RuntimeException");
    } catch (RuntimeException e) {
      assertTrue(e.getCause() instanceof IllegalStateException);
      assertEquals("Expected function but was call Reference node CALL 128 [free_call: 1] [source_file: test]",
                   e.getMessage());
    }
}