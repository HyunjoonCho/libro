import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.rhino.jstype.JSTypeRegistry;

import java.util.List;

public class TestNoWarningsWhenPrivatePropRedeclaredOnSubclass {

    public void testIssue() throws Exception {
        Compiler compiler = new Compiler();
        CompilerOptions options = new CompilerOptions();
        options.setJsErrorLevel(JSError.Level.ERROR);

        String source1 =
                "/** @constructor */\n" +
                "function Foo() {\n" +
                "  /** @private */\n" +
                "  this.x_ = 3;\n" +
                "}\n";

        String source2 =
                "/** @constructor\n" +
                " * @extends {Foo}\n" +
                " */\n" +
                "function SubFoo() {\n" +
                "  /** @private */\n" +
                "  this.x_ = 3;\n" +
                "}\n";

        compiler.compile(source1, source2, null);

        List<JSError> errors = compiler.getErrors();
        assertTrue("Expected at least one error",!errors