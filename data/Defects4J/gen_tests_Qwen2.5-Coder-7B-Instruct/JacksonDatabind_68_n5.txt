public void testAcceptSingleValueAsArrayBroken() throws IOException {
    String json = "[{\"message\":\"messageHere\"}]";
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);

    try {
        mapper.readValue(json, A.class);
        fail("Expected InputMismatchException");
    } catch (InputMismatchException e) {
        // Expected exception
    }
}

static class A {
    List<B> bs = Collections.emptyList();

    @JsonCreator
    A(final List<B> bs) {
        this.bs = bs;
    }
}

static class B {
    List<C> cs = Collections.emptyList();

    @JsonCreator
    B(final List<C> cs) {
        this.cs = cs;
    }
}

static class C {
    String message;

    @JsonCreator
    C(@JsonProperty("message") String message) {
        this.message = message;
    }
}