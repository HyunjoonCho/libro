public void testDateTimeSerializerBase() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(Date.class, new CustomDateSerializer());
    mapper.registerModule(module);

    MyObject obj = new MyObject(new Date());

    String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(obj);
    System.out.println(json);

    // Add assertions based on expected output
    assertTrue(json.contains("\"date\":\"2023-04-14T12:34:56.789Z\""));
}

class CustomDateSerializer extends JsonSerializer<Date> {
    @Override
    public void serialize(Date value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
        sdf.setTimeZone(TimeZone.getTimeZone("UTC"));
        gen.writeString(sdf.format(value));
    }
}

class MyObject {
    private Date date;

    public MyObject(Date date) {
        this.date = date;
    }

    public Date getDate() {
        return date;
    }
}