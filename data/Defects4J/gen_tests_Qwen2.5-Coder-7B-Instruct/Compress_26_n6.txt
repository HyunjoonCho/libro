public void testIOUtilsSkip() throws IOException {
    InputStream is = new ByteArrayInputStream(new byte[1024]);
    is = new CipherInputStream(is, new Cipher() {
        @Override
        public int doFinal(byte[] input, int offset, int len) throws IllegalBlockSizeException, BadPaddingException {
            return 0;
        }
        @Override
        public int update(byte[] input, int offset, int len) throws IllegalBlockSizeException, BadPaddingException {
            return len;
        }
        @Override
        public Object getParameters() {
            return null;
        }
        @Override
        public AlgorithmParameters getAlgorithmParameters() {
            return null;
        }
        @Override
        public String getAlgorithm() {
            return "AES";
        }
        @Override
        protected void engineInit(int opmode, Key key, SecureRandom random) throws InvalidKeyException {
        }
        @Override
        protected void engineInit(int opmode, Key key, AlgorithmParameterSpec params, SecureRandom random)
                throws InvalidKeyException, InvalidAlgorithmParameterException {
        }
        @Override
        protected void engineInit(int opmode, Key key, AlgorithmParameters params, SecureRandom random)
                throws InvalidKeyException, Invalid