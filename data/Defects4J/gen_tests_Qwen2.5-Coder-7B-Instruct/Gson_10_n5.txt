public void testPrimitiveFieldAnnotationIgnoredForPrimitiveTypes() {
    Gson gson = new GsonBuilder().registerTypeAdapter(Integer.class, new IntegerToStringTypeAdapter()).create();
    String json = gson.toJson(new PrimitiveFieldClass(42));
    assertEquals("{\"primitive\":42}", json);
    PrimitiveFieldClass obj = gson.fromJson(json, PrimitiveFieldClass.class);
    assertEquals(42, obj.primitive);
}

private static class PrimitiveFieldClass {
    @JsonAdapter(IntegerToStringTypeAdapter.class)
    int primitive;

    PrimitiveFieldClass(int primitive) {
        this.primitive = primitive;
    }
}

private static class IntegerToStringTypeAdapter extends TypeAdapter<Integer> {
    @Override
    public void write(JsonWriter out, Integer value) throws IOException {
        out.value(value.toString());
    }

    @Override
    public Integer read(JsonReader in) throws IOException {
        return in.nextInt();
    }
}