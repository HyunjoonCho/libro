public void testThisTypedefWarning() {
    // Arrange
    String jsCode = "goog.provide('bug');\n" +
                    "/**\n" +
                    "* @this {bug.Thing}\n" +
                    "*/\n" +
                    "bug.sharedMethod = function() {};\n" +
                    "\n" +
                    "/**\n" +
                    "* @constructor\n" +
                    "*/\n" +
                    "bug.A = function() {};\n" +
                    "\n" +
                    "/**\n" +
                    "* @constructor\n" +
                    "*/\n" +
                    "bug.B = function() {};\n" +
                    "\n" +
                    "/**\n" +
                    "* @type {bug.A|bug.B}\n" +
                    "*/\n" +
                    "bug.Thing = goog.typedef;";

    // Act & Assert
    Compiler compiler = new Compiler();
    DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<>();
    compiler.compile(
        ImmutableList.of(new SimpleJavaFileObject("bug.java", Kind.SOURCE) {
            @Override
            public CharSequence getCharContent(boolean ignoreEncodingErrors) {
                return