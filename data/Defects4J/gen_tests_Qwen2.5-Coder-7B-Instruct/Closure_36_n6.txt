public void testAddSingletonGetter() {
  String input = 
      "goog.provide('foo');"
    + "var foo = function() { this.values = []; };"
    + "goog.addSingletonGetter(foo);"
    + ""
    + "foo.prototype.add = function(value) {this.values.push(value)};";
  String expectedOutput = "";
  String actualOutput = compile(input);
  assertEquals(expectedOutput, actualOutput);
}

private String compile(String input) {
  Compiler compiler = new Compiler();
  compiler.initLogging(System.err);
  JSSourceFile externs = JSSourceFile.fromCode("externs", "");
  JSSourceFile jsSrcs = JSSourceFile.fromCode("source", input);
  CompilerOptions options = new CompilerOptions();
  CodeGenerator generator = CodeGenerator.builder()
     .setCodingConvention(new ClosureCodingConvention())
     .build();
  Result result = compiler.compile(externs, jsSrcs, options);
  if (result.success) {
    return generator.toSource(compiler.getAstRoot(jsSrcs));
  } else {
    throw new RuntimeException("Compilation failed");
  }
}