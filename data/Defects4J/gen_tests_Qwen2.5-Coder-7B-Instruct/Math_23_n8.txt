public void testBrentOptimizer() {
    BrentOptimizer optimizer = new BrentOptimizer();
    UnivariateFunction function = new UnivariateFunction() {
        @Override
        public double value(double x) {
            return Math.sin(x) + Math.cos(x);
        }
    };
    PointValuePair result = optimizer.optimize(100, function, GoalType.MINIMIZE, 0, 2 * Math.PI);
    double[] points = {0, Math.PI / 4, Math.PI / 2, 3 * Math.PI / 4, Math.PI, 5 * Math.PI / 4, 3 * Math.PI / 2, 7 * Math.PI / 4};
    double min = Double.MAX_VALUE;
    for (double point : points) {
        if (function.value(point) < min) {
            min = function.value(point);
        }
    }
    assertTrue(function.value(result.getPoint()) <= min);
}