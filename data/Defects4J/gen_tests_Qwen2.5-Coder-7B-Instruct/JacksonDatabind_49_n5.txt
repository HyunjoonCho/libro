import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.ObjectMapper;

public class ObjectIdTest {

    public static class Foo {

        @JsonIdentityReference(alwaysAsId = true)
        public Bar bar1;

        @JsonIdentityReference()
        public Bar bar2;
    }

    @JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class)
    public static class Bar {

    }

    public static void main(String[] args) throws Exception {
        ObjectMapper mapper = new ObjectMapper();

        // create structure to serialize
        Foo mo = new Foo();
        mo.bar1 = new Bar();
        mo.bar2 = mo.bar1;

        // serialize it
        System.out.println(mapper.writeValueAsString(mo));
    }

}

// Test case to reproduce the issue
import org.junit.Test;
import static org.junit.Assert.*;

public class ObjectIdTestJUnit {

    @Test(expected = RuntimeException.class)
    public void testForwardReferences() throws Exception {
        ObjectMapper mapper = new ObjectMapper();

        // create structure to serialize
        ObjectIdTest.Foo mo = new ObjectIdTest.Foo();
        mo.bar1 = new ObjectIdTest.Bar();
        mo.bar2 = mo