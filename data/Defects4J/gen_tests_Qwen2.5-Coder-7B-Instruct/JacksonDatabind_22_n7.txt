public void testCustomSerializerNotUsedWithJsonValue() {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(MyPojo.class, new MyPojoSerializer());
    mapper.registerModule(module);

    String json = mapper.writeValueAsString(new MyPojo());
    assertTrue(json.contains("custom_serialized_value"));
}

class MyPojo {
    private final int id;

    public MyPojo(int id) {
        this.id = id;
    }

    @JsonValue
    public String toJsonValue() {
        return "default_serialized_value";
    }
}

class MyPojoSerializer extends JsonSerializer<MyPojo> {
    @Override
    public void serialize(MyPojo value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        gen.writeString("custom_serialized_value");
    }
}