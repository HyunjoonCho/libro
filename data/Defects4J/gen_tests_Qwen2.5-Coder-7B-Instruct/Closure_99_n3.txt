public void testPrototypesWithQuotes() throws Exception {
  String jsCode =
      "/** @constructor */\n" +
      "function MyClass() {}\n" +
      "MyClass.prototype[\"MyMethod\"] = function(a) {\n" +
      "  this.a = a;\n" +
      "}\n" +
      "window[\"MyClass\"] = MyClass;\n";

  Compiler compiler = new Compiler();
  compiler.initLogger(new NullLogHandler());
  compiler.setOptionsForTest("-Werror", "-Xlint:all");

  JSSourceFile externs = JSSourceFile.fromCode("externs.js",
      "/** @interface */\n" +
      "function MyParent() {}\n" +
      "/** @param {*} a */\n" +
      "MyParent.prototype.MyMethod = function(a) {}");
  JSSourceFile source = JSSourceFile.fromCode("source.js", jsCode);

  compiler.compile(List.of(externs, source));

  assertTrue(compiler.hasErrors());
  assertTrue(compiler.hasWarnings());

  List<Diagnostic<?>> diagnostics = compiler.getDiagnostics();
  boolean foundUsedGlobalThisWarning = false;
  boolean foundUnimplementedPropertyWarning = false;