public void testImplicitNamespaces() throws Exception {
  StringBuilder builder = new StringBuilder();
  builder.append("goog.provide('apps');\n");
  builder.append("goog.provide('apps.foo.bar.B');\n");
  builder.append("goog.provide('apps.foo.bar.C');\n");

  String jsCode = builder.toString();

  Compiler compiler = new Compiler();
  compiler.compile(new JSCodingConvention(), null, new SourceFile("test.js", jsCode));

  List<CompilerInput> inputs = compiler.getInputsInOrder();
  assertEquals(3, inputs.size());

  String input1 = inputs.get(0).getCode();
  assertTrue(input1.contains("var apps={}"));

  String input2 = inputs.get(1).getCode();
  assertTrue(input2.contains("apps.foo.bar={}"));

  String input3 = inputs.get(2).getCode();
  assertTrue(input3.contains("apps.foo.bar.B={}"));

  // Check for correct order of assignments
  assertTrue(input1.contains("apps={}");
  assertTrue(input2.contains("apps.foo.bar={}"));
  assertTrue(input3.contains("apps.foo.bar.B={}"));

  // Check for missing assignments
  assertFalse(input1.contains("apps.foo={}"));
  assertFalse(input3.contains("apps