public void testDependencySortingWithClosurePassFalse() {
    Compiler compiler = new Compiler();
    CompilerOptions options = new CompilerOptions();
    options.setClosurePass(false);

    DependencyOptions depOptions = new DependencyOptions();
    depOptions.setDependencySorting(true);
    options.setDependencyOptions(depOptions);

    SourceFile externs = SourceFile.fromCode("externs.js", "");
    SourceFile input = SourceFile.fromCode("input.js", "goog.provide('foo');\n" +
        "goog.require('bar');\n" +
        "function foo() {}\n");

    List<SourceFile> inputs = Lists.newArrayList(input);
    compiler.compile(externs, inputs, options);

    assertTrue(compiler.hasErrors());
    assertTrue(compiler.hasWarnings());

    String expectedOutput =
        "/**\n" +
        "* @fileoverview\n" +
        "* @suppress {checkTypes}\n" +
        "*/\n" +
        "\n" +
        "goog.provide('bar');\n" +
        "goog.provide('foo');\n" +
        "\n" +
        "function foo() {}\n";

    assertEquals(expectedOutput, compiler.toSource());
}