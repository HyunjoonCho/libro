public void testCMAESOptimizerWithBounds() throws Exception {
    double[] initialGuess = {0.5};
    double[] lowerBound = {0.0};
    double[] upperBound = {1.0};

    Problem problem = new Problem() {
        @Override
        public int getDimension() {
            return 1;
        }

        @Override
        public double evaluate(double[] variables) {
            return Math.pow(variables[0] - 0.6, 2);
        }
    };

    CMAESOptimizer optimizer = new CMAESOptimizer();
    optimizer.setLowerBound(lowerBound);
    optimizer.setUpperBound(upperBound);

    PointValuePair result = optimizer.optimize(problem, GoalType.MINIMIZE, new InitialGuess(initialGuess));

    assertTrue(result.getValue() < 1e-10);
}