public void testCMAESOptimizerWithBounds() throws Exception {
    double[] initialGuess = {1.5};
    double[] min = {0.0};
    double[] max = {2.0};

    Problem problem = new AbstractOptimizationProblem<DoubleVector>() {
        @Override
        public Double evaluate(DoubleVector solution) {
            return Math.pow(solution.get(0) - 1.5, 2);
        }

        @Override
        public int getDimension() {
            return 1;
        }
    };

    CMAESOptimizer optimizer = new CMAESOptimizer();
    optimizer.setLowerBound(min);
    optimizer.setUpperBound(max);

    PointValuePair result = optimizer.optimize(problem, GoalType.MINIMIZE, new InitialGuess(initialGuess));

    assertEquals(1.5, result.getPoint().get(0), 1e-6);
}