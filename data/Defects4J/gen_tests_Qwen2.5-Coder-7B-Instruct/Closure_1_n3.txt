public void testFunctionArgumentOptimization() {
    String input = "function foo(bar, baz) { return bar; } alert(foo.length);";
    String expectedOutput = "function foo(a,b){return a}alert(foo.length)";
    // Run the Closure Compiler with SIMPLE_OPTIMIZATIONS level
    String actualOutput = compileWithLevel(input, CompilationLevel.SIMPLE_OPTIMIZATIONS);
    assertEquals(expectedOutput, actualOutput);
}

private String compileWithLevel(String input, CompilationLevel level) {
    Compiler compiler = new Compiler();
    compiler.initLogger(new NullErrorReporter());
    compiler.setOptionsForCompilationLevel(level);
    Result result = compiler.compile(SourceFile.fromCode("test", input), SourceFile.fromCode("out", ""), null);
    if (!result.success) {
        fail("Compilation failed: " + compiler.toSource());
    }
    return compiler.toSource();
}