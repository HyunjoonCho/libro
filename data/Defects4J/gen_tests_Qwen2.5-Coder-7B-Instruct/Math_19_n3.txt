public void testCMAESOptimizerBounds() {
    double[] lowerBound = new double[] { -Double.MAX_VALUE };
    double[] upperBound = new double[] { Double.MAX_VALUE };

    CMAESOptimizer optimizer = new CMAESOptimizer();
    optimizer.setLowerBound(lowerBound);
    optimizer.setUpperBound(upperBound);

    double[] initialGuess = new double[] { 0.0 };
    double[] result = optimizer.optimize(initialGuess, new FitnessFunction() {
        @Override
        public double evaluate(double[] parameters) {
            return parameters[0];
        }
    });

    assertFalse(Double.isNaN(result[0]));
}