public void testTooLargeFirstStep() {
    // Assuming some setup for the integrator and the differential equation
    double[] y0 = { /* initial conditions */ };
    double t0 = 0.0;
    double tf = 1e-16; // Extremely short integration range

    // Create the integrator and set up the problem
    Integrator integrator = new DormandPrince853Integrator();
    integrator.setInitialStepSize(tf / 1e10); // Very small initial step size

    // Attempt to integrate
    try {
        integrator.integrate(new FirstOrderDifferentialEquations() {
            @Override
            public int getDimension() {
                return y0.length;
            }

            @Override
            public double[] computeDerivatives(double t, double[] y) {
                // Differential equations implementation
                return new double[y0.length];
            }
        }, t0, y0, tf, new double[y0.length]);
        fail("Expected an exception due to too large first step");
    } catch (MaxCountExceededException | StepSizeControlException e) {
        // Expected exceptions due to step size issues
    }
}