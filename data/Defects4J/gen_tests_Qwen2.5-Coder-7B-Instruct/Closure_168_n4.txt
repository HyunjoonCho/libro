public void testAliasFunctionErrorNotCaught() throws Exception {
    String jsTest1 = readFile("test2-1.js");
    String jsTest2 = readFile("test2-2.js");

    // Test with original function call
    CompilerOptions options = getCompilerOptions();
    List<Diagnostic> diagnostics = compile(options, jsTest1);
    assertTrue(diagnostics.size() == 1);

    // Test with aliased function call inside setTimeout
    diagnostics = compile(options, jsTest2);
    assertTrue(diagnostics.isEmpty());
}

private String readFile(String filename) throws IOException {
    Path path = Paths.get(filename);
    byte[] bytes = Files.readAllBytes(path);
    return new String(bytes, StandardCharsets.UTF_8);
}

private CompilerOptions getCompilerOptions() {
    CompilerOptions options = new CompilerOptions();
    options.setWarningLevel(DiagnosticKind.ERROR);
    options.setLanguageIn(LanguageMode.ECMASCRIPT6_STRICT);
    options.setLanguageOut(LanguageMode.ECMASCRIPT5);
    options.setOptimizationLevel(OptimizeLevel.ADVANCED);
    options.setCheckAccessControls(true);
    options.setCheckTypes(true);
    options.setCheckVars(true);
    options.setUseStrict(true);
    return options;
}