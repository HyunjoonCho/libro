public void testBrentOptimizer() throws Exception {
    BrentOptimizer optimizer = new BrentOptimizer();
    UnivariateFunction function = x -> Math.sin(x) + Math.cos(x);
    double min = optimizer.optimize(new MaxEval(1000),
                                   new TwiceDifferentiableUnivariateFunctionAdapter(function),
                                   GoalType.MINIMIZE,
                                   0, Math.PI).getPoint();
    double[] points = optimizer.getPoints();
    double bestValue = Double.POSITIVE_INFINITY;
    double bestPoint = 0;
    for (double point : points) {
        double value = function.value(point);
        if (value < bestValue) {
            bestValue = value;
            bestPoint = point;
        }
    }
    assertEquals(bestPoint, min, 1e-6);
}