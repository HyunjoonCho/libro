import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.util.StdDateFormat;

import java.text.ParseException;
import java.util.Date;

public class TestLargeISO8601Dates {

    @Test(expected = IndexOutOfBoundsException.class)
    public void testLargeDateSerialization() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);
        mapper.setDateFormat(new StdDateFormat());

        Date maxDate = new Date(Long.MAX_VALUE);
        String json = mapper.writeValueAsString(maxDate);
    }

    @Test(expected = IndexOutOfBoundsException.class)
    public void testNegativeDateSerialization() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);
        mapper.setDateFormat(new StdDateFormat());

        Date minDate = new Date(Long.MIN_VALUE);
        String json = mapper.writeValueAsString(minDate);
    }

    @Test(expected = ParseException.class)
    public void testLargeDateParsing() throws Exception {
        StdDateFormat formatter = new StdDateFormat();
        formatter.parse("9999999999999999999999999999999