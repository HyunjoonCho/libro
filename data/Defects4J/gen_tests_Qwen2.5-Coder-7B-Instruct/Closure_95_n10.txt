public void testJsdocPublicTag() throws Exception {
    String jsCode = 
        "var Glow = {};\n" +
        "/** @public */\n" +
        "Glow.versions = [1, 2, 3];\n" +
        "Glow.showVersions = function() { alert(Glow.versions); };\n" +
        "\n" +
        "// exports\n" +
        "window['Glow'] = Glow;\n" +
        "Glow['versions'] = Glow.versions;\n" +
        "Glow['showVersions'] = Glow.showVersions;";
    
    CompilerOptions options = new CompilerOptions();
    options.setCodingConvention(new CodingConventions.SimpleConvention());
    options.setLanguageIn(LanguageMode.ECMASCRIPT_5);
    options.setLanguageOut(LanguageMode.ECMASCRIPT_5);
    options.setOptimizationLevel(OptimizeLevel.SIMPLE);

    List<CompilerInput> inputs = new ArrayList<>();
    inputs.add(SourceFile.fromCode("test.js", jsCode));

    CompilationResult result = new Compiler().compile(inputs, null, null, options);

    assertTrue(result.successful());

    String compiledCode = result.getCode();

    assertTrue(compiled