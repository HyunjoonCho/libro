import org.apache.commons.compress.utils.BitInputStream;

import java.io.ByteArrayInputStream;

public class TestBitInputStream {

    @Test(expected = ArithmeticException.class)
    public void testOverflowInReadBits() throws Exception {
        ByteArrayInputStream in = new ByteArrayInputStream(
            new byte[]{87, 45, 66, 15, 90, 29, 88, 61, 33, 74});
        BitInputStream bin = new BitInputStream(in, ByteOrder.LITTLE_ENDIAN);
        
        // This should cause an overflow and trigger the expected exception
        bin.readBits(63);
    }

    @Test
    public void testReadBitsAfterOverflow() throws Exception {
        ByteArrayInputStream in = new ByteArrayInputStream(
            new byte[]{87, 45, 66, 15, 90, 29, 88, 61, 33, 74});
        BitInputStream bin = new BitInputStream(in, ByteOrder.LITTLE_ENDIAN);

        // First call should succeed
        long ret = bin.readBits(5);
        assertEquals(23, ret);

        // Second call after overflow should fail
        try {
            ret =