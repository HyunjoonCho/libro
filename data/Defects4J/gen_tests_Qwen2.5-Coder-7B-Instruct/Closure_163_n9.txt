public void testVarCheckCrashWithModules() throws Exception {
    String jsCode =
      "var jQuery = {};\n" +
      "(function($) {\n" +
      "  $.fn.someMethod = function() { return 42; };\n" +
      "})(jQuery);\n" +
      "jQuery(' <div/> ').length;";
    CompilerOptions options = new CompilerOptions();
    options.setLanguageIn(LanguageMode.ECMASCRIPT_5);
    options.setLanguageOut(LanguageMode.ECMASCRIPT_5);
    options.setCodingConvention(new CodingConventions.JQuery());
    options.setModuleOutputPathPrefix("mod/");
    options.setModuleRoots(Arrays.asList(
        new ModuleRoot("jquery", Arrays.asList("..\\..\\dist\\jquery.js")),
        new ModuleRoot("core", Arrays.asList("core.js"))));
    options.setExternExportsFile("qunit_externs.js");
    options.setOutputWrapper("(function(){%output%;})()");
    options.setPrettyPrint(true);
    options.setDebug(true);
    options.setCompilationLevel(CompilationLevel.ADVANCED_OPTIMIZATIONS);
    Compiler compiler = new Compiler();
    List<SourceFile> externs = Lists.newArrayList(SourceFile.fromCode("extern