public void testJsonParserSequenceSkipsToken() throws IOException {
    String json1 = "{\"key1\":\"value1\"}";
    String json2 = "{\"key2\":\"value2\"}";

    JsonFactory factory = new JsonFactory();
    JsonParser parser1 = factory.createParser(json1);
    JsonParser parser2 = factory.createParser(json2);

    JsonParserSequence sequence = JsonParserSequence.createFlattened(parser1, parser2);

    assertTrue(sequence.nextToken() == JsonToken.START_OBJECT);
    assertTrue(sequence.nextToken() == JsonToken.FIELD_NAME);
    assertEquals("key1", sequence.getCurrentName());

    // This should fail because the current implementation skips the token
    assertTrue(sequence.nextToken() == JsonToken.VALUE_STRING);
    assertEquals("value1", sequence.getText());

    // This should succeed because the second parser should not be skipped
    assertTrue(sequence.nextToken() == JsonToken.START_OBJECT);
    assertTrue(sequence.nextToken() == JsonToken.FIELD_NAME);
    assertEquals("key2", sequence.getCurrentName());

    assertTrue(sequence.nextToken() == JsonToken.VALUE_STRING);
    assertEquals("value2", sequence.getText());

    assertFalse(sequence.nextToken() == JsonToken.END_OBJECT);
}