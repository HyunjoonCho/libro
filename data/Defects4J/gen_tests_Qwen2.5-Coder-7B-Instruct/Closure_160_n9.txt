public void testJsCompilerWarnings() throws Exception {
    String jsCode = "foo = {}; foo.bar = function() { alert(this.baz); };";
    
    // Test without any warnings enabled
    CompilerOptions options = new CompilerOptions();
    Compiler.setCmdLineOptions(new String[]{"--js", "test.js"}, null, options);
    Compiler compiler = new Compiler();
    int result = compiler.compile(null, new StringReader(jsCode), null);
    assertEquals(1, result);

    // Test with verbose warnings enabled
    options = new CompilerOptions();
    Compiler.setCmdLineOptions(new String[]{"--js", "test.js", "--warning_level", "VERBOSE"}, null, options);
    compiler = new Compiler();
    result = compiler.compile(null, new StringReader(jsCode), null);
    assertEquals(2, result);

    // Test with globalThis warnings enabled
    options = new CompilerOptions();
    Compiler.setCmdLineOptions(new String[]{"--js", "test.js", "--jscomp_warning", "globalThis"}, null, options);
    compiler = new Compiler();
    result = compiler.compile(null, new StringReader(jsCode), null);
    assertEquals(1, result);

    // Test with checkVars warnings enabled
    options