public void testCustomSerializerNotUsedForPOJOWithJsonValueAnnotation() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(MyPojo.class, new MyPojoSerializer());
    mapper.registerModule(module);

    String json = mapper.writeValueAsString(new MyPojo());
    assertEquals("{\"custom\":\"serializer\"}", json);
}

class MyPojo {
    @JsonValue
    public String toJsonValue() {
        return "jsonValue";
    }
}

class MyPojoSerializer extends JsonSerializer<MyPojo> {
    @Override
    public void serialize(MyPojo value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        gen.writeStartObject();
        gen.writeStringField("custom", "serializer");
        gen.writeEndObject();
    }
}