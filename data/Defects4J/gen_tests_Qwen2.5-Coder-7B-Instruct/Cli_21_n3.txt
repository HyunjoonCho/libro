public void testNegativeNumbersMistakenForOptions() {
    Argument<Double> numArg = new Builder<Double>()
           .withValidator(NumberValidator.getNumberInstance())
           .withMinimum(1.0)
           .withMaximum(1.0)
           .create();

    Option numOpt = new Builder<String>()
           .withLongName("num")
           .withArgument(new Argument.Builder<String>()
                   .withName("value")
                   .withDescription("a number")
                   .withRequired(true)
                   .withDefault("")
                   .withArgumentType(String.class)
                   .withConverter(Double::parseDouble)
                   .create())
           .create();

    Group options = new Builder<Group>()
           .withOption(numOpt)
           .create();

    try {
        Parser parser = new Parser(options);
        parser.parse("--num", "-0.1");
        fail("Expected exception not thrown");
    } catch (OptionException e) {
        assertEquals("Unexpected -0.1 while processing --num", e.getMessage());
    }
}