public void testBrentOptimizer() throws Exception {
    BrentOptimizer optimizer = new BrentOptimizer();
    UnivariateFunction function = x -> Math.sin(x) + Math.cos(x);

    double min = optimizer.optimize(
            new UnivariateObjectiveFunction(function),
            GoalType.MINIMIZE,
            new SearchInterval(-Math.PI, Math.PI)
    ).getPoint();

    double[] points = optimizer.getAllEvaluationPoints();
    double bestValue = Double.MAX_VALUE;
    double bestPoint = Double.NaN;

    for (double point : points) {
        double value = function.value(point);
        if (value < bestValue) {
            bestValue = value;
            bestPoint = point;
        }
    }

    assertEquals(bestPoint, min, 1e-6);
}