public void testClosureCompilerFunctionNameTranslation() throws Exception {
    String input = 
      "function preload_check_all() {\n" +
      "  // some code\n" +
      "}\n" +
      "\n" +
      "preload_check_all();";
    String expectedOutput = 
      "function a() {\n" +
      "  // some code\n" +
      "}\n" +
      "\n" +
      "a();";

    String actualOutput = compileWithSimpleOptimization(input);

    assertEquals(expectedOutput, actualOutput);
}

private String compileWithSimpleOptimization(String input) throws Exception {
    Compiler compiler = new Compiler();
    SourceFile inputSource = SourceFile.fromCode("input.js", input);
    List<SourceFile> externs = ImmutableList.of(SourceFile.fromCode("externs.js", ""));
    compiler.initExternals(externs);
    compiler.initInputObjects(ImmutableList.of(), ImmutableList.of(inputSource));
    compiler.setOptionsForCompilationLevel(CompilationLevel.SIMPLE_OPTIMIZATIONS);
    compiler.checkOneFileForErrors(inputSource);
    compiler.compile();
    return compiler.toSource();
}