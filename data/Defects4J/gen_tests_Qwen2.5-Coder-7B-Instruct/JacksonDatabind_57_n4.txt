public void testReadValuesWithOffsetAndLength() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    int[] data = {1, 2, 3, 4, 5};
    JsonParser p = new MockJsonParser(data);
    ObjectReader reader = mapper.readerFor(int[].class);
    reader.readValues(p).readValueAs(int[].class);
}

private static class MockJsonParser extends JsonParser {
    private final int[] _data;
    private int _index;

    public MockJsonParser(int[] data) {
        _data = data;
    }

    @Override
    public boolean hasNextToken() {
        return _index < _data.length;
    }

    @Override
    public JsonToken nextToken() {
        if (_index >= _data.length) {
            return null;
        }
        _index++;
        return JsonToken.VALUE_NUMBER_INT;
    }

    @Override
    public ObjectCodec getCodec() {
        return null;
    }

    @Override
    public JsonToken currentToken() {
        return hasNextToken()? JsonToken.VALUE_NUMBER_INT : null;
    }

    @Override
    public int getIntValue() {
        return _data[_index -