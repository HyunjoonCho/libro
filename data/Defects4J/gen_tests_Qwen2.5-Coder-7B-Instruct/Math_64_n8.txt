public void testLevenbergMarquardtInconsistency() {
    // Arrange
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    double[] initialGuess = {0.5, 0.5};
    double[] targetValues = {1.0, 1.0};
    
    // Act
    PointValuePair result = optimizer.optimize(
        ObjectiveFunctionWrapper.of((double[] params) -> 
            Math.pow(params[0] - targetValues[0], 2) + Math.pow(params[1] - targetValues[1], 2)
        ),
        NonLinearConvergenceChecker.DEFAULT.withMaxIterations(100).withThreshold(1e-6),
        SimpleBounds.unbounded(),
        initialGuess
    );
    
    // Assert
    double[] optimalParams = result.getPoint();
    double[] expectedParams = targetValues;
    for (int i = 0; i < optimalParams.length; i++) {
        assertEquals(expectedParams[i], optimalParams[i], 1e-6);
    }
}