public void testClosureCompilerBug() {
    String input = "window.Foo = function(A, B, C, D) {\n" +
                   " if ( A ) { \n" +
                   " if ( B ) {\n" +
                   " C = 0;\n" +
                   " } else {\n" +
                   " C = 0 in D;\n" +
                   " }\n" +
                   " while ( C-- ) {}\n" +
                   " }\n" +
                   "}";
    String expectedOutput = "window.Foo=function(b,c,a,d){if(b)for(a=c?0:(0 in d);a--;);};";
    String actualOutput = compileWithClosureCompiler(input);
    assertEquals(expectedOutput, actualOutput);
}

private String compileWithClosureCompiler(String input) {
    // This would typically involve calling out to the Closure Compiler API,
    // which is not shown here for simplicity.
    return input; // Placeholder for actual compilation logic
}