public void testDerivativeStructureAtan2SpecialCases() {
    double[][] testData = {
        { Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY },
        { Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY },
        { Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY },
        { Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY },
        { Double.POSITIVE_INFINITY, 0.0 },
        { Double.NEGATIVE_INFINITY, 0.0 },
        { 0.0, Double.POSITIVE_INFINITY },
        { 0.0, Double.NEGATIVE_INFINITY }
    };

    for (double[] data : testData) {
        double y = data[0];
        double x = data[1];
        double expected = Math.atan2(y, x);
        double actual = new DerivativeStructure(0, 0, y, x).atan2().getValue();
        assertEquals(expected, actual, 0.0);
    }
}