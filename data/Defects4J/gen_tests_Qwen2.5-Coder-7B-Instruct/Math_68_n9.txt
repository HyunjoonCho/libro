public void testLevenbergMarquardtOptimizer() throws Exception {
    double[] target = {1.0, 2.0};
    RealMatrix jacobian = MatrixUtils.createRealIdentityMatrix(2);
    FunctionEvaluationPoint[] points = new FunctionEvaluationPoint[1];
    points[0] = new FunctionEvaluationPoint(new double[]{0.5, 1.5}, target);

    VectorialFunction func = mock(VectorialFunction.class);
    when(func.value(any(double[].class))).thenReturn(target);

    VectorialConvergenceChecker checker = mock(VectorialConvergenceChecker.class);

    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    optimizer.optimize(100, func, ConvergenceChecker.CONVERGENCE_THRESHOLD, points, checker);

    verify(checker, never()).converged(anyInt(), any(double[].class), any(double[].class));
}