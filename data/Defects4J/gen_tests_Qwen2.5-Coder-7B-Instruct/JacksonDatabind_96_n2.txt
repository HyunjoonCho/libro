public void testImplicitConstructorPropertyNames() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(MyClass.class, new JsonSerializer<MyClass>() {
        @Override
        public void serialize(MyClass value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
            gen.writeStartObject();
            gen.writeStringField("myField", value.myField);
            gen.writeEndObject();
        }
    });
    mapper.registerModule(module);

    MyClass obj = new MyClass("testValue");
    String json = mapper.writeValueAsString(obj);
    assertEquals("{\"myField\":\"testValue\"}", json);
}

class MyClass {
    private final String myField;

    public MyClass(String myField) {
        this.myField = myField;
    }

    public String getMyField() {
        return myField;
    }
}