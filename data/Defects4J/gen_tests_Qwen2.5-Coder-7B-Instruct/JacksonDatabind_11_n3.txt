public void testProblemResolvingLocallyDeclaredGenericType() {
    ObjectMapper mapper = new ObjectMapper();
    String json = "{\"entity\": {\"id\": 1}}";
    try {
        Something<Ruleform> result = mapper.readValue(json, new TypeReference<Something<Ruleform>>() {});
        assertNotNull(result.getEntity());
    } catch (IOException e) {
        fail("Exception occurred during deserialization: " + e.getMessage());
    }
}

class Something<T extends Ruleform> {
    private T entity;

    public T getEntity() {
        return entity;
    }

    public void setEntity(T entity) {
        this.entity = entity;
    }
}

interface Ruleform {
    int getId();
}

class ConcreteRuleform implements Ruleform {
    private int id;

    @Override
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }
}