public void testStdKeyDeserializerWithMoreThanOneArgument() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    try {
        mapper.readValue("{\"key\":\"value\"}", new TypeReference<Map<Key, String>>() {});
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        assertTrue(e.getMessage().contains("wrong number of arguments"));
    }
}

private static class Key {
    private final String _part1;
    private final int _part2;

    @JsonCreator
    public Key(@JsonProperty("part1") String part1, @JsonProperty("part2") int part2) {
        _part1 = part1;
        _part2 = part2;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass()!= o.getClass()) return false;
        Key key = (Key) o;
        return _part2 == key._part2 && Objects.equals(_part1, key._part1);
    }

    @Override
    public int hashCode() {
        return Objects.hash(_part1, _part2);
    }
}