public void testCMAESOptimizerBoundsEnforcement() {
    double[] lowerBound = {0};
    double[] upperBound = {10};
    int numberOfParameters = 1;
    CMAESOptimizer optimizer = new CMAESOptimizer(lowerBound, upperBound);

    // Create an objective function that returns a fitness value based on the parameter value
    MultivariateFunction objectiveFunction = new MultivariateFunction() {
        public double value(double[] point) {
            return Math.abs(point[0] - 5); // Fitness is higher the closer the parameter is to 5
        }
    };

    // Set initial guess to a value outside the bounds
    double[] startPoint = {15};

    // Optimize the function
    PointValuePair result = optimizer.optimize(objectiveFunction, startPoint);

    // Check that the optimized value is within the bounds
    assertTrue(result.getPoint()[0] >= lowerBound[0]);
    assertTrue(result.getPoint()[0] <= upperBound[0]);
}