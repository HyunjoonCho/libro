public void testAnonymousObjectTypeInference() {
    Object obj = new Object();
    Method func2Method;
    try {
        func2Method = TestClass.class.getMethod("func2", Object.class);
    } catch (NoSuchMethodException e) {
        throw new RuntimeException(e);
    }
    Type[] genericParameterTypes = func2Method.getGenericParameterTypes();
    assertTrue(genericParameterTypes[0] instanceof ParameterizedType);
    ParameterizedType parameterizedType = (ParameterizedType) genericParameterTypes[0];
    Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
    assertEquals(2, actualTypeArguments.length);
    assertTrue(actualTypeArguments[0] instanceof Class);
    assertEquals(String.class, actualTypeArguments[0]);
    assertTrue(actualTypeArguments[1] instanceof WildcardType);
    WildcardType wildcardType = (WildcardType) actualTypeArguments[1];
    Type[] upperBounds = wildcardType.getUpperBounds();
    assertEquals(1, upperBounds.length);
    assertTrue(upperBounds[0] instanceof ParameterizedType);
    ParameterizedType parameterizedPropType = (ParameterizedType) upperBounds[0];
    assertEquals(2, parameterizedPropType.getActualTypeArguments().length);