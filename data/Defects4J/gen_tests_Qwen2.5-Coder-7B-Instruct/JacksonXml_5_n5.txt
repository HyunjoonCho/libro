import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.module.SimpleModule;

public void testJacksonXmlRootElementMalfunction() throws Exception {
    SimpleModule module = new SimpleModule();
    module.addSerializer(XMLTest.class, new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.SerializerBase<XMLTest>() {
        @Override
        public void serialize(XMLTest value, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider serializers) throws IOException {
            gen.writeStartObject();
            gen.writeStringField("localName", "myname");
            gen.writeEndObject();
        }
    });

    XmlMapper xmlMapper = new XmlMapper();
    xmlMapper.registerModule(module);
    xmlMapper.configure(MapperFeature.USE_ANNOTATIONS, false);
    xmlMapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);

    String expected = "<myname/>";
    String actual = xmlMapper.writeValueAsString(new XMLTest());

    assertEquals(expected, actual);
}