public void testLevenbergMarquardtOptimizer() throws Exception {
    double[] initialGuess = {0.5};
    RealVector targetValues = new ArrayRealVector(new double[]{1.0});
    UnivariateRealFunction model = x -> Math.exp(x);

    LeastSquaresProblem problem = new LeastSquaresBuilder()
           .model(model::value)
           .target(targetValues.toArray())
           .start(initialGuess)
           .build();

    VectorialConvergenceChecker checker = new SimpleVectorValueChecker(1e-6, 1e-6);
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    optimizer.setConvergenceChecker(checker);

    double[] result = optimizer.optimize(problem).getPoint().toArray();
    assertNotEquals(result[0], initialGuess[0]);
}