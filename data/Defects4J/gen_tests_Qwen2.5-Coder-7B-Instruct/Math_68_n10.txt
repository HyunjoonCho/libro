public void testLevenbergMarquardtOptimizer() {
    double[] target = { 1.0, 2.0 };
    double[] initialGuess = { 0.5, 1.5 };
    FunctionEvaluation functionEvaluation = mock(FunctionEvaluation.class);
    doReturn(new PointValuePair(target, 0.0)).when(functionEvaluation).value(initialGuess);

    VectorialConvergenceChecker checker = mock(VectorialConvergenceChecker.class);
    
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    optimizer.optimize(
            new NonLinearConstrainedLeastSquaresProblem(functionEvaluation, null),
            initialGuess,
            checker);

    verify(checker, never()).converged(anyInt(), any(PointValuePair.class));
}