public void testEnumMapKeys() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    EnumMap<MyEnum, String> map = new EnumMap<>(MyEnum.class);
    map.put(MyEnum.VALUE_1, "value1");
    map.put(MyEnum.VALUE_2, "value2");

    String json = mapper.writeValueAsString(map);
    assertEquals("{\"VALUE_1\":\"value1\",\"VALUE_2\":\"value2\"}", json);

    EnumMap<MyEnumAnnotated, String> annotatedMap = new EnumMap<>(MyEnumAnnotated.class);
    annotatedMap.put(MyEnumAnnotated.VALUE_A, "a");
    annotatedMap.put(MyEnumAnnotated.VALUE_B, "b");

    String annotatedJson = mapper.writeValueAsString(annotatedMap);
    assertEquals("{\"A\":\"a\",\"B\":\"b\"}", annotatedJson);
}

enum MyEnum {
    VALUE_1,
    VALUE_2;
}

@JsonFormat(shape = JsonFormat.Shape.OBJECT)
enum MyEnumAnnotated {
    @JsonProperty("A")
    VALUE_A,

    @JsonProperty("B")
    VALUE_B;
}