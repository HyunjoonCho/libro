public void testAllowMultipleMatches() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addDeserializer(String.class, new JsonDeserializer<String>() {
        @Override
        public String deserialize(JsonParser p, DeserializationContext ctxt) 
            throws IOException, JsonProcessingException {
            return "foo";
        }
    });
    module.setMixInAnnotation(Object.class, new AllowMultipleMatchesMixin());
    mapper.registerModule(module);

    String json = "\"foo\" \"bar\"";
    try {
        mapper.readValue(json, Object.class);
        fail("Expected exception not thrown");
    } catch (JsonProcessingException e) {
        // Expected
    }
}

class AllowMultipleMatchesMixin {
    @JsonDeserialize(using = StringDeserializer.class)
    private List<String> values;
}