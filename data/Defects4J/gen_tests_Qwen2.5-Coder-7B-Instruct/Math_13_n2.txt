public void testLargeNumberOfWeights() {
    int numberOfWeights = 41200;
    Weight[] weights = new Weight[numberOfWeights];
    for (int i = 0; i < numberOfWeights; i++) {
        weights[i] = new Weight(i, 1.0);
    }
    
    // Attempt to use the weights with a multivariate vector optimizer
    MultivariateVectorOptimizer optimizer = new Simple PowellOptimizer();
    double[] initialGuess = new double[numberOfWeights];
    double[] target = new double[numberOfWeights];
    double[] weightValues = new double[numberOfWeights];
    for (int i = 0; i < numberOfWeights; i++) {
        initialGuess[i] = 0.5;
        target[i] = 0.0;
        weightValues[i] = weights[i].getValue();
    }
    
    try {
        optimizer.optimize(new ObjectiveFunction(target),
                           NonLinearConstraintFactory.linearConstraints(weightValues, 0.0, 0.0),
                           GoalType.MINIMIZE,
                           new InitialGuess(initialGuess));
        fail("Expected OutOfMemoryError to be thrown");
    } catch (OutOfMemoryError e) {
        // Expected exception
    }
}