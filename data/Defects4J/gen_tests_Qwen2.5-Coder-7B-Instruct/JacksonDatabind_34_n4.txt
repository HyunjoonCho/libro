public void testBigDecimalSchema() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(BigDecimal.class, new JsonSerializer<BigDecimal>() {
        @Override
        public void serialize(BigDecimal value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
            gen.writeNumber(value.toBigInteger()); // This is incorrect for BigDecimal
        }
    });
    mapper.registerModule(module);

    String json = mapper.writeValueAsString(new MyObject(new BigDecimal("123.45")));
    assertEquals("{\"value\":123}", json); // Should be "{\"value\":123.45}"
}

class MyObject {
    private BigDecimal value;

    public MyObject(BigDecimal value) {
        this.value = value;
    }

    public BigDecimal getValue() {
        return value;
    }
}