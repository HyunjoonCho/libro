import static org.junit.Assert.*;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;

public class JacksonTest {

    public void testModelObjects() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        SimpleModule module = new SimpleModule();
        module.addSerializer(AccessionIdentifier.class, new JsonSerializer<AccessionIdentifier>() {
            @Override
            public void serialize(AccessionIdentifier value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
                gen.writeString(value.toString());
            }
        });
        module.addDeserializer(AccessionIdentifier.class, new JsonDeserializer<AccessionIdentifier>() {
            @Override
            public AccessionIdentifier deserialize(JsonParser p, DeserializationContext ctxt) throws IOException, JsonProcessingException {
                return new BaseAccessionIdentifier();
            }
        });
        mapper.registerModule(module);

        Foo foo = new Foo();
        foo.setReference(new BaseAccessionIdentifier());

        String json = mapper.writeValueAsString(foo);
        assertNotNull(json);
        assertTrue(json.contains("\"getReference\":\"BaseAccessionIdentifier\""));

        Foo deserializedFoo = mapper.readValue(json, Foo.class);
        assertNotNull(deserializedFoo);
        assertNotNull(deserializedFoo.getReference());
        assertTrue(deserializedFoo.getReference() instanceof BaseAccessionIdentifier);