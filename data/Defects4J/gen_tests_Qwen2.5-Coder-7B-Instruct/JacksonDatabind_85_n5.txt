public void testDateTimeSerializerBase() throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(Date.class, new JsonSerializer<Date>() {
        @Override
        public void serialize(Date value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
            gen.writeString(value.toString());
        }
    });
    mapper.registerModule(module);

    MyObject obj = new MyObject(new Date());
    String json = mapper.writeValueAsString(obj);
    assertTrue(json.contains("\"Mon Jan 01 00:00:00 GMT 1970\""));
}

class MyObject {
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    private final Date date;

    public MyObject(Date date) {
        this.date = date;
    }

    public Date getDate() {
        return date;
    }
}