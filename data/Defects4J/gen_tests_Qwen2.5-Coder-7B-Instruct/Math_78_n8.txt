public void testODEEventDetection() throws Exception {
    double[] times = {67.5, 112.5, 90.0, 135.0};
    double[][] states = {{0.0}, {1.0}, {-1.0}, {0.0}};
    double[][] derivatives = {{1.0}, {0.0}, {0.0}, {-1.0}};

    ODEIntegrator integrator = new DormandPrince853Integrator(1e-12, 1.0, 1e-6, 1e-6);
    integrator.addStepHandler(new StepHandler() {
        public boolean hasNext() {
            return true;
        }

        public void handleStep(StepInterpolator interpolator, boolean isLast) {
            double time = interpolator.getCurrentTime();
            double state = interpolator.getState()[0];
            System.out.println("At " + time + ", state = " + state);
        }
    });

    OrdinaryDifferentialEquation ode = new OrdinaryDifferentialEquation() {
        public int getDimension() {
            return 1;
        }

        public void computeDerivatives(double t, double[]