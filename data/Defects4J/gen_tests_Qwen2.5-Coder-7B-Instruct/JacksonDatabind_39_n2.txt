public void testJacksonDeserializationFailure() throws IOException {
    final ObjectMapper objectMapper = new ObjectMapper()
           .disable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE,
                    DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES,
                    DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES);

    String json = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    CallRecord call = objectMapper.readValue(json, CallRecord.class);
    assertNotNull(call.item2);

    json = "{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}";
    try {
        objectMapper.readValue(json, CallRecord.class);
        fail("Expected exception not thrown");
    } catch (JsonMappingException e) {
        assertTrue(e.getMessage().contains("Unexpected token (VALUE_STRING): expected END_ARRAY"));
    }

    json = "{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}, \"version\":0.0,\"application\":\"123\"}";
    call = objectMapper.readValue(json, CallRecord.class);
    assertNull(call.application);
}