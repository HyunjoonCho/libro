public void testPrimitiveFieldAnnotationIgnored() {
    Gson gson = new GsonBuilder().registerTypeAdapter(int.class, new CustomIntTypeAdapter()).create();
    String json = gson.toJson(new PrimitiveFieldClass(42));
    assertEquals("{\"primitive\":42}", json);
}

private static class PrimitiveFieldClass {
    @JsonAdapter(CustomIntTypeAdapter.class)
    int primitive;

    PrimitiveFieldClass(int primitive) {
        this.primitive = primitive;
    }
}

private static class CustomIntTypeAdapter extends TypeAdapter<Integer> {
    @Override
    public void write(JsonWriter out, Integer value) throws IOException {
        out.value(value * 2);
    }

    @Override
    public Integer read(JsonReader in) throws IOException {
        return in.nextInt() / 2;
    }
}