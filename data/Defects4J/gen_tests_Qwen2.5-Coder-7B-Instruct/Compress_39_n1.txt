public void testDefectiveZipArchive() throws IOException {
    // Create a defective zip file (truncated)
    Path tempDir = Files.createTempDirectory("defective_zip_test");
    Path zipPath = tempDir.resolve("defective.zip");
    
    try (ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(zipPath.toFile()))) {
        // Add an empty file to the zip
        ZipEntry entry = new ZipEntry("empty.txt");
        zos.putNextEntry(entry);
        // Do not close the entry to make the zip file truncated
    }
    
    // Attempt to read the truncated zip file
    try (ZipInputStream zis = new ZipInputStream(new FileInputStream(zipPath.toFile()))) {
        ZipEntry entry;
        while ((entry = zis.getNextEntry())!= null) {
            // This line will throw EOFException because the zip file is truncated
            zis.read();
        }
    } catch (EOFException e) {
        // Verify that the exception message contains a large amount of data
        assertTrue(e.getMessage().length() > 1000); // Adjust the threshold as needed
    }
}