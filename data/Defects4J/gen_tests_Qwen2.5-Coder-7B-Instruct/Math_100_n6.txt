public void testAbstractEstimatorCovariances() throws Exception {
    // Arrange
    LeastSquaresProblem problem = mock(LeastSquaresProblem.class);
    double[] target = { 1.0 };
    double[] weight = { 1.0 };
    double[][] obs = new double[1][];
    obs[0] = { 1.0 };
    doReturn(obs).when(problem).getObservations();
    doReturn(target).when(problem).getTarget();
    doReturn(weight).when(problem).getWeight().toRealVector().toArray();
    ParameterValidator validator = mock(ParameterValidator.class);
    doReturn(true).when(validator).isInRange(anyDouble(), anyInt());
    BoundVariable var1 = new BoundVariable(0, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY);
    BoundVariable var2 = new BoundVariable(1, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY);
    List<Parameter<?>> params = Arrays.asList(var1, var2);
    doReturn(params).when(problem).getAllParameters();
    doReturn(Arrays.asList(var1)).when(problem).getUnboundParameters();
    AbstractEstimator estimator = new AbstractEstimator() {};
    estimator.setParameters(new double[]{1.