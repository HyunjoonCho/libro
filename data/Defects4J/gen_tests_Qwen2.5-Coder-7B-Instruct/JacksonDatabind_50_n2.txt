import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

public class JacksonTest {

    @Test(expected = JsonMappingException.class)
    public void testDeserializationWithForwardReferencesAndJsonCreator() throws Exception {
        String json = "{\"id\":1,\"name\":\"John\", \"children\":[{\"id\":2,\"parent\":{\"$ref\":\"@\"}}]}";
        ObjectMapper mapper = new ObjectMapper();
        Parent parent = mapper.readValue(json, Parent.class);
    }

    static class Parent {
        private int id;
        private String name;
        private List<Child> children;

        // getters and setters
    }

    static class Child {
        private int id;
        private Parent parent;

        // getters and setters
    }
}

In this example, we're trying to deserialize a JSON string that contains a reference to the current object (`"$ref":"@"`). We expect this to throw a `JsonMappingException`, which would indicate that