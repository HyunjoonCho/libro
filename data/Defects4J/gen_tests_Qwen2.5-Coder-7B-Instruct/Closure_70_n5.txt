public void testTypedCoverage() throws Exception {
  String jsCode =
      "/**\n" +
      " * @constructor\n" +
      " * @param {!Element} element\n" +
      " */\n" +
      "function Example(element) {\n" +
      " /**\n" +
      "  * @param {!string} ns\n" +
      "  * @param {!string} name\n" +
      "  * @return {undefined}\n" +
      "  */\n" +
      " this.appendElement = function appendElement(ns, name) {\n" +
      " var e = element.ownerDocument.createElementNS(ns, name);\n" +
      " element.appendChild(e);\n" +
      " };\n" +
      "}\n" +
      "window['Example'] = Example;";

  // Compile the JS code with closure compiler
  SourceFile input = SourceFile.fromCode("input", jsCode);
  List<SourceFile> externs = Arrays.asList(SourceFile.fromCode("externs", ""));
  List<CompilerInput> inputs = Lists.newArrayList(new CompilerInput(input));
  Result result = new Compiler().compile(externs, inputs, getOptions