public void testLargeNumberOfWeights() {
    double[] weights = new double[41200];
    Arrays.fill(weights, 1.0);
    WeightedObservedPoints obs = new WeightedObservedPoints();
    for (int i = 0; i < weights.length; i++) {
        obs.add(i, i, weights[i]);
    }
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    NonLinearRegression regression = new NonLinearRegression(optimizer);
    PolynomialFunction.Parametric model = new PolynomialFunction.Parametric();
    double[] initialGuess = {0};
    try {
        regression.fit(model, obs.toList().toArray(new Point2D.Double[0]));
        fail("Expected OutOfMemoryError");
    } catch (OutOfMemoryError e) {
        // Expected exception
    }
}