public void testExternalPropertyDeserialization() throws IOException {
    String json = "{\"id\": \"externalId\", \"details\": {\"name\": \"testName\", \"value\": 123}}";
    
    ObjectMapper mapper = new ObjectMapper();
    MyClass obj = mapper.readValue(json, MyClass.class);

    assertNotNull(obj.getId());
    assertNotNull(obj.getDetails());
    assertEquals("externalId", obj.getId().getId());
    assertEquals("testName", obj.getDetails().getName());
    assertEquals(123, obj.getDetails().getValue());
}

Replace `MyClass`, `Id` and `Details` with the actual classes used in your project. This test creates a JSON string with nested objects, then uses Jackson's `ObjectMapper` to deserialize it into a Java object. Finally, it checks whether the properties were correctly set. If the external property (`id` in this case) is not being deserialized properly, this test will fail.