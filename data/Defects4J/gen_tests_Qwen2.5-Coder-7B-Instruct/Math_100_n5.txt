public void testAbstractEstimatorCovariances() throws Exception {
    // Create a mock problem with bound parameters
    Problem problem = new Problem();
    Parameter parameter1 = new Parameter("param1", 0.0);
    Parameter parameter2 = new Parameter("param2", 0.0).setBound(true);
    problem.addParameter(parameter1);
    problem.addParameter(parameter2);

    // Create an estimator and call getCovariances()
    AbstractEstimator estimator = new AbstractEstimator(problem) {
        @Override
        protected double[] estimate(double[][] observations) {
            return new double[observations.length];
        }
    };
    try {
        estimator.getCovariances();
        fail("Expected ArrayIndexOutOfBoundsException");
    } catch (ArrayIndexOutOfBoundsException e) {
        // Expected exception
    }

    // Call guessParametersErrors()
    try {
        estimator.guessParametersErrors();
        fail("Expected ArrayIndexOutOfBoundsException");
    } catch (ArrayIndexOutOfBoundsException e) {
        // Expected exception
    }
}

private static class Problem implements EstimationProblem {
    private List<Parameter> parameters = new ArrayList<>();

    public void addParameter(Parameter parameter) {
        parameters.add(parameter);
    }

    @Override
    public Parameter[]