import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.concurrent.atomic.AtomicReference;

public class TestDeserialization {

    @Test
    void testDeserialization() throws IOException {
        ObjectMapper objectMapper = new ObjectMapper();
        ObjectReader objectReader = objectMapper.readerFor(MyBean.class);

        MyBean intRef = objectReader.readValue("{\"refRef\": 2}");
        Assertions.assertNotNull(intRef.refRef);
        Assertions.assertNotNull(intRef.refRef.get());
        Assertions.assertEquals(intRef.refRef.get().get(), 2);

        MyBean nullRef = objectReader.readValue("{\"refRef\": null}");
        Assertions.assertNotNull(nullRef.refRef);
        Assertions.assertNotNull(nullRef.refRef.get());
        Assertions.assertNull(nullRef.refRef.get().get());
    }

    static class MyBean {
        private AtomicReference<AtomicReference<Integer>> refRef;

        public AtomicReference<AtomicReference<Integer>> getRefRef() {
            return refRef;
        }

        public void setRefRef(AtomicReference<AtomicReference<Integer>> refRef) {
            this.refRef = refRef;
        }
    }
}