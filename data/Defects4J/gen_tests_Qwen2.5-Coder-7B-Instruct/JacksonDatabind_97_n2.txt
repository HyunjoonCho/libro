import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.junit.BeforeClass;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertEquals;

public class TestCaseTest {

  private static final ObjectMapper mapper = TestCase.mapper;

  @BeforeClass
  public static void setUp() {
    // Ensure the mapper is configured correctly before each test
  }

  @Test
  public void testCustomSerializerWithMap() throws IOException {
    String expectedOutput = "{\"data\":{\"aStr\":\"The value is: Hello!\"}}";
    String actualOutput = mapper.writer().withAttribute("myAttr", "Hello!").writeValueAsString(createDataInMap());
    assertEquals(expectedOutput, actualOutput);
  }

  @Test
  public void testCustomSerializerWithTree() throws IOException {
    String expectedOutput = "{\"data\":{\"aStr\":\"The value is: Hello!\"}}";
    String actualOutput = mapper.writer().withAttribute("myAttr", "Hello!").writeValueAsString(createDataInTree());
    assertEquals(expectedOutput, actualOutput);
  }

  private Map<String, Object> createDataInMap() {
    Map<String, Object> mapTest = new HashMap<>();
    TestCase.Data data =