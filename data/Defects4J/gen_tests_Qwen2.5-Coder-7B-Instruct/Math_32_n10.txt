public void testBSPTreeRecovery() {
    float[] vertices = new float[]{0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1};
    int[] faces = new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};

    BSPTree<HalfSpace> tree = new BSPTree<>();
    // Construct the tree using vertices and faces

    // Test if the tree contains all the faces
    for (int i = 0; i < faces.length; i += 3) {
        Point3D p1 = new Point3D(vertices[faces[i]] * 1.01, vertices[faces[i + 1]], vertices[faces[i + 2]]);
        Point3D p2 = new Point3D(vertices[faces[(i + 1) % faces