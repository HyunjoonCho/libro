public void testLevenbergMarquardtInconsistency() {
    // Setup the problem
    NonLinearOptimizer optimizer = new LevenbergMarquardtOptimizer();
    double[] initialGuess = {1.0, 1.0};
    double[] target = {2.0, 3.0};

    // Create the model
    MultivariateVectorFunction model = new MultivariateVectorFunction() {
        public double[] value(double[] params) {
            return new double[]{params[0] + params[1], params[0] - params[1]};
        }
    };

    // Solve the problem
    PointValuePair result = optimizer.optimize(
        new MaxEval(100),
        new LeastSquaresProblem(model, null, null, null, null)
           .start(initialGuess)
           .goalType GoalType.MINIMIZE);

    // Check the result
    assertArrayEquals(new double[]{0.5, 1.5}, result.getPoint(), 1e-6);
    assertArrayEquals(target, model.value(result.getPoint()), 1e-6);
}