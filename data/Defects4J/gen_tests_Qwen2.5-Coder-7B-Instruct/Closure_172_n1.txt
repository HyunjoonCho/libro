public void testTypeOfPrototypePropertyIncorrectlyInferredToString() {
    // Arrange
    Function<Object, Void> functionF = (Function<Object, Void>) o -> {
        o.getClass().getDeclaredField("prototype").set(o, "__proto");
        return null;
    };
    Function<Object, Void> functionG = (Function<Object, Void>) o -> {
        o.getClass().getDeclaredField("prototype").set(o, () -> {});
        return null;
    };

    // Act & Assert
    try {
        functionF.apply(new Object());
        fail("Expected exception was not thrown");
    } catch (Exception e) {
        assertTrue(e.getMessage().contains("assignment to property prototype of Object found : function (): undefined required: string"));
    }

    try {
        functionG.apply(new Object());
        fail("Expected exception was not thrown");
    } catch (Exception e) {
        assertTrue(e.getMessage().contains("assignment to property prototype of Object found : function (): undefined required: string"));
    }
}