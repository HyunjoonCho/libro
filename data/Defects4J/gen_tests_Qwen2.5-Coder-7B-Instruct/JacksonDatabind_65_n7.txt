public void testStdKeyDeserializer() throws IOException {
    ObjectMapper mapper = new ObjectMapper();
    Map<String, String> map = mapper.readValue(
        "{\"key1\":\"value1\", \"key2\":\"value2\"}",
        new TypeReference<Map<String, String>>() {}
    );
    assertEquals("value1", map.get("key1"));
    assertEquals("value2", map.get("key2"));

    try {
        mapper.readValue(
            "{\"first.last\": \"value1\"}",
            new TypeReference<Map<FullName, String>>() {}
        );
        fail("Expected InvalidFormatException");
    } catch (InvalidFormatException e) {
        // Expected exception
    }
}

static class FullName {
    private final String _firstname;
    private final String _lastname;

    private FullName(String firstname, String lastname) {
        _firstname = firstname;
        _lastname = lastname;
    }

    @JsonCreator
    public static FullName valueOf(String value) {
        String[] parts = value.split("\\.");
        return new FullName(parts[0], parts[1]);
    }

    @JsonValue
    @Override
    public String toString() {
        return _firstname + "." + _lastname;
    }
}