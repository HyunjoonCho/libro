public void testOverzealousArgumentsOptimisation() {
    Function function = mock(Function.class);
    Object[] args = new Object[] { "arg1", "arg2" };
    
    // Call the original implementation
    Object resultOriginal = d3_call(function, args);
    
    // Reset arguments array
    Arrays.fill(args, null);
    
    // Call the optimized implementation
    Object resultOptimized = d3_call_optimized(function, args);
    
    // Verify that the first argument was correctly passed to the function
    verify(function).apply(eq(this), eq(new Object[] { this, "arg1", "arg2" }));
    
    // Verify that the results are the same
    assertEquals(resultOriginal, resultOptimized);
}

private Object d3_call(Function function, Object... args) {
    Object f = function;
    args[0] = this;
    f.apply(this, args);
    return this;
}

private Object d3_call_optimized(Object function, Object... args) {
    args[0] = this;
    ((Function) function).apply(this, args);
    return this;
}

interface Function {
    void apply(Object context, Object... args);
}