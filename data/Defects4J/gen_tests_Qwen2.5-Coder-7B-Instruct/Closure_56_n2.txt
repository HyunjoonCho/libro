public void testLastWarningOrErrorTruncated() throws Exception {
    File inputFile = new File("test.js");
    PrintWriter writer = new PrintWriter(inputFile);
    writer.println("alert(foo);");
    writer.println("alert(bar);");
    writer.close();

    Process process = Runtime.getRuntime().exec("java -jar compiler.jar --warning_level VERBOSE --js " + inputFile.getAbsolutePath());
    BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
    String line;
    while ((line = reader.readLine())!= null) {
        System.out.println(line);
    }
    int exitCode = process.waitFor();
    assertEquals(1, exitCode);

    // Check that the last error message contains the expected information
    assertTrue(lastErrorMessage.contains("variable foo is undefined"));
    assertTrue(lastErrorMessage.contains("variable bar is undefined"));
}
private String lastErrorMessage = "";
{
    BufferedReader reader = new BufferedReader(new InputStreamReader(System.err));
    String line;
    while ((line = reader.readLine())!= null) {
        lastErrorMessage += line + "\n";
    }
}