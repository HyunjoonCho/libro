public void testLevenbergMarquardtOptimizerIterations() {
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    double[] target = { 1.0 };
    double[] initialGuess = { 3.0 };
    MultivariateVectorFunction modelFunction = point -> new double[]{ Math.pow(point[0], 4) };
    MultivariateMatrixFunction jacobianFunction = point -> new double[][]{ { 0.25 * Math.pow(point[0], 3) } };

    optimizer.optimize(new MaxIter(100), new Target(target),
            new Weight(new double[]{ 1.0 }), new InitialGuess(initialGuess),
            modelFunction, jacobianFunction);

    assertTrue(optimizer.getIterations() > 0);
}