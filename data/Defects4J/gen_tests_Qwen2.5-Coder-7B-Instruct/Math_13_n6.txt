public void testLargeNumberOfWeights() throws Exception {
    int numberOfWeights = 41200;
    double[] weights = new double[numberOfWeights];
    Arrays.fill(weights, 1.0);

    WeightedObservedPoints obs = new WeightedObservedPoints();
    for (int i = 0; i < numberOfWeights; ++i) {
        obs.add(i, Math.sin(i));
    }

    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    PolynomialFunction.Parametric model = new PolynomialFunction.Parametric();
    double[] initialGuess = {0};
    SimpleVectorValueChecker checker = new SimpleVectorValueChecker(1e-15, 1e-15)
           .withMaxIterationCount(Integer.MAX_VALUE);

    try {
        optimizer.optimize(new MaxEval(Integer.MAX_VALUE),
                new NonLinearConstrainedLeastSquaresProblem(
                        new ModelFunction(model, new DerivativeStructure(obs.size(), 0, 1)),
                        new ModelFunctionJacobian(model, new DerivativeStructure(obs.size(), 1, 1)),
                        obs.toList(),
                        null,
                        null),
                NonLinearConstrainedLeastSquaresProblem.Constraints.NONE,