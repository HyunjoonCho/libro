public void testDateTimeSerializerBaseCreateContextual() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(Date.class, new CustomDateSerializer());
    mapper.registerModule(module);

    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ", Locale.US);
    dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));

    Map<String, Object> configOverrides = new HashMap<>();
    configOverrides.put("dateFormat", dateFormat);

    mapper.setConfig(mapper.getSerializationConfig().with(configOverrides));

    Date date = mapper.readValue("\"2022-01-01T00:00:00.000+0000\"", Date.class);
    assertEquals(dateFormat.format(date), date.toString());
}

class CustomDateSerializer extends JsonSerializer<Date> {
    @Override
    public void serialize(Date value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
        gen.writeString(value.toString()); // This is intentionally incorrect
    }
}