public void testMultivariateVectorOptimizersWithLargeNumberOfWeights() throws Exception {
    int numberOfWeights = 41200;
    double[] weights = new double[numberOfWeights];
    Arrays.fill(weights, 1.0);

    WeightedObservedPoints obs = new WeightedObservedPoints();
    for (int i = 0; i < numberOfWeights; i++) {
        obs.add(i, i, weights[i]);
    }

    PolynomialCurveFitter fitter = PolynomialCurveFitter.create(1);
    try {
        fitter.fit(obs.toList().toArray(new WeightedObservedPoint[0]));
        fail("Expected OutOfMemoryError to be thrown due to large number of weights.");
    } catch (OutOfMemoryError e) {
        // Expected exception
    }
}