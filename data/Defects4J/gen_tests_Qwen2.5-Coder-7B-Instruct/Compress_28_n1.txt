public void testTarArchiveInputStreamSilentlyFinishedWhenUnexpectedEOFOccurred() throws IOException {
    // Create a corrupted tar file by truncating it
    File tempFile = File.createTempFile("corrupted_tar", ".tar");
    try (OutputStream os = Files.newOutputStream(tempFile.toPath())) {
        // Write some valid tar header
        byte[] header = new byte[512];
        Arrays.fill(header, (byte) 0x60); // Regular file type
        os.write(header);

        // Truncate the file
        os.flush();
        Files.truncate(tempFile.toPath(), 512);
    }

    try (TarArchiveInputStream input = new TarArchiveInputStream(new FileInputStream(tempFile))) {
        ArchiveEntry entry = input.getNextEntry();
        assertNull(entry); // Should throw an IOException, but doesn't

        // This assertion will fail because no exception was thrown
        fail("Expected an IOException to be thrown");
    } catch (IOException e) {
        // Expected exception
    } finally {
        tempFile.delete();
    }
}