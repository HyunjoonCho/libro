public void testJacksonDeserializationFailure() throws IOException {
    ObjectMapper mapper = new ObjectMapper()
       .configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, false)
       .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)
       .configure(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES, false);

    String json = "{\"version\":0.0,\"application\":\"123\",\"item\":{\"type\":\"xevent\",\"location\":\"location1\"},\"item2\":{\"type\":\"event\",\"location\":\"location1\"}}";
    CallRecord callRecord = mapper.readValue(json, CallRecord.class);
    assertNotNull(callRecord.item2);
    assertNotNull(callRecord.version);
    assertNotNull(callRecord.application);

    json = "{\"version\":0.0,\"application\":\"123\"},{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}";
    try {
        mapper.readValue(json, CallRecord.class);
        fail("Expected exception not thrown");
    } catch (JsonMappingException e) {
        assertTrue(e.getMessage().contains("Unexpected token (START_OBJECT): expected END_ARRAY"));
    }

    json = "{\"item\":{\"type\":\"xevent\",\"location\":\"location1\"}, \"version\":0.0,\"application\":\"123\"}";
    callRecord