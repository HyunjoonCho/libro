public void testEnumTypeCheck() {
  // Arrange
  String jsCode = 
      "/** @enum {number} */\n" +
      "var NS = {\n" +
      "  keys: { \n" +
      "    a: 1, \n" +
      "    b: 2, \n" +
      "    c: 3\n" +
      "  }\n" +
      "};\n" +
      "\n" +
      "/** @enum */\n" +
      "window['gKEYS'] = NS.keys;";
  
  // Act
  Compiler compiler = new Compiler();
  DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<>();
  compiler.compile(Arrays.asList(new JavaSourceFromString("Test", jsCode)), diagnostics);
  
  // Assert
  List<String> errors = diagnostics.getDiagnostics().stream()
     .filter(d -> d.getKind() == Diagnostic.Kind.ERROR)
     .map(Diagnostic::getMessage)
     .collect(Collectors.toList());
  assertTrue(errors.isEmpty());
}