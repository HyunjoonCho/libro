import org.apache.commons.lang3.builder.ToStringStyle;
import java.util.concurrent.atomic.AtomicBoolean;

public void testThreadLocalMemoryLeak() throws Exception {
    AtomicBoolean called = new AtomicBoolean(false);
    ThreadLocal<ToStringStyle> tl = ToStringStyle.getDefaultStyle();
    toString(tl);
    assertTrue(called.get());
}

private void toString(ThreadLocal<ToStringStyle> tl) {
    // Simulate usage of the ThreadLocal
    ToStringStyle style = tl.get();
    if (style == null) {
        tl.set(new ToStringStyle() {
            @Override
            public String toString(Object object) {
                called.set(true);
                return super.toString(object);
            }
        });
    }
}