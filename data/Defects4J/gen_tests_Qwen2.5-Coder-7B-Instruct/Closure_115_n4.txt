public void testAdvancedOptimizationsBug() throws Exception {
    String inputJS = 
        "window['anchor'] = function(obj, modifiesProp) {\n" +
        "  return (function(saved) {\n" +
        "    return modifiesProp(obj) + saved;\n" +
        "  })(obj['prop']);\n" +
        "}\n";

    String expectedOutputJS =
        "window.foo = function(a, b) { var HOLD = a.prop; return b(a) + HOLD };\n";

    String actualOutputJS = compileWithLevel(inputJS, CompilerOptions.Level.ADVANCED);

    assertEquals(expectedOutputJS, actualOutputJS);
}

private String compileWithLevel(String jsCode, CompilerOptions.Level level) throws Exception {
    Compiler compiler = new Compiler();
    compiler.initLogging(null);
    compiler.setOptionsForTest(new CompilerOptions());
    compiler.getOptions().setCodingConvention(new CodingConvention.Default());
    compiler.getOptions().setLanguageIn(LanguageMode.ECMASCRIPT5_STRICT);
    compiler.getOptions().setLanguageOut(level);
    compiler.getOptions().setWarningLevel(Diagnostic.Kind.ERROR);
    compiler.parseInputs(new SourceFile[] {SourceFile.fromCode("input.js", jsCode