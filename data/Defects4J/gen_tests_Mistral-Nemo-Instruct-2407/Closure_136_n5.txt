public void testJSPrototypeSuperReplacement() {
    String javascriptCode = "var Parent = function() { this.x = 5; };"
        + "Parent.prototype.method = function() { return this.x; };"
        + "var Child = function() { Parent.call(this); this.y = 6; };"
        + "Child.prototype = Object.create(Parent.prototype);"
        + "Child.prototype.constructor = Child;"
        + "Child.prototype.method = function() { return $super() + this.y; };"
        + "var child = new Child();";
    assertEquals(11, new Object().executeScript(javascriptCode).getMember("child.method").invoke().intValue());
}