public void testJsonIdentityInfoDeserializationFailure() throws Exception {
    String json = "[{\"id\":1,\"name\":\"Alice\",\"friends\":[{\"id\":2,\"name\":\"Bob\"}]},{\"id\":2,\"name\":\"Bob\",\"friends\":[{\"id\":1,\"name\":\"Alice\"}]}]";
    ObjectMapper mapper = new ObjectMapper();
    // when
    try {
        List<Person> persons = mapper.readValue(json, TypeFactory.collectionType(List.class, Person.class));
        // then
        fail("Expected deserialization to fail with JsonMappingException: Cyclic dependency error");
    } catch (JsonMappingException e) {
        // expected
    }
}

@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
class Person {
    @JsonCreator
    public Person(int id, String name, @JsonProperty("friends") List<Person> friends) {
        this.id = id;
        this.name = name;
        this.friends = friends;
    }

    int id;
    String name;
    List<Person> friends;
}