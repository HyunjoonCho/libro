public void testBrentOptimizerBestPoint() {
    BrentOptimizer optimizer = new BrentOptimizer();
    double[] initialGuess = {1.0, 2.0};
    double[] bestGuess = optimizer.optimize(new TestFunction(), initialGuess);
    assertEquals(initialGuess[0], bestGuess[0], 0.0001);
    assertEquals(initialGuess[1], bestGuess[1], 0.0001);
    assertTrue(new TestFunction().f(initialGuess[0], initialGuess[1]) <= new TestFunction().f(bestGuess[0], bestGuess[1]));
}

class TestFunction implements Function {
    public double f(double... x) {
        return x[0] * x[1];
    }
}