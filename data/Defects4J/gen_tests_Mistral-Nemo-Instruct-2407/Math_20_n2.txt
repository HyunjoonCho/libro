public void testCMAESOptimizerBounds() {
    // Setup bounds and optimizer
    double[] lowerBounds = {0, 0};
    double[] upperBounds = {1, 1};
    CMAESOptimizer optimizer = new CMAESOptimizer(lowerBounds, upperBounds);

    // Set checkFeasableCount to 0 to reproduce the bug
    optimizer.setCheckFeasibleCount(0);

    // Mock a function that always returns 0 (no penalty for staying within bounds)
    optimizer.setObjectiveFunction(f -> 0.0);

    // Optimize and check if the result is within bounds
    double[] result = optimizer.doOptimize();
    assertTrue(result[0] >= lowerBounds[0] && result[0] <= upperBounds[0]);
    assertTrue(result[1] >= lowerBounds[1] && result[1] <= upperBounds[1]);
}