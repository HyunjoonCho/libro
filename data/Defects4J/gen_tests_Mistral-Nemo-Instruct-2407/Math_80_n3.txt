public void testMathpbx02() {
    double[] mainTridiagonal = {...};
    double[] secondaryTridiagonal = {...};
    double[] refEigenValues = {...};
    RealVector[] refEigenVectors = {...};

    EigenDecomposition decomposition = new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN);

    double[] eigenValues = decomposition.getRealEigenvalues();
    for (int i = 0; i < refEigenValues.length; ++i) {
        assertEquals(refEigenValues[i], eigenValues[i], 1.0e-3);
        if (refEigenVectors[i].dotProduct(decomposition.getEigenvector(i)) < 0) {
            assertEquals(0, refEigenVectors[i].add(decomposition.getEigenvector(i)).getNorm(), 1.0e-5);
        } else {
            assertEquals(0, refEigenVectors[i].subtract(decomposition.getEigenvector(i)).getNorm(), 1.0e-5);
        }
    }
}