public void testJsonAnyGetter_JsonSerialize() {
    ObjectMapper mapper = new ObjectMapper();
    MyBean bean = new MyBean();
    bean.setParameters(Map.of("key", "value"));
    try {
        String json = mapper.writeValueAsString(bean);
        assertTrue(json.contains("\"key\":\"value\""));
        MyBean deserialized = mapper.readValue(json, MyBean.class);
        assertEquals(Map.of("key", "value"), deserialized.getParameters());
    } catch (JsonProcessingException e) {
        fail("Serialization/Deserialization failed");
    }
}

class MyBean {
    @JsonSerialize(using = MySerializer.class)
    @JsonAnyGetter
    public Map<String, String> getParameters() {
        return parameters;
    }

    public void setParameters(Map<String, String> parameters) {
        this.parameters = parameters;
    }

    private Map<String, String> parameters;
}

class MySerializer extends StdSerializer<String> {
    @Override
    public void serialize(String value, JsonGenerator gen, SerializerProvider provider) throws IOException {
        gen.writeString(value);
    }
}