public void testCustomSerializerNotUsed() {
    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new SimpleModule().addSerializer(MyPojo.class, new MySerializer()));

    MyPojo pojo = new MyPojo();
    pojo.setValue("test");

    try {
        mapper.writeValueAsString(pojo);
        fail("Custom serializer should have been used");
    } catch (JsonProcessingException e) {
        // Expected
    }
}

class MyPojo {
    @JsonValue
    private String value;

    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }
}

class MySerializer extends StdSerializer<MyPojo> {
    public MySerializer() {
        this(null);
    }

    public MySerializer(Class<MyPojo> t) {
        super(t);
    }

    @Override
    public void serialize(MyPojo value, JsonGenerator gen, SerializerProvider provider) throws IOException {
        gen.writeStartObject();
        gen.writeFieldName("custom");
        gen.writeString(value.getValue());
        gen.writeEndObject();
    }
}