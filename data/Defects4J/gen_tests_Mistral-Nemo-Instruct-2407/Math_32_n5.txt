public void testBSPTreeRecovery() {
    float[] cubeVertices = {...}; // initialize with cube vertices
    int[] cubeFaces = {...}; // initialize with cube face indices

    BSPTree bspTree = new BSPTree(new BoundaryRep(cubeVertices, cubeFaces));
    BSPMesh bspMesh = new BSPMesh(bspTree);

    // Change one vertex to trigger the issue
    cubeVertices[5] -= 0.01f;
    BSPTree bspTreeWithIssue = new BSPTree(new BoundaryRep(cubeVertices, cubeFaces));
    BSPMesh bspMeshWithIssue = new BSPMesh(bspTreeWithIssue);

    // Assert that the meshes are not equal due to the issue
    assertNotEquals(bspMesh, bspMeshWithIssue);
}