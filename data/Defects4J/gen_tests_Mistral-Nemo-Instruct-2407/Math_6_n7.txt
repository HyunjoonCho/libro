public void testGetIterations() {
    LevenbergMarquardtOptimizer otim = new LevenbergMarquardtOptimizer();
    otim.optimize(new MaxEval(100), new Target(new double[] { 1 }), new Weight(new double[] { 1 }), new InitialGuess(new double[] { 3 }), new ModelFunction(new MultivariateVectorFunction() {
            @Override
            public double[] value(double[] point) throws IllegalArgumentException {
                return new double[] { FastMath.pow(point[0], 4) };
            }
        }), new ModelFunctionJacobian(new MultivariateMatrixFunction() {
            @Override
            public double[][] value(double[] point) throws IllegalArgumentException {
                return new double[][] { { 0.25 * FastMath.pow(point[0], 3) } };
            }
        }));
    assertEquals(100, otim.getEvaluations()); // Ensure evaluations count is correct
    assertEquals(0, otim.getIterations()); // Expect iterations count to be 0
}