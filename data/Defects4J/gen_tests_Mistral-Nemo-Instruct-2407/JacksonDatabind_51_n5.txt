public void testGenericTypeResolver() {
    MyGenericClass<String> instance = new MyGenericClass<>();
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping();
    mapper.getSerializationConfig().withAdditionalTypeResolution(new MyTypeResolver());
    try {
        String json = mapper.writeValueAsString(instance);
        MyGenericClass<?> deserialized = mapper.readValue(json, MyGenericClass.class);
        // Expecting deserialized to be MyGenericClass<String>
        assertEquals(String.class, deserialized.getGenericType().getRawClass());
    } catch (JsonProcessingException e) {
        throw new RuntimeException(e);
    }
}