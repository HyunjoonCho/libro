public void testIllegalStateExceptionInFunctionType() {
    String code = "var test = {};\n" +
                  "test.T = function() {};\n" +
                  "test.A = function() {};\n" +
                  "test.B = function() {};\n" +
                  "test.X = function() { this.type = test.A; this.t = this.f(); };\n" +
                  "test.X.prototype.f = function() { if (this.type === test.A) { return new test.A(); } else if (this.type === test.B) { return new test.B(); } };\n";
    try {
        new Compiler().compile(code);
        fail("Expected IllegalStateException to be thrown");
    } catch (RuntimeException e) {
        assertEquals("java.lang.IllegalStateException", e.getCause().getClass().getName());
    }
}