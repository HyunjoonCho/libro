public void testCMAESOptimizerBounds() {
    double[] lowerBounds = {0, 0};
    double[] upperBounds = {10, 10};
    CMAESOptimizer optimizer = new CMAESOptimizer(lowerBounds, upperBounds);
    double[] result = optimizer.optimize(new Problem() {
        public double evaluate(double[] x) {
            return Math.abs(x[0] - 5) + Math.abs(x[1] - 5);
        }
        public int getObjectiveCount() { return 1; }
        public int getVariableCount() { return 2; }
    });
    assertTrue(result[0] >= lowerBounds[0] && result[0] <= upperBounds[0]);
    assertTrue(result[1] >= lowerBounds[1] && result[1] <= upperBounds[1]);
}