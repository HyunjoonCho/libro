public void testJsonSerializeWithJsonAnyGetter() {
    MyBean bean = new MyBean();
    bean.setParameters(new HashMap<>());
    bean.getParameters().put("foo", "bar");
    String json = mapper.writeValueAsString(bean);
    assertTrue(json.contains("\"foo\":\"bar\""));
}

class MyBean {
    @JsonSerialize(using = MySerializer.class)
    @JsonAnyGetter
    private Map<String, String> parameters;

    public Map<String, String> getParameters() {
        return parameters;
    }

    public void setParameters(Map<String, String> parameters) {
        this.parameters = parameters;
    }
}

class MySerializer extends StdSerializer<String> {
    public MySerializer() {
        this(null);
    }

    public MySerializer(Class<String> t) {
        super(t);
    }

    @Override
    public JsonElement serialize(String src, JsonGenerator gen, SerializerProvider provider) {
        return new JsonPrimitive(src);
    }
}