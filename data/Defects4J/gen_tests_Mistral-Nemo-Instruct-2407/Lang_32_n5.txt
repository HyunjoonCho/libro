public void testToStringStyleMemoryLeak() {
    // Arrange
    ToStringStyle style = ToStringStyle.SHORT_PREFIX_STYLE;

    // Act
    Runtime runtime = Runtime.getRuntime();
    long before = runtime.totalMemory() - runtime.freeMemory();
    for (int i = 0; i < 100000; i++) {
        new Object() {
            @Override
            public String toString() {
                return super.toString();
            }
        };
    }
    long after = runtime.totalMemory() - runtime.freeMemory();

    // Assert
    assertTrue("Memory usage should increase due to leak", after > before);
}