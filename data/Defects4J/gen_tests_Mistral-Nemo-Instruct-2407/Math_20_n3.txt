public void testCMAESOptimizerBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer();
    double[] lowerBound = new double[]{0, 0};
    double[] upperBound = new double[]{1, 1};
    optimizer.setBounds(lowerBound, upperBound);
    optimizer.setCheckFeasibleCount(0);

    double[] initialX = new double[]{1.5, 1.5};
    double[] initialStdDev = new double[]{0.5, 0.5};
    optimizer.setInitialX(initialX);
    optimizer.setInitialStdDev(initialStdDev);

    double[] result = optimizer.doOptimize(new ObjectiveFunction() {
        @Override
        public double evaluate(double[] x) {
            return x[0] + x[1];
        }
    }).getX();

    assertTrue(result[0] <= 1 && result[0] >= 0);
    assertTrue(result[1] <= 1 && result[1] >= 0);
}