public void testWideBoundsNanParameters() {
    CMAESOptimizer optimizer = new CMAESOptimizer() {
        @Override
        protected double evaluate(FitnessFunction function, double[] parameters) {
            assertFalse(Double.isNaN(parameters[0]));
            return function.value(parameters);
        }
    };
    optimizer.setLowerBound(-Double.MAX_VALUE);
    optimizer.setUpperBound(Double.MAX_VALUE);
    optimizer.optimize(new FitnessFunction() {
        @Override
        public double value(double[] parameters) {
            return 0;
        }
    });
}