public void testIllegalStateExceptionInFunctionType() {
    String crashJs = "var test = {};\n" +
            "test.T = function() {};\n" +
            "test.A = function() {};\n" +
            "test.B = function() {};\n" +
            "test.X = function() {\n" +
            "  this.type = test.A;\n" +
            "  this.t = this.f();\n" +
            "};\n" +
            "test.X.prototype.f = function() {\n" +
            "  if (this.type === test.A) {\n" +
            "    return new test.A();\n" +
            "  } else if (this.type === test.B) {\n" +
            "    return new test.B();\n" +
            "  }\n" +
            "};\n";
    try {
        Compiler compiler = new Compiler();
        compiler.compile(crashJs);
        fail("Expected IllegalStateException");
    } catch (RuntimeException e) {
        assertTrue(e.getCause() instanceof IllegalStateException);
    }
}