public void testThisWarning() {
    assertTrue(compiler.getWarnings().stream().noneMatch(w -> w.contains("dangerous use of the global this object")));
    String code = "function Foo() { this._bar = null; }\n"
        + "/** @this {Foo} */ function writeMethodWithAnnotation() { this._bar = 123; }\n"
        + "/** @this {Foo} */ function readMethodWithAnnotation() { return this._bar; }\n"
        + "function writeMethodWithoutAnnotation() { this._bar = 123; }\n"
        + "function readMethodWithoutAnnotation() { return this._bar; }";
    compiler.compile(code);
    assertEquals(1, compiler.getWarnings().stream().filter(w -> w.contains("dangerous use of the global this object")).count());
}