public void testRedefinitionMiscompile() {
    String code = "function assert(b) {if (!b) throw 'error'}\n" +
            "assert(f() === 1)\n" +
            "var f = function() {return 2;}\n" +
            "assert(f() === 2)\n" +
            "function f() {return 1;}\n";
    try {
        // Compile the code with r8, which should trigger the miscompilation bug
        assertEquals(0, r8.run(code));
        fail("Expected an error due to redefinition of f");
    } catch (AssertionError e) {
        // Test passes if an error is thrown
    }
}