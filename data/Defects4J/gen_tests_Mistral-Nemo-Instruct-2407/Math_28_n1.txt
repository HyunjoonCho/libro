public void testUnboundedSolutionException() {
    int ENTITIES_COUNT = 15; // Change this value to reproduce the failure
    double[][] coefficientsMatrixQ = new double[ENTITIES_COUNT][ENTITIES_COUNT];
    double[][] coefficientsMatrixX = new double[ENTITIES_COUNT][ENTITIES_COUNT];
    double[] L = new double[ENTITIES_COUNT];
    double[] q = new double[ENTITIES_COUNT];
    double[] x = new double[ENTITIES_COUNT];

    // Populate matrices with random data
    for (int i = 0; i < ENTITIES_COUNT; i++) {
        for (int j = 0; j < ENTITIES_COUNT; j++) {
            coefficientsMatrixQ[i][j] = Math.random();
            coefficientsMatrixX[i][j] = Math.random();
        }
        L[i] = Math.random();
        q[i] = Math.random();
        x[i] = Math.random();
    }

    SimplexSolver solver = new SimplexSolver();
    try {
        solver.solve(new LinearProgrammingProblem(coefficientsMatrixQ, coefficientsMatrixX, L, q, x));
        fail("Expected UnboundedSolutionException