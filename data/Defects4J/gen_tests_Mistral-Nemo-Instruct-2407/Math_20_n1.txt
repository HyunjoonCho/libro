public void testCMAESOptimizerBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer();
    double[] bounds = {0, 100};
    optimizer.setBounds(bounds);
    optimizer.setCheckFeasibleCount(0);
    double[] solution = optimizer.optimize(new Problem() {
        @Override
        public double getObjective(double[] x) {
            return x[0] * x[0] - 4 * x[0] + 4; // A function that is unbounded below
        }
        @Override
        public double[] getLowerBound() {
            return new double[]{bounds[0]};
        }
        @Override
        public double[] getUpperBound() {
            return new double[]{bounds[1]};
        }
    });
    assertTrue(solution[0] >= bounds[0] && solution[0] <= bounds[1], "Solution out of bounds");
}