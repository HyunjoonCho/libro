public void testZipCorruptionWithHashCollision() {
    ZipArchiveEntry e1 = new ZipArchiveEntry("file1.txt");
    ZipArchiveEntry e2 = new ZipArchiveEntry("file2.txt");

    ZipOutputStream zos = new ZipOutputStream(new ByteArrayOutputStream());
    zos.putNextEntry(e1);
    zos.closeEntry();
    zos.putNextEntry(e2);
    zos.closeEntry();
    zos.close();

    // Simulate hash collision by creating a new entry with the same hash code as e1
    ZipArchiveEntry e3 = new ZipArchiveEntry("file1000.txt"); // assuming the hash code of "file1.txt" and "file1000.txt" are the same
    e3.setName("file1.txt"); // setting the name to the same as e1

    ZipOutputStream zos2 = new ZipOutputStream(new ByteArrayOutputStream());
    zos2.putNextEntry(e1);
    zos2.closeEntry();
    zos2.putNextEntry(e3); // this should cause a hash collision
    zos2.closeEntry();
    zos2.close();

    // The zip file produced by zos2 should