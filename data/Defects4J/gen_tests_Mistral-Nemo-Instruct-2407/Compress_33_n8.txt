public void testDeflateWithZlibHeader() throws Exception {
    byte[] zlibHeader = {(byte) 0x78, 0x9C};
    byte[] data = {0x00, 0x01, 0x02, 0x03};
    byte[] input = concatenate(zlibHeader, data);

    InputStream in = new ByteArrayInputStream(input);
    try {
        CompressorInputStream cis = CompressorStreamFactory.createCompressorInputStream(in);
        fail("Expected CompressorException");
    } catch (CompressorException ce) {
        assertEquals("No Compressor found for the stream signature.", ce.getMessage());
    }
}

private byte[] concatenate(byte[]... arrays) {
    int length = 0;
    for (byte[] array : arrays) {
        length += array.length;
    }
    byte[] result = new byte[length];
    int pos = 0;
    for (byte[] array : arrays) {
        System.arraycopy(array, 0, result, pos, array.length);
        pos += array.length;
    }
    return result;
}