public void testJsonAnyGetterJsonSerialize() {
    Map<String, String> params = new HashMap<>();
    params.put("key", "value");

    MyObject obj = new MyObject(params);

    ObjectMapper mapper = new ObjectMapper();
    String json = "{\"key\":\"value\"}";

    try {
        assertEquals(json, mapper.writeValueAsString(obj));
    } catch (JsonProcessingException e) {
        fail("Should not throw exception");
    }
}

private static class MyObject {
    @JsonSerialize(using = MySerializer.class)
    @JsonAnyGetter
    private Map<String, String> parameters;

    public MyObject(Map<String, String> parameters) {
        this.parameters = parameters;
    }
}

private static class MySerializer extends StdSerializer<String> {
    @Override
    public String serialize(String value, JsonGenerator gen, SerializerProvider provider) {
        return value;
    }
}