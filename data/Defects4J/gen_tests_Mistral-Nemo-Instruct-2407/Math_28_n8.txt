public void testUnboundedSolutionException() {
    int ENTITIES_COUNT = 15;
    double[][] coefMatrixQ = new double[ENTITIES_COUNT][ENTITIES_COUNT];
    double[][] coefMatrixX = new double[ENTITIES_COUNT][ENTITIES_COUNT];
    double[] objectiveCoef = new double[ENTITIES_COUNT];
    double[] rightHandSide = new double[ENTITIES_COUNT];
    for (int r = 0; r < ENTITIES_COUNT; r++) {
        for (int j = 0; j < ENTITIES_COUNT; j++) {
            coefMatrixQ[r][j] = Math.random();
            coefMatrixX[r][j] = Math.random();
        }
        objectiveCoef[r] = (r == 0)? 1 : 0;
        rightHandSide[r] = -Math.random();
    }
    try {
        SimplexSolver.solveMinimizationProblem(objectiveCoef, coefMatrixQ, coefMatrixX, rightHandSide, null);
        fail("Expected UnboundedSolutionException");
    } catch (UnboundedSolutionException e) {
        // expected
    }
}