public void testPrototypeQuotesWarning() {
    String code = "/** @constructor */\n" +
                  "function MyClass() {}\n" +
                  "MyClass.prototype['MyMethod'] = function(a) {\n" +
                  "  this.a = a;\n" +
                  "}\n" +
                  "window['MyClass'] = MyClass;\n";
    String externs = "/**@interface */\n" +
                     "function MyParent() {}\n" +
                     "/** @param {*} a */\n" +
                     "MyParent.prototype.MyMethod = function(a) {}\n";
    assertTrue(compiler().withWarningHandler(new StandardWarningHandler() {
        @Override
        public void handleWarning(Location location, String message) {
            if (message.equals("'dangerous use of the global this object'")) {
                fail("Unsuppressed warning found");
            }
        }
    }).compileExterns(externs, code).hasNoWarnings());
}