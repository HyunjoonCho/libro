public void testCustomSerializerNotUsedWithJsonValue() {
    ObjectMapper mapper = new ObjectMapper();
    SimpleModule module = new SimpleModule();
    module.addSerializer(MyPojo.class, new MySerializer());
    mapper.registerModule(module);

    MyPojo pojo = new MyPojo();
    pojo.setValue("test");

    try {
        mapper.writeValueAsString(pojo); // Should throw JsonMappingException
        fail("Expected JsonMappingException");
    } catch (JsonMappingException e) {
        // Expected
    }
}

class MyPojo {
    @JsonValue
    private String value;

    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }
}

class MySerializer extends StdSerializer<MyPojo> {
    @Override
    public void serialize(MyPojo value, JsonGenerator gen, SerializerProvider provider) throws IOException {
        gen.writeStartObject();
        gen.writeStringField("custom", "serialized");
        gen.writeEndObject();
    }
}